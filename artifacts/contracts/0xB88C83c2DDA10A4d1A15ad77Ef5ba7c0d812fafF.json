{"abi": [{"inputs": [{"internalType": "address", "name": "_l1DomainSideContractAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "bool", "name": "success", "type": "bool"}], "name": "ClaimPayed", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "indexed": false, "internalType": "struct SourceDomainSideBridge.TransferData", "name": "transferData", "type": "tuple"}], "name": "Transaction", "type": "event"}, {"inputs": [], "name": "CONTRACT_FEE_BASIS_POINTS", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "TRADE_LIMIT", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_newKnownHashOnions", "type": "bytes32"}], "name": "addNewKnownHashOnion", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "knownHashOnions", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.RewardData[]", "name": "_rewardData", "type": "tuple[]"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.TransferData[]", "name": "_transferData", "type": "tuple[]"}], "name": "processClaims", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_tokenAddress", "type": "address"}, {"internalType": "address", "name": "_destination", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "uint256", "name": "_feeRampup", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "validTransferHashes", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"1": "contracts/SourceDomainSideBridge.sol", "2": "contracts/deb/ERC20.sol", "3": "contracts/deb/ICrossDomainMessenger.sol"}, "ast": {"absolutePath": "contracts/SourceDomainSideBridge.sol", "exportedSymbols": {"ERC20": [782], "ICrossDomainMessenger": [821], "SourceDomainSideBridge": [713]}, "id": 714, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 286, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "31:23:1"}, {"absolutePath": "contracts/deb/ERC20.sol", "file": "./deb/ERC20.sol", "id": 287, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 714, "sourceUnit": 783, "src": "56:25:1", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/ICrossDomainMessenger.sol", "file": "./deb/ICrossDomainMessenger.sol", "id": 288, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 714, "sourceUnit": 822, "src": "82:41:1", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "SourceDomainSideBridge", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 289, "nodeType": "StructuredDocumentation", "src": "125:139:1", "text": "@title SourceDomainSideBridge Contract\n @author Sherif Abdelmoatty\n @notice This contract is to be deployed in the source rollup"}, "fullyImplemented": true, "id": 713, "linearizedBaseContracts": [713], "name": "SourceDomainSideBridge", "nameLocation": "273:22:1", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "functionSelector": "13457d88", "id": 292, "mutability": "constant", "name": "CONTRACT_FEE_BASIS_POINTS", "nameLocation": "328:25:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "307:50:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 290, "name": "uint", "nodeType": "ElementaryTypeName", "src": "307:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "35", "id": 291, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "356:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "visibility": "public"}, {"constant": true, "functionSelector": "eb66091f", "id": 295, "mutability": "constant", "name": "TRADE_LIMIT", "nameLocation": "384:11:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "363:44:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 293, "name": "uint", "nodeType": "ElementaryTypeName", "src": "363:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "302e31", "id": 294, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "398:9:1", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000_by_1", "typeString": "int_const 100000000000000000"}, "value": "0.1"}, "visibility": "public"}, {"constant": true, "id": 298, "mutability": "constant", "name": "ETHER_ADDRESS", "nameLocation": "430:13:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "413:75:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 296, "name": "address", "nodeType": "ElementaryTypeName", "src": "413:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030", "id": 297, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "446:42:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x0000000000000000000000000000000000000000"}, "visibility": "internal"}, {"canonicalName": "SourceDomainSideBridge.TransferData", "id": 313, "members": [{"constant": false, "id": 300, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "534:12:1", "nodeType": "VariableDeclaration", "scope": 313, "src": "525:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 299, "name": "address", "nodeType": "ElementaryTypeName", "src": "525:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 302, "mutability": "mutable", "name": "destination", "nameLocation": "566:11:1", "nodeType": "VariableDeclaration", "scope": 313, "src": "557:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 301, "name": "address", "nodeType": "ElementaryTypeName", "src": "557:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 304, "mutability": "mutable", "name": "amount", "nameLocation": "596:6:1", "nodeType": "VariableDeclaration", "scope": 313, "src": "587:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 303, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "587:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 306, "mutability": "mutable", "name": "fee", "nameLocation": "621:3:1", "nodeType": "VariableDeclaration", "scope": 313, "src": "612:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 305, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "612:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 308, "mutability": "mutable", "name": "startTime", "nameLocation": "643:9:1", "nodeType": "VariableDeclaration", "scope": 313, "src": "634:18:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 307, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "634:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 310, "mutability": "mutable", "name": "feeRampup", "nameLocation": "671:9:1", "nodeType": "VariableDeclaration", "scope": 313, "src": "662:18:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 309, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "662:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 312, "mutability": "mutable", "name": "nonce", "nameLocation": "699:5:1", "nodeType": "VariableDeclaration", "scope": 313, "src": "690:14:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 311, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "690:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "TransferData", "nameLocation": "502:12:1", "nodeType": "StructDefinition", "scope": 713, "src": "495:216:1", "visibility": "public"}, {"canonicalName": "SourceDomainSideBridge.RewardData", "id": 322, "members": [{"constant": false, "id": 315, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "753:16:1", "nodeType": "VariableDeclaration", "scope": 322, "src": "744:25:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 314, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "744:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 317, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "788:12:1", "nodeType": "VariableDeclaration", "scope": 322, "src": "779:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 316, "name": "address", "nodeType": "ElementaryTypeName", "src": "779:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 319, "mutability": "mutable", "name": "claimer", "nameLocation": "820:7:1", "nodeType": "VariableDeclaration", "scope": 322, "src": "811:16:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 318, "name": "address", "nodeType": "ElementaryTypeName", "src": "811:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 321, "mutability": "mutable", "name": "fee", "nameLocation": "846:3:1", "nodeType": "VariableDeclaration", "scope": 322, "src": "837:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 320, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "837:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "RewardData", "nameLocation": "723:10:1", "nodeType": "StructDefinition", "scope": 713, "src": "716:140:1", "visibility": "public"}, {"constant": false, "functionSelector": "040c05b6", "id": 326, "mutability": "mutable", "name": "validTransferHashes", "nameLocation": "893:19:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "861:51:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 325, "keyType": {"id": 323, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "869:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "861:24:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 324, "name": "bool", "nodeType": "ElementaryTypeName", "src": "880:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "5a1294b7", "id": 330, "mutability": "mutable", "name": "knownHashOnions", "nameLocation": "950:15:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "918:47:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 329, "keyType": {"id": 327, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "926:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "918:24:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 328, "name": "bool", "nodeType": "ElementaryTypeName", "src": "937:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "id": 332, "mutability": "mutable", "name": "processedRewardHashOnion", "nameLocation": "979:24:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "971:32:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 331, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "971:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 334, "mutability": "mutable", "name": "ovmL2CrossDomainMessenger", "nameLocation": "1022:25:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "1014:33:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 333, "name": "address", "nodeType": "ElementaryTypeName", "src": "1014:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 336, "mutability": "mutable", "name": "l1DomainSideContractAddress", "nameLocation": "1117:27:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "1109:35:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 335, "name": "address", "nodeType": "ElementaryTypeName", "src": "1109:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 338, "mutability": "mutable", "name": "currentNonce", "nameLocation": "1221:12:1", "nodeType": "VariableDeclaration", "scope": 713, "src": "1212:21:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 337, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1212:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "d8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f89", "id": 343, "name": "Transaction", "nameLocation": "1246:11:1", "nodeType": "EventDefinition", "parameters": {"id": 342, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 341, "indexed": false, "mutability": "mutable", "name": "transferData", "nameLocation": "1271:12:1", "nodeType": "VariableDeclaration", "scope": 343, "src": "1258:25:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 340, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 339, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 313, "src": "1258:12:1"}, "referencedDeclaration": 313, "src": "1258:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "src": "1257:27:1"}, "src": "1240:45:1"}, {"anonymous": false, "eventSelector": "6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a", "id": 349, "name": "ClaimPayed", "nameLocation": "1296:10:1", "nodeType": "EventDefinition", "parameters": {"id": 348, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 345, "indexed": false, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1315:16:1", "nodeType": "VariableDeclaration", "scope": 349, "src": "1307:24:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 344, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1307:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 347, "indexed": false, "mutability": "mutable", "name": "success", "nameLocation": "1338:7:1", "nodeType": "VariableDeclaration", "scope": 349, "src": "1333:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 346, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1333:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1306:40:1"}, "src": "1290:57:1"}, {"body": {"id": 376, "nodeType": "Block", "src": "1590:270:1", "statements": [{"assignments": [354], "declarations": [{"constant": false, "id": 354, "mutability": "mutable", "name": "l2cdm", "nameLocation": "1622:5:1", "nodeType": "VariableDeclaration", "scope": 376, "src": "1600:27:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$821", "typeString": "contract ICrossDomainMessenger"}, "typeName": {"id": 353, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 352, "name": "ICrossDomainMessenger", "nodeType": "IdentifierPath", "referencedDeclaration": 821, "src": "1600:21:1"}, "referencedDeclaration": 821, "src": "1600:21:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$821", "typeString": "contract ICrossDomainMessenger"}}, "visibility": "internal"}], "id": 358, "initialValue": {"arguments": [{"id": 356, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 334, "src": "1652:25:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 355, "name": "ICrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 821, "src": "1630:21:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$821_$", "typeString": "type(contract ICrossDomainMessenger)"}}, "id": 357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1630:48:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$821", "typeString": "contract ICrossDomainMessenger"}}, "nodeType": "VariableDeclarationStatement", "src": "1600:78:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 360, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1709:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1709:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 364, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 334, "src": "1731:25:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 363, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1723:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 362, "name": "address", "nodeType": "ElementaryTypeName", "src": "1723:7:1", "typeDescriptions": {}}}, "id": 365, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1723:34:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1709:48:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 371, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 367, "name": "l2cdm", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 354, "src": "1773:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$821", "typeString": "contract ICrossDomainMessenger"}}, "id": 368, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "xDomainMessageSender", "nodeType": "MemberAccess", "referencedDeclaration": 810, "src": "1773:26:1", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1773:28:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 370, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 336, "src": "1805:27:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1773:59:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1709:123:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 359, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1688:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 373, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1688:154:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 374, "nodeType": "ExpressionStatement", "src": "1688:154:1"}, {"id": 375, "nodeType": "PlaceholderStatement", "src": "1852:1:1"}]}, "documentation": {"id": 350, "nodeType": "StructuredDocumentation", "src": "1357:202:1", "text": "@notice onlyL1Contract modifier\n @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n @notice to call the approveStateRoot function"}, "id": 377, "name": "onlyL1Contract", "nameLocation": "1573:14:1", "nodeType": "ModifierDefinition", "parameters": {"id": 351, "nodeType": "ParameterList", "parameters": [], "src": "1587:2:1"}, "src": "1564:296:1", "virtual": false, "visibility": "internal"}, {"body": {"id": 391, "nodeType": "Block", "src": "1989:155:1", "statements": [{"expression": {"id": 385, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 383, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 334, "src": "1999:25:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303037", "id": 384, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2027:42:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4200000000000000000000000000000000000007"}, "src": "1999:70:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 386, "nodeType": "ExpressionStatement", "src": "1999:70:1"}, {"expression": {"id": 389, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 387, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 336, "src": "2079:27:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 388, "name": "_l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "2109:28:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2079:58:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 390, "nodeType": "ExpressionStatement", "src": "2079:58:1"}]}, "documentation": {"id": 378, "nodeType": "StructuredDocumentation", "src": "1866:69:1", "text": "@notice Constructior function\n @notice Intialize variables"}, "id": 392, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 381, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 380, "mutability": "mutable", "name": "_l1DomainSideContractAddress", "nameLocation": "1960:28:1", "nodeType": "VariableDeclaration", "scope": 392, "src": "1952:36:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 379, "name": "address", "nodeType": "ElementaryTypeName", "src": "1952:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1951:38:1"}, "returnParameters": {"id": 382, "nodeType": "ParameterList", "parameters": [], "src": "1989:0:1"}, "scope": 713, "src": "1940:204:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 533, "nodeType": "Block", "src": "2531:1089:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 411, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 409, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 407, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "2558:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 408, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2567:4:1", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "2558:13:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 410, "name": "TRADE_LIMIT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 295, "src": "2575:11:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2558:28:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420686967686572207468616e207472616465206c696d6974", "id": 412, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2588:32:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2847f3c8e537b3e952c276b8e24cd091d5e275357e1ebcc6dc037999d4bf70ab", "typeString": "literal_string \"Amount higher than trade limit\""}, "value": "Amount higher than trade limit"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2847f3c8e537b3e952c276b8e24cd091d5e275357e1ebcc6dc037999d4bf70ab", "typeString": "literal_string \"Amount higher than trade limit\""}], "id": 406, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2550:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 413, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2550:71:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 414, "nodeType": "ExpressionStatement", "src": "2550:71:1"}, {"assignments": [416], "declarations": [{"constant": false, "id": 416, "mutability": "mutable", "name": "fee", "nameLocation": "2639:3:1", "nodeType": "VariableDeclaration", "scope": 533, "src": "2631:11:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 415, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2631:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 420, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 417, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "2645:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 418, "name": "CONTRACT_FEE_BASIS_POINTS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 292, "src": "2655:25:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2645:35:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2631:49:1"}, {"assignments": [422], "declarations": [{"constant": false, "id": 422, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "2698:13:1", "nodeType": "VariableDeclaration", "scope": 533, "src": "2690:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 421, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2690:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 428, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 427, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 425, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 423, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "2714:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 424, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2724:4:1", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "2714:14:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 426, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 416, "src": "2731:3:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2714:20:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2690:44:1"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 431, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 429, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "2756:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 430, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 298, "src": "2773:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2756:30:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 460, "nodeType": "Block", "src": "2891:133:1", "statements": [{"assignments": [443], "declarations": [{"constant": false, "id": 443, "mutability": "mutable", "name": "token", "nameLocation": "2911:5:1", "nodeType": "VariableDeclaration", "scope": 460, "src": "2905:11:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$782", "typeString": "contract ERC20"}, "typeName": {"id": 442, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 441, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 782, "src": "2905:5:1"}, "referencedDeclaration": 782, "src": "2905:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$782", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 447, "initialValue": {"arguments": [{"id": 445, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "2925:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 444, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "2919:5:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$782_$", "typeString": "type(contract ERC20)"}}, "id": 446, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2919:20:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$782", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "2905:34:1"}, {"expression": {"arguments": [{"expression": {"id": 451, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2972:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 452, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2972:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 455, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2992:4:1", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$713", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$713", "typeString": "contract SourceDomainSideBridge"}], "id": 454, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2984:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 453, "name": "address", "nodeType": "ElementaryTypeName", "src": "2984:7:1", "typeDescriptions": {}}}, "id": 456, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2984:13:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 457, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "2999:13:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 448, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 443, "src": "2953:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$782", "typeString": "contract ERC20"}}, "id": 450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 765, "src": "2953:18:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 458, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2953:60:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 459, "nodeType": "ExpressionStatement", "src": "2953:60:1"}]}, "id": 461, "nodeType": "IfStatement", "src": "2753:271:1", "trueBody": {"id": 440, "nodeType": "Block", "src": "2787:100:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 433, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2809:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 434, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "2809:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 435, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "2822:13:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2809:26:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4572726f72203a204e6f6e2053756666656369656e742066756e64732121212121212121", "id": 437, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2837:38:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}, "value": "Error : Non Suffecient funds!!!!!!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}], "id": 432, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2801:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 438, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2801:75:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 439, "nodeType": "ExpressionStatement", "src": "2801:75:1"}]}}, {"assignments": [464], "declarations": [{"constant": false, "id": 464, "mutability": "mutable", "name": "transferData", "nameLocation": "3054:12:1", "nodeType": "VariableDeclaration", "scope": 533, "src": "3034:32:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 463, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 462, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 313, "src": "3034:12:1"}, "referencedDeclaration": 313, "src": "3034:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "id": 465, "nodeType": "VariableDeclarationStatement", "src": "3034:32:1"}, {"expression": {"id": 470, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 466, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3076:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 468, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 300, "src": "3076:25:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 469, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "3104:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3076:41:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 471, "nodeType": "ExpressionStatement", "src": "3076:41:1"}, {"expression": {"id": 476, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 472, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3127:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 474, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 302, "src": "3127:24:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 475, "name": "_destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 397, "src": "3154:12:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3127:39:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 477, "nodeType": "ExpressionStatement", "src": "3127:39:1"}, {"expression": {"id": 482, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 478, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3176:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 480, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 304, "src": "3176:19:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 481, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 399, "src": "3198:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3176:29:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 483, "nodeType": "ExpressionStatement", "src": "3176:29:1"}, {"expression": {"id": 488, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 484, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3215:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 486, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 306, "src": "3215:16:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 487, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 416, "src": "3234:3:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3215:22:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 489, "nodeType": "ExpressionStatement", "src": "3215:22:1"}, {"expression": {"id": 495, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 490, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3247:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 492, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 308, "src": "3247:22:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 493, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3272:5:1", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 494, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "3272:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3247:37:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 496, "nodeType": "ExpressionStatement", "src": "3247:37:1"}, {"expression": {"id": 501, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 497, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3294:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 499, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "feeRampup", "nodeType": "MemberAccess", "referencedDeclaration": 310, "src": "3294:22:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 500, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 401, "src": "3319:10:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3294:35:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 502, "nodeType": "ExpressionStatement", "src": "3294:35:1"}, {"expression": {"id": 507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 503, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3339:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 505, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "nonce", "nodeType": "MemberAccess", "referencedDeclaration": 312, "src": "3339:18:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 506, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 338, "src": "3360:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3339:33:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 508, "nodeType": "ExpressionStatement", "src": "3339:33:1"}, {"expression": {"id": 510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3383:14:1", "subExpression": {"id": 509, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 338, "src": "3383:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 511, "nodeType": "ExpressionStatement", "src": "3383:14:1"}, {"assignments": [513], "declarations": [{"constant": false, "id": 513, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "3416:16:1", "nodeType": "VariableDeclaration", "scope": 533, "src": "3408:24:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 512, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3408:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 520, "initialValue": {"arguments": [{"arguments": [{"id": 517, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3453:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "expression": {"id": 515, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "3442:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 516, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "3442:10:1", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 518, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3442:24:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 514, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "3435:6:1", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 519, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3435:32:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3408:59:1"}, {"expression": {"id": 525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 521, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 326, "src": "3486:19:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 523, "indexExpression": {"id": 522, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "3506:16:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3486:37:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 524, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3526:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "3486:44:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 526, "nodeType": "ExpressionStatement", "src": "3486:44:1"}, {"eventCall": {"arguments": [{"id": 528, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "3558:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$313_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "id": 527, "name": "Transaction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 343, "src": "3546:11:1", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_TransferData_$313_memory_ptr_$returns$__$", "typeString": "function (struct SourceDomainSideBridge.TransferData memory)"}}, "id": 529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3546:25:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 530, "nodeType": "EmitStatement", "src": "3541:30:1"}, {"expression": {"id": 531, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 513, "src": "3597:16:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 405, "id": 532, "nodeType": "Return", "src": "3590:23:1"}]}, "documentation": {"id": 393, "nodeType": "StructuredDocumentation", "src": "2150:233:1", "text": "@notice withdraw function\n @notice withdraws the required funds plus fees to be sent \n @notice to the domain side rollup\nfunction transfer(TransferData memory _transferData) external payable returns(bytes32){"}, "functionSelector": "0411b252", "id": 534, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "2397:8:1", "nodeType": "FunctionDefinition", "parameters": {"id": 402, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 395, "mutability": "mutable", "name": "_tokenAddress", "nameLocation": "2414:13:1", "nodeType": "VariableDeclaration", "scope": 534, "src": "2406:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 394, "name": "address", "nodeType": "ElementaryTypeName", "src": "2406:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 397, "mutability": "mutable", "name": "_destination", "nameLocation": "2437:12:1", "nodeType": "VariableDeclaration", "scope": 534, "src": "2429:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 396, "name": "address", "nodeType": "ElementaryTypeName", "src": "2429:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 399, "mutability": "mutable", "name": "_amount", "nameLocation": "2459:7:1", "nodeType": "VariableDeclaration", "scope": 534, "src": "2451:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 398, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2451:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 401, "mutability": "mutable", "name": "_feeRampup", "nameLocation": "2486:10:1", "nodeType": "VariableDeclaration", "scope": 534, "src": "2477:19:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 400, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2477:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2405:92:1"}, "returnParameters": {"id": 405, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 404, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 534, "src": "2523:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 403, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2523:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2522:9:1"}, "scope": 713, "src": "2388:1232:1", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 654, "nodeType": "Block", "src": "3830:993:1", "statements": [{"assignments": [547], "declarations": [{"constant": false, "id": 547, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "3848:27:1", "nodeType": "VariableDeclaration", "scope": 654, "src": "3840:35:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 546, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3840:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 551, "initialValue": {"arguments": [{"id": 549, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "3915:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}], "id": 548, "name": "calculateNewProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 697, "src": "3878:36:1", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (struct SourceDomainSideBridge.RewardData memory[] memory) returns (bytes32)"}}, "id": 550, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3878:49:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3840:87:1"}, {"expression": {"arguments": [{"baseExpression": {"id": 553, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 330, "src": "3945:15:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 555, "indexExpression": {"id": 554, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 547, "src": "3961:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3945:44:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964652052657761726444617461206c6973742e", "id": 556, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3991:27:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}, "value": "Invalide RewardData list."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}], "id": 552, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3937:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 557, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3937:82:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 558, "nodeType": "ExpressionStatement", "src": "3937:82:1"}, {"expression": {"id": 561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 559, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 332, "src": "4029:24:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 560, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 547, "src": "4056:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4029:54:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 562, "nodeType": "ExpressionStatement", "src": "4029:54:1"}, {"body": {"id": 652, "nodeType": "Block", "src": "4138:670:1", "statements": [{"condition": {"baseExpression": {"id": 574, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 326, "src": "4155:19:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 579, "indexExpression": {"expression": {"baseExpression": {"id": 575, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4175:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 577, "indexExpression": {"id": 576, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4187:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4175:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 578, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 315, "src": "4175:31:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4155:52:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 651, "nodeType": "IfStatement", "src": "4152:646:1", "trueBody": {"id": 650, "nodeType": "Block", "src": "4208:590:1", "statements": [{"assignments": [581], "declarations": [{"constant": false, "id": 581, "mutability": "mutable", "name": "success", "nameLocation": "4231:7:1", "nodeType": "VariableDeclaration", "scope": 650, "src": "4226:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 580, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4226:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 582, "nodeType": "VariableDeclarationStatement", "src": "4226:12:1"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 588, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 583, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4259:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 585, "indexExpression": {"id": 584, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4271:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4259:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 586, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 317, "src": "4259:27:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 587, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 298, "src": "4290:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4259:44:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 640, "nodeType": "Block", "src": "4466:243:1", "statements": [{"assignments": [614], "declarations": [{"constant": false, "id": 614, "mutability": "mutable", "name": "token", "nameLocation": "4494:5:1", "nodeType": "VariableDeclaration", "scope": 640, "src": "4488:11:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$782", "typeString": "contract ERC20"}, "typeName": {"id": 613, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 612, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 782, "src": "4488:5:1"}, "referencedDeclaration": 782, "src": "4488:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$782", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 621, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 616, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4508:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 618, "indexExpression": {"id": 617, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4520:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4508:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 619, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 317, "src": "4508:27:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 615, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "4502:5:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$782_$", "typeString": "type(contract ERC20)"}}, "id": 620, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4502:34:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$782", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "4488:48:1"}, {"expression": {"id": 638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 622, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 581, "src": "4579:7:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 627, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "4616:4:1", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$713", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$713", "typeString": "contract SourceDomainSideBridge"}], "id": 626, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4608:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 625, "name": "address", "nodeType": "ElementaryTypeName", "src": "4608:7:1", "typeDescriptions": {}}}, "id": 628, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4608:13:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 629, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4623:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 631, "indexExpression": {"id": 630, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4635:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4623:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 632, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 319, "src": "4623:22:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 633, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4671:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 635, "indexExpression": {"id": 634, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4683:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4671:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 636, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 321, "src": "4671:18:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 623, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 614, "src": "4589:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$782", "typeString": "contract ERC20"}}, "id": 624, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 765, "src": "4589:18:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 637, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4589:101:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4579:111:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 639, "nodeType": "ExpressionStatement", "src": "4579:111:1"}]}, "id": 641, "nodeType": "IfStatement", "src": "4256:453:1", "trueBody": {"id": 611, "nodeType": "Block", "src": "4304:158:1", "statements": [{"assignments": [590, null], "declarations": [{"constant": false, "id": 590, "mutability": "mutable", "name": "suc", "nameLocation": "4332:3:1", "nodeType": "VariableDeclaration", "scope": 611, "src": "4327:8:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 589, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4327:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 606, "initialValue": {"arguments": [{"hexValue": "", "id": 604, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4405:2:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 593, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4349:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 595, "indexExpression": {"id": 594, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4361:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4349:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 596, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 319, "src": "4349:22:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 592, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4341:8:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 591, "name": "address", "nodeType": "ElementaryTypeName", "src": "4341:8:1", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 597, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4341:31:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "4341:36:1", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"expression": {"baseExpression": {"id": 599, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4385:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 601, "indexExpression": {"id": 600, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4397:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4385:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 602, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 321, "src": "4385:18:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "4341:63:1", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 605, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4341:67:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "4326:82:1"}, {"expression": {"id": 609, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 607, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 581, "src": "4430:7:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 608, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 590, "src": "4440:3:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4430:13:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 610, "nodeType": "ExpressionStatement", "src": "4430:13:1"}]}}, {"eventCall": {"arguments": [{"expression": {"baseExpression": {"id": 643, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4742:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 645, "indexExpression": {"id": 644, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4754:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4742:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 646, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 315, "src": "4742:31:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 647, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 581, "src": "4775:7:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 642, "name": "ClaimPayed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 349, "src": "4731:10:1", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$", "typeString": "function (bytes32,bool)"}}, "id": 648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4731:52:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 649, "nodeType": "EmitStatement", "src": "4726:57:1"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 570, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 567, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4109:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 568, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 539, "src": "4113:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 569, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4113:18:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4109:22:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 653, "initializationExpression": {"assignments": [564], "declarations": [{"constant": false, "id": 564, "mutability": "mutable", "name": "n", "nameLocation": "4102:1:1", "nodeType": "VariableDeclaration", "scope": 653, "src": "4097:6:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 563, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4097:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 566, "initialValue": {"hexValue": "30", "id": 565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4106:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4097:10:1"}, "loopExpression": {"expression": {"id": 572, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4133:3:1", "subExpression": {"id": 571, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 564, "src": "4133:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 573, "nodeType": "ExpressionStatement", "src": "4133:3:1"}, "nodeType": "ForStatement", "src": "4093:715:1"}]}, "documentation": {"id": 535, "nodeType": "StructuredDocumentation", "src": "3626:89:1", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "functionSelector": "edf5a2dc", "id": 655, "implemented": true, "kind": "function", "modifiers": [], "name": "processClaims", "nameLocation": "3729:13:1", "nodeType": "FunctionDefinition", "parameters": {"id": 544, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 539, "mutability": "mutable", "name": "_rewardData", "nameLocation": "3763:11:1", "nodeType": "VariableDeclaration", "scope": 655, "src": "3743:31:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 537, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 536, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 322, "src": "3743:10:1"}, "referencedDeclaration": 322, "src": "3743:10:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 538, "nodeType": "ArrayTypeName", "src": "3743:12:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}, {"constant": false, "id": 543, "mutability": "mutable", "name": "_transferData", "nameLocation": "3798:13:1", "nodeType": "VariableDeclaration", "scope": 655, "src": "3776:35:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TransferData_$313_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData[]"}, "typeName": {"baseType": {"id": 541, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 540, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 313, "src": "3776:12:1"}, "referencedDeclaration": 313, "src": "3776:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$313_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "id": 542, "nodeType": "ArrayTypeName", "src": "3776:14:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TransferData_$313_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData[]"}}, "visibility": "internal"}], "src": "3742:70:1"}, "returnParameters": {"id": 545, "nodeType": "ParameterList", "parameters": [], "src": "3830:0:1"}, "scope": 713, "src": "3720:1103:1", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 696, "nodeType": "Block", "src": "5027:311:1", "statements": [{"assignments": [666], "declarations": [{"constant": false, "id": 666, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "5045:27:1", "nodeType": "VariableDeclaration", "scope": 696, "src": "5037:35:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 665, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5037:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 668, "initialValue": {"id": 667, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 332, "src": "5075:24:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "5037:62:1"}, {"body": {"id": 692, "nodeType": "Block", "src": "5154:134:1", "statements": [{"expression": {"id": 690, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 680, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "5168:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 684, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "5233:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 685, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "5261:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 687, "indexExpression": {"id": 686, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 670, "src": "5273:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5261:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_RewardData_$322_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}], "expression": {"id": 682, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "5222:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 683, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "5222:10:1", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 688, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5222:54:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 681, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "5215:6:1", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 689, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5215:62:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "5168:109:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 691, "nodeType": "ExpressionStatement", "src": "5168:109:1"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 676, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 673, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 670, "src": "5125:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 674, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 660, "src": "5129:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 675, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5129:18:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5125:22:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 693, "initializationExpression": {"assignments": [670], "declarations": [{"constant": false, "id": 670, "mutability": "mutable", "name": "n", "nameLocation": "5118:1:1", "nodeType": "VariableDeclaration", "scope": 693, "src": "5113:6:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 669, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5113:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 672, "initialValue": {"hexValue": "30", "id": 671, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5122:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5113:10:1"}, "loopExpression": {"expression": {"id": 678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5149:3:1", "subExpression": {"id": 677, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 670, "src": "5149:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 679, "nodeType": "ExpressionStatement", "src": "5149:3:1"}, "nodeType": "ForStatement", "src": "5109:179:1"}, {"expression": {"id": 694, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 666, "src": "5304:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 664, "id": 695, "nodeType": "Return", "src": "5297:34:1"}]}, "documentation": {"id": 656, "nodeType": "StructuredDocumentation", "src": "4829:89:1", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "id": 697, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateNewProcessedRewardHashOnion", "nameLocation": "4932:36:1", "nodeType": "FunctionDefinition", "parameters": {"id": 661, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 660, "mutability": "mutable", "name": "_rewardData", "nameLocation": "4989:11:1", "nodeType": "VariableDeclaration", "scope": 697, "src": "4969:31:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 658, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 657, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 322, "src": "4969:10:1"}, "referencedDeclaration": 322, "src": "4969:10:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$322_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 659, "nodeType": "ArrayTypeName", "src": "4969:12:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$322_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "4968:33:1"}, "returnParameters": {"id": 664, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 663, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 697, "src": "5019:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 662, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5019:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5018:9:1"}, "scope": 713, "src": "4923:415:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 711, "nodeType": "Block", "src": "5520:60:1", "statements": [{"expression": {"id": 709, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 705, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 330, "src": "5530:15:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 707, "indexExpression": {"id": 706, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 700, "src": "5546:19:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5530:36:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 708, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5569:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5530:43:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 710, "nodeType": "ExpressionStatement", "src": "5530:43:1"}]}, "documentation": {"id": 698, "nodeType": "StructuredDocumentation", "src": "5344:89:1", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "functionSelector": "a9d72b02", "id": 712, "implemented": true, "kind": "function", "modifiers": [{"id": 703, "kind": "modifierInvocation", "modifierName": {"id": 702, "name": "onlyL1Contract", "nodeType": "IdentifierPath", "referencedDeclaration": 377, "src": "5506:14:1"}, "nodeType": "ModifierInvocation", "src": "5506:14:1"}], "name": "addNewKnownHashOnion", "nameLocation": "5447:20:1", "nodeType": "FunctionDefinition", "parameters": {"id": 701, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 700, "mutability": "mutable", "name": "_newKnownHashOnions", "nameLocation": "5476:19:1", "nodeType": "VariableDeclaration", "scope": 712, "src": "5468:27:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 699, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5468:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5467:29:1"}, "returnParameters": {"id": 704, "nodeType": "ParameterList", "parameters": [], "src": "5520:0:1"}, "scope": 713, "src": "5438:142:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 714, "src": "264:5322:1", "usedErrors": []}], "src": "31:5555:1"}, "bytecode": "608060405234801561001057600080fd5b50604051610e55380380610e5583398101604081905261002f91610076565b600380547342000000000000000000000000000000000000076001600160a01b031991821617909155600480549091166001600160a01b03929092169190911790556100a6565b60006020828403121561008857600080fd5b81516001600160a01b038116811461009f57600080fd5b9392505050565b610da0806100b56000396000f3fe6080604052600436106100705760003560e01c80635a1294b71161004e5780635a1294b7146100f0578063a9d72b0214610120578063eb66091f14610142578063edf5a2dc1461015e57600080fd5b8063040c05b6146100755780630411b252146100ba57806313457d88146100db575b600080fd5b34801561008157600080fd5b506100a56100903660046108f8565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100cd6100c8366004610929565b610171565b6040519081526020016100b1565b3480156100e757600080fd5b506100cd600581565b3480156100fc57600080fd5b506100a561010b3660046108f8565b60016020526000908152604090205460ff1681565b34801561012c57600080fd5b5061014061013b3660046108f8565b61045c565b005b34801561014e57600080fd5b506100cd67016345785d8a000081565b61014061016c366004610af9565b610526565b600067016345785d8a0000610188846103e8610c13565b11156101db5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420686967686572207468616e207472616465206c696d6974000060448201526064015b60405180910390fd5b60006101e8600585610c13565b90506000816101f9866103e8610c13565b6102039190610c32565b90506001600160a01b038716610274578034101561026f5760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084016101d2565b6102f0565b6040516323b872dd60e01b81523360048201523060248201526044810182905287906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610c4a565b50505b6103426040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808916825287166020820152604081018690526060810183905243608082015260a081018590526005805460c0830181905290600061038883610c73565b919050555060006002826040516020016103a29190610c8c565b60408051601f19818403018152908290526103bc91610ce3565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc9190610d1e565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f8990610448908490610c8c565b60405180910390a198975050505050505050565b6003546001600160a01b031633811480156104fe5750600460009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610d37565b6001600160a01b0316145b61050757600080fd5b506000908152600160208190526040909120805460ff19169091179055565b600061053183610814565b60008181526001602052604090205490915060ff166105925760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e0000000000000060448201526064016101d2565b600281905560005b835181101561080e576000808583815181106105b8576105b8610d54565b6020908102919091018101515182528101919091526040016000205460ff16156107fc576000806001600160a01b03168583815181106105fa576105fa610d54565b6020026020010151602001516001600160a01b0316036106ac57600085838151811061062857610628610d54565b6020026020010151604001516001600160a01b031686848151811061064f5761064f610d54565b60200260200101516060015160405160006040518083038185875af1925050503d806000811461069b576040519150601f19603f3d011682016040523d82523d6000602084013e6106a0565b606091505b50909250610799915050565b60008583815181106106c0576106c0610d54565b6020026020010151602001519050806001600160a01b03166323b872dd308886815181106106f0576106f0610d54565b60200260200101516040015189878151811061070e5761070e610d54565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610c4a565b9150505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a8583815181106107cc576107cc610d54565b602002602001015160000151826040516107f29291909182521515602082015260400190565b60405180910390a1505b8061080681610c73565b91505061059a565b50505050565b600254600090815b83518110156108f15760028285838151811061083a5761083a610d54565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f198184030181529082905261089d91610ce3565b602060405180830381855afa1580156108ba573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108dd9190610d1e565b9150806108e981610c73565b91505061081c565b5092915050565b60006020828403121561090a57600080fd5b5035919050565b6001600160a01b038116811461092657600080fd5b50565b6000806000806080858703121561093f57600080fd5b843561094a81610911565b9350602085013561095a81610911565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156109a8576109a861096f565b60405290565b6040516080810167ffffffffffffffff811182821017156109a8576109a861096f565b604051601f8201601f1916810167ffffffffffffffff811182821017156109fa576109fa61096f565b604052919050565b600067ffffffffffffffff821115610a1c57610a1c61096f565b5060051b60200190565b600082601f830112610a3757600080fd5b81356020610a4c610a4783610a02565b6109d1565b82815260e09283028501820192828201919087851115610a6b57600080fd5b8387015b85811015610aec5781818a031215610a875760008081fd5b610a8f610985565b8135610a9a81610911565b815281860135610aa981610911565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101610a6f565b5090979650505050505050565b6000806040808486031215610b0d57600080fd5b833567ffffffffffffffff80821115610b2557600080fd5b818601915086601f830112610b3957600080fd5b81356020610b49610a4783610a02565b82815260079290921b8401810191818101908a841115610b6857600080fd5b948201945b83861015610bcf576080868c031215610b865760008081fd5b610b8e6109ae565b8635815283870135610b9f81610911565b8185015286880135610bb081610911565b8189015260608781013590820152825260809095019490820190610b6d565b97505087013593505080831115610be557600080fd5b5050610bf385828601610a26565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610c2d57610c2d610bfd565b500290565b60008219821115610c4557610c45610bfd565b500190565b600060208284031215610c5c57600080fd5b81518015158114610c6c57600080fd5b9392505050565b600060018201610c8557610c85610bfd565b5060010190565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610d045760208186018101518583015201610cea565b81811115610d13576000828501525b509190910192915050565b600060208284031215610d3057600080fd5b5051919050565b600060208284031215610d4957600080fd5b8151610c6c81610911565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220cc12dab55412e705773fd3712e28a5c8d1afe30ec8dd83fbabb89b28dbc4466464736f6c634300080d0033", "bytecodeSha1": "16ef615fa2a0a04b634da0f85b427dd7f2ed9f05", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "SourceDomainSideBridge", "coverageMap": {"branches": {"1": {"SourceDomainSideBridge.addNewKnownHashOnion": {"26": [1709, 1757, false], "27": [1773, 1832, true]}, "SourceDomainSideBridge.processClaims": {"28": [3945, 3989, true], "29": [4155, 4207, false], "30": [4259, 4303, false]}, "SourceDomainSideBridge.transfer": {"23": [2558, 2586, true], "24": [2756, 2786, false], "25": [2809, 2835, true]}}, "2": {}, "3": {}}, "statements": {"1": {"SourceDomainSideBridge.addNewKnownHashOnion": {"14": [5530, 5573]}, "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion": {"20": [5168, 5277], "21": [5149, 5152], "22": [5297, 5331]}, "SourceDomainSideBridge.processClaims": {"15": [3937, 4019], "16": [4029, 4083], "17": [4579, 4690], "18": [4726, 4783], "19": [4133, 4136]}, "SourceDomainSideBridge.transfer": {"0": [2550, 2621], "1": [2801, 2876], "2": [2953, 3013], "3": [3076, 3117], "4": [3127, 3166], "5": [3176, 3205], "6": [3215, 3237], "7": [3247, 3284], "8": [3294, 3329], "9": [3339, 3372], "10": [3383, 3397], "11": [3486, 3530], "12": [3541, 3571], "13": [3590, 3613]}}, "2": {}, "3": {}}}, "dependencies": ["ERC20", "ICrossDomainMessenger"], "deployedBytecode": "6080604052600436106100705760003560e01c80635a1294b71161004e5780635a1294b7146100f0578063a9d72b0214610120578063eb66091f14610142578063edf5a2dc1461015e57600080fd5b8063040c05b6146100755780630411b252146100ba57806313457d88146100db575b600080fd5b34801561008157600080fd5b506100a56100903660046108f8565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100cd6100c8366004610929565b610171565b6040519081526020016100b1565b3480156100e757600080fd5b506100cd600581565b3480156100fc57600080fd5b506100a561010b3660046108f8565b60016020526000908152604090205460ff1681565b34801561012c57600080fd5b5061014061013b3660046108f8565b61045c565b005b34801561014e57600080fd5b506100cd67016345785d8a000081565b61014061016c366004610af9565b610526565b600067016345785d8a0000610188846103e8610c13565b11156101db5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420686967686572207468616e207472616465206c696d6974000060448201526064015b60405180910390fd5b60006101e8600585610c13565b90506000816101f9866103e8610c13565b6102039190610c32565b90506001600160a01b038716610274578034101561026f5760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084016101d2565b6102f0565b6040516323b872dd60e01b81523360048201523060248201526044810182905287906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610c4a565b50505b6103426040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808916825287166020820152604081018690526060810183905243608082015260a081018590526005805460c0830181905290600061038883610c73565b919050555060006002826040516020016103a29190610c8c565b60408051601f19818403018152908290526103bc91610ce3565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc9190610d1e565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f8990610448908490610c8c565b60405180910390a198975050505050505050565b6003546001600160a01b031633811480156104fe5750600460009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610d37565b6001600160a01b0316145b61050757600080fd5b506000908152600160208190526040909120805460ff19169091179055565b600061053183610814565b60008181526001602052604090205490915060ff166105925760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e0000000000000060448201526064016101d2565b600281905560005b835181101561080e576000808583815181106105b8576105b8610d54565b6020908102919091018101515182528101919091526040016000205460ff16156107fc576000806001600160a01b03168583815181106105fa576105fa610d54565b6020026020010151602001516001600160a01b0316036106ac57600085838151811061062857610628610d54565b6020026020010151604001516001600160a01b031686848151811061064f5761064f610d54565b60200260200101516060015160405160006040518083038185875af1925050503d806000811461069b576040519150601f19603f3d011682016040523d82523d6000602084013e6106a0565b606091505b50909250610799915050565b60008583815181106106c0576106c0610d54565b6020026020010151602001519050806001600160a01b03166323b872dd308886815181106106f0576106f0610d54565b60200260200101516040015189878151811061070e5761070e610d54565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610c4a565b9150505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a8583815181106107cc576107cc610d54565b602002602001015160000151826040516107f29291909182521515602082015260400190565b60405180910390a1505b8061080681610c73565b91505061059a565b50505050565b600254600090815b83518110156108f15760028285838151811061083a5761083a610d54565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f198184030181529082905261089d91610ce3565b602060405180830381855afa1580156108ba573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108dd9190610d1e565b9150806108e981610c73565b91505061081c565b5092915050565b60006020828403121561090a57600080fd5b5035919050565b6001600160a01b038116811461092657600080fd5b50565b6000806000806080858703121561093f57600080fd5b843561094a81610911565b9350602085013561095a81610911565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156109a8576109a861096f565b60405290565b6040516080810167ffffffffffffffff811182821017156109a8576109a861096f565b604051601f8201601f1916810167ffffffffffffffff811182821017156109fa576109fa61096f565b604052919050565b600067ffffffffffffffff821115610a1c57610a1c61096f565b5060051b60200190565b600082601f830112610a3757600080fd5b81356020610a4c610a4783610a02565b6109d1565b82815260e09283028501820192828201919087851115610a6b57600080fd5b8387015b85811015610aec5781818a031215610a875760008081fd5b610a8f610985565b8135610a9a81610911565b815281860135610aa981610911565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101610a6f565b5090979650505050505050565b6000806040808486031215610b0d57600080fd5b833567ffffffffffffffff80821115610b2557600080fd5b818601915086601f830112610b3957600080fd5b81356020610b49610a4783610a02565b82815260079290921b8401810191818101908a841115610b6857600080fd5b948201945b83861015610bcf576080868c031215610b865760008081fd5b610b8e6109ae565b8635815283870135610b9f81610911565b8185015286880135610bb081610911565b8189015260608781013590820152825260809095019490820190610b6d565b97505087013593505080831115610be557600080fd5b5050610bf385828601610a26565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610c2d57610c2d610bfd565b500290565b60008219821115610c4557610c45610bfd565b500190565b600060208284031215610c5c57600080fd5b81518015158114610c6c57600080fd5b9392505050565b600060018201610c8557610c85610bfd565b5060010190565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610d045760208186018101518583015201610cea565b81811115610d13576000828501525b509190910192915050565b600060208284031215610d3057600080fd5b5051919050565b600060208284031215610d4957600080fd5b8151610c6c81610911565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220cc12dab55412e705773fd3712e28a5c8d1afe30ec8dd83fbabb89b28dbc4466464736f6c634300080d0033", "deployedSourceMap": "264:5322:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:51;;;;;;;;;;-1:-1:-1;861:51:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;364:14:4;;357:22;339:41;;327:2;312:18;861:51:1;;;;;;;;2388:1232;;;;;;:::i;:::-;;:::i;:::-;;;1203:25:4;;;1191:2;1176:18;2388:1232:1;1057:177:4;307:50:1;;;;;;;;;;;;356:1;307:50;;918:47;;;;;;;;;;-1:-1:-1;918:47:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;5438:142;;;;;;;;;;-1:-1:-1;5438:142:1;;;;;:::i;:::-;;:::i;:::-;;363:44;;;;;;;;;;;;398:9;363:44;;3720:1103;;;;;;:::i;:::-;;:::i;2388:1232::-;2523:7;398:9;2558:13;:7;2567:4;2558:13;:::i;:::-;:28;;2550:71;;;;-1:-1:-1;;;2550:71:1;;6475:2:4;2550:71:1;;;6457:21:4;6514:2;6494:18;;;6487:30;6553:32;6533:18;;;6526:60;6603:18;;2550:71:1;;;;;;;;;2631:11;2645:35;356:1;2645:7;:35;:::i;:::-;2631:49;-1:-1:-1;2690:21:1;2631:49;2714:14;:7;2724:4;2714:14;:::i;:::-;:20;;;;:::i;:::-;2690:44;-1:-1:-1;;;;;;2756:30:1;;2753:271;;2822:13;2809:9;:26;;2801:75;;;;-1:-1:-1;;;2801:75:1;;6967:2:4;2801:75:1;;;6949:21:4;7006:2;6986:18;;;6979:30;7045:34;7025:18;;;7018:62;-1:-1:-1;;;7096:18:4;;;7089:34;7140:19;;2801:75:1;6765:400:4;2801:75:1;2753:271;;;2953:60;;-1:-1:-1;;;2953:60:1;;2972:10;2953:60;;;7410:34:4;2992:4:1;7460:18:4;;;7453:43;7512:18;;;7505:34;;;2925:13:1;;-1:-1:-1;;;;;2953:18:1;;;;;7345::4;;2953:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2891:133;2753:271;3034:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3034:32:1;-1:-1:-1;;;;;3076:41:1;;;;;3127:39;;:24;;;:39;3176:19;;;:29;;;3215:16;;;:22;;;3272:12;3247:22;;;:37;3294:22;;;:35;;;3360:12;;;3339:18;;;:33;;;3360:12;3076:25;3383:14;3360:12;3383:14;:::i;:::-;;;;;;3408:24;3435:32;3453:12;3442:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3442:24:1;;;;;;;;;;3435:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3486:19;:37;;;;;;;;;;;;:44;;-1:-1:-1;;3486:44:1;3526:4;3486:44;;;3546:25;3408:59;;-1:-1:-1;3546:25:1;;;;3558:12;;3546:25;:::i;:::-;;;;;;;;3597:16;2388:1232;-1:-1:-1;;;;;;;;2388:1232:1:o;5438:142::-;1652:25;;-1:-1:-1;;;;;1652:25:1;1709:10;:48;;:123;;;;;1805:27;;;;;;;;;-1:-1:-1;;;;;1805:27:1;-1:-1:-1;;;;;1773:59:1;:5;-1:-1:-1;;;;;1773:26:1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1773:59:1;;1709:123;1688:154;;;;;;-1:-1:-1;5530:36:1::1;::::0;;;5569:4:::1;5530:36;::::0;;;;;;;:43;;-1:-1:-1;;5530:43:1::1;::::0;;::::1;::::0;;5438:142::o;3720:1103::-;3840:35;3878:49;3915:11;3878:36;:49::i;:::-;3945:44;;;;:15;:44;;;;;;3840:87;;-1:-1:-1;3945:44:1;;3937:82;;;;-1:-1:-1;;;3937:82:1;;9732:2:4;3937:82:1;;;9714:21:4;9771:2;9751:18;;;9744:30;9810:27;9790:18;;;9783:55;9855:18;;3937:82:1;9530:349:4;3937:82:1;4029:24;:54;;;4097:6;4093:715;4113:11;:18;4109:1;:22;4093:715;;;4155:19;:52;4175:11;4187:1;4175:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;4155:52;;;;;;;;;;4175:31;4155:52;;;;4152:646;;;4226:12;446:42;-1:-1:-1;;;;;4259:44:1;:11;4271:1;4259:14;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;4259:44:1;;4256:453;;4327:8;4349:11;4361:1;4349:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;4341:36:1;4385:11;4397:1;4385:14;;;;;;;;:::i;:::-;;;;;;;:18;;;4341:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4326:82:1;;-1:-1:-1;4256:453:1;;-1:-1:-1;;4256:453:1;;4488:11;4508;4520:1;4508:14;;;;;;;;:::i;:::-;;;;;;;:27;;;4488:48;;4589:5;-1:-1:-1;;;;;4589:18:1;;4616:4;4623:11;4635:1;4623:14;;;;;;;;:::i;:::-;;;;;;;:22;;;4671:11;4683:1;4671:14;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;4589:101;;-1:-1:-1;;;;;;4589:101:1;;;;;;;-1:-1:-1;;;;;7428:15:4;;;4589:101:1;;;7410:34:4;7480:15;;;;7460:18;;;7453:43;7512:18;;;7505:34;7345:18;;4589:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4579:111;;4466:243;4256:453;4731:52;4742:11;4754:1;4742:14;;;;;;;;:::i;:::-;;;;;;;:31;;;4775:7;4731:52;;;;;;10394:25:4;;;10462:14;10455:22;10450:2;10435:18;;10428:50;10382:2;10367:18;;10226:258;4731:52:1;;;;;;;;4208:590;4152:646;4133:3;;;;:::i;:::-;;;;4093:715;;;;3830:993;3720:1103;;:::o;4923:415::-;5075:24;;5019:7;;;5109:179;5129:11;:18;5125:1;:22;5109:179;;;5215:62;5233:27;5261:11;5273:1;5261:14;;;;;;;;:::i;:::-;;;;;;;;;;;;5222:54;;;;;;10718:25:4;;;;10779:13;;10759:18;;;10752:41;10828:15;;;10822:22;-1:-1:-1;;;;;10918:21:4;;;10898:18;;;;10891:49;;;;10986:15;;;10980:22;10976:31;10956:18;;;10949:59;11051:15;11045:22;11024:19;;;11017:51;10690:19;;5222:54:1;;;-1:-1:-1;;5222:54:1;;;;;;;;;;5215:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5168:109;-1:-1:-1;5149:3:1;;;;:::i;:::-;;;;5109:179;;;-1:-1:-1;5304:27:1;4923:415;-1:-1:-1;;4923:415:1:o;14:180:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:4;;14:180;-1:-1:-1;14:180:4:o;391:131::-;-1:-1:-1;;;;;466:31:4;;456:42;;446:70;;512:1;509;502:12;446:70;391:131;:::o;527:525::-;613:6;621;629;637;690:3;678:9;669:7;665:23;661:33;658:53;;;707:1;704;697:12;658:53;746:9;733:23;765:31;790:5;765:31;:::i;:::-;815:5;-1:-1:-1;872:2:4;857:18;;844:32;885:33;844:32;885:33;:::i;:::-;527:525;;937:7;;-1:-1:-1;;;;991:2:4;976:18;;963:32;;1042:2;1027:18;1014:32;;527:525::o;1421:127::-;1482:10;1477:3;1473:20;1470:1;1463:31;1513:4;1510:1;1503:15;1537:4;1534:1;1527:15;1553:253;1625:2;1619:9;1667:4;1655:17;;1702:18;1687:34;;1723:22;;;1684:62;1681:88;;;1749:18;;:::i;:::-;1785:2;1778:22;1553:253;:::o;1811:::-;1883:2;1877:9;1925:4;1913:17;;1960:18;1945:34;;1981:22;;;1942:62;1939:88;;;2007:18;;:::i;2069:275::-;2140:2;2134:9;2205:2;2186:13;;-1:-1:-1;;2182:27:4;2170:40;;2240:18;2225:34;;2261:22;;;2222:62;2219:88;;;2287:18;;:::i;:::-;2323:2;2316:22;2069:275;;-1:-1:-1;2069:275:4:o;2349:193::-;2419:4;2452:18;2444:6;2441:30;2438:56;;;2474:18;;:::i;:::-;-1:-1:-1;2519:1:4;2515:14;2531:4;2511:25;;2349:193::o;2547:1582::-;2613:5;2666:3;2659:4;2651:6;2647:17;2643:27;2633:55;;2684:1;2681;2674:12;2633:55;2720:6;2707:20;2746:4;2770:70;2786:53;2836:2;2786:53;:::i;:::-;2770:70;:::i;:::-;2874:15;;;2936:4;2979:11;;;2967:24;;2963:33;;;2905:12;;;;2862:3;3008:15;;;3005:35;;;3036:1;3033;3026:12;3005:35;3072:2;3064:6;3060:15;3084:1016;3100:6;3095:3;3092:15;3084:1016;;;3176:2;3170:3;3165;3161:13;3157:22;3154:112;;;3220:1;3249:2;3245;3238:14;3154:112;3292:22;;:::i;:::-;3355:3;3342:17;3372:33;3397:7;3372:33;:::i;:::-;3418:22;;3481:12;;;3468:26;3507:33;3468:26;3507:33;:::i;:::-;3560:14;;;3553:31;3607:2;3658:12;;;3645:26;3629:14;;;3622:50;3695:2;3746:12;;;3733:26;3717:14;;;3710:50;3783:3;3835:12;;;3822:26;3806:14;;;3799:50;3872:3;3924:12;;;3911:26;3895:14;;;3888:50;3961:3;4013:12;;;4000:26;3984:14;;;3977:50;4040:18;;4078:12;;;;3117;;3084:1016;;;-1:-1:-1;4118:5:4;;2547:1582;-1:-1:-1;;;;;;;2547:1582:4:o;4134:1829::-;4308:6;4316;4347:2;4390;4378:9;4369:7;4365:23;4361:32;4358:52;;;4406:1;4403;4396:12;4358:52;4446:9;4433:23;4475:18;4516:2;4508:6;4505:14;4502:34;;;4532:1;4529;4522:12;4502:34;4570:6;4559:9;4555:22;4545:32;;4615:7;4608:4;4604:2;4600:13;4596:27;4586:55;;4637:1;4634;4627:12;4586:55;4673:2;4660:16;4695:4;4719:70;4735:53;4785:2;4735:53;:::i;4719:70::-;4823:15;;;4905:1;4901:10;;;;4893:19;;4889:28;;;4854:12;;;;4929:19;;;4926:39;;;4961:1;4958;4951:12;4926:39;4985:11;;;;5005:732;5021:6;5016:3;5013:15;5005:732;;;5103:4;5097:3;5088:7;5084:17;5080:28;5077:118;;;5149:1;5178:2;5174;5167:14;5077:118;5221:22;;:::i;:::-;5283:3;5270:17;5263:5;5256:32;5338:2;5333:3;5329:12;5316:26;5355:33;5380:7;5355:33;:::i;:::-;5408:14;;;5401:31;5473:12;;;5460:26;5499:33;5460:26;5499:33;:::i;:::-;5552:14;;;5545:31;5599:2;5650:12;;;5637:26;5621:14;;;5614:50;5677:18;;5047:4;5038:14;;;;5715:12;;;;5005:732;;;5756:5;-1:-1:-1;;5799:18:4;;5786:32;;-1:-1:-1;;5830:16:4;;;5827:36;;;5859:1;5856;5849:12;5827:36;;;5882:75;5949:7;5938:8;5927:9;5923:24;5882:75;:::i;:::-;5872:85;;;4134:1829;;;;;:::o;5968:127::-;6029:10;6024:3;6020:20;6017:1;6010:31;6060:4;6057:1;6050:15;6084:4;6081:1;6074:15;6100:168;6140:7;6206:1;6202;6198:6;6194:14;6191:1;6188:21;6183:1;6176:9;6169:17;6165:45;6162:71;;;6213:18;;:::i;:::-;-1:-1:-1;6253:9:4;;6100:168::o;6632:128::-;6672:3;6703:1;6699:6;6696:1;6693:13;6690:39;;;6709:18;;:::i;:::-;-1:-1:-1;6745:9:4;;6632:128::o;7550:277::-;7617:6;7670:2;7658:9;7649:7;7645:23;7641:32;7638:52;;;7686:1;7683;7676:12;7638:52;7718:9;7712:16;7771:5;7764:13;7757:21;7750:5;7747:32;7737:60;;7793:1;7790;7783:12;7737:60;7816:5;7550:277;-1:-1:-1;;;7550:277:4:o;7832:135::-;7871:3;7892:17;;;7889:43;;7912:18;;:::i;:::-;-1:-1:-1;7959:1:4;7948:13;;7832:135::o;7972:677::-;8237:13;;-1:-1:-1;;;;;8233:22:4;;;8215:41;;8316:4;8304:17;;;8298:24;8294:33;;;8272:20;;;8265:63;8384:4;8372:17;;;8366:24;8344:20;;;8337:54;8447:4;8435:17;;;8429:24;8407:20;;;8400:54;8510:4;8498:17;;;8492:24;8470:20;;;8463:54;8195:3;8561:17;;;8555:24;8533:20;;;8526:54;8636:4;8624:17;;;8618:24;8596:20;;;8589:54;;;;8164:3;8149:19;;7972:677::o;8654:426::-;8783:3;8821:6;8815:13;8846:1;8856:129;8870:6;8867:1;8864:13;8856:129;;;8968:4;8952:14;;;8948:25;;8942:32;8929:11;;;8922:53;8885:12;8856:129;;;9003:6;9000:1;8997:13;8994:48;;;9038:1;9029:6;9024:3;9020:16;9013:27;8994:48;-1:-1:-1;9058:16:4;;;;;8654:426;-1:-1:-1;;8654:426:4:o;9085:184::-;9155:6;9208:2;9196:9;9187:7;9183:23;9179:32;9176:52;;;9224:1;9221;9214:12;9176:52;-1:-1:-1;9247:16:4;;9085:184;-1:-1:-1;9085:184:4:o;9274:251::-;9344:6;9397:2;9385:9;9376:7;9372:23;9368:32;9365:52;;;9413:1;9410;9403:12;9365:52;9445:9;9439:16;9464:31;9489:5;9464:31;:::i;9884:127::-;9945:10;9940:3;9936:20;9933:1;9926:31;9976:4;9973:1;9966:15;10000:4;9997:1;9990:15", "language": "Solidity", "natspec": {"author": "Sherif Abdelmoatty", "kind": "dev", "methods": {"addNewKnownHashOnion(bytes32)": {"notice": "processClaims functioncalculates the liquidity provider fee."}, "constructor": {"notice": "Constructior functionIntialize variables"}, "processClaims((bytes32,address,address,uint256)[],(address,address,uint256,uint256,uint256,uint256,uint256)[])": {"notice": "processClaims functioncalculates the liquidity provider fee."}, "transfer(address,address,uint256,uint256)": {"notice": "withdraw functionwithdraws the required funds plus fees to be sent to the domain side rollup function transfer(TransferData memory _transferData) external payable returns(bytes32){"}}, "notice": "This contract is to be deployed in the source rollup", "title": "SourceDomainSideBridge Contract", "version": 1}, "offset": [264, 5586], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A1294B7 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x5A1294B7 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA9D72B02 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xEB66091F EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xEDF5A2DC EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C05B6 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x411B252 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x13457D88 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 PUSH8 0x16345785D8A0000 PUSH2 0x188 DUP5 PUSH2 0x3E8 PUSH2 0xC13 JUMP JUMPDEST GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420686967686572207468616E207472616465206C696D69740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x5 DUP6 PUSH2 0xC13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x1F9 DUP7 PUSH2 0x3E8 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x274 JUMPI DUP1 CALLVALUE LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x21212121 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x342 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE NUMBER PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH1 0x0 PUSH2 0x388 DUP4 PUSH2 0xC73 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x3BC SWAP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89 SWAP1 PUSH2 0x448 SWAP1 DUP5 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP4 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964652052657761726444617461206C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5FA JUMPI PUSH2 0x5FA PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6AC JUMPI PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x64F JUMPI PUSH2 0x64F PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP PUSH2 0x799 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6C0 JUMPI PUSH2 0x6C0 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x6F0 JUMPI PUSH2 0x6F0 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH2 0x70E PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH32 0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7CC JUMPI PUSH2 0x7CC PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST DUP1 PUSH2 0x806 DUP2 PUSH2 0xC73 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x59A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x2 DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x83A JUMPI PUSH2 0x83A PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 MLOAD DUP5 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP3 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x89D SWAP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x8E9 DUP2 PUSH2 0xC73 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x81C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x94A DUP2 PUSH2 0x911 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x95A DUP2 PUSH2 0x911 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9FA JUMPI PUSH2 0x9FA PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1C PUSH2 0x96F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xA4C PUSH2 0xA47 DUP4 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0xE0 SWAP3 DUP4 MUL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP3 ADD SWAP2 SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xAEC JUMPI DUP2 DUP2 DUP11 SUB SLT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA8F PUSH2 0x985 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA9A DUP2 PUSH2 0x911 JUMP JUMPDEST DUP2 MSTORE DUP2 DUP7 ADD CALLDATALOAD PUSH2 0xAA9 DUP2 PUSH2 0x911 JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0xA6F JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP1 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xB49 PUSH2 0xA47 DUP4 PUSH2 0xA02 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x7 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xBCF JUMPI PUSH1 0x80 DUP7 DUP13 SUB SLT ISZERO PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB8E PUSH2 0x9AE JUMP JUMPDEST DUP7 CALLDATALOAD DUP2 MSTORE DUP4 DUP8 ADD CALLDATALOAD PUSH2 0xB9F DUP2 PUSH2 0x911 JUMP JUMPDEST DUP2 DUP6 ADD MSTORE DUP7 DUP9 ADD CALLDATALOAD PUSH2 0xBB0 DUP2 PUSH2 0x911 JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0x60 DUP8 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xB6D JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP4 POP POP DUP1 DUP4 GT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0xBF3 DUP6 DUP3 DUP7 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2D PUSH2 0xBFD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC45 JUMPI PUSH2 0xC45 PUSH2 0xBFD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xC85 JUMPI PUSH2 0xC85 PUSH2 0xBFD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD04 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xCEA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC6C DUP2 PUSH2 0x911 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC SLT 0xDA 0xB5 SLOAD SLT 0xE7 SDIV PUSH24 0x3FD3712E28A5C8D1AFE30EC8DD83FBABB89B28DBC4466464 PUSH20 0x6F6C634300080D00330000000000000000000000 ", "pcMap": {"0": {"offset": [264, 5586], "op": "PUSH1", "path": "1", "value": "0x80"}, "2": {"fn": null, "offset": [264, 5586], "op": "PUSH1", "path": "1", "value": "0x40"}, "4": {"fn": null, "offset": [264, 5586], "op": "MSTORE", "path": "1"}, "5": {"fn": null, "offset": [264, 5586], "op": "PUSH1", "path": "1", "value": "0x4"}, "7": {"fn": null, "offset": [264, 5586], "op": "CALLDATASIZE", "path": "1"}, "8": {"fn": null, "offset": [264, 5586], "op": "LT", "path": "1"}, "9": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0x70"}, "12": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "13": {"fn": null, "offset": [264, 5586], "op": "PUSH1", "path": "1", "value": "0x0"}, "15": {"fn": null, "offset": [264, 5586], "op": "CALLDATALOAD", "path": "1"}, "16": {"fn": null, "offset": [264, 5586], "op": "PUSH1", "path": "1", "value": "0xE0"}, "18": {"fn": null, "offset": [264, 5586], "op": "SHR", "path": "1"}, "19": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "20": {"fn": null, "offset": [264, 5586], "op": "PUSH4", "path": "1", "value": "0x5A1294B7"}, "25": {"fn": null, "offset": [264, 5586], "op": "GT", "path": "1"}, "26": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0x4E"}, "29": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "30": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "31": {"fn": null, "offset": [264, 5586], "op": "PUSH4", "path": "1", "value": "0x5A1294B7"}, "36": {"fn": null, "offset": [264, 5586], "op": "EQ", "path": "1"}, "37": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0xF0"}, "40": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "41": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "42": {"fn": null, "offset": [264, 5586], "op": "PUSH4", "path": "1", "value": "0xA9D72B02"}, "47": {"fn": null, "offset": [264, 5586], "op": "EQ", "path": "1"}, "48": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0x120"}, "51": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "52": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "53": {"fn": null, "offset": [264, 5586], "op": "PUSH4", "path": "1", "value": "0xEB66091F"}, "58": {"fn": null, "offset": [264, 5586], "op": "EQ", "path": "1"}, "59": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0x142"}, "62": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "63": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "64": {"fn": null, "offset": [264, 5586], "op": "PUSH4", "path": "1", "value": "0xEDF5A2DC"}, "69": {"fn": null, "offset": [264, 5586], "op": "EQ", "path": "1"}, "70": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0x15E"}, "73": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "74": {"fn": null, "offset": [264, 5586], "op": "PUSH1", "path": "1", "value": "0x0"}, "76": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "77": {"fn": null, "offset": [264, 5586], "op": "REVERT", "path": "1"}, "78": {"fn": null, "offset": [264, 5586], "op": "JUMPDEST", "path": "1"}, "79": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "80": {"fn": null, "offset": [264, 5586], "op": "PUSH4", "path": "1", "value": "0x40C05B6"}, "85": {"fn": null, "offset": [264, 5586], "op": "EQ", "path": "1"}, "86": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0x75"}, "89": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "90": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "91": {"fn": null, "offset": [264, 5586], "op": "PUSH4", "path": "1", "value": "0x411B252"}, "96": {"fn": null, "offset": [264, 5586], "op": "EQ", "path": "1"}, "97": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0xBA"}, "100": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "101": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "102": {"fn": null, "offset": [264, 5586], "op": "PUSH4", "path": "1", "value": "0x13457D88"}, "107": {"fn": null, "offset": [264, 5586], "op": "EQ", "path": "1"}, "108": {"fn": null, "offset": [264, 5586], "op": "PUSH2", "path": "1", "value": "0xDB"}, "111": {"fn": null, "offset": [264, 5586], "op": "JUMPI", "path": "1"}, "112": {"fn": null, "offset": [264, 5586], "op": "JUMPDEST", "path": "1"}, "113": {"fn": null, "offset": [264, 5586], "op": "PUSH1", "path": "1", "value": "0x0"}, "115": {"fn": null, "offset": [264, 5586], "op": "DUP1", "path": "1"}, "116": {"first_revert": true, "fn": null, "offset": [264, 5586], "op": "REVERT", "path": "1"}, "117": {"offset": [861, 912], "op": "JUMPDEST", "path": "1"}, "118": {"fn": null, "offset": [861, 912], "op": "CALLVALUE", "path": "1"}, "119": {"fn": null, "offset": [861, 912], "op": "DUP1", "path": "1"}, "120": {"fn": null, "offset": [861, 912], "op": "ISZERO", "path": "1"}, "121": {"fn": null, "offset": [861, 912], "op": "PUSH2", "path": "1", "value": "0x81"}, "124": {"fn": null, "offset": [861, 912], "op": "JUMPI", "path": "1"}, "125": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "1", "value": "0x0"}, "127": {"fn": null, "offset": [861, 912], "op": "DUP1", "path": "1"}, "128": {"fn": null, "offset": [861, 912], "op": "REVERT", "path": "1"}, "129": {"fn": null, "offset": [861, 912], "op": "JUMPDEST", "path": "1"}, "130": {"op": "POP"}, "131": {"offset": [861, 912], "op": "PUSH2", "path": "1", "value": "0xA5"}, "134": {"fn": null, "offset": [861, 912], "op": "PUSH2", "path": "1", "value": "0x90"}, "137": {"fn": null, "offset": [861, 912], "op": "CALLDATASIZE", "path": "1"}, "138": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "1", "value": "0x4"}, "140": {"fn": null, "offset": [861, 912], "op": "PUSH2", "path": "1", "value": "0x8F8"}, "143": {"fn": null, "jump": "i", "offset": [861, 912], "op": "JUMP", "path": "1"}, "144": {"fn": null, "offset": [861, 912], "op": "JUMPDEST", "path": "1"}, "145": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "1", "value": "0x0"}, "147": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "1", "value": "0x20"}, "149": {"fn": null, "offset": [861, 912], "op": "DUP2", "path": "1"}, "150": {"fn": null, "offset": [861, 912], "op": "SWAP1", "path": "1"}, "151": {"fn": null, "offset": [861, 912], "op": "MSTORE", "path": "1"}, "152": {"fn": null, "offset": [861, 912], "op": "SWAP1", "path": "1"}, "153": {"fn": null, "offset": [861, 912], "op": "DUP2", "path": "1"}, "154": {"fn": null, "offset": [861, 912], "op": "MSTORE", "path": "1"}, "155": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "1", "value": "0x40"}, "157": {"fn": null, "offset": [861, 912], "op": "SWAP1", "path": "1"}, "158": {"fn": null, "offset": [861, 912], "op": "KECCAK256", "path": "1"}, "159": {"fn": null, "offset": [861, 912], "op": "SLOAD", "path": "1"}, "160": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "1", "value": "0xFF"}, "162": {"fn": null, "offset": [861, 912], "op": "AND", "path": "1"}, "163": {"fn": null, "offset": [861, 912], "op": "DUP2", "path": "1"}, "164": {"fn": null, "offset": [861, 912], "op": "JUMP", "path": "1"}, "165": {"fn": null, "offset": [861, 912], "op": "JUMPDEST", "path": "1"}, "166": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "1", "value": "0x40"}, "168": {"fn": null, "offset": [861, 912], "op": "MLOAD", "path": "1"}, "169": {"op": "SWAP1"}, "170": {"op": "ISZERO"}, "171": {"op": "ISZERO"}, "172": {"op": "DUP2"}, "173": {"op": "MSTORE"}, "174": {"op": "PUSH1", "value": "0x20"}, "176": {"op": "ADD"}, "177": {"offset": [861, 912], "op": "JUMPDEST", "path": "1"}, "178": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "1", "value": "0x40"}, "180": {"fn": null, "offset": [861, 912], "op": "MLOAD", "path": "1"}, "181": {"fn": null, "offset": [861, 912], "op": "DUP1", "path": "1"}, "182": {"fn": null, "offset": [861, 912], "op": "SWAP2", "path": "1"}, "183": {"fn": null, "offset": [861, 912], "op": "SUB", "path": "1"}, "184": {"fn": null, "offset": [861, 912], "op": "SWAP1", "path": "1"}, "185": {"fn": null, "offset": [861, 912], "op": "RETURN", "path": "1"}, "186": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "JUMPDEST", "path": "1"}, "187": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "1", "value": "0xCD"}, "190": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "1", "value": "0xC8"}, "193": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "CALLDATASIZE", "path": "1"}, "194": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH1", "path": "1", "value": "0x4"}, "196": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "1", "value": "0x929"}, "199": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2388, 3620], "op": "JUMP", "path": "1"}, "200": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "JUMPDEST", "path": "1"}, "201": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "1", "value": "0x171"}, "204": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2388, 3620], "op": "JUMP", "path": "1"}, "205": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "JUMPDEST", "path": "1"}, "206": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH1", "path": "1", "value": "0x40"}, "208": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "MLOAD", "path": "1"}, "209": {"op": "SWAP1"}, "210": {"op": "DUP2"}, "211": {"op": "MSTORE"}, "212": {"op": "PUSH1", "value": "0x20"}, "214": {"op": "ADD"}, "215": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "1", "value": "0xB1"}, "218": {"op": "JUMP"}, "219": {"offset": [307, 357], "op": "JUMPDEST", "path": "1"}, "220": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "CALLVALUE", "path": "1"}, "221": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "DUP1", "path": "1"}, "222": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "ISZERO", "path": "1"}, "223": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "PUSH2", "path": "1", "value": "0xE7"}, "226": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "JUMPI", "path": "1"}, "227": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "PUSH1", "path": "1", "value": "0x0"}, "229": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "DUP1", "path": "1"}, "230": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "REVERT", "path": "1"}, "231": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "JUMPDEST", "path": "1"}, "232": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "POP", "path": "1"}, "233": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "PUSH2", "path": "1", "value": "0xCD"}, "236": {"offset": [356, 357], "op": "PUSH1", "path": "1", "value": "0x5"}, "238": {"offset": [307, 357], "op": "DUP2", "path": "1"}, "239": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "JUMP", "path": "1"}, "240": {"offset": [918, 965], "op": "JUMPDEST", "path": "1"}, "241": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "CALLVALUE", "path": "1"}, "242": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "DUP1", "path": "1"}, "243": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "ISZERO", "path": "1"}, "244": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH2", "path": "1", "value": "0xFC"}, "247": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "JUMPI", "path": "1"}, "248": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "1", "value": "0x0"}, "250": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "DUP1", "path": "1"}, "251": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "REVERT", "path": "1"}, "252": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "JUMPDEST", "path": "1"}, "253": {"op": "POP"}, "254": {"offset": [918, 965], "op": "PUSH2", "path": "1", "value": "0xA5"}, "257": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH2", "path": "1", "value": "0x10B"}, "260": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "CALLDATASIZE", "path": "1"}, "261": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "1", "value": "0x4"}, "263": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH2", "path": "1", "value": "0x8F8"}, "266": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [918, 965], "op": "JUMP", "path": "1"}, "267": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "JUMPDEST", "path": "1"}, "268": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "1", "value": "0x1"}, "270": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "1", "value": "0x20"}, "272": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "MSTORE", "path": "1"}, "273": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "1", "value": "0x0"}, "275": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "SWAP1", "path": "1"}, "276": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "DUP2", "path": "1"}, "277": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "MSTORE", "path": "1"}, "278": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "1", "value": "0x40"}, "280": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "SWAP1", "path": "1"}, "281": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "KECCAK256", "path": "1"}, "282": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "SLOAD", "path": "1"}, "283": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "1", "value": "0xFF"}, "285": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "AND", "path": "1"}, "286": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "DUP2", "path": "1"}, "287": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "JUMP", "path": "1"}, "288": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "JUMPDEST", "path": "1"}, "289": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "CALLVALUE", "path": "1"}, "290": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "DUP1", "path": "1"}, "291": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "ISZERO", "path": "1"}, "292": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "PUSH2", "path": "1", "value": "0x12C"}, "295": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "JUMPI", "path": "1"}, "296": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "PUSH1", "path": "1", "value": "0x0"}, "298": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "DUP1", "path": "1"}, "299": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "REVERT", "path": "1"}, "300": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "JUMPDEST", "path": "1"}, "301": {"op": "POP"}, "302": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "PUSH2", "path": "1", "value": "0x140"}, "305": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "PUSH2", "path": "1", "value": "0x13B"}, "308": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "CALLDATASIZE", "path": "1"}, "309": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "PUSH1", "path": "1", "value": "0x4"}, "311": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "PUSH2", "path": "1", "value": "0x8F8"}, "314": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5438, 5580], "op": "JUMP", "path": "1"}, "315": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "JUMPDEST", "path": "1"}, "316": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "PUSH2", "path": "1", "value": "0x45C"}, "319": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5438, 5580], "op": "JUMP", "path": "1"}, "320": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "JUMPDEST", "path": "1"}, "321": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "STOP", "path": "1"}, "322": {"offset": [363, 407], "op": "JUMPDEST", "path": "1"}, "323": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "CALLVALUE", "path": "1"}, "324": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "DUP1", "path": "1"}, "325": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "ISZERO", "path": "1"}, "326": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "PUSH2", "path": "1", "value": "0x14E"}, "329": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "JUMPI", "path": "1"}, "330": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "PUSH1", "path": "1", "value": "0x0"}, "332": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "DUP1", "path": "1"}, "333": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "REVERT", "path": "1"}, "334": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "JUMPDEST", "path": "1"}, "335": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "POP", "path": "1"}, "336": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "PUSH2", "path": "1", "value": "0xCD"}, "339": {"offset": [398, 407], "op": "PUSH8", "path": "1", "value": "0x16345785D8A0000"}, "348": {"offset": [363, 407], "op": "DUP2", "path": "1"}, "349": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "JUMP", "path": "1"}, "350": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "JUMPDEST", "path": "1"}, "351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "PUSH2", "path": "1", "value": "0x140"}, "354": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "PUSH2", "path": "1", "value": "0x16C"}, "357": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "CALLDATASIZE", "path": "1"}, "358": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "PUSH1", "path": "1", "value": "0x4"}, "360": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "PUSH2", "path": "1", "value": "0xAF9"}, "363": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3720, 4823], "op": "JUMP", "path": "1"}, "364": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "JUMPDEST", "path": "1"}, "365": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "PUSH2", "path": "1", "value": "0x526"}, "368": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3720, 4823], "op": "JUMP", "path": "1"}, "369": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "JUMPDEST", "path": "1"}, "370": {"fn": "SourceDomainSideBridge.transfer", "offset": [2523, 2530], "op": "PUSH1", "path": "1", "value": "0x0"}, "372": {"offset": [398, 407], "op": "PUSH8", "path": "1", "value": "0x16345785D8A0000"}, "381": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2571], "op": "PUSH2", "path": "1", "statement": 0, "value": "0x188"}, "384": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2565], "op": "DUP5", "path": "1"}, "385": {"fn": "SourceDomainSideBridge.transfer", "offset": [2567, 2571], "op": "PUSH2", "path": "1", "value": "0x3E8"}, "388": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2571], "op": "PUSH2", "path": "1", "value": "0xC13"}, "391": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2558, 2571], "op": "JUMP", "path": "1"}, "392": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2571], "op": "JUMPDEST", "path": "1"}, "393": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2586], "op": "GT", "path": "1"}, "394": {"branch": 23, "fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2586], "op": "ISZERO", "path": "1"}, "395": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "PUSH2", "path": "1", "value": "0x1DB"}, "398": {"branch": 23, "fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "JUMPI", "path": "1"}, "399": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "PUSH1", "path": "1", "value": "0x40"}, "401": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "MLOAD", "path": "1"}, "402": {"op": "PUSH3", "value": "0x461BCD"}, "406": {"op": "PUSH1", "value": "0xE5"}, "408": {"op": "SHL"}, "409": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "DUP2", "path": "1"}, "410": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "MSTORE", "path": "1"}, "411": {"op": "PUSH1", "value": "0x20"}, "413": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "PUSH1", "path": "1", "value": "0x4"}, "415": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "DUP3", "path": "1"}, "416": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "ADD", "path": "1"}, "417": {"op": "MSTORE"}, "418": {"op": "PUSH1", "value": "0x1E"}, "420": {"op": "PUSH1", "value": "0x24"}, "422": {"op": "DUP3"}, "423": {"op": "ADD"}, "424": {"op": "MSTORE"}, "425": {"op": "PUSH32", "value": "0x416D6F756E7420686967686572207468616E207472616465206C696D69740000"}, "458": {"op": "PUSH1", "value": "0x44"}, "460": {"op": "DUP3"}, "461": {"op": "ADD"}, "462": {"op": "MSTORE"}, "463": {"op": "PUSH1", "value": "0x64"}, "465": {"op": "ADD"}, "466": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "JUMPDEST", "path": "1"}, "467": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "PUSH1", "path": "1", "value": "0x40"}, "469": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "MLOAD", "path": "1"}, "470": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "DUP1", "path": "1"}, "471": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "SWAP2", "path": "1"}, "472": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "SUB", "path": "1"}, "473": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "SWAP1", "path": "1"}, "474": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "REVERT", "optimizer_revert": true, "path": "1"}, "475": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "JUMPDEST", "path": "1"}, "476": {"fn": "SourceDomainSideBridge.transfer", "offset": [2631, 2642], "op": "PUSH1", "path": "1", "value": "0x0"}, "478": {"fn": "SourceDomainSideBridge.transfer", "offset": [2645, 2680], "op": "PUSH2", "path": "1", "value": "0x1E8"}, "481": {"offset": [356, 357], "op": "PUSH1", "path": "1", "value": "0x5"}, "483": {"fn": "SourceDomainSideBridge.transfer", "offset": [2645, 2652], "op": "DUP6", "path": "1"}, "484": {"fn": "SourceDomainSideBridge.transfer", "offset": [2645, 2680], "op": "PUSH2", "path": "1", "value": "0xC13"}, "487": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2645, 2680], "op": "JUMP", "path": "1"}, "488": {"fn": "SourceDomainSideBridge.transfer", "offset": [2645, 2680], "op": "JUMPDEST", "path": "1"}, "489": {"fn": "SourceDomainSideBridge.transfer", "offset": [2631, 2680], "op": "SWAP1", "path": "1"}, "490": {"op": "POP"}, "491": {"fn": "SourceDomainSideBridge.transfer", "offset": [2690, 2711], "op": "PUSH1", "path": "1", "value": "0x0"}, "493": {"fn": "SourceDomainSideBridge.transfer", "offset": [2631, 2680], "op": "DUP2", "path": "1"}, "494": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2728], "op": "PUSH2", "path": "1", "value": "0x1F9"}, "497": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2721], "op": "DUP7", "path": "1"}, "498": {"fn": "SourceDomainSideBridge.transfer", "offset": [2724, 2728], "op": "PUSH2", "path": "1", "value": "0x3E8"}, "501": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2728], "op": "PUSH2", "path": "1", "value": "0xC13"}, "504": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2714, 2728], "op": "JUMP", "path": "1"}, "505": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2728], "op": "JUMPDEST", "path": "1"}, "506": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "PUSH2", "path": "1", "value": "0x203"}, "509": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "SWAP2", "path": "1"}, "510": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "SWAP1", "path": "1"}, "511": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "PUSH2", "path": "1", "value": "0xC32"}, "514": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2714, 2734], "op": "JUMP", "path": "1"}, "515": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "JUMPDEST", "path": "1"}, "516": {"fn": "SourceDomainSideBridge.transfer", "offset": [2690, 2734], "op": "SWAP1", "path": "1"}, "517": {"op": "POP"}, "518": {"op": "PUSH1", "value": "0x1"}, "520": {"op": "PUSH1", "value": "0x1"}, "522": {"op": "PUSH1", "value": "0xA0"}, "524": {"op": "SHL"}, "525": {"op": "SUB"}, "526": {"fn": "SourceDomainSideBridge.transfer", "offset": [2756, 2786], "op": "DUP8", "path": "1"}, "527": {"branch": 24, "fn": "SourceDomainSideBridge.transfer", "offset": [2756, 2786], "op": "AND", "path": "1"}, "528": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "PUSH2", "path": "1", "value": "0x274"}, "531": {"branch": 24, "fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "JUMPI", "path": "1"}, "532": {"fn": "SourceDomainSideBridge.transfer", "offset": [2822, 2835], "op": "DUP1", "path": "1", "statement": 1}, "533": {"fn": "SourceDomainSideBridge.transfer", "offset": [2809, 2818], "op": "CALLVALUE", "path": "1"}, "534": {"fn": "SourceDomainSideBridge.transfer", "offset": [2809, 2835], "op": "LT", "path": "1"}, "535": {"branch": 25, "fn": "SourceDomainSideBridge.transfer", "offset": [2809, 2835], "op": "ISZERO", "path": "1"}, "536": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "PUSH2", "path": "1", "value": "0x26F"}, "539": {"branch": 25, "fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "JUMPI", "path": "1"}, "540": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "PUSH1", "path": "1", "value": "0x40"}, "542": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "MLOAD", "path": "1"}, "543": {"op": "PUSH3", "value": "0x461BCD"}, "547": {"op": "PUSH1", "value": "0xE5"}, "549": {"op": "SHL"}, "550": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "DUP2", "path": "1"}, "551": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "MSTORE", "path": "1"}, "552": {"op": "PUSH1", "value": "0x20"}, "554": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "PUSH1", "path": "1", "value": "0x4"}, "556": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "DUP3", "path": "1"}, "557": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "ADD", "path": "1"}, "558": {"op": "MSTORE"}, "559": {"op": "PUSH1", "value": "0x24"}, "561": {"op": "DUP1"}, "562": {"op": "DUP3"}, "563": {"op": "ADD"}, "564": {"op": "MSTORE"}, "565": {"op": "PUSH32", "value": "0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121"}, "598": {"op": "PUSH1", "value": "0x44"}, "600": {"op": "DUP3"}, "601": {"op": "ADD"}, "602": {"op": "MSTORE"}, "603": {"op": "PUSH4", "value": "0x21212121"}, "608": {"op": "PUSH1", "value": "0xE0"}, "610": {"op": "SHL"}, "611": {"op": "PUSH1", "value": "0x64"}, "613": {"op": "DUP3"}, "614": {"op": "ADD"}, "615": {"op": "MSTORE"}, "616": {"op": "PUSH1", "value": "0x84"}, "618": {"op": "ADD"}, "619": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "PUSH2", "path": "1", "value": "0x1D2"}, "622": {"op": "JUMP"}, "623": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "JUMPDEST", "path": "1"}, "624": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "PUSH2", "path": "1", "value": "0x2F0"}, "627": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "JUMP", "path": "1"}, "628": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "JUMPDEST", "path": "1"}, "629": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "statement": 2, "value": "0x40"}, "631": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MLOAD", "path": "1"}, "632": {"op": "PUSH4", "value": "0x23B872DD"}, "637": {"op": "PUSH1", "value": "0xE0"}, "639": {"op": "SHL"}, "640": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP2", "path": "1"}, "641": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MSTORE", "path": "1"}, "642": {"fn": "SourceDomainSideBridge.transfer", "offset": [2972, 2982], "op": "CALLER", "path": "1"}, "643": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x4"}, "645": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP3", "path": "1"}, "646": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ADD", "path": "1"}, "647": {"op": "MSTORE"}, "648": {"fn": "SourceDomainSideBridge.transfer", "offset": [2992, 2996], "op": "ADDRESS", "path": "1"}, "649": {"op": "PUSH1", "value": "0x24"}, "651": {"op": "DUP3"}, "652": {"op": "ADD"}, "653": {"op": "MSTORE"}, "654": {"op": "PUSH1", "value": "0x44"}, "656": {"op": "DUP2"}, "657": {"op": "ADD"}, "658": {"op": "DUP3"}, "659": {"op": "SWAP1"}, "660": {"op": "MSTORE"}, "661": {"fn": "SourceDomainSideBridge.transfer", "offset": [2925, 2938], "op": "DUP8", "path": "1"}, "662": {"fn": "SourceDomainSideBridge.transfer", "offset": [2925, 2938], "op": "SWAP1", "path": "1"}, "663": {"op": "PUSH1", "value": "0x1"}, "665": {"op": "PUSH1", "value": "0x1"}, "667": {"op": "PUSH1", "value": "0xA0"}, "669": {"op": "SHL"}, "670": {"op": "SUB"}, "671": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "DUP3", "path": "1"}, "672": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "AND", "path": "1"}, "673": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "SWAP1", "path": "1"}, "674": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "PUSH4", "path": "1", "value": "0x23B872DD"}, "679": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "SWAP1", "path": "1"}, "680": {"op": "PUSH1", "value": "0x64"}, "682": {"op": "ADD"}, "683": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x20"}, "685": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x40"}, "687": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MLOAD", "path": "1"}, "688": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP1", "path": "1"}, "689": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP4", "path": "1"}, "690": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "SUB", "path": "1"}, "691": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP2", "path": "1"}, "692": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x0"}, "694": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP8", "path": "1"}, "695": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "GAS", "path": "1"}, "696": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "CALL", "path": "1"}, "697": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ISZERO", "path": "1"}, "698": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP1", "path": "1"}, "699": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ISZERO", "path": "1"}, "700": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH2", "path": "1", "value": "0x2C9"}, "703": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "JUMPI", "path": "1"}, "704": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "RETURNDATASIZE", "path": "1"}, "705": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x0"}, "707": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP1", "path": "1"}, "708": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "RETURNDATACOPY", "path": "1"}, "709": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "RETURNDATASIZE", "path": "1"}, "710": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x0"}, "712": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "REVERT", "path": "1"}, "713": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "JUMPDEST", "path": "1"}, "714": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "1"}, "715": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "1"}, "716": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "1"}, "717": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "1"}, "718": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x40"}, "720": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MLOAD", "path": "1"}, "721": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "RETURNDATASIZE", "path": "1"}, "722": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x1F"}, "724": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "NOT", "path": "1"}, "725": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x1F"}, "727": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP3", "path": "1"}, "728": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ADD", "path": "1"}, "729": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "AND", "path": "1"}, "730": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP3", "path": "1"}, "731": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ADD", "path": "1"}, "732": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP1", "path": "1"}, "733": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "1", "value": "0x40"}, "735": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MSTORE", "path": "1"}, "736": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "1"}, "737": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP2", "path": "1"}, "738": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ADD", "path": "1"}, "739": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "SWAP1", "path": "1"}, "740": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH2", "path": "1", "value": "0x2ED"}, "743": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "SWAP2", "path": "1"}, "744": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "SWAP1", "path": "1"}, "745": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH2", "path": "1", "value": "0xC4A"}, "748": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2953, 3013], "op": "JUMP", "path": "1"}, "749": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "JUMPDEST", "path": "1"}, "750": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "1"}, "751": {"fn": "SourceDomainSideBridge.transfer", "offset": [2891, 3024], "op": "POP", "path": "1"}, "752": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "JUMPDEST", "path": "1"}, "753": {"fn": "SourceDomainSideBridge.transfer", "offset": [3034, 3066], "op": "PUSH2", "path": "1", "value": "0x342"}, "756": {"op": "PUSH1", "value": "0x40"}, "758": {"op": "MLOAD"}, "759": {"op": "DUP1"}, "760": {"op": "PUSH1", "value": "0xE0"}, "762": {"op": "ADD"}, "763": {"op": "PUSH1", "value": "0x40"}, "765": {"op": "MSTORE"}, "766": {"op": "DUP1"}, "767": {"op": "PUSH1", "value": "0x0"}, "769": {"op": "PUSH1", "value": "0x1"}, "771": {"op": "PUSH1", "value": "0x1"}, "773": {"op": "PUSH1", "value": "0xA0"}, "775": {"op": "SHL"}, "776": {"op": "SUB"}, "777": {"op": "AND"}, "778": {"op": "DUP2"}, "779": {"op": "MSTORE"}, "780": {"op": "PUSH1", "value": "0x20"}, "782": {"op": "ADD"}, "783": {"op": "PUSH1", "value": "0x0"}, "785": {"op": "PUSH1", "value": "0x1"}, "787": {"op": "PUSH1", "value": "0x1"}, "789": {"op": "PUSH1", "value": "0xA0"}, "791": {"op": "SHL"}, "792": {"op": "SUB"}, "793": {"op": "AND"}, "794": {"op": "DUP2"}, "795": {"op": "MSTORE"}, "796": {"op": "PUSH1", "value": "0x20"}, "798": {"op": "ADD"}, "799": {"op": "PUSH1", "value": "0x0"}, "801": {"op": "DUP2"}, "802": {"op": "MSTORE"}, "803": {"op": "PUSH1", "value": "0x20"}, "805": {"op": "ADD"}, "806": {"op": "PUSH1", "value": "0x0"}, "808": {"op": "DUP2"}, "809": {"op": "MSTORE"}, "810": {"op": "PUSH1", "value": "0x20"}, "812": {"op": "ADD"}, "813": {"op": "PUSH1", "value": "0x0"}, "815": {"op": "DUP2"}, "816": {"op": "MSTORE"}, "817": {"op": "PUSH1", "value": "0x20"}, "819": {"op": "ADD"}, "820": {"op": "PUSH1", "value": "0x0"}, "822": {"op": "DUP2"}, "823": {"op": "MSTORE"}, "824": {"op": "PUSH1", "value": "0x20"}, "826": {"op": "ADD"}, "827": {"op": "PUSH1", "value": "0x0"}, "829": {"op": "DUP2"}, "830": {"op": "MSTORE"}, "831": {"op": "POP"}, "832": {"op": "SWAP1"}, "833": {"op": "JUMP"}, "834": {"fn": "SourceDomainSideBridge.transfer", "offset": [3034, 3066], "op": "JUMPDEST", "path": "1"}, "835": {"op": "PUSH1", "value": "0x1"}, "837": {"op": "PUSH1", "value": "0x1"}, "839": {"op": "PUSH1", "value": "0xA0"}, "841": {"op": "SHL"}, "842": {"op": "SUB"}, "843": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "DUP1", "path": "1", "statement": 3}, "844": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "DUP10", "path": "1"}, "845": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "AND", "path": "1"}, "846": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "DUP3", "path": "1"}, "847": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "MSTORE", "path": "1"}, "848": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3166], "op": "DUP8", "path": "1", "statement": 4}, "849": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3166], "op": "AND", "path": "1"}, "850": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3151], "op": "PUSH1", "path": "1", "value": "0x20"}, "852": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3151], "op": "DUP3", "path": "1"}, "853": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3151], "op": "ADD", "path": "1"}, "854": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3166], "op": "MSTORE", "path": "1"}, "855": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3195], "op": "PUSH1", "path": "1", "statement": 5, "value": "0x40"}, "857": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3195], "op": "DUP2", "path": "1"}, "858": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3195], "op": "ADD", "path": "1"}, "859": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3205], "op": "DUP7", "path": "1"}, "860": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3205], "op": "SWAP1", "path": "1"}, "861": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3205], "op": "MSTORE", "path": "1"}, "862": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3231], "op": "PUSH1", "path": "1", "statement": 6, "value": "0x60"}, "864": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3231], "op": "DUP2", "path": "1"}, "865": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3231], "op": "ADD", "path": "1"}, "866": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3237], "op": "DUP4", "path": "1"}, "867": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3237], "op": "SWAP1", "path": "1"}, "868": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3237], "op": "MSTORE", "path": "1"}, "869": {"fn": "SourceDomainSideBridge.transfer", "offset": [3272, 3284], "op": "NUMBER", "path": "1", "statement": 7}, "870": {"fn": "SourceDomainSideBridge.transfer", "offset": [3247, 3269], "op": "PUSH1", "path": "1", "value": "0x80"}, "872": {"fn": "SourceDomainSideBridge.transfer", "offset": [3247, 3269], "op": "DUP3", "path": "1"}, "873": {"fn": "SourceDomainSideBridge.transfer", "offset": [3247, 3269], "op": "ADD", "path": "1"}, "874": {"fn": "SourceDomainSideBridge.transfer", "offset": [3247, 3284], "op": "MSTORE", "path": "1"}, "875": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3316], "op": "PUSH1", "path": "1", "statement": 8, "value": "0xA0"}, "877": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3316], "op": "DUP2", "path": "1"}, "878": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3316], "op": "ADD", "path": "1"}, "879": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3329], "op": "DUP6", "path": "1"}, "880": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3329], "op": "SWAP1", "path": "1"}, "881": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3329], "op": "MSTORE", "path": "1"}, "882": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "PUSH1", "path": "1", "statement": 9, "value": "0x5"}, "884": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "DUP1", "path": "1"}, "885": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "SLOAD", "path": "1"}, "886": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3357], "op": "PUSH1", "path": "1", "value": "0xC0"}, "888": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3357], "op": "DUP4", "path": "1"}, "889": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3357], "op": "ADD", "path": "1"}, "890": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3372], "op": "DUP2", "path": "1"}, "891": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3372], "op": "SWAP1", "path": "1"}, "892": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3372], "op": "MSTORE", "path": "1"}, "893": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "SWAP1", "path": "1"}, "894": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3101], "op": "PUSH1", "path": "1", "value": "0x0"}, "896": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "PUSH2", "path": "1", "statement": 10, "value": "0x388"}, "899": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "DUP4", "path": "1"}, "900": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "PUSH2", "path": "1", "value": "0xC73"}, "903": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3383, 3397], "op": "JUMP", "path": "1"}, "904": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "JUMPDEST", "path": "1"}, "905": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "SWAP2", "path": "1"}, "906": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "SWAP1", "path": "1"}, "907": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "POP", "path": "1"}, "908": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "SSTORE", "path": "1"}, "909": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "POP", "path": "1"}, "910": {"fn": "SourceDomainSideBridge.transfer", "offset": [3408, 3432], "op": "PUSH1", "path": "1", "value": "0x0"}, "912": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x2"}, "914": {"fn": "SourceDomainSideBridge.transfer", "offset": [3453, 3465], "op": "DUP3", "path": "1"}, "915": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH1", "path": "1", "value": "0x40"}, "917": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "MLOAD", "path": "1"}, "918": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH1", "path": "1", "value": "0x20"}, "920": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "ADD", "path": "1"}, "921": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH2", "path": "1", "value": "0x3A2"}, "924": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SWAP2", "path": "1"}, "925": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SWAP1", "path": "1"}, "926": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH2", "path": "1", "value": "0xC8C"}, "929": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3442, 3466], "op": "JUMP", "path": "1"}, "930": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "JUMPDEST", "path": "1"}, "931": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH1", "path": "1", "value": "0x40"}, "933": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP1", "path": "1"}, "934": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "MLOAD", "path": "1"}, "935": {"op": "PUSH1", "value": "0x1F"}, "937": {"op": "NOT"}, "938": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP2", "path": "1"}, "939": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP5", "path": "1"}, "940": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SUB", "path": "1"}, "941": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "ADD", "path": "1"}, "942": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP2", "path": "1"}, "943": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "MSTORE", "path": "1"}, "944": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SWAP1", "path": "1"}, "945": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP3", "path": "1"}, "946": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SWAP1", "path": "1"}, "947": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "MSTORE", "path": "1"}, "948": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "1", "value": "0x3BC"}, "951": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SWAP2", "path": "1"}, "952": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "1", "value": "0xCE3"}, "955": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3435, 3467], "op": "JUMP", "path": "1"}, "956": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "JUMPDEST", "path": "1"}, "957": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x20"}, "959": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x40"}, "961": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "MLOAD", "path": "1"}, "962": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP1", "path": "1"}, "963": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP4", "path": "1"}, "964": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SUB", "path": "1"}, "965": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP2", "path": "1"}, "966": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP6", "path": "1"}, "967": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "GAS", "path": "1"}, "968": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "STATICCALL", "path": "1"}, "969": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ISZERO", "path": "1"}, "970": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP1", "path": "1"}, "971": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ISZERO", "path": "1"}, "972": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "1", "value": "0x3D9"}, "975": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "JUMPI", "path": "1"}, "976": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "RETURNDATASIZE", "path": "1"}, "977": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x0"}, "979": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP1", "path": "1"}, "980": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "RETURNDATACOPY", "path": "1"}, "981": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "RETURNDATASIZE", "path": "1"}, "982": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x0"}, "984": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "REVERT", "path": "1"}, "985": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "JUMPDEST", "path": "1"}, "986": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "POP", "path": "1"}, "987": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "POP", "path": "1"}, "988": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "POP", "path": "1"}, "989": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x40"}, "991": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "MLOAD", "path": "1"}, "992": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "RETURNDATASIZE", "path": "1"}, "993": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x1F"}, "995": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "NOT", "path": "1"}, "996": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x1F"}, "998": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP3", "path": "1"}, "999": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ADD", "path": "1"}, "1000": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "AND", "path": "1"}, "1001": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP3", "path": "1"}, "1002": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ADD", "path": "1"}, "1003": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP1", "path": "1"}, "1004": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "1", "value": "0x40"}, "1006": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "MSTORE", "path": "1"}, "1007": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "POP", "path": "1"}, "1008": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP2", "path": "1"}, "1009": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ADD", "path": "1"}, "1010": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SWAP1", "path": "1"}, "1011": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "1", "value": "0x3FC"}, "1014": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SWAP2", "path": "1"}, "1015": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SWAP1", "path": "1"}, "1016": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "1", "value": "0xD1E"}, "1019": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3435, 3467], "op": "JUMP", "path": "1"}, "1020": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "JUMPDEST", "path": "1"}, "1021": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3505], "op": "PUSH1", "path": "1", "statement": 11, "value": "0x0"}, "1023": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "DUP2", "path": "1"}, "1024": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "DUP2", "path": "1"}, "1025": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "MSTORE", "path": "1"}, "1026": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "PUSH1", "path": "1", "value": "0x20"}, "1028": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "DUP2", "path": "1"}, "1029": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "SWAP1", "path": "1"}, "1030": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "MSTORE", "path": "1"}, "1031": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "PUSH1", "path": "1", "value": "0x40"}, "1033": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "SWAP1", "path": "1"}, "1034": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "DUP2", "path": "1"}, "1035": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "SWAP1", "path": "1"}, "1036": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "KECCAK256", "path": "1"}, "1037": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "DUP1", "path": "1"}, "1038": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "SLOAD", "path": "1"}, "1039": {"op": "PUSH1", "value": "0xFF"}, "1041": {"op": "NOT"}, "1042": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "AND", "path": "1"}, "1043": {"fn": "SourceDomainSideBridge.transfer", "offset": [3526, 3530], "op": "PUSH1", "path": "1", "value": "0x1"}, "1045": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "OR", "path": "1"}, "1046": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "SWAP1", "path": "1"}, "1047": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "SSTORE", "path": "1"}, "1048": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "MLOAD", "path": "1", "statement": 12}, "1049": {"fn": "SourceDomainSideBridge.transfer", "offset": [3408, 3467], "op": "SWAP1", "path": "1"}, "1050": {"fn": "SourceDomainSideBridge.transfer", "offset": [3408, 3467], "op": "SWAP2", "path": "1"}, "1051": {"op": "POP"}, "1052": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "PUSH32", "path": "1", "value": "0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89"}, "1085": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SWAP1", "path": "1"}, "1086": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "PUSH2", "path": "1", "value": "0x448"}, "1089": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SWAP1", "path": "1"}, "1090": {"fn": "SourceDomainSideBridge.transfer", "offset": [3558, 3570], "op": "DUP5", "path": "1"}, "1091": {"fn": "SourceDomainSideBridge.transfer", "offset": [3558, 3570], "op": "SWAP1", "path": "1"}, "1092": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "PUSH2", "path": "1", "value": "0xC8C"}, "1095": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3546, 3571], "op": "JUMP", "path": "1"}, "1096": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "JUMPDEST", "path": "1"}, "1097": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "PUSH1", "path": "1", "value": "0x40"}, "1099": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "MLOAD", "path": "1"}, "1100": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "DUP1", "path": "1"}, "1101": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SWAP2", "path": "1"}, "1102": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SUB", "path": "1"}, "1103": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SWAP1", "path": "1"}, "1104": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "LOG1", "path": "1"}, "1105": {"fn": "SourceDomainSideBridge.transfer", "offset": [3597, 3613], "op": "SWAP9", "path": "1", "statement": 13}, "1106": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "SWAP8", "path": "1"}, "1107": {"op": "POP"}, "1108": {"op": "POP"}, "1109": {"op": "POP"}, "1110": {"op": "POP"}, "1111": {"op": "POP"}, "1112": {"op": "POP"}, "1113": {"op": "POP"}, "1114": {"op": "POP"}, "1115": {"fn": "SourceDomainSideBridge.transfer", "jump": "o", "offset": [2388, 3620], "op": "JUMP", "path": "1"}, "1116": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5438, 5580], "op": "JUMPDEST", "path": "1"}, "1117": {"offset": [1652, 1677], "op": "PUSH1", "path": "1", "value": "0x3"}, "1119": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1652, 1677], "op": "SLOAD", "path": "1"}, "1120": {"op": "PUSH1", "value": "0x1"}, "1122": {"op": "PUSH1", "value": "0x1"}, "1124": {"op": "PUSH1", "value": "0xA0"}, "1126": {"op": "SHL"}, "1127": {"op": "SUB"}, "1128": {"offset": [1652, 1677], "op": "AND", "path": "1"}, "1129": {"offset": [1709, 1719], "op": "CALLER", "path": "1"}, "1130": {"offset": [1709, 1757], "op": "DUP2", "path": "1"}, "1131": {"branch": 26, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1709, 1757], "op": "EQ", "path": "1"}, "1132": {"offset": [1709, 1832], "op": "DUP1", "path": "1"}, "1133": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1709, 1832], "op": "ISZERO", "path": "1"}, "1134": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1709, 1832], "op": "PUSH2", "path": "1", "value": "0x4FE"}, "1137": {"branch": 26, "offset": [1709, 1832], "op": "JUMPI", "path": "1"}, "1138": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1709, 1832], "op": "POP", "path": "1"}, "1139": {"offset": [1805, 1832], "op": "PUSH1", "path": "1", "value": "0x4"}, "1141": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "PUSH1", "path": "1", "value": "0x0"}, "1143": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "SWAP1", "path": "1"}, "1144": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "SLOAD", "path": "1"}, "1145": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "SWAP1", "path": "1"}, "1146": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "PUSH2", "path": "1", "value": "0x100"}, "1149": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "EXP", "path": "1"}, "1150": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "SWAP1", "path": "1"}, "1151": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "DIV", "path": "1"}, "1152": {"op": "PUSH1", "value": "0x1"}, "1154": {"op": "PUSH1", "value": "0x1"}, "1156": {"op": "PUSH1", "value": "0xA0"}, "1158": {"op": "SHL"}, "1159": {"op": "SUB"}, "1160": {"offset": [1805, 1832], "op": "AND", "path": "1"}, "1161": {"op": "PUSH1", "value": "0x1"}, "1163": {"op": "PUSH1", "value": "0x1"}, "1165": {"op": "PUSH1", "value": "0xA0"}, "1167": {"op": "SHL"}, "1168": {"op": "SUB"}, "1169": {"offset": [1773, 1832], "op": "AND", "path": "1"}, "1170": {"offset": [1773, 1778], "op": "DUP2", "path": "1"}, "1171": {"op": "PUSH1", "value": "0x1"}, "1173": {"op": "PUSH1", "value": "0x1"}, "1175": {"op": "PUSH1", "value": "0xA0"}, "1177": {"op": "SHL"}, "1178": {"op": "SUB"}, "1179": {"offset": [1773, 1799], "op": "AND", "path": "1"}, "1180": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1799], "op": "PUSH4", "path": "1", "value": "0x6E296E45"}, "1185": {"offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x40"}, "1187": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MLOAD", "path": "1"}, "1188": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP2", "path": "1"}, "1189": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH4", "path": "1", "value": "0xFFFFFFFF"}, "1194": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "AND", "path": "1"}, "1195": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0xE0"}, "1197": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SHL", "path": "1"}, "1198": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP2", "path": "1"}, "1199": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MSTORE", "path": "1"}, "1200": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x4"}, "1202": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ADD", "path": "1"}, "1203": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x20"}, "1205": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x40"}, "1207": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MLOAD", "path": "1"}, "1208": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP1", "path": "1"}, "1209": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP4", "path": "1"}, "1210": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SUB", "path": "1"}, "1211": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP2", "path": "1"}, "1212": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP7", "path": "1"}, "1213": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "GAS", "path": "1"}, "1214": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "STATICCALL", "path": "1"}, "1215": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ISZERO", "path": "1"}, "1216": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP1", "path": "1"}, "1217": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ISZERO", "path": "1"}, "1218": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH2", "path": "1", "value": "0x4CF"}, "1221": {"offset": [1773, 1801], "op": "JUMPI", "path": "1"}, "1222": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "RETURNDATASIZE", "path": "1"}, "1223": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x0"}, "1225": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP1", "path": "1"}, "1226": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "RETURNDATACOPY", "path": "1"}, "1227": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "RETURNDATASIZE", "path": "1"}, "1228": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x0"}, "1230": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "REVERT", "path": "1"}, "1231": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "JUMPDEST", "path": "1"}, "1232": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "1"}, "1233": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "1"}, "1234": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "1"}, "1235": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "1"}, "1236": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x40"}, "1238": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MLOAD", "path": "1"}, "1239": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "RETURNDATASIZE", "path": "1"}, "1240": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1242": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "NOT", "path": "1"}, "1243": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1245": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP3", "path": "1"}, "1246": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ADD", "path": "1"}, "1247": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "AND", "path": "1"}, "1248": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP3", "path": "1"}, "1249": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ADD", "path": "1"}, "1250": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP1", "path": "1"}, "1251": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "1", "value": "0x40"}, "1253": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MSTORE", "path": "1"}, "1254": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "1"}, "1255": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP2", "path": "1"}, "1256": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ADD", "path": "1"}, "1257": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SWAP1", "path": "1"}, "1258": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH2", "path": "1", "value": "0x4F3"}, "1261": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SWAP2", "path": "1"}, "1262": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SWAP1", "path": "1"}, "1263": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH2", "path": "1", "value": "0xD37"}, "1266": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [1773, 1801], "op": "JUMP", "path": "1"}, "1267": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "JUMPDEST", "path": "1"}, "1268": {"op": "PUSH1", "value": "0x1"}, "1270": {"op": "PUSH1", "value": "0x1"}, "1272": {"op": "PUSH1", "value": "0xA0"}, "1274": {"op": "SHL"}, "1275": {"op": "SUB"}, "1276": {"offset": [1773, 1832], "op": "AND", "path": "1"}, "1277": {"branch": 27, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1832], "op": "EQ", "path": "1"}, "1278": {"offset": [1709, 1832], "op": "JUMPDEST", "path": "1"}, "1279": {"offset": [1688, 1842], "op": "PUSH2", "path": "1", "value": "0x507"}, "1282": {"branch": 27, "offset": [1688, 1842], "op": "JUMPI", "path": "1"}, "1283": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1688, 1842], "op": "PUSH1", "path": "1", "value": "0x0"}, "1285": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1688, 1842], "op": "DUP1", "path": "1"}, "1286": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1688, 1842], "op": "REVERT", "path": "1"}, "1287": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1688, 1842], "op": "JUMPDEST", "path": "1"}, "1288": {"op": "POP"}, "1289": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "PUSH1", "path": "1", "statement": 14, "value": "0x0"}, "1291": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "SWAP1", "path": "1"}, "1292": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "DUP2", "path": "1"}, "1293": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "MSTORE", "path": "1"}, "1294": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5569, 5573], "op": "PUSH1", "path": "1", "value": "0x1"}, "1296": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "PUSH1", "path": "1", "value": "0x20"}, "1298": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "DUP2", "path": "1"}, "1299": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "SWAP1", "path": "1"}, "1300": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "MSTORE", "path": "1"}, "1301": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "PUSH1", "path": "1", "value": "0x40"}, "1303": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "SWAP1", "path": "1"}, "1304": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "SWAP2", "path": "1"}, "1305": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5566], "op": "KECCAK256", "path": "1"}, "1306": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5573], "op": "DUP1", "path": "1"}, "1307": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5573], "op": "SLOAD", "path": "1"}, "1308": {"op": "PUSH1", "value": "0xFF"}, "1310": {"op": "NOT"}, "1311": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5573], "op": "AND", "path": "1"}, "1312": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5573], "op": "SWAP1", "path": "1"}, "1313": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5573], "op": "SWAP2", "path": "1"}, "1314": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5573], "op": "OR", "path": "1"}, "1315": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5573], "op": "SWAP1", "path": "1"}, "1316": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5530, 5573], "op": "SSTORE", "path": "1"}, "1317": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "o", "offset": [5438, 5580], "op": "JUMP", "path": "1"}, "1318": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "JUMPDEST", "path": "1"}, "1319": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3840, 3875], "op": "PUSH1", "path": "1", "value": "0x0"}, "1321": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3878, 3927], "op": "PUSH2", "path": "1", "value": "0x531"}, "1324": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3915, 3926], "op": "DUP4", "path": "1"}, "1325": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3878, 3914], "op": "PUSH2", "path": "1", "value": "0x814"}, "1328": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3878, 3927], "op": "JUMP", "path": "1"}, "1329": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3878, 3927], "op": "JUMPDEST", "path": "1"}, "1330": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "PUSH1", "path": "1", "statement": 15, "value": "0x0"}, "1332": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "DUP2", "path": "1"}, "1333": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "DUP2", "path": "1"}, "1334": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "MSTORE", "path": "1"}, "1335": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3960], "op": "PUSH1", "path": "1", "value": "0x1"}, "1337": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "PUSH1", "path": "1", "value": "0x20"}, "1339": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "MSTORE", "path": "1"}, "1340": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "PUSH1", "path": "1", "value": "0x40"}, "1342": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "SWAP1", "path": "1"}, "1343": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "KECCAK256", "path": "1"}, "1344": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "SLOAD", "path": "1"}, "1345": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3840, 3927], "op": "SWAP1", "path": "1"}, "1346": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3840, 3927], "op": "SWAP2", "path": "1"}, "1347": {"op": "POP"}, "1348": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "PUSH1", "path": "1", "value": "0xFF"}, "1350": {"branch": 28, "fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3989], "op": "AND", "path": "1"}, "1351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "PUSH2", "path": "1", "value": "0x592"}, "1354": {"branch": 28, "fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "JUMPI", "path": "1"}, "1355": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "PUSH1", "path": "1", "value": "0x40"}, "1357": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "MLOAD", "path": "1"}, "1358": {"op": "PUSH3", "value": "0x461BCD"}, "1362": {"op": "PUSH1", "value": "0xE5"}, "1364": {"op": "SHL"}, "1365": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "DUP2", "path": "1"}, "1366": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "MSTORE", "path": "1"}, "1367": {"op": "PUSH1", "value": "0x20"}, "1369": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "PUSH1", "path": "1", "value": "0x4"}, "1371": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "DUP3", "path": "1"}, "1372": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "ADD", "path": "1"}, "1373": {"op": "MSTORE"}, "1374": {"op": "PUSH1", "value": "0x19"}, "1376": {"op": "PUSH1", "value": "0x24"}, "1378": {"op": "DUP3"}, "1379": {"op": "ADD"}, "1380": {"op": "MSTORE"}, "1381": {"op": "PUSH32", "value": "0x496E76616C6964652052657761726444617461206C6973742E00000000000000"}, "1414": {"op": "PUSH1", "value": "0x44"}, "1416": {"op": "DUP3"}, "1417": {"op": "ADD"}, "1418": {"op": "MSTORE"}, "1419": {"op": "PUSH1", "value": "0x64"}, "1421": {"op": "ADD"}, "1422": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "PUSH2", "path": "1", "value": "0x1D2"}, "1425": {"op": "JUMP"}, "1426": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3937, 4019], "op": "JUMPDEST", "path": "1"}, "1427": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4029, 4053], "op": "PUSH1", "path": "1", "statement": 16, "value": "0x2"}, "1429": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4029, 4083], "op": "DUP2", "path": "1"}, "1430": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4029, 4083], "op": "SWAP1", "path": "1"}, "1431": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4029, 4083], "op": "SSTORE", "path": "1"}, "1432": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4097, 4103], "op": "PUSH1", "path": "1", "value": "0x0"}, "1434": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4093, 4808], "op": "JUMPDEST", "path": "1"}, "1435": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4113, 4124], "op": "DUP4", "path": "1"}, "1436": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4113, 4131], "op": "MLOAD", "path": "1"}, "1437": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4109, 4110], "op": "DUP2", "path": "1"}, "1438": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4109, 4131], "op": "LT", "path": "1"}, "1439": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4093, 4808], "op": "ISZERO", "path": "1"}, "1440": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4093, 4808], "op": "PUSH2", "path": "1", "value": "0x80E"}, "1443": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4093, 4808], "op": "JUMPI", "path": "1"}, "1444": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4174], "op": "PUSH1", "path": "1", "value": "0x0"}, "1446": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "DUP1", "path": "1"}, "1447": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4186], "op": "DUP6", "path": "1"}, "1448": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4187, 4188], "op": "DUP4", "path": "1"}, "1449": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "DUP2", "path": "1"}, "1450": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "MLOAD", "path": "1"}, "1451": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "DUP2", "path": "1"}, "1452": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "LT", "path": "1"}, "1453": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "PUSH2", "path": "1", "value": "0x5B8"}, "1456": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "JUMPI", "path": "1"}, "1457": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "PUSH2", "path": "1", "value": "0x5B8"}, "1460": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "PUSH2", "path": "1", "value": "0xD54"}, "1463": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4175, 4189], "op": "JUMP", "path": "1"}, "1464": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "JUMPDEST", "path": "1"}, "1465": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "PUSH1", "path": "1", "value": "0x20"}, "1467": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "SWAP1", "path": "1"}, "1468": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "DUP2", "path": "1"}, "1469": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "MUL", "path": "1"}, "1470": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "SWAP2", "path": "1"}, "1471": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "SWAP1", "path": "1"}, "1472": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "SWAP2", "path": "1"}, "1473": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "ADD", "path": "1"}, "1474": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "DUP2", "path": "1"}, "1475": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "ADD", "path": "1"}, "1476": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4189], "op": "MLOAD", "path": "1"}, "1477": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4206], "op": "MLOAD", "path": "1"}, "1478": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "DUP3", "path": "1"}, "1479": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "MSTORE", "path": "1"}, "1480": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "DUP2", "path": "1"}, "1481": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "ADD", "path": "1"}, "1482": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "SWAP2", "path": "1"}, "1483": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "SWAP1", "path": "1"}, "1484": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "SWAP2", "path": "1"}, "1485": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "MSTORE", "path": "1"}, "1486": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "PUSH1", "path": "1", "value": "0x40"}, "1488": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "ADD", "path": "1"}, "1489": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4175, 4206], "op": "PUSH1", "path": "1", "value": "0x0"}, "1491": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "KECCAK256", "path": "1"}, "1492": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "SLOAD", "path": "1"}, "1493": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "PUSH1", "path": "1", "value": "0xFF"}, "1495": {"branch": 29, "fn": "SourceDomainSideBridge.processClaims", "offset": [4155, 4207], "op": "AND", "path": "1"}, "1496": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4152, 4798], "op": "ISZERO", "path": "1"}, "1497": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4152, 4798], "op": "PUSH2", "path": "1", "value": "0x7FC"}, "1500": {"branch": 29, "fn": "SourceDomainSideBridge.processClaims", "offset": [4152, 4798], "op": "JUMPI", "path": "1"}, "1501": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4226, 4238], "op": "PUSH1", "path": "1", "value": "0x0"}, "1503": {"offset": [446, 488], "op": "DUP1", "path": "1"}, "1504": {"op": "PUSH1", "value": "0x1"}, "1506": {"op": "PUSH1", "value": "0x1"}, "1508": {"op": "PUSH1", "value": "0xA0"}, "1510": {"op": "SHL"}, "1511": {"op": "SUB"}, "1512": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4303], "op": "AND", "path": "1"}, "1513": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4270], "op": "DUP6", "path": "1"}, "1514": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4271, 4272], "op": "DUP4", "path": "1"}, "1515": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "DUP2", "path": "1"}, "1516": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "MLOAD", "path": "1"}, "1517": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "DUP2", "path": "1"}, "1518": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "LT", "path": "1"}, "1519": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "PUSH2", "path": "1", "value": "0x5FA"}, "1522": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "JUMPI", "path": "1"}, "1523": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "PUSH2", "path": "1", "value": "0x5FA"}, "1526": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "PUSH2", "path": "1", "value": "0xD54"}, "1529": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4259, 4273], "op": "JUMP", "path": "1"}, "1530": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "JUMPDEST", "path": "1"}, "1531": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "PUSH1", "path": "1", "value": "0x20"}, "1533": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "MUL", "path": "1"}, "1534": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "PUSH1", "path": "1", "value": "0x20"}, "1536": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "ADD", "path": "1"}, "1537": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "ADD", "path": "1"}, "1538": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4273], "op": "MLOAD", "path": "1"}, "1539": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4286], "op": "PUSH1", "path": "1", "value": "0x20"}, "1541": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4286], "op": "ADD", "path": "1"}, "1542": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4286], "op": "MLOAD", "path": "1"}, "1543": {"op": "PUSH1", "value": "0x1"}, "1545": {"op": "PUSH1", "value": "0x1"}, "1547": {"op": "PUSH1", "value": "0xA0"}, "1549": {"op": "SHL"}, "1550": {"op": "SUB"}, "1551": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4303], "op": "AND", "path": "1"}, "1552": {"branch": 30, "fn": "SourceDomainSideBridge.processClaims", "offset": [4259, 4303], "op": "SUB", "path": "1"}, "1553": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4256, 4709], "op": "PUSH2", "path": "1", "value": "0x6AC"}, "1556": {"branch": 30, "fn": "SourceDomainSideBridge.processClaims", "offset": [4256, 4709], "op": "JUMPI", "path": "1"}, "1557": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4327, 4335], "op": "PUSH1", "path": "1", "value": "0x0"}, "1559": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4360], "op": "DUP6", "path": "1"}, "1560": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4361, 4362], "op": "DUP4", "path": "1"}, "1561": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "DUP2", "path": "1"}, "1562": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "MLOAD", "path": "1"}, "1563": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "DUP2", "path": "1"}, "1564": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "LT", "path": "1"}, "1565": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "PUSH2", "path": "1", "value": "0x628"}, "1568": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "JUMPI", "path": "1"}, "1569": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "PUSH2", "path": "1", "value": "0x628"}, "1572": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "PUSH2", "path": "1", "value": "0xD54"}, "1575": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4349, 4363], "op": "JUMP", "path": "1"}, "1576": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "JUMPDEST", "path": "1"}, "1577": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "PUSH1", "path": "1", "value": "0x20"}, "1579": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "MUL", "path": "1"}, "1580": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "PUSH1", "path": "1", "value": "0x20"}, "1582": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "ADD", "path": "1"}, "1583": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "ADD", "path": "1"}, "1584": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4363], "op": "MLOAD", "path": "1"}, "1585": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4371], "op": "PUSH1", "path": "1", "value": "0x40"}, "1587": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4371], "op": "ADD", "path": "1"}, "1588": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4349, 4371], "op": "MLOAD", "path": "1"}, "1589": {"op": "PUSH1", "value": "0x1"}, "1591": {"op": "PUSH1", "value": "0x1"}, "1593": {"op": "PUSH1", "value": "0xA0"}, "1595": {"op": "SHL"}, "1596": {"op": "SUB"}, "1597": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4377], "op": "AND", "path": "1"}, "1598": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4396], "op": "DUP7", "path": "1"}, "1599": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4397, 4398], "op": "DUP5", "path": "1"}, "1600": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "DUP2", "path": "1"}, "1601": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "MLOAD", "path": "1"}, "1602": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "DUP2", "path": "1"}, "1603": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "LT", "path": "1"}, "1604": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "PUSH2", "path": "1", "value": "0x64F"}, "1607": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "JUMPI", "path": "1"}, "1608": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "PUSH2", "path": "1", "value": "0x64F"}, "1611": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "PUSH2", "path": "1", "value": "0xD54"}, "1614": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4385, 4399], "op": "JUMP", "path": "1"}, "1615": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "JUMPDEST", "path": "1"}, "1616": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "PUSH1", "path": "1", "value": "0x20"}, "1618": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "MUL", "path": "1"}, "1619": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "PUSH1", "path": "1", "value": "0x20"}, "1621": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "ADD", "path": "1"}, "1622": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "ADD", "path": "1"}, "1623": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4399], "op": "MLOAD", "path": "1"}, "1624": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4403], "op": "PUSH1", "path": "1", "value": "0x60"}, "1626": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4403], "op": "ADD", "path": "1"}, "1627": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4385, 4403], "op": "MLOAD", "path": "1"}, "1628": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x40"}, "1630": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "MLOAD", "path": "1"}, "1631": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x0"}, "1633": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x40"}, "1635": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "MLOAD", "path": "1"}, "1636": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP1", "path": "1"}, "1637": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP4", "path": "1"}, "1638": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "SUB", "path": "1"}, "1639": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP2", "path": "1"}, "1640": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP6", "path": "1"}, "1641": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP8", "path": "1"}, "1642": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "GAS", "path": "1"}, "1643": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "CALL", "path": "1"}, "1644": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "SWAP3", "path": "1"}, "1645": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "POP", "path": "1"}, "1646": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "POP", "path": "1"}, "1647": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "POP", "path": "1"}, "1648": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "RETURNDATASIZE", "path": "1"}, "1649": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP1", "path": "1"}, "1650": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x0"}, "1652": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP2", "path": "1"}, "1653": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "EQ", "path": "1"}, "1654": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH2", "path": "1", "value": "0x69B"}, "1657": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "JUMPI", "path": "1"}, "1658": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x40"}, "1660": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "MLOAD", "path": "1"}, "1661": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "SWAP2", "path": "1"}, "1662": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "POP", "path": "1"}, "1663": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1665": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "NOT", "path": "1"}, "1666": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x3F"}, "1668": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "RETURNDATASIZE", "path": "1"}, "1669": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "ADD", "path": "1"}, "1670": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "AND", "path": "1"}, "1671": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP3", "path": "1"}, "1672": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "ADD", "path": "1"}, "1673": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x40"}, "1675": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "MSTORE", "path": "1"}, "1676": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "RETURNDATASIZE", "path": "1"}, "1677": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP3", "path": "1"}, "1678": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "MSTORE", "path": "1"}, "1679": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "RETURNDATASIZE", "path": "1"}, "1680": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x0"}, "1682": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x20"}, "1684": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "DUP5", "path": "1"}, "1685": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "ADD", "path": "1"}, "1686": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "RETURNDATACOPY", "path": "1"}, "1687": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH2", "path": "1", "value": "0x6A0"}, "1690": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "JUMP", "path": "1"}, "1691": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "JUMPDEST", "path": "1"}, "1692": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "PUSH1", "path": "1", "value": "0x60"}, "1694": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "SWAP2", "path": "1"}, "1695": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "POP", "path": "1"}, "1696": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4341, 4408], "op": "JUMPDEST", "path": "1"}, "1697": {"op": "POP"}, "1698": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4326, 4408], "op": "SWAP1", "path": "1"}, "1699": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4326, 4408], "op": "SWAP3", "path": "1"}, "1700": {"op": "POP"}, "1701": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4256, 4709], "op": "PUSH2", "path": "1", "value": "0x799"}, "1704": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4256, 4709], "op": "SWAP2", "path": "1"}, "1705": {"op": "POP"}, "1706": {"op": "POP"}, "1707": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4256, 4709], "op": "JUMP", "path": "1"}, "1708": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4256, 4709], "op": "JUMPDEST", "path": "1"}, "1709": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4488, 4499], "op": "PUSH1", "path": "1", "value": "0x0"}, "1711": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4519], "op": "DUP6", "path": "1"}, "1712": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4520, 4521], "op": "DUP4", "path": "1"}, "1713": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "DUP2", "path": "1"}, "1714": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "MLOAD", "path": "1"}, "1715": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "DUP2", "path": "1"}, "1716": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "LT", "path": "1"}, "1717": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "PUSH2", "path": "1", "value": "0x6C0"}, "1720": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "JUMPI", "path": "1"}, "1721": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "PUSH2", "path": "1", "value": "0x6C0"}, "1724": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "PUSH2", "path": "1", "value": "0xD54"}, "1727": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4508, 4522], "op": "JUMP", "path": "1"}, "1728": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "JUMPDEST", "path": "1"}, "1729": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "PUSH1", "path": "1", "value": "0x20"}, "1731": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "MUL", "path": "1"}, "1732": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "PUSH1", "path": "1", "value": "0x20"}, "1734": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "ADD", "path": "1"}, "1735": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "ADD", "path": "1"}, "1736": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4522], "op": "MLOAD", "path": "1"}, "1737": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4535], "op": "PUSH1", "path": "1", "value": "0x20"}, "1739": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4535], "op": "ADD", "path": "1"}, "1740": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4508, 4535], "op": "MLOAD", "path": "1"}, "1741": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4488, 4536], "op": "SWAP1", "path": "1"}, "1742": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4488, 4536], "op": "POP", "path": "1"}, "1743": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4594], "op": "DUP1", "path": "1", "statement": 17}, "1744": {"op": "PUSH1", "value": "0x1"}, "1746": {"op": "PUSH1", "value": "0x1"}, "1748": {"op": "PUSH1", "value": "0xA0"}, "1750": {"op": "SHL"}, "1751": {"op": "SUB"}, "1752": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4607], "op": "AND", "path": "1"}, "1753": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4607], "op": "PUSH4", "path": "1", "value": "0x23B872DD"}, "1758": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4616, 4620], "op": "ADDRESS", "path": "1"}, "1759": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4634], "op": "DUP9", "path": "1"}, "1760": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4635, 4636], "op": "DUP7", "path": "1"}, "1761": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "DUP2", "path": "1"}, "1762": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "MLOAD", "path": "1"}, "1763": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "DUP2", "path": "1"}, "1764": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "LT", "path": "1"}, "1765": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "PUSH2", "path": "1", "value": "0x6F0"}, "1768": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "JUMPI", "path": "1"}, "1769": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "PUSH2", "path": "1", "value": "0x6F0"}, "1772": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "PUSH2", "path": "1", "value": "0xD54"}, "1775": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4623, 4637], "op": "JUMP", "path": "1"}, "1776": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "JUMPDEST", "path": "1"}, "1777": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "PUSH1", "path": "1", "value": "0x20"}, "1779": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "MUL", "path": "1"}, "1780": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "PUSH1", "path": "1", "value": "0x20"}, "1782": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "ADD", "path": "1"}, "1783": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "ADD", "path": "1"}, "1784": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4637], "op": "MLOAD", "path": "1"}, "1785": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4645], "op": "PUSH1", "path": "1", "value": "0x40"}, "1787": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4645], "op": "ADD", "path": "1"}, "1788": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4623, 4645], "op": "MLOAD", "path": "1"}, "1789": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4682], "op": "DUP10", "path": "1"}, "1790": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4683, 4684], "op": "DUP8", "path": "1"}, "1791": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "DUP2", "path": "1"}, "1792": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "MLOAD", "path": "1"}, "1793": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "DUP2", "path": "1"}, "1794": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "LT", "path": "1"}, "1795": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "PUSH2", "path": "1", "value": "0x70E"}, "1798": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "JUMPI", "path": "1"}, "1799": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "PUSH2", "path": "1", "value": "0x70E"}, "1802": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "PUSH2", "path": "1", "value": "0xD54"}, "1805": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4671, 4685], "op": "JUMP", "path": "1"}, "1806": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "JUMPDEST", "path": "1"}, "1807": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "PUSH1", "path": "1", "value": "0x20"}, "1809": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "SWAP1", "path": "1"}, "1810": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "DUP2", "path": "1"}, "1811": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "MUL", "path": "1"}, "1812": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "SWAP2", "path": "1"}, "1813": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "SWAP1", "path": "1"}, "1814": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "SWAP2", "path": "1"}, "1815": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "ADD", "path": "1"}, "1816": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "ADD", "path": "1"}, "1817": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4685], "op": "MLOAD", "path": "1"}, "1818": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4689], "op": "PUSH1", "path": "1", "value": "0x60"}, "1820": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4689], "op": "ADD", "path": "1"}, "1821": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4671, 4689], "op": "MLOAD", "path": "1"}, "1822": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x40"}, "1824": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "MLOAD", "path": "1"}, "1825": {"op": "PUSH1", "value": "0x1"}, "1827": {"op": "PUSH1", "value": "0x1"}, "1829": {"op": "PUSH1", "value": "0xE0"}, "1831": {"op": "SHL"}, "1832": {"op": "SUB"}, "1833": {"op": "NOT"}, "1834": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0xE0"}, "1836": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP7", "path": "1"}, "1837": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "SWAP1", "path": "1"}, "1838": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "SHL", "path": "1"}, "1839": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "AND", "path": "1"}, "1840": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP2", "path": "1"}, "1841": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "MSTORE", "path": "1"}, "1842": {"op": "PUSH1", "value": "0x1"}, "1844": {"op": "PUSH1", "value": "0x1"}, "1846": {"op": "PUSH1", "value": "0xA0"}, "1848": {"op": "SHL"}, "1849": {"op": "SUB"}, "1850": {"op": "SWAP4"}, "1851": {"op": "DUP5"}, "1852": {"op": "AND"}, "1853": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x4"}, "1855": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP3", "path": "1"}, "1856": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "ADD", "path": "1"}, "1857": {"op": "MSTORE"}, "1858": {"op": "SWAP3"}, "1859": {"op": "SWAP1"}, "1860": {"op": "SWAP2"}, "1861": {"op": "AND"}, "1862": {"op": "PUSH1", "value": "0x24"}, "1864": {"op": "DUP4"}, "1865": {"op": "ADD"}, "1866": {"op": "MSTORE"}, "1867": {"op": "PUSH1", "value": "0x44"}, "1869": {"op": "DUP3"}, "1870": {"op": "ADD"}, "1871": {"op": "MSTORE"}, "1872": {"op": "PUSH1", "value": "0x64"}, "1874": {"op": "ADD"}, "1875": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x20"}, "1877": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x40"}, "1879": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "MLOAD", "path": "1"}, "1880": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP1", "path": "1"}, "1881": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP4", "path": "1"}, "1882": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "SUB", "path": "1"}, "1883": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP2", "path": "1"}, "1884": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x0"}, "1886": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP8", "path": "1"}, "1887": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "GAS", "path": "1"}, "1888": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "CALL", "path": "1"}, "1889": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "ISZERO", "path": "1"}, "1890": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP1", "path": "1"}, "1891": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "ISZERO", "path": "1"}, "1892": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH2", "path": "1", "value": "0x771"}, "1895": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "JUMPI", "path": "1"}, "1896": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "RETURNDATASIZE", "path": "1"}, "1897": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x0"}, "1899": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP1", "path": "1"}, "1900": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "RETURNDATACOPY", "path": "1"}, "1901": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "RETURNDATASIZE", "path": "1"}, "1902": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x0"}, "1904": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "REVERT", "path": "1"}, "1905": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "JUMPDEST", "path": "1"}, "1906": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "POP", "path": "1"}, "1907": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "POP", "path": "1"}, "1908": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "POP", "path": "1"}, "1909": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "POP", "path": "1"}, "1910": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x40"}, "1912": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "MLOAD", "path": "1"}, "1913": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "RETURNDATASIZE", "path": "1"}, "1914": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1916": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "NOT", "path": "1"}, "1917": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1919": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP3", "path": "1"}, "1920": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "ADD", "path": "1"}, "1921": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "AND", "path": "1"}, "1922": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP3", "path": "1"}, "1923": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "ADD", "path": "1"}, "1924": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP1", "path": "1"}, "1925": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH1", "path": "1", "value": "0x40"}, "1927": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "MSTORE", "path": "1"}, "1928": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "POP", "path": "1"}, "1929": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "DUP2", "path": "1"}, "1930": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "ADD", "path": "1"}, "1931": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "SWAP1", "path": "1"}, "1932": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH2", "path": "1", "value": "0x795"}, "1935": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "SWAP2", "path": "1"}, "1936": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "SWAP1", "path": "1"}, "1937": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "PUSH2", "path": "1", "value": "0xC4A"}, "1940": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4589, 4690], "op": "JUMP", "path": "1"}, "1941": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4589, 4690], "op": "JUMPDEST", "path": "1"}, "1942": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4579, 4690], "op": "SWAP2", "path": "1"}, "1943": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4579, 4690], "op": "POP", "path": "1"}, "1944": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4466, 4709], "op": "POP", "path": "1"}, "1945": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4256, 4709], "op": "JUMPDEST", "path": "1"}, "1946": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "PUSH32", "path": "1", "statement": 18, "value": "0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A"}, "1979": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4753], "op": "DUP6", "path": "1"}, "1980": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4754, 4755], "op": "DUP4", "path": "1"}, "1981": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "DUP2", "path": "1"}, "1982": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "MLOAD", "path": "1"}, "1983": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "DUP2", "path": "1"}, "1984": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "LT", "path": "1"}, "1985": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "PUSH2", "path": "1", "value": "0x7CC"}, "1988": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "JUMPI", "path": "1"}, "1989": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "PUSH2", "path": "1", "value": "0x7CC"}, "1992": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "PUSH2", "path": "1", "value": "0xD54"}, "1995": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4742, 4756], "op": "JUMP", "path": "1"}, "1996": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "JUMPDEST", "path": "1"}, "1997": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "PUSH1", "path": "1", "value": "0x20"}, "1999": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "MUL", "path": "1"}, "2000": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "PUSH1", "path": "1", "value": "0x20"}, "2002": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "ADD", "path": "1"}, "2003": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "ADD", "path": "1"}, "2004": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4756], "op": "MLOAD", "path": "1"}, "2005": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4773], "op": "PUSH1", "path": "1", "value": "0x0"}, "2007": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4773], "op": "ADD", "path": "1"}, "2008": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4742, 4773], "op": "MLOAD", "path": "1"}, "2009": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4775, 4782], "op": "DUP3", "path": "1"}, "2010": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "PUSH1", "path": "1", "value": "0x40"}, "2012": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "MLOAD", "path": "1"}, "2013": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "PUSH2", "path": "1", "value": "0x7F2"}, "2016": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "SWAP3", "path": "1"}, "2017": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "SWAP2", "path": "1"}, "2018": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "SWAP1", "path": "1"}, "2019": {"op": "SWAP2"}, "2020": {"op": "DUP3"}, "2021": {"op": "MSTORE"}, "2022": {"op": "ISZERO"}, "2023": {"op": "ISZERO"}, "2024": {"op": "PUSH1", "value": "0x20"}, "2026": {"op": "DUP3"}, "2027": {"op": "ADD"}, "2028": {"op": "MSTORE"}, "2029": {"op": "PUSH1", "value": "0x40"}, "2031": {"op": "ADD"}, "2032": {"op": "SWAP1"}, "2033": {"op": "JUMP"}, "2034": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "JUMPDEST", "path": "1"}, "2035": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "PUSH1", "path": "1", "value": "0x40"}, "2037": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "MLOAD", "path": "1"}, "2038": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "DUP1", "path": "1"}, "2039": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "SWAP2", "path": "1"}, "2040": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "SUB", "path": "1"}, "2041": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "SWAP1", "path": "1"}, "2042": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4731, 4783], "op": "LOG1", "path": "1"}, "2043": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4208, 4798], "op": "POP", "path": "1"}, "2044": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4152, 4798], "op": "JUMPDEST", "path": "1"}, "2045": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4133, 4136], "op": "DUP1", "path": "1", "statement": 19}, "2046": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4133, 4136], "op": "PUSH2", "path": "1", "value": "0x806"}, "2049": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4133, 4136], "op": "DUP2", "path": "1"}, "2050": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4133, 4136], "op": "PUSH2", "path": "1", "value": "0xC73"}, "2053": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4133, 4136], "op": "JUMP", "path": "1"}, "2054": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4133, 4136], "op": "JUMPDEST", "path": "1"}, "2055": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4133, 4136], "op": "SWAP2", "path": "1"}, "2056": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4133, 4136], "op": "POP", "path": "1"}, "2057": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4133, 4136], "op": "POP", "path": "1"}, "2058": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4093, 4808], "op": "PUSH2", "path": "1", "value": "0x59A"}, "2061": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4093, 4808], "op": "JUMP", "path": "1"}, "2062": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4093, 4808], "op": "JUMPDEST", "path": "1"}, "2063": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4093, 4808], "op": "POP", "path": "1"}, "2064": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3830, 4823], "op": "POP", "path": "1"}, "2065": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "POP", "path": "1"}, "2066": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4823], "op": "POP", "path": "1"}, "2067": {"fn": "SourceDomainSideBridge.processClaims", "jump": "o", "offset": [3720, 4823], "op": "JUMP", "path": "1"}, "2068": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4923, 5338], "op": "JUMPDEST", "path": "1"}, "2069": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5075, 5099], "op": "PUSH1", "path": "1", "value": "0x2"}, "2071": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5075, 5099], "op": "SLOAD", "path": "1"}, "2072": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5019, 5026], "op": "PUSH1", "path": "1", "value": "0x0"}, "2074": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5019, 5026], "op": "SWAP1", "path": "1"}, "2075": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5019, 5026], "op": "DUP2", "path": "1"}, "2076": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5109, 5288], "op": "JUMPDEST", "path": "1"}, "2077": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5129, 5140], "op": "DUP4", "path": "1"}, "2078": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5129, 5147], "op": "MLOAD", "path": "1"}, "2079": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5125, 5126], "op": "DUP2", "path": "1"}, "2080": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5125, 5147], "op": "LT", "path": "1"}, "2081": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5109, 5288], "op": "ISZERO", "path": "1"}, "2082": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5109, 5288], "op": "PUSH2", "path": "1", "value": "0x8F1"}, "2085": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5109, 5288], "op": "JUMPI", "path": "1"}, "2086": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "statement": 20, "value": "0x2"}, "2088": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5233, 5260], "op": "DUP3", "path": "1"}, "2089": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5272], "op": "DUP6", "path": "1"}, "2090": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5273, 5274], "op": "DUP4", "path": "1"}, "2091": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "DUP2", "path": "1"}, "2092": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "MLOAD", "path": "1"}, "2093": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "DUP2", "path": "1"}, "2094": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "LT", "path": "1"}, "2095": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "PUSH2", "path": "1", "value": "0x83A"}, "2098": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "JUMPI", "path": "1"}, "2099": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "PUSH2", "path": "1", "value": "0x83A"}, "2102": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "PUSH2", "path": "1", "value": "0xD54"}, "2105": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5261, 5275], "op": "JUMP", "path": "1"}, "2106": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "JUMPDEST", "path": "1"}, "2107": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "PUSH1", "path": "1", "value": "0x20"}, "2109": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "SWAP1", "path": "1"}, "2110": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "DUP2", "path": "1"}, "2111": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "MUL", "path": "1"}, "2112": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "SWAP2", "path": "1"}, "2113": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "SWAP1", "path": "1"}, "2114": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "SWAP2", "path": "1"}, "2115": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "ADD", "path": "1"}, "2116": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "DUP2", "path": "1"}, "2117": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "ADD", "path": "1"}, "2118": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5261, 5275], "op": "MLOAD", "path": "1"}, "2119": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "PUSH1", "path": "1", "value": "0x40"}, "2121": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "DUP1", "path": "1"}, "2122": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "MLOAD", "path": "1"}, "2123": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "DUP1", "path": "1"}, "2124": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "DUP5", "path": "1"}, "2125": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "ADD", "path": "1"}, "2126": {"op": "SWAP5"}, "2127": {"op": "SWAP1"}, "2128": {"op": "SWAP5"}, "2129": {"op": "MSTORE"}, "2130": {"op": "DUP2"}, "2131": {"op": "MLOAD"}, "2132": {"op": "DUP5"}, "2133": {"op": "DUP3"}, "2134": {"op": "ADD"}, "2135": {"op": "MSTORE"}, "2136": {"op": "SWAP2"}, "2137": {"op": "DUP2"}, "2138": {"op": "ADD"}, "2139": {"op": "MLOAD"}, "2140": {"op": "PUSH1", "value": "0x1"}, "2142": {"op": "PUSH1", "value": "0x1"}, "2144": {"op": "PUSH1", "value": "0xA0"}, "2146": {"op": "SHL"}, "2147": {"op": "SUB"}, "2148": {"op": "SWAP1"}, "2149": {"op": "DUP2"}, "2150": {"op": "AND"}, "2151": {"op": "PUSH1", "value": "0x60"}, "2153": {"op": "DUP1"}, "2154": {"op": "DUP7"}, "2155": {"op": "ADD"}, "2156": {"op": "SWAP2"}, "2157": {"op": "SWAP1"}, "2158": {"op": "SWAP2"}, "2159": {"op": "MSTORE"}, "2160": {"op": "SWAP3"}, "2161": {"op": "DUP3"}, "2162": {"op": "ADD"}, "2163": {"op": "MLOAD"}, "2164": {"op": "AND"}, "2165": {"op": "PUSH1", "value": "0x80"}, "2167": {"op": "DUP5"}, "2168": {"op": "ADD"}, "2169": {"op": "MSTORE"}, "2170": {"op": "ADD"}, "2171": {"op": "MLOAD"}, "2172": {"op": "PUSH1", "value": "0xA0"}, "2174": {"op": "DUP3"}, "2175": {"op": "ADD"}, "2176": {"op": "MSTORE"}, "2177": {"op": "PUSH1", "value": "0xC0"}, "2179": {"op": "ADD"}, "2180": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "PUSH1", "path": "1", "value": "0x40"}, "2182": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "DUP1", "path": "1"}, "2183": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "MLOAD", "path": "1"}, "2184": {"op": "PUSH1", "value": "0x1F"}, "2186": {"op": "NOT"}, "2187": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "DUP2", "path": "1"}, "2188": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "DUP5", "path": "1"}, "2189": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "SUB", "path": "1"}, "2190": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "ADD", "path": "1"}, "2191": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "DUP2", "path": "1"}, "2192": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "MSTORE", "path": "1"}, "2193": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "SWAP1", "path": "1"}, "2194": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "DUP3", "path": "1"}, "2195": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "SWAP1", "path": "1"}, "2196": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5222, 5276], "op": "MSTORE", "path": "1"}, "2197": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH2", "path": "1", "value": "0x89D"}, "2200": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "SWAP2", "path": "1"}, "2201": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH2", "path": "1", "value": "0xCE3"}, "2204": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5215, 5277], "op": "JUMP", "path": "1"}, "2205": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "JUMPDEST", "path": "1"}, "2206": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "value": "0x20"}, "2208": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "value": "0x40"}, "2210": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "MLOAD", "path": "1"}, "2211": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP1", "path": "1"}, "2212": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP4", "path": "1"}, "2213": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "SUB", "path": "1"}, "2214": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP2", "path": "1"}, "2215": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP6", "path": "1"}, "2216": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "GAS", "path": "1"}, "2217": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "STATICCALL", "path": "1"}, "2218": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "ISZERO", "path": "1"}, "2219": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP1", "path": "1"}, "2220": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "ISZERO", "path": "1"}, "2221": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH2", "path": "1", "value": "0x8BA"}, "2224": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "JUMPI", "path": "1"}, "2225": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "RETURNDATASIZE", "path": "1"}, "2226": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "value": "0x0"}, "2228": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP1", "path": "1"}, "2229": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "RETURNDATACOPY", "path": "1"}, "2230": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "RETURNDATASIZE", "path": "1"}, "2231": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "value": "0x0"}, "2233": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "REVERT", "path": "1"}, "2234": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "JUMPDEST", "path": "1"}, "2235": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "POP", "path": "1"}, "2236": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "POP", "path": "1"}, "2237": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "POP", "path": "1"}, "2238": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "value": "0x40"}, "2240": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "MLOAD", "path": "1"}, "2241": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "RETURNDATASIZE", "path": "1"}, "2242": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "value": "0x1F"}, "2244": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "NOT", "path": "1"}, "2245": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "value": "0x1F"}, "2247": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP3", "path": "1"}, "2248": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "ADD", "path": "1"}, "2249": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "AND", "path": "1"}, "2250": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP3", "path": "1"}, "2251": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "ADD", "path": "1"}, "2252": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP1", "path": "1"}, "2253": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH1", "path": "1", "value": "0x40"}, "2255": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "MSTORE", "path": "1"}, "2256": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "POP", "path": "1"}, "2257": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "DUP2", "path": "1"}, "2258": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "ADD", "path": "1"}, "2259": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "SWAP1", "path": "1"}, "2260": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH2", "path": "1", "value": "0x8DD"}, "2263": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "SWAP2", "path": "1"}, "2264": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "SWAP1", "path": "1"}, "2265": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "PUSH2", "path": "1", "value": "0xD1E"}, "2268": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5215, 5277], "op": "JUMP", "path": "1"}, "2269": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5215, 5277], "op": "JUMPDEST", "path": "1"}, "2270": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5168, 5277], "op": "SWAP2", "path": "1"}, "2271": {"op": "POP"}, "2272": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5149, 5152], "op": "DUP1", "path": "1", "statement": 21}, "2273": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5149, 5152], "op": "PUSH2", "path": "1", "value": "0x8E9"}, "2276": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5149, 5152], "op": "DUP2", "path": "1"}, "2277": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5149, 5152], "op": "PUSH2", "path": "1", "value": "0xC73"}, "2280": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5149, 5152], "op": "JUMP", "path": "1"}, "2281": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5149, 5152], "op": "JUMPDEST", "path": "1"}, "2282": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5149, 5152], "op": "SWAP2", "path": "1"}, "2283": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5149, 5152], "op": "POP", "path": "1"}, "2284": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5149, 5152], "op": "POP", "path": "1"}, "2285": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5109, 5288], "op": "PUSH2", "path": "1", "value": "0x81C"}, "2288": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5109, 5288], "op": "JUMP", "path": "1"}, "2289": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5109, 5288], "op": "JUMPDEST", "path": "1"}, "2290": {"op": "POP"}, "2291": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5304, 5331], "op": "SWAP3", "path": "1", "statement": 22}, "2292": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4923, 5338], "op": "SWAP2", "path": "1"}, "2293": {"op": "POP"}, "2294": {"op": "POP"}, "2295": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "o", "offset": [4923, 5338], "op": "JUMP", "path": "1"}, "2296": {"op": "JUMPDEST"}, "2297": {"op": "PUSH1", "value": "0x0"}, "2299": {"op": "PUSH1", "value": "0x20"}, "2301": {"op": "DUP3"}, "2302": {"op": "DUP5"}, "2303": {"op": "SUB"}, "2304": {"op": "SLT"}, "2305": {"op": "ISZERO"}, "2306": {"op": "PUSH2", "value": "0x90A"}, "2309": {"op": "JUMPI"}, "2310": {"op": "PUSH1", "value": "0x0"}, "2312": {"op": "DUP1"}, "2313": {"op": "REVERT"}, "2314": {"op": "JUMPDEST"}, "2315": {"op": "POP"}, "2316": {"op": "CALLDATALOAD"}, "2317": {"op": "SWAP2"}, "2318": {"op": "SWAP1"}, "2319": {"op": "POP"}, "2320": {"jump": "o", "op": "JUMP"}, "2321": {"op": "JUMPDEST"}, "2322": {"op": "PUSH1", "value": "0x1"}, "2324": {"op": "PUSH1", "value": "0x1"}, "2326": {"op": "PUSH1", "value": "0xA0"}, "2328": {"op": "SHL"}, "2329": {"op": "SUB"}, "2330": {"op": "DUP2"}, "2331": {"op": "AND"}, "2332": {"op": "DUP2"}, "2333": {"op": "EQ"}, "2334": {"op": "PUSH2", "value": "0x926"}, "2337": {"op": "JUMPI"}, "2338": {"op": "PUSH1", "value": "0x0"}, "2340": {"op": "DUP1"}, "2341": {"op": "REVERT"}, "2342": {"op": "JUMPDEST"}, "2343": {"op": "POP"}, "2344": {"jump": "o", "op": "JUMP"}, "2345": {"op": "JUMPDEST"}, "2346": {"op": "PUSH1", "value": "0x0"}, "2348": {"op": "DUP1"}, "2349": {"op": "PUSH1", "value": "0x0"}, "2351": {"op": "DUP1"}, "2352": {"op": "PUSH1", "value": "0x80"}, "2354": {"op": "DUP6"}, "2355": {"op": "DUP8"}, "2356": {"op": "SUB"}, "2357": {"op": "SLT"}, "2358": {"op": "ISZERO"}, "2359": {"op": "PUSH2", "value": "0x93F"}, "2362": {"op": "JUMPI"}, "2363": {"op": "PUSH1", "value": "0x0"}, "2365": {"op": "DUP1"}, "2366": {"op": "REVERT"}, "2367": {"op": "JUMPDEST"}, "2368": {"op": "DUP5"}, "2369": {"op": "CALLDATALOAD"}, "2370": {"op": "PUSH2", "value": "0x94A"}, "2373": {"op": "DUP2"}, "2374": {"op": "PUSH2", "value": "0x911"}, "2377": {"jump": "i", "op": "JUMP"}, "2378": {"op": "JUMPDEST"}, "2379": {"op": "SWAP4"}, "2380": {"op": "POP"}, "2381": {"op": "PUSH1", "value": "0x20"}, "2383": {"op": "DUP6"}, "2384": {"op": "ADD"}, "2385": {"op": "CALLDATALOAD"}, "2386": {"op": "PUSH2", "value": "0x95A"}, "2389": {"op": "DUP2"}, "2390": {"op": "PUSH2", "value": "0x911"}, "2393": {"jump": "i", "op": "JUMP"}, "2394": {"op": "JUMPDEST"}, "2395": {"op": "SWAP4"}, "2396": {"op": "SWAP7"}, "2397": {"op": "SWAP4"}, "2398": {"op": "SWAP6"}, "2399": {"op": "POP"}, "2400": {"op": "POP"}, "2401": {"op": "POP"}, "2402": {"op": "POP"}, "2403": {"op": "PUSH1", "value": "0x40"}, "2405": {"op": "DUP3"}, "2406": {"op": "ADD"}, "2407": {"op": "CALLDATALOAD"}, "2408": {"op": "SWAP2"}, "2409": {"op": "PUSH1", "value": "0x60"}, "2411": {"op": "ADD"}, "2412": {"op": "CALLDATALOAD"}, "2413": {"op": "SWAP1"}, "2414": {"jump": "o", "op": "JUMP"}, "2415": {"op": "JUMPDEST"}, "2416": {"op": "PUSH4", "value": "0x4E487B71"}, "2421": {"op": "PUSH1", "value": "0xE0"}, "2423": {"op": "SHL"}, "2424": {"op": "PUSH1", "value": "0x0"}, "2426": {"op": "MSTORE"}, "2427": {"op": "PUSH1", "value": "0x41"}, "2429": {"op": "PUSH1", "value": "0x4"}, "2431": {"op": "MSTORE"}, "2432": {"op": "PUSH1", "value": "0x24"}, "2434": {"op": "PUSH1", "value": "0x0"}, "2436": {"op": "REVERT"}, "2437": {"op": "JUMPDEST"}, "2438": {"op": "PUSH1", "value": "0x40"}, "2440": {"op": "MLOAD"}, "2441": {"op": "PUSH1", "value": "0xE0"}, "2443": {"op": "DUP2"}, "2444": {"op": "ADD"}, "2445": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2454": {"op": "DUP2"}, "2455": {"op": "GT"}, "2456": {"op": "DUP3"}, "2457": {"op": "DUP3"}, "2458": {"op": "LT"}, "2459": {"op": "OR"}, "2460": {"op": "ISZERO"}, "2461": {"op": "PUSH2", "value": "0x9A8"}, "2464": {"op": "JUMPI"}, "2465": {"op": "PUSH2", "value": "0x9A8"}, "2468": {"op": "PUSH2", "value": "0x96F"}, "2471": {"jump": "i", "op": "JUMP"}, "2472": {"op": "JUMPDEST"}, "2473": {"op": "PUSH1", "value": "0x40"}, "2475": {"op": "MSTORE"}, "2476": {"op": "SWAP1"}, "2477": {"jump": "o", "op": "JUMP"}, "2478": {"op": "JUMPDEST"}, "2479": {"op": "PUSH1", "value": "0x40"}, "2481": {"op": "MLOAD"}, "2482": {"op": "PUSH1", "value": "0x80"}, "2484": {"op": "DUP2"}, "2485": {"op": "ADD"}, "2486": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2495": {"op": "DUP2"}, "2496": {"op": "GT"}, "2497": {"op": "DUP3"}, "2498": {"op": "DUP3"}, "2499": {"op": "LT"}, "2500": {"op": "OR"}, "2501": {"op": "ISZERO"}, "2502": {"op": "PUSH2", "value": "0x9A8"}, "2505": {"op": "JUMPI"}, "2506": {"op": "PUSH2", "value": "0x9A8"}, "2509": {"op": "PUSH2", "value": "0x96F"}, "2512": {"jump": "i", "op": "JUMP"}, "2513": {"op": "JUMPDEST"}, "2514": {"op": "PUSH1", "value": "0x40"}, "2516": {"op": "MLOAD"}, "2517": {"op": "PUSH1", "value": "0x1F"}, "2519": {"op": "DUP3"}, "2520": {"op": "ADD"}, "2521": {"op": "PUSH1", "value": "0x1F"}, "2523": {"op": "NOT"}, "2524": {"op": "AND"}, "2525": {"op": "DUP2"}, "2526": {"op": "ADD"}, "2527": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2536": {"op": "DUP2"}, "2537": {"op": "GT"}, "2538": {"op": "DUP3"}, "2539": {"op": "DUP3"}, "2540": {"op": "LT"}, "2541": {"op": "OR"}, "2542": {"op": "ISZERO"}, "2543": {"op": "PUSH2", "value": "0x9FA"}, "2546": {"op": "JUMPI"}, "2547": {"op": "PUSH2", "value": "0x9FA"}, "2550": {"op": "PUSH2", "value": "0x96F"}, "2553": {"jump": "i", "op": "JUMP"}, "2554": {"op": "JUMPDEST"}, "2555": {"op": "PUSH1", "value": "0x40"}, "2557": {"op": "MSTORE"}, "2558": {"op": "SWAP2"}, "2559": {"op": "SWAP1"}, "2560": {"op": "POP"}, "2561": {"jump": "o", "op": "JUMP"}, "2562": {"op": "JUMPDEST"}, "2563": {"op": "PUSH1", "value": "0x0"}, "2565": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2574": {"op": "DUP3"}, "2575": {"op": "GT"}, "2576": {"op": "ISZERO"}, "2577": {"op": "PUSH2", "value": "0xA1C"}, "2580": {"op": "JUMPI"}, "2581": {"op": "PUSH2", "value": "0xA1C"}, "2584": {"op": "PUSH2", "value": "0x96F"}, "2587": {"jump": "i", "op": "JUMP"}, "2588": {"op": "JUMPDEST"}, "2589": {"op": "POP"}, "2590": {"op": "PUSH1", "value": "0x5"}, "2592": {"op": "SHL"}, "2593": {"op": "PUSH1", "value": "0x20"}, "2595": {"op": "ADD"}, "2596": {"op": "SWAP1"}, "2597": {"jump": "o", "op": "JUMP"}, "2598": {"op": "JUMPDEST"}, "2599": {"op": "PUSH1", "value": "0x0"}, "2601": {"op": "DUP3"}, "2602": {"op": "PUSH1", "value": "0x1F"}, "2604": {"op": "DUP4"}, "2605": {"op": "ADD"}, "2606": {"op": "SLT"}, "2607": {"op": "PUSH2", "value": "0xA37"}, "2610": {"op": "JUMPI"}, "2611": {"op": "PUSH1", "value": "0x0"}, "2613": {"op": "DUP1"}, "2614": {"op": "REVERT"}, "2615": {"op": "JUMPDEST"}, "2616": {"op": "DUP2"}, "2617": {"op": "CALLDATALOAD"}, "2618": {"op": "PUSH1", "value": "0x20"}, "2620": {"op": "PUSH2", "value": "0xA4C"}, "2623": {"op": "PUSH2", "value": "0xA47"}, "2626": {"op": "DUP4"}, "2627": {"op": "PUSH2", "value": "0xA02"}, "2630": {"jump": "i", "op": "JUMP"}, "2631": {"op": "JUMPDEST"}, "2632": {"op": "PUSH2", "value": "0x9D1"}, "2635": {"jump": "i", "op": "JUMP"}, "2636": {"op": "JUMPDEST"}, "2637": {"op": "DUP3"}, "2638": {"op": "DUP2"}, "2639": {"op": "MSTORE"}, "2640": {"op": "PUSH1", "value": "0xE0"}, "2642": {"op": "SWAP3"}, "2643": {"op": "DUP4"}, "2644": {"op": "MUL"}, "2645": {"op": "DUP6"}, "2646": {"op": "ADD"}, "2647": {"op": "DUP3"}, "2648": {"op": "ADD"}, "2649": {"op": "SWAP3"}, "2650": {"op": "DUP3"}, "2651": {"op": "DUP3"}, "2652": {"op": "ADD"}, "2653": {"op": "SWAP2"}, "2654": {"op": "SWAP1"}, "2655": {"op": "DUP8"}, "2656": {"op": "DUP6"}, "2657": {"op": "GT"}, "2658": {"op": "ISZERO"}, "2659": {"op": "PUSH2", "value": "0xA6B"}, "2662": {"op": "JUMPI"}, "2663": {"op": "PUSH1", "value": "0x0"}, "2665": {"op": "DUP1"}, "2666": {"op": "REVERT"}, "2667": {"op": "JUMPDEST"}, "2668": {"op": "DUP4"}, "2669": {"op": "DUP8"}, "2670": {"op": "ADD"}, "2671": {"op": "JUMPDEST"}, "2672": {"op": "DUP6"}, "2673": {"op": "DUP2"}, "2674": {"op": "LT"}, "2675": {"op": "ISZERO"}, "2676": {"op": "PUSH2", "value": "0xAEC"}, "2679": {"op": "JUMPI"}, "2680": {"op": "DUP2"}, "2681": {"op": "DUP2"}, "2682": {"op": "DUP11"}, "2683": {"op": "SUB"}, "2684": {"op": "SLT"}, "2685": {"op": "ISZERO"}, "2686": {"op": "PUSH2", "value": "0xA87"}, "2689": {"op": "JUMPI"}, "2690": {"op": "PUSH1", "value": "0x0"}, "2692": {"op": "DUP1"}, "2693": {"op": "DUP2"}, "2694": {"op": "REVERT"}, "2695": {"op": "JUMPDEST"}, "2696": {"op": "PUSH2", "value": "0xA8F"}, "2699": {"op": "PUSH2", "value": "0x985"}, "2702": {"jump": "i", "op": "JUMP"}, "2703": {"op": "JUMPDEST"}, "2704": {"op": "DUP2"}, "2705": {"op": "CALLDATALOAD"}, "2706": {"op": "PUSH2", "value": "0xA9A"}, "2709": {"op": "DUP2"}, "2710": {"op": "PUSH2", "value": "0x911"}, "2713": {"jump": "i", "op": "JUMP"}, "2714": {"op": "JUMPDEST"}, "2715": {"op": "DUP2"}, "2716": {"op": "MSTORE"}, "2717": {"op": "DUP2"}, "2718": {"op": "DUP7"}, "2719": {"op": "ADD"}, "2720": {"op": "CALLDATALOAD"}, "2721": {"op": "PUSH2", "value": "0xAA9"}, "2724": {"op": "DUP2"}, "2725": {"op": "PUSH2", "value": "0x911"}, "2728": {"jump": "i", "op": "JUMP"}, "2729": {"op": "JUMPDEST"}, "2730": {"op": "DUP2"}, "2731": {"op": "DUP8"}, "2732": {"op": "ADD"}, "2733": {"op": "MSTORE"}, "2734": {"op": "PUSH1", "value": "0x40"}, "2736": {"op": "DUP3"}, "2737": {"op": "DUP2"}, "2738": {"op": "ADD"}, "2739": {"op": "CALLDATALOAD"}, "2740": {"op": "SWAP1"}, "2741": {"op": "DUP3"}, "2742": {"op": "ADD"}, "2743": {"op": "MSTORE"}, "2744": {"op": "PUSH1", "value": "0x60"}, "2746": {"op": "DUP1"}, "2747": {"op": "DUP4"}, "2748": {"op": "ADD"}, "2749": {"op": "CALLDATALOAD"}, "2750": {"op": "SWAP1"}, "2751": {"op": "DUP3"}, "2752": {"op": "ADD"}, "2753": {"op": "MSTORE"}, "2754": {"op": "PUSH1", "value": "0x80"}, "2756": {"op": "DUP1"}, "2757": {"op": "DUP4"}, "2758": {"op": "ADD"}, "2759": {"op": "CALLDATALOAD"}, "2760": {"op": "SWAP1"}, "2761": {"op": "DUP3"}, "2762": {"op": "ADD"}, "2763": {"op": "MSTORE"}, "2764": {"op": "PUSH1", "value": "0xA0"}, "2766": {"op": "DUP1"}, "2767": {"op": "DUP4"}, "2768": {"op": "ADD"}, "2769": {"op": "CALLDATALOAD"}, "2770": {"op": "SWAP1"}, "2771": {"op": "DUP3"}, "2772": {"op": "ADD"}, "2773": {"op": "MSTORE"}, "2774": {"op": "PUSH1", "value": "0xC0"}, "2776": {"op": "DUP1"}, "2777": {"op": "DUP4"}, "2778": {"op": "ADD"}, "2779": {"op": "CALLDATALOAD"}, "2780": {"op": "SWAP1"}, "2781": {"op": "DUP3"}, "2782": {"op": "ADD"}, "2783": {"op": "MSTORE"}, "2784": {"op": "DUP5"}, "2785": {"op": "MSTORE"}, "2786": {"op": "SWAP3"}, "2787": {"op": "DUP5"}, "2788": {"op": "ADD"}, "2789": {"op": "SWAP3"}, "2790": {"op": "DUP2"}, "2791": {"op": "ADD"}, "2792": {"op": "PUSH2", "value": "0xA6F"}, "2795": {"op": "JUMP"}, "2796": {"op": "JUMPDEST"}, "2797": {"op": "POP"}, "2798": {"op": "SWAP1"}, "2799": {"op": "SWAP8"}, "2800": {"op": "SWAP7"}, "2801": {"op": "POP"}, "2802": {"op": "POP"}, "2803": {"op": "POP"}, "2804": {"op": "POP"}, "2805": {"op": "POP"}, "2806": {"op": "POP"}, "2807": {"op": "POP"}, "2808": {"jump": "o", "op": "JUMP"}, "2809": {"op": "JUMPDEST"}, "2810": {"op": "PUSH1", "value": "0x0"}, "2812": {"op": "DUP1"}, "2813": {"op": "PUSH1", "value": "0x40"}, "2815": {"op": "DUP1"}, "2816": {"op": "DUP5"}, "2817": {"op": "DUP7"}, "2818": {"op": "SUB"}, "2819": {"op": "SLT"}, "2820": {"op": "ISZERO"}, "2821": {"op": "PUSH2", "value": "0xB0D"}, "2824": {"op": "JUMPI"}, "2825": {"op": "PUSH1", "value": "0x0"}, "2827": {"op": "DUP1"}, "2828": {"op": "REVERT"}, "2829": {"op": "JUMPDEST"}, "2830": {"op": "DUP4"}, "2831": {"op": "CALLDATALOAD"}, "2832": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2841": {"op": "DUP1"}, "2842": {"op": "DUP3"}, "2843": {"op": "GT"}, "2844": {"op": "ISZERO"}, "2845": {"op": "PUSH2", "value": "0xB25"}, "2848": {"op": "JUMPI"}, "2849": {"op": "PUSH1", "value": "0x0"}, "2851": {"op": "DUP1"}, "2852": {"op": "REVERT"}, "2853": {"op": "JUMPDEST"}, "2854": {"op": "DUP2"}, "2855": {"op": "DUP7"}, "2856": {"op": "ADD"}, "2857": {"op": "SWAP2"}, "2858": {"op": "POP"}, "2859": {"op": "DUP7"}, "2860": {"op": "PUSH1", "value": "0x1F"}, "2862": {"op": "DUP4"}, "2863": {"op": "ADD"}, "2864": {"op": "SLT"}, "2865": {"op": "PUSH2", "value": "0xB39"}, "2868": {"op": "JUMPI"}, "2869": {"op": "PUSH1", "value": "0x0"}, "2871": {"op": "DUP1"}, "2872": {"op": "REVERT"}, "2873": {"op": "JUMPDEST"}, "2874": {"op": "DUP2"}, "2875": {"op": "CALLDATALOAD"}, "2876": {"op": "PUSH1", "value": "0x20"}, "2878": {"op": "PUSH2", "value": "0xB49"}, "2881": {"op": "PUSH2", "value": "0xA47"}, "2884": {"op": "DUP4"}, "2885": {"op": "PUSH2", "value": "0xA02"}, "2888": {"jump": "i", "op": "JUMP"}, "2889": {"op": "JUMPDEST"}, "2890": {"op": "DUP3"}, "2891": {"op": "DUP2"}, "2892": {"op": "MSTORE"}, "2893": {"op": "PUSH1", "value": "0x7"}, "2895": {"op": "SWAP3"}, "2896": {"op": "SWAP1"}, "2897": {"op": "SWAP3"}, "2898": {"op": "SHL"}, "2899": {"op": "DUP5"}, "2900": {"op": "ADD"}, "2901": {"op": "DUP2"}, "2902": {"op": "ADD"}, "2903": {"op": "SWAP2"}, "2904": {"op": "DUP2"}, "2905": {"op": "DUP2"}, "2906": {"op": "ADD"}, "2907": {"op": "SWAP1"}, "2908": {"op": "DUP11"}, "2909": {"op": "DUP5"}, "2910": {"op": "GT"}, "2911": {"op": "ISZERO"}, "2912": {"op": "PUSH2", "value": "0xB68"}, "2915": {"op": "JUMPI"}, "2916": {"op": "PUSH1", "value": "0x0"}, "2918": {"op": "DUP1"}, "2919": {"op": "REVERT"}, "2920": {"op": "JUMPDEST"}, "2921": {"op": "SWAP5"}, "2922": {"op": "DUP3"}, "2923": {"op": "ADD"}, "2924": {"op": "SWAP5"}, "2925": {"op": "JUMPDEST"}, "2926": {"op": "DUP4"}, "2927": {"op": "DUP7"}, "2928": {"op": "LT"}, "2929": {"op": "ISZERO"}, "2930": {"op": "PUSH2", "value": "0xBCF"}, "2933": {"op": "JUMPI"}, "2934": {"op": "PUSH1", "value": "0x80"}, "2936": {"op": "DUP7"}, "2937": {"op": "DUP13"}, "2938": {"op": "SUB"}, "2939": {"op": "SLT"}, "2940": {"op": "ISZERO"}, "2941": {"op": "PUSH2", "value": "0xB86"}, "2944": {"op": "JUMPI"}, "2945": {"op": "PUSH1", "value": "0x0"}, "2947": {"op": "DUP1"}, "2948": {"op": "DUP2"}, "2949": {"op": "REVERT"}, "2950": {"op": "JUMPDEST"}, "2951": {"op": "PUSH2", "value": "0xB8E"}, "2954": {"op": "PUSH2", "value": "0x9AE"}, "2957": {"jump": "i", "op": "JUMP"}, "2958": {"op": "JUMPDEST"}, "2959": {"op": "DUP7"}, "2960": {"op": "CALLDATALOAD"}, "2961": {"op": "DUP2"}, "2962": {"op": "MSTORE"}, "2963": {"op": "DUP4"}, "2964": {"op": "DUP8"}, "2965": {"op": "ADD"}, "2966": {"op": "CALLDATALOAD"}, "2967": {"op": "PUSH2", "value": "0xB9F"}, "2970": {"op": "DUP2"}, "2971": {"op": "PUSH2", "value": "0x911"}, "2974": {"jump": "i", "op": "JUMP"}, "2975": {"op": "JUMPDEST"}, "2976": {"op": "DUP2"}, "2977": {"op": "DUP6"}, "2978": {"op": "ADD"}, "2979": {"op": "MSTORE"}, "2980": {"op": "DUP7"}, "2981": {"op": "DUP9"}, "2982": {"op": "ADD"}, "2983": {"op": "CALLDATALOAD"}, "2984": {"op": "PUSH2", "value": "0xBB0"}, "2987": {"op": "DUP2"}, "2988": {"op": "PUSH2", "value": "0x911"}, "2991": {"jump": "i", "op": "JUMP"}, "2992": {"op": "JUMPDEST"}, "2993": {"op": "DUP2"}, "2994": {"op": "DUP10"}, "2995": {"op": "ADD"}, "2996": {"op": "MSTORE"}, "2997": {"op": "PUSH1", "value": "0x60"}, "2999": {"op": "DUP8"}, "3000": {"op": "DUP2"}, "3001": {"op": "ADD"}, "3002": {"op": "CALLDATALOAD"}, "3003": {"op": "SWAP1"}, "3004": {"op": "DUP3"}, "3005": {"op": "ADD"}, "3006": {"op": "MSTORE"}, "3007": {"op": "DUP3"}, "3008": {"op": "MSTORE"}, "3009": {"op": "PUSH1", "value": "0x80"}, "3011": {"op": "SWAP1"}, "3012": {"op": "SWAP6"}, "3013": {"op": "ADD"}, "3014": {"op": "SWAP5"}, "3015": {"op": "SWAP1"}, "3016": {"op": "DUP3"}, "3017": {"op": "ADD"}, "3018": {"op": "SWAP1"}, "3019": {"op": "PUSH2", "value": "0xB6D"}, "3022": {"op": "JUMP"}, "3023": {"op": "JUMPDEST"}, "3024": {"op": "SWAP8"}, "3025": {"op": "POP"}, "3026": {"op": "POP"}, "3027": {"op": "DUP8"}, "3028": {"op": "ADD"}, "3029": {"op": "CALLDATALOAD"}, "3030": {"op": "SWAP4"}, "3031": {"op": "POP"}, "3032": {"op": "POP"}, "3033": {"op": "DUP1"}, "3034": {"op": "DUP4"}, "3035": {"op": "GT"}, "3036": {"op": "ISZERO"}, "3037": {"op": "PUSH2", "value": "0xBE5"}, "3040": {"op": "JUMPI"}, "3041": {"op": "PUSH1", "value": "0x0"}, "3043": {"op": "DUP1"}, "3044": {"op": "REVERT"}, "3045": {"op": "JUMPDEST"}, "3046": {"op": "POP"}, "3047": {"op": "POP"}, "3048": {"op": "PUSH2", "value": "0xBF3"}, "3051": {"op": "DUP6"}, "3052": {"op": "DUP3"}, "3053": {"op": "DUP7"}, "3054": {"op": "ADD"}, "3055": {"op": "PUSH2", "value": "0xA26"}, "3058": {"jump": "i", "op": "JUMP"}, "3059": {"op": "JUMPDEST"}, "3060": {"op": "SWAP2"}, "3061": {"op": "POP"}, "3062": {"op": "POP"}, "3063": {"op": "SWAP3"}, "3064": {"op": "POP"}, "3065": {"op": "SWAP3"}, "3066": {"op": "SWAP1"}, "3067": {"op": "POP"}, "3068": {"jump": "o", "op": "JUMP"}, "3069": {"op": "JUMPDEST"}, "3070": {"op": "PUSH4", "value": "0x4E487B71"}, "3075": {"op": "PUSH1", "value": "0xE0"}, "3077": {"op": "SHL"}, "3078": {"op": "PUSH1", "value": "0x0"}, "3080": {"op": "MSTORE"}, "3081": {"op": "PUSH1", "value": "0x11"}, "3083": {"op": "PUSH1", "value": "0x4"}, "3085": {"op": "MSTORE"}, "3086": {"op": "PUSH1", "value": "0x24"}, "3088": {"op": "PUSH1", "value": "0x0"}, "3090": {"op": "REVERT"}, "3091": {"op": "JUMPDEST"}, "3092": {"op": "PUSH1", "value": "0x0"}, "3094": {"op": "DUP2"}, "3095": {"op": "PUSH1", "value": "0x0"}, "3097": {"op": "NOT"}, "3098": {"op": "DIV"}, "3099": {"op": "DUP4"}, "3100": {"op": "GT"}, "3101": {"op": "DUP3"}, "3102": {"op": "ISZERO"}, "3103": {"op": "ISZERO"}, "3104": {"op": "AND"}, "3105": {"op": "ISZERO"}, "3106": {"op": "PUSH2", "value": "0xC2D"}, "3109": {"op": "JUMPI"}, "3110": {"op": "PUSH2", "value": "0xC2D"}, "3113": {"op": "PUSH2", "value": "0xBFD"}, "3116": {"jump": "i", "op": "JUMP"}, "3117": {"op": "JUMPDEST"}, "3118": {"op": "POP"}, "3119": {"op": "MUL"}, "3120": {"op": "SWAP1"}, "3121": {"jump": "o", "op": "JUMP"}, "3122": {"op": "JUMPDEST"}, "3123": {"op": "PUSH1", "value": "0x0"}, "3125": {"op": "DUP3"}, "3126": {"op": "NOT"}, "3127": {"op": "DUP3"}, "3128": {"op": "GT"}, "3129": {"op": "ISZERO"}, "3130": {"op": "PUSH2", "value": "0xC45"}, "3133": {"op": "JUMPI"}, "3134": {"op": "PUSH2", "value": "0xC45"}, "3137": {"op": "PUSH2", "value": "0xBFD"}, "3140": {"jump": "i", "op": "JUMP"}, "3141": {"op": "JUMPDEST"}, "3142": {"op": "POP"}, "3143": {"op": "ADD"}, "3144": {"op": "SWAP1"}, "3145": {"jump": "o", "op": "JUMP"}, "3146": {"op": "JUMPDEST"}, "3147": {"op": "PUSH1", "value": "0x0"}, "3149": {"op": "PUSH1", "value": "0x20"}, "3151": {"op": "DUP3"}, "3152": {"op": "DUP5"}, "3153": {"op": "SUB"}, "3154": {"op": "SLT"}, "3155": {"op": "ISZERO"}, "3156": {"op": "PUSH2", "value": "0xC5C"}, "3159": {"op": "JUMPI"}, "3160": {"op": "PUSH1", "value": "0x0"}, "3162": {"op": "DUP1"}, "3163": {"op": "REVERT"}, "3164": {"op": "JUMPDEST"}, "3165": {"op": "DUP2"}, "3166": {"op": "MLOAD"}, "3167": {"op": "DUP1"}, "3168": {"op": "ISZERO"}, "3169": {"op": "ISZERO"}, "3170": {"op": "DUP2"}, "3171": {"op": "EQ"}, "3172": {"op": "PUSH2", "value": "0xC6C"}, "3175": {"op": "JUMPI"}, "3176": {"op": "PUSH1", "value": "0x0"}, "3178": {"op": "DUP1"}, "3179": {"op": "REVERT"}, "3180": {"op": "JUMPDEST"}, "3181": {"op": "SWAP4"}, "3182": {"op": "SWAP3"}, "3183": {"op": "POP"}, "3184": {"op": "POP"}, "3185": {"op": "POP"}, "3186": {"jump": "o", "op": "JUMP"}, "3187": {"op": "JUMPDEST"}, "3188": {"op": "PUSH1", "value": "0x0"}, "3190": {"op": "PUSH1", "value": "0x1"}, "3192": {"op": "DUP3"}, "3193": {"op": "ADD"}, "3194": {"op": "PUSH2", "value": "0xC85"}, "3197": {"op": "JUMPI"}, "3198": {"op": "PUSH2", "value": "0xC85"}, "3201": {"op": "PUSH2", "value": "0xBFD"}, "3204": {"jump": "i", "op": "JUMP"}, "3205": {"op": "JUMPDEST"}, "3206": {"op": "POP"}, "3207": {"op": "PUSH1", "value": "0x1"}, "3209": {"op": "ADD"}, "3210": {"op": "SWAP1"}, "3211": {"jump": "o", "op": "JUMP"}, "3212": {"op": "JUMPDEST"}, "3213": {"op": "DUP2"}, "3214": {"op": "MLOAD"}, "3215": {"op": "PUSH1", "value": "0x1"}, "3217": {"op": "PUSH1", "value": "0x1"}, "3219": {"op": "PUSH1", "value": "0xA0"}, "3221": {"op": "SHL"}, "3222": {"op": "SUB"}, "3223": {"op": "SWAP1"}, "3224": {"op": "DUP2"}, "3225": {"op": "AND"}, "3226": {"op": "DUP3"}, "3227": {"op": "MSTORE"}, "3228": {"op": "PUSH1", "value": "0x20"}, "3230": {"op": "DUP1"}, "3231": {"op": "DUP5"}, "3232": {"op": "ADD"}, "3233": {"op": "MLOAD"}, "3234": {"op": "SWAP1"}, "3235": {"op": "SWAP2"}, "3236": {"op": "AND"}, "3237": {"op": "SWAP1"}, "3238": {"op": "DUP3"}, "3239": {"op": "ADD"}, "3240": {"op": "MSTORE"}, "3241": {"op": "PUSH1", "value": "0x40"}, "3243": {"op": "DUP1"}, "3244": {"op": "DUP4"}, "3245": {"op": "ADD"}, "3246": {"op": "MLOAD"}, "3247": {"op": "SWAP1"}, "3248": {"op": "DUP3"}, "3249": {"op": "ADD"}, "3250": {"op": "MSTORE"}, "3251": {"op": "PUSH1", "value": "0x60"}, "3253": {"op": "DUP1"}, "3254": {"op": "DUP4"}, "3255": {"op": "ADD"}, "3256": {"op": "MLOAD"}, "3257": {"op": "SWAP1"}, "3258": {"op": "DUP3"}, "3259": {"op": "ADD"}, "3260": {"op": "MSTORE"}, "3261": {"op": "PUSH1", "value": "0x80"}, "3263": {"op": "DUP1"}, "3264": {"op": "DUP4"}, "3265": {"op": "ADD"}, "3266": {"op": "MLOAD"}, "3267": {"op": "SWAP1"}, "3268": {"op": "DUP3"}, "3269": {"op": "ADD"}, "3270": {"op": "MSTORE"}, "3271": {"op": "PUSH1", "value": "0xA0"}, "3273": {"op": "DUP3"}, "3274": {"op": "DUP2"}, "3275": {"op": "ADD"}, "3276": {"op": "MLOAD"}, "3277": {"op": "SWAP1"}, "3278": {"op": "DUP3"}, "3279": {"op": "ADD"}, "3280": {"op": "MSTORE"}, "3281": {"op": "PUSH1", "value": "0xC0"}, "3283": {"op": "SWAP2"}, "3284": {"op": "DUP3"}, "3285": {"op": "ADD"}, "3286": {"op": "MLOAD"}, "3287": {"op": "SWAP2"}, "3288": {"op": "DUP2"}, "3289": {"op": "ADD"}, "3290": {"op": "SWAP2"}, "3291": {"op": "SWAP1"}, "3292": {"op": "SWAP2"}, "3293": {"op": "MSTORE"}, "3294": {"op": "PUSH1", "value": "0xE0"}, "3296": {"op": "ADD"}, "3297": {"op": "SWAP1"}, "3298": {"jump": "o", "op": "JUMP"}, "3299": {"op": "JUMPDEST"}, "3300": {"op": "PUSH1", "value": "0x0"}, "3302": {"op": "DUP3"}, "3303": {"op": "MLOAD"}, "3304": {"op": "PUSH1", "value": "0x0"}, "3306": {"op": "JUMPDEST"}, "3307": {"op": "DUP2"}, "3308": {"op": "DUP2"}, "3309": {"op": "LT"}, "3310": {"op": "ISZERO"}, "3311": {"op": "PUSH2", "value": "0xD04"}, "3314": {"op": "JUMPI"}, "3315": {"op": "PUSH1", "value": "0x20"}, "3317": {"op": "DUP2"}, "3318": {"op": "DUP7"}, "3319": {"op": "ADD"}, "3320": {"op": "DUP2"}, "3321": {"op": "ADD"}, "3322": {"op": "MLOAD"}, "3323": {"op": "DUP6"}, "3324": {"op": "DUP4"}, "3325": {"op": "ADD"}, "3326": {"op": "MSTORE"}, "3327": {"op": "ADD"}, "3328": {"op": "PUSH2", "value": "0xCEA"}, "3331": {"op": "JUMP"}, "3332": {"op": "JUMPDEST"}, "3333": {"op": "DUP2"}, "3334": {"op": "DUP2"}, "3335": {"op": "GT"}, "3336": {"op": "ISZERO"}, "3337": {"op": "PUSH2", "value": "0xD13"}, "3340": {"op": "JUMPI"}, "3341": {"op": "PUSH1", "value": "0x0"}, "3343": {"op": "DUP3"}, "3344": {"op": "DUP6"}, "3345": {"op": "ADD"}, "3346": {"op": "MSTORE"}, "3347": {"op": "JUMPDEST"}, "3348": {"op": "POP"}, "3349": {"op": "SWAP2"}, "3350": {"op": "SWAP1"}, "3351": {"op": "SWAP2"}, "3352": {"op": "ADD"}, "3353": {"op": "SWAP3"}, "3354": {"op": "SWAP2"}, "3355": {"op": "POP"}, "3356": {"op": "POP"}, "3357": {"jump": "o", "op": "JUMP"}, "3358": {"op": "JUMPDEST"}, "3359": {"op": "PUSH1", "value": "0x0"}, "3361": {"op": "PUSH1", "value": "0x20"}, "3363": {"op": "DUP3"}, "3364": {"op": "DUP5"}, "3365": {"op": "SUB"}, "3366": {"op": "SLT"}, "3367": {"op": "ISZERO"}, "3368": {"op": "PUSH2", "value": "0xD30"}, "3371": {"op": "JUMPI"}, "3372": {"op": "PUSH1", "value": "0x0"}, "3374": {"op": "DUP1"}, "3375": {"op": "REVERT"}, "3376": {"op": "JUMPDEST"}, "3377": {"op": "POP"}, "3378": {"op": "MLOAD"}, "3379": {"op": "SWAP2"}, "3380": {"op": "SWAP1"}, "3381": {"op": "POP"}, "3382": {"jump": "o", "op": "JUMP"}, "3383": {"op": "JUMPDEST"}, "3384": {"op": "PUSH1", "value": "0x0"}, "3386": {"op": "PUSH1", "value": "0x20"}, "3388": {"op": "DUP3"}, "3389": {"op": "DUP5"}, "3390": {"op": "SUB"}, "3391": {"op": "SLT"}, "3392": {"op": "ISZERO"}, "3393": {"op": "PUSH2", "value": "0xD49"}, "3396": {"op": "JUMPI"}, "3397": {"op": "PUSH1", "value": "0x0"}, "3399": {"op": "DUP1"}, "3400": {"op": "REVERT"}, "3401": {"op": "JUMPDEST"}, "3402": {"op": "DUP2"}, "3403": {"op": "MLOAD"}, "3404": {"op": "PUSH2", "value": "0xC6C"}, "3407": {"op": "DUP2"}, "3408": {"op": "PUSH2", "value": "0x911"}, "3411": {"jump": "i", "op": "JUMP"}, "3412": {"op": "JUMPDEST"}, "3413": {"op": "PUSH4", "value": "0x4E487B71"}, "3418": {"op": "PUSH1", "value": "0xE0"}, "3420": {"op": "SHL"}, "3421": {"op": "PUSH1", "value": "0x0"}, "3423": {"op": "MSTORE"}, "3424": {"op": "PUSH1", "value": "0x32"}, "3426": {"op": "PUSH1", "value": "0x4"}, "3428": {"op": "MSTORE"}, "3429": {"op": "PUSH1", "value": "0x24"}, "3431": {"op": "PUSH1", "value": "0x0"}, "3433": {"op": "REVERT"}}, "sha1": "4bd411eb632ebfd109d14404afc81b27e8d10fe7", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"./deb/ERC20.sol\";\nimport \"./deb/ICrossDomainMessenger.sol\";\n\n/// @title SourceDomainSideBridge Contract\n/// @author Sherif Abdelmoatty\n/// @notice This contract is to be deployed in the source rollup\ncontract SourceDomainSideBridge {\n    \n    uint constant public CONTRACT_FEE_BASIS_POINTS = 5;\n    uint constant public TRADE_LIMIT = 0.1 ether;\n    address constant ETHER_ADDRESS = 0x0000000000000000000000000000000000000000;\n\n    struct TransferData {\n        address  tokenAddress; \n        address  destination;\n        uint256  amount;\n        uint256  fee;\n        uint256  startTime;\n        uint256  feeRampup;\n        uint256  nonce;\n    }\n    struct RewardData {\n        bytes32  transferDataHash;\n        address  tokenAddress; \n        address  claimer;\n        uint256  fee;\n    }\n    mapping(bytes32 => bool) public validTransferHashes;\n    mapping(bytes32 => bool) public knownHashOnions;\n    bytes32 processedRewardHashOnion;\n    \n    address ovmL2CrossDomainMessenger;  //ovmL2CrossDomainMessenger contract address(Optimism)\n    address l1DomainSideContractAddress;  //l1DomainSideContract deployed contract address on mainnet\n\n    uint256  currentNonce;\n\n    event Transaction(TransferData transferData);\n    event ClaimPayed(bytes32 transferDataHash, bool success);\n    \n    /// @notice onlyL1Contract modifier\n    /// @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n    /// @notice to call the approveStateRoot function\n    modifier onlyL1Contract() {\n        ICrossDomainMessenger l2cdm = ICrossDomainMessenger(ovmL2CrossDomainMessenger);\n        require(\n            msg.sender == address(ovmL2CrossDomainMessenger)\n            && l2cdm.xDomainMessageSender() == l1DomainSideContractAddress\n        );\n        _;\n    }\n\n    /// @notice Constructior function\n    /// @notice Intialize variables\n    constructor(address _l1DomainSideContractAddress){\n        ovmL2CrossDomainMessenger = 0x4200000000000000000000000000000000000007;\n        l1DomainSideContractAddress = _l1DomainSideContractAddress;\n    }\n\n    /// @notice withdraw function\n    /// @notice withdraws the required funds plus fees to be sent \n    /// @notice to the domain side rollup\n    ///function transfer(TransferData memory _transferData) external payable returns(bytes32){\n    function transfer(address _tokenAddress, address _destination, uint256 _amount,\n         uint256  _feeRampup) external payable returns(bytes32){\n        \n        require(_amount* 1000 <= TRADE_LIMIT, 'Amount higher than trade limit');\n        uint256 fee = _amount * CONTRACT_FEE_BASIS_POINTS;\n        uint256 amountPlusFee = _amount * 1000 + fee;\n        \n        if(_tokenAddress == ETHER_ADDRESS){\n            require(msg.value >= amountPlusFee, \"Error : Non Suffecient funds!!!!!!!!\");\n        }else{\n            ERC20 token = ERC20(_tokenAddress);\n            token.transferFrom(msg.sender, address(this), amountPlusFee);\n        }\n\n        TransferData memory transferData;\n        transferData.tokenAddress = _tokenAddress;\n        transferData.destination = _destination;\n        transferData.amount = _amount;\n        transferData.fee = fee;\n        transferData.startTime = block.number;\n        transferData.feeRampup = _feeRampup;\n        transferData.nonce = currentNonce;\n\n        currentNonce++;\n\n        bytes32 transferDataHash = sha256(abi.encode(transferData));\n        \n        validTransferHashes[transferDataHash] = true;\n\n        emit Transaction(transferData);\n        \n        return transferDataHash;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function processClaims(RewardData[] memory _rewardData, TransferData[] memory _transferData) external payable {\n        bytes32 newProcessedRewardHashOnion = calculateNewProcessedRewardHashOnion(_rewardData);\n        require(knownHashOnions[newProcessedRewardHashOnion], \"Invalide RewardData list.\");\n        processedRewardHashOnion = newProcessedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            if(validTransferHashes[_rewardData[n].transferDataHash]){\n                bool success;\n                if(_rewardData[n].tokenAddress == ETHER_ADDRESS){\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: _rewardData[n].fee}(\"\");\n                    success = suc;\n                }else{\n                    ERC20 token = ERC20(_rewardData[n].tokenAddress);\n                    \n                    success = token.transferFrom(address(this), _rewardData[n].claimer,\n                        _rewardData[n].fee);\n                }\n                emit ClaimPayed(_rewardData[n].transferDataHash, success);\n            }\n        }\n        \n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function calculateNewProcessedRewardHashOnion(RewardData[] memory _rewardData) private returns (bytes32){\n        bytes32 newProcessedRewardHashOnion = processedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            newProcessedRewardHashOnion = \n                sha256(abi.encode(newProcessedRewardHashOnion,_rewardData[n]));\n        }\n        return newProcessedRewardHashOnion;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function addNewKnownHashOnion(bytes32 _newKnownHashOnions) external onlyL1Contract{\n        knownHashOnions[_newKnownHashOnions] = true;\n    }\n   \n}", "sourceMap": "264:5322:1:-:0;;;1940:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1999:25;:70;;2027:42;-1:-1:-1;;;;;;1999:70:1;;;;;;;2079:27;:58;;;;;-1:-1:-1;;;;;2079:58:1;;;;;;;;;;264:5322;;14:290:4;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;:::-;264:5322:1;;;;;;", "sourcePath": "contracts/SourceDomainSideBridge.sol", "type": "contract", "deployment": {"address": "0xB88C83c2DDA10A4d1A15ad77Ef5ba7c0d812fafF", "chainid": "69", "blockHeight": 2582501}}