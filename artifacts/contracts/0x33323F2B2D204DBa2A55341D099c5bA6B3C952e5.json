{"abi": [{"inputs": [{"internalType": "address", "name": "_l1DomainSideContractAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "hash", "type": "bytes32"}], "name": "NewHashOnionCreated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "hash", "type": "bytes32"}], "name": "NewHashOnionDeclaredToL1", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "amountPlusFee", "type": "uint256"}], "indexed": false, "internalType": "struct StructLib.RewardData", "name": "rewardData", "type": "tuple"}, {"indexed": false, "internalType": "uint256", "name": "nonce", "type": "uint256"}], "name": "Reward", "type": "event"}, {"inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "internalType": "struct StructLib.TransferData", "name": "_transferData", "type": "tuple"}], "name": "claim", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [], "name": "claimCount", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "declareNewHashOnionHeadToL1", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "rewardHashOnionHistoryList", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "contracts/DestinationDomainSideBridge.sol", "3": "contracts/deb/ERC20.sol", "4": "contracts/deb/ICrossDomainMessenger.sol"}, "ast": {"absolutePath": "contracts/DestinationDomainSideBridge.sol", "exportedSymbols": {"DestinationDomainSideBridge": [308], "ERC20": [1018], "ICrossDomainMessenger": [1057], "StructLib": [1085]}, "id": 309, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".13"], "nodeType": "PragmaDirective", "src": "31:24:0"}, {"absolutePath": "contracts/deb/ERC20.sol", "file": "./deb/ERC20.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 309, "sourceUnit": 1019, "src": "57:25:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/ICrossDomainMessenger.sol", "file": "./deb/ICrossDomainMessenger.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 309, "sourceUnit": 1058, "src": "83:41:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/StructLib.sol", "file": "./deb/StructLib.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 309, "sourceUnit": 1086, "src": "125:29:0", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "DestinationDomainSideBridge", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 5, "nodeType": "StructuredDocumentation", "src": "157:149:0", "text": "@title DestinationDomainSideBridge Contract\n @author Sherif Abdelmoatty\n @notice This contract is to be deployed in the destination rollup"}, "fullyImplemented": true, "id": 308, "linearizedBaseContracts": [308], "name": "DestinationDomainSideBridge", "nameLocation": "315:27:0", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 8, "mutability": "constant", "name": "ETHER_ADDRESS", "nameLocation": "366:13:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "349:75:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 6, "name": "address", "nodeType": "ElementaryTypeName", "src": "349:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030", "id": 7, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "382:42:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x0000000000000000000000000000000000000000"}, "visibility": "internal"}, {"constant": false, "id": 10, "mutability": "mutable", "name": "rewardHashOnion", "nameLocation": "438:15:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "430:23:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 9, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "430:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "5142042d", "id": 13, "mutability": "mutable", "name": "rewardHashOnionHistoryList", "nameLocation": "476:26:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "459:43:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 11, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "459:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 12, "nodeType": "ArrayTypeName", "src": "459:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "public"}, {"constant": false, "functionSelector": "8da4d3c9", "id": 15, "mutability": "mutable", "name": "claimCount", "nameLocation": "523:10:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "508:25:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 14, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "508:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": true, "id": 18, "mutability": "constant", "name": "TRANSFERS_PER_ONION", "nameLocation": "556:19:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "539:41:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "539:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "3230", "id": 17, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "578:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_20_by_1", "typeString": "int_const 20"}, "value": "20"}, "visibility": "internal"}, {"constant": false, "id": 22, "mutability": "mutable", "name": "claimedTransferHashes", "nameLocation": "612:21:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "587:46:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 21, "keyType": {"id": 19, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "595:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "587:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 20, "name": "bool", "nodeType": "ElementaryTypeName", "src": "606:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "internal"}, {"constant": false, "id": 24, "mutability": "mutable", "name": "indexReportedHashOnion", "nameLocation": "716:22:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "708:30:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 23, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "708:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "546343aedb3e113cf931aed78f2e83902c295dc1c5296d4a82a0dddab915b484", "id": 31, "name": "Reward", "nameLocation": "783:6:0", "nodeType": "EventDefinition", "parameters": {"id": 30, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 27, "indexed": false, "mutability": "mutable", "name": "rewardData", "nameLocation": "811:10:0", "nodeType": "VariableDeclaration", "scope": 31, "src": "790:31:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData"}, "typeName": {"id": 26, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 25, "name": "StructLib.RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 1084, "src": "790:20:0"}, "referencedDeclaration": 1084, "src": "790:20:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_storage_ptr", "typeString": "struct StructLib.RewardData"}}, "visibility": "internal"}, {"constant": false, "id": 29, "indexed": false, "mutability": "mutable", "name": "nonce", "nameLocation": "828:5:0", "nodeType": "VariableDeclaration", "scope": 31, "src": "823:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 28, "name": "uint", "nodeType": "ElementaryTypeName", "src": "823:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "789:45:0"}, "src": "777:58:0"}, {"anonymous": false, "eventSelector": "c88cea9cd8278eca3c21369ddae1825e3118d7fc925beb6297e5a7672b9d4895", "id": 35, "name": "NewHashOnionCreated", "nameLocation": "846:19:0", "nodeType": "EventDefinition", "parameters": {"id": 34, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 33, "indexed": false, "mutability": "mutable", "name": "hash", "nameLocation": "874:4:0", "nodeType": "VariableDeclaration", "scope": 35, "src": "866:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 32, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "866:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "865:14:0"}, "src": "840:40:0"}, {"anonymous": false, "eventSelector": "9034ac9f41d98d9bb9fe35278080334324d0ecebe02e47481bb00e524fb40aa6", "id": 39, "name": "NewHashOnionDeclaredToL1", "nameLocation": "891:24:0", "nodeType": "EventDefinition", "parameters": {"id": 38, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 37, "indexed": false, "mutability": "mutable", "name": "hash", "nameLocation": "924:4:0", "nodeType": "VariableDeclaration", "scope": 39, "src": "916:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 36, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "916:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "915:14:0"}, "src": "885:45:0"}, {"constant": true, "id": 42, "mutability": "constant", "name": "ovmL2CrossDomainMessenger", "nameLocation": "953:25:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "936:87:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 40, "name": "address", "nodeType": "ElementaryTypeName", "src": "936:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303037", "id": 41, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "981:42:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4200000000000000000000000000000000000007"}, "visibility": "internal"}, {"constant": false, "id": 44, "mutability": "mutable", "name": "l1DomainSideContractAddress", "nameLocation": "1093:27:0", "nodeType": "VariableDeclaration", "scope": 308, "src": "1085:35:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 43, "name": "address", "nodeType": "ElementaryTypeName", "src": "1085:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"body": {"id": 54, "nodeType": "Block", "src": "1325:75:0", "statements": [{"expression": {"id": 52, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 50, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44, "src": "1335:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 51, "name": "_l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "1365:28:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1335:58:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 53, "nodeType": "ExpressionStatement", "src": "1335:58:0"}]}, "documentation": {"id": 45, "nodeType": "StructuredDocumentation", "src": "1186:85:0", "text": "@param _l1DomainSideContractAddress is the address of the contract in etherium L1"}, "id": 55, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 48, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 47, "mutability": "mutable", "name": "_l1DomainSideContractAddress", "nameLocation": "1296:28:0", "nodeType": "VariableDeclaration", "scope": 55, "src": "1288:36:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 46, "name": "address", "nodeType": "ElementaryTypeName", "src": "1288:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1287:38:0"}, "returnParameters": {"id": 49, "nodeType": "ParameterList", "parameters": [], "src": "1325:0:0"}, "scope": 308, "src": "1276:124:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 220, "nodeType": "Block", "src": "1737:1389:0", "statements": [{"assignments": [63], "declarations": [{"constant": false, "id": 63, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1755:16:0", "nodeType": "VariableDeclaration", "scope": 220, "src": "1747:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 62, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1747:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 70, "initialValue": {"arguments": [{"arguments": [{"id": 67, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "1792:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}], "expression": {"id": 65, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "1781:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 66, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "1781:10:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 68, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1781:25:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 64, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "1774:6:0", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 69, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1774:33:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1747:60:0"}, {"expression": {"arguments": [{"id": 75, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1825:40:0", "subExpression": {"baseExpression": {"id": 72, "name": "claimedTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22, "src": "1826:21:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 74, "indexExpression": {"id": 73, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "1848:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1826:39:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616e7366657220616c726561647920636c61696d6564212121", "id": 76, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1867:29:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_bbf003ac5916af4d8382e0da6a5c8cfe9cf43ea4a880980e22faae8fcfa58db6", "typeString": "literal_string \"Transfer already claimed!!!\""}, "value": "Transfer already claimed!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_bbf003ac5916af4d8382e0da6a5c8cfe9cf43ea4a880980e22faae8fcfa58db6", "typeString": "literal_string \"Transfer already claimed!!!\""}], "id": 71, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1817:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 77, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1817:80:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 78, "nodeType": "ExpressionStatement", "src": "1817:80:0"}, {"expression": {"id": 83, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 79, "name": "claimedTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22, "src": "1907:21:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 81, "indexExpression": {"id": 80, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "1929:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1907:39:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 82, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1949:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "1907:46:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 84, "nodeType": "ExpressionStatement", "src": "1907:46:0"}, {"assignments": [86], "declarations": [{"constant": false, "id": 86, "mutability": "mutable", "name": "lPfee", "nameLocation": "1972:5:0", "nodeType": "VariableDeclaration", "scope": 220, "src": "1964:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 85, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1964:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 90, "initialValue": {"arguments": [{"id": 88, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "1989:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}], "id": 87, "name": "getLPFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "1980:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_TransferData_$1075_memory_ptr_$returns$_t_uint256_$", "typeString": "function (struct StructLib.TransferData memory) view returns (uint256)"}}, "id": 89, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1980:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1964:39:0"}, {"expression": {"id": 102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 91, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2013:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 93, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 1066, "src": "2013:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 94, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2036:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 95, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 1066, "src": "2036:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 99, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 96, "name": "lPfee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 86, "src": "2060:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"expression": {"id": 97, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2068:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 98, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 1068, "src": "2068:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2060:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 100, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2059:27:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2036:50:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2013:73:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 103, "nodeType": "ExpressionStatement", "src": "2013:73:0"}, {"assignments": [108], "declarations": [{"constant": false, "id": 108, "mutability": "mutable", "name": "rewardData", "nameLocation": "2125:10:0", "nodeType": "VariableDeclaration", "scope": 220, "src": "2097:38:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData"}, "typeName": {"id": 107, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 106, "name": "StructLib.RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 1084, "src": "2097:20:0"}, "referencedDeclaration": 1084, "src": "2097:20:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_storage_ptr", "typeString": "struct StructLib.RewardData"}}, "visibility": "internal"}], "id": 109, "nodeType": "VariableDeclarationStatement", "src": "2097:38:0"}, {"expression": {"id": 114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 110, "name": "rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "2145:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 112, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 1077, "src": "2145:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 113, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 63, "src": "2175:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "2145:46:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 115, "nodeType": "ExpressionStatement", "src": "2145:46:0"}, {"expression": {"id": 121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 116, "name": "rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "2201:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 118, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1079, "src": "2201:23:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 119, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2227:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 120, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1062, "src": "2227:26:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2201:52:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 122, "nodeType": "ExpressionStatement", "src": "2201:52:0"}, {"expression": {"id": 128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 123, "name": "rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "2263:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 125, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 1081, "src": "2263:18:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 126, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2284:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2284:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2263:31:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 129, "nodeType": "ExpressionStatement", "src": "2263:31:0"}, {"expression": {"id": 137, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 130, "name": "rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "2304:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 132, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amountPlusFee", "nodeType": "MemberAccess", "referencedDeclaration": 1083, "src": "2304:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 136, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 133, "name": "lPfee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 86, "src": "2331:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 134, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2339:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 135, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 1066, "src": "2339:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2331:28:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2304:55:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 138, "nodeType": "ExpressionStatement", "src": "2304:55:0"}, {"expression": {"id": 147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 139, "name": "rewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2369:15:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 143, "name": "rewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2405:15:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 144, "name": "rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "2422:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}], "expression": {"id": 141, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2394:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 142, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "2394:10:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 145, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2394:39:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 140, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "2387:6:0", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 146, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2387:47:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "2369:65:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 148, "nodeType": "ExpressionStatement", "src": "2369:65:0"}, {"eventCall": {"arguments": [{"id": 150, "name": "rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 108, "src": "2457:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, {"expression": {"id": 151, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2469:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 152, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "nonce", "nodeType": "MemberAccess", "referencedDeclaration": 1074, "src": "2469:19:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 149, "name": "Reward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "2450:6:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_RewardData_$1084_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (struct StructLib.RewardData memory,uint256)"}}, "id": 153, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2450:39:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 154, "nodeType": "EmitStatement", "src": "2445:44:0"}, {"expression": {"id": 156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2499:12:0", "subExpression": {"id": 155, "name": "claimCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "2499:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 157, "nodeType": "ExpressionStatement", "src": "2499:12:0"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 162, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 158, "name": "claimCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "2525:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"id": 159, "name": "TRANSFERS_PER_ONION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18, "src": "2538:19:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2525:32:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 161, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2561:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2525:37:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 174, "nodeType": "IfStatement", "src": "2522:169:0", "trueBody": {"id": 173, "nodeType": "Block", "src": "2563:128:0", "statements": [{"expression": {"arguments": [{"id": 166, "name": "rewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2609:15:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 163, "name": "rewardHashOnionHistoryList", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "2577:26:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage", "typeString": "bytes32[] storage ref"}}, "id": 165, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "2577:31:0", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$", "typeString": "function (bytes32[] storage pointer,bytes32)"}}, "id": 167, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2577:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 168, "nodeType": "ExpressionStatement", "src": "2577:48:0"}, {"eventCall": {"arguments": [{"id": 170, "name": "rewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2664:15:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 169, "name": "NewHashOnionCreated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "2644:19:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2644:36:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 172, "nodeType": "EmitStatement", "src": "2639:41:0"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 178, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 175, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2704:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 176, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1062, "src": "2704:26:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 177, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "2734:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2704:43:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 218, "nodeType": "Block", "src": "2938:182:0", "statements": [{"assignments": [201], "declarations": [{"constant": false, "id": 201, "mutability": "mutable", "name": "token", "nameLocation": "2958:5:0", "nodeType": "VariableDeclaration", "scope": 218, "src": "2952:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}, "typeName": {"id": 200, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 199, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1018, "src": "2952:5:0"}, "referencedDeclaration": 1018, "src": "2952:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 206, "initialValue": {"arguments": [{"expression": {"id": 203, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2972:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 204, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1062, "src": "2972:26:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 202, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1018, "src": "2966:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$1018_$", "typeString": "type(contract ERC20)"}}, "id": 205, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2966:33:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "2952:47:0"}, {"expression": {"arguments": [{"expression": {"id": 210, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3032:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 211, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3032:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 212, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "3044:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 213, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 1064, "src": "3044:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 214, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "3088:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 215, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 1066, "src": "3088:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 207, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 201, "src": "3013:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "id": 209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1001, "src": "3013:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 216, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3013:96:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 217, "nodeType": "ExpressionStatement", "src": "3013:96:0"}]}, "id": 219, "nodeType": "IfStatement", "src": "2701:419:0", "trueBody": {"id": 198, "nodeType": "Block", "src": "2748:186:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 184, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 180, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2770:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 181, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "2770:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 182, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2783:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 183, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 1066, "src": "2783:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2770:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4572726f72203a204e6f6e2053756666656369656e742066756e64732121212121212121", "id": 185, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2805:38:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}, "value": "Error : Non Suffecient funds!!!!!!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}], "id": 179, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2762:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 186, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2762:82:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 187, "nodeType": "ExpressionStatement", "src": "2762:82:0"}, {"expression": {"arguments": [{"expression": {"id": 194, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2902:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 195, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 1066, "src": "2902:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 190, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2866:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 191, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 1064, "src": "2866:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 189, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2858:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 188, "name": "address", "nodeType": "ElementaryTypeName", "src": "2858:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 192, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2858:34:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 193, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "2858:43:0", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 196, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2858:65:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 197, "nodeType": "ExpressionStatement", "src": "2858:65:0"}]}}]}, "documentation": {"id": 56, "nodeType": "StructuredDocumentation", "src": "1406:250:0", "text": "@notice liquidity providers can provide liquidity to be transfered to the \n @notice destination address and register a claim to the liquidity fee\n @param _transferData struct emitted from the Transaction event at the source contract"}, "functionSelector": "7afb3a9f", "id": 221, "implemented": true, "kind": "function", "modifiers": [], "name": "claim", "nameLocation": "1670:5:0", "nodeType": "FunctionDefinition", "parameters": {"id": 60, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 59, "mutability": "mutable", "name": "_transferData", "nameLocation": "1706:13:0", "nodeType": "VariableDeclaration", "scope": 221, "src": "1676:43:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData"}, "typeName": {"id": 58, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 57, "name": "StructLib.TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 1075, "src": "1676:22:0"}, "referencedDeclaration": 1075, "src": "1676:22:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_storage_ptr", "typeString": "struct StructLib.TransferData"}}, "visibility": "internal"}], "src": "1675:45:0"}, "returnParameters": {"id": 61, "nodeType": "ParameterList", "parameters": [], "src": "1737:0:0"}, "scope": 308, "src": "1661:1465:0", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 263, "nodeType": "Block", "src": "3362:618:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 229, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 226, "name": "indexReportedHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "3380:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 227, "name": "rewardHashOnionHistoryList", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "3405:26:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage", "typeString": "bytes32[] storage ref"}}, "id": 228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3405:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3380:58:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f206e65772068617368206f6e696f6e7320746f207265706f72742e", "id": 230, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3440:31:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_945e68d3f643065600804d5aa1073281d7ff743f1cf1cf95bc2ae2b60b59c9ad", "typeString": "literal_string \"No new hash onions to report.\""}, "value": "No new hash onions to report."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_945e68d3f643065600804d5aa1073281d7ff743f1cf1cf95bc2ae2b60b59c9ad", "typeString": "literal_string \"No new hash onions to report.\""}], "id": 225, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3372:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 231, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3372:100:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 232, "nodeType": "ExpressionStatement", "src": "3372:100:0"}, {"eventCall": {"arguments": [{"baseExpression": {"id": 234, "name": "rewardHashOnionHistoryList", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "3521:26:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage", "typeString": "bytes32[] storage ref"}}, "id": 236, "indexExpression": {"id": 235, "name": "indexReportedHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "3548:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3521:50:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 233, "name": "NewHashOnionDeclaredToL1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "3496:24:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 237, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3496:76:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 238, "nodeType": "EmitStatement", "src": "3491:81:0"}, {"assignments": [241], "declarations": [{"constant": false, "id": 241, "mutability": "mutable", "name": "l2cdm", "nameLocation": "3604:5:0", "nodeType": "VariableDeclaration", "scope": 263, "src": "3582:27:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1057", "typeString": "contract ICrossDomainMessenger"}, "typeName": {"id": 240, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 239, "name": "ICrossDomainMessenger", "nodeType": "IdentifierPath", "referencedDeclaration": 1057, "src": "3582:21:0"}, "referencedDeclaration": 1057, "src": "3582:21:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1057", "typeString": "contract ICrossDomainMessenger"}}, "visibility": "internal"}], "id": 245, "initialValue": {"arguments": [{"id": 243, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42, "src": "3634:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 242, "name": "ICrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "3612:21:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$1057_$", "typeString": "type(contract ICrossDomainMessenger)"}}, "id": 244, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3612:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1057", "typeString": "contract ICrossDomainMessenger"}}, "nodeType": "VariableDeclarationStatement", "src": "3582:78:0"}, {"expression": {"arguments": [{"id": 249, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44, "src": "3701:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "6465636c6172654e6577486173684f6e696f6e48656164546f536f75726365286279746573333229", "id": 252, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3783:42:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e5f3511b293837b2ddf066de0cf788a3be5dbb99f554e3af08e8a8f6eaf1c522", "typeString": "literal_string \"declareNewHashOnionHeadToSource(bytes32)\""}, "value": "declareNewHashOnionHeadToSource(bytes32)"}, {"baseExpression": {"id": 253, "name": "rewardHashOnionHistoryList", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "3843:26:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage", "typeString": "bytes32[] storage ref"}}, "id": 255, "indexExpression": {"id": 254, "name": "indexReportedHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "3870:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3843:50:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_e5f3511b293837b2ddf066de0cf788a3be5dbb99f554e3af08e8a8f6eaf1c522", "typeString": "literal_string \"declareNewHashOnionHeadToSource(bytes32)\""}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 250, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "3742:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 251, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodeWithSignature", "nodeType": "MemberAccess", "src": "3742:23:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (string memory) pure returns (bytes memory)"}}, "id": 256, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3742:165:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "31303030303030", "id": 257, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3921:7:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1000000"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}], "expression": {"id": 246, "name": "l2cdm", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 241, "src": "3670:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1057", "typeString": "contract ICrossDomainMessenger"}}, "id": 248, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sendMessage", "nodeType": "MemberAccess", "referencedDeclaration": 1056, "src": "3670:17:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$", "typeString": "function (address,bytes memory,uint32) external"}}, "id": 258, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3670:269:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 259, "nodeType": "ExpressionStatement", "src": "3670:269:0"}, {"expression": {"id": 261, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3949:24:0", "subExpression": {"id": 260, "name": "indexReportedHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "3949:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 262, "nodeType": "ExpressionStatement", "src": "3949:24:0"}]}, "documentation": {"id": 222, "nodeType": "StructuredDocumentation", "src": "3136:174:0", "text": "@notice sends new hash onions one by one to the l1 side contract to be sent to the source side contract\n @notice this function is rollup dependant - Optimism Kovan"}, "functionSelector": "80b92f9a", "id": 264, "implemented": true, "kind": "function", "modifiers": [], "name": "declareNewHashOnionHeadToL1", "nameLocation": "3324:27:0", "nodeType": "FunctionDefinition", "parameters": {"id": 223, "nodeType": "ParameterList", "parameters": [], "src": "3351:2:0"}, "returnParameters": {"id": 224, "nodeType": "ParameterList", "parameters": [], "src": "3362:0:0"}, "scope": 308, "src": "3315:665:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 306, "nodeType": "Block", "src": "4286:378:0", "statements": [{"assignments": [274], "declarations": [{"constant": false, "id": 274, "mutability": "mutable", "name": "currentTime", "nameLocation": "4304:11:0", "nodeType": "VariableDeclaration", "scope": 306, "src": "4296:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 273, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4296:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 277, "initialValue": {"expression": {"id": 275, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4318:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 276, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "4318:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4296:34:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 282, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 279, "name": "currentTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 274, "src": "4349:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 280, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 268, "src": "4364:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 281, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 1070, "src": "4364:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4349:38:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4572726f72203a20626c6f636b206e756d626572206973206c657373207468616e20737461727454696d65", "id": 283, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4389:45:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_de9149dc26b0b0aec6ec5ba4005aadaefdc21d4b1596ce1a6ad46cc3b2e9590a", "typeString": "literal_string \"Error : block number is less than startTime\""}, "value": "Error : block number is less than startTime"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_de9149dc26b0b0aec6ec5ba4005aadaefdc21d4b1596ce1a6ad46cc3b2e9590a", "typeString": "literal_string \"Error : block number is less than startTime\""}], "id": 278, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4341:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 284, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4341:94:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 285, "nodeType": "ExpressionStatement", "src": "4341:94:0"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 292, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 286, "name": "currentTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 274, "src": "4449:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 291, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 287, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 268, "src": "4464:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 288, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 1070, "src": "4464:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 289, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 268, "src": "4490:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 290, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "feeRampup", "nodeType": "MemberAccess", "referencedDeclaration": 1072, "src": "4490:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4464:49:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4449:64:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 303, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 296, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 268, "src": "4585:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 297, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 1068, "src": "4585:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 301, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 298, "name": "currentTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 274, "src": "4606:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"expression": {"id": 299, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 268, "src": "4620:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 300, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 1070, "src": "4620:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4606:37:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 302, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4605:39:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4585:59:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 272, "id": 304, "nodeType": "Return", "src": "4578:66:0"}, "id": 305, "nodeType": "IfStatement", "src": "4446:198:0", "trueBody": {"expression": {"expression": {"id": 293, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 268, "src": "4534:13:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 294, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 1068, "src": "4534:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 272, "id": 295, "nodeType": "Return", "src": "4527:24:0"}}]}, "documentation": {"id": 265, "nodeType": "StructuredDocumentation", "src": "3986:201:0", "text": "@notice calculates the liquidity provider fee based on the feeRampup\n @param _transferData struct emitted from the Transaction event at the source contract\n @return the calculated fee"}, "id": 307, "implemented": true, "kind": "function", "modifiers": [], "name": "getLPFee", "nameLocation": "4201:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 269, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 268, "mutability": "mutable", "name": "_transferData", "nameLocation": "4240:13:0", "nodeType": "VariableDeclaration", "scope": 307, "src": "4210:43:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData"}, "typeName": {"id": 267, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 266, "name": "StructLib.TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 1075, "src": "4210:22:0"}, "referencedDeclaration": 1075, "src": "4210:22:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_storage_ptr", "typeString": "struct StructLib.TransferData"}}, "visibility": "internal"}], "src": "4209:45:0"}, "returnParameters": {"id": 272, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 271, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 307, "src": "4277:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 270, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4277:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4276:9:0"}, "scope": 308, "src": "4192:472:0", "stateMutability": "view", "virtual": false, "visibility": "private"}], "scope": 309, "src": "306:4360:0", "usedErrors": []}], "src": "31:4635:0"}, "bytecode": "608060405234801561001057600080fd5b50604051610afc380380610afc83398101604081905261002f91610054565b600580546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610a69806100936000396000f3fe60806040526004361061003f5760003560e01c80635142042d146100445780637afb3a9f1461007657806380b92f9a1461008b5780638da4d3c9146100a0575b600080fd5b34801561005057600080fd5b5061006461005f366004610795565b6100b6565b60405190815260200160405180910390f35b6100896100843660046107ca565b6100d7565b005b34801561009757600080fd5b50610089610549565b3480156100ac57600080fd5b5061006460025481565b600181815481106100c657600080fd5b600091825260209091200154905081565b600060028260405160200161013e919081516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b60408051601f198184030181529082905261015891610894565b602060405180830381855afa158015610175573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061019891906108b0565b60008181526003602052604090205490915060ff16156101ff5760405162461bcd60e51b815260206004820152601b60248201527f5472616e7366657220616c726561647920636c61696d6564212121000000000060448201526064015b60405180910390fd5b6000818152600360205260408120805460ff19166001179055610221836106e0565b905082606001518161023391906108df565b836040015161024291906108f6565b60408481019182528051608081018252600060208201818152928201818152606083019190915285825286516001600160a01b031690925233909152905161028a90836108f6565b60608201526000546040516002916102a691849060200161090e565b60408051601f19818403018152908290526102c091610894565b602060405180830381855afa1580156102dd573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061030091906108b0565b60005560c084015160408051835181526020808501516001600160a01b0390811691830191909152848301511681830152606080850151908201526080810192909252517f546343aedb3e113cf931aed78f2e83902c295dc1c5296d4a82a0dddab915b4849181900360a00190a16002805490600061037e83610951565b91905055506014600254610392919061096a565b600003610403576000805460018054808201825592527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69091018190556040519081527fc88cea9cd8278eca3c21369ddae1825e3118d7fc925beb6297e5a7672b9d48959060200160405180910390a15b83516001600160a01b03166104b95783604001513410156104725760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084016101f6565b83602001516001600160a01b03166108fc85604001519081150290604051600060405180830381858888f193505050501580156104b3573d6000803e3d6000fd5b50610543565b8351602085015160408087015190516323b872dd60e01b81523360048201526001600160a01b0392831660248201526044810191909152908216906323b872dd906064016020604051808303816000875af115801561051c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610540919061098c565b50505b50505050565b6001546004541061059c5760405162461bcd60e51b815260206004820152601d60248201527f4e6f206e65772068617368206f6e696f6e7320746f207265706f72742e00000060448201526064016101f6565b7f9034ac9f41d98d9bb9fe35278080334324d0ecebe02e47481bb00e524fb40aa66001600454815481106105d2576105d26109ae565b90600052602060002001546040516105ec91815260200190565b60405180910390a1600554600454600180546007602160991b01938493633dbb202b936001600160a01b03909216928110610629576106296109ae565b906000526020600020015460405160240161064691815260200190565b60408051601f198184030181529181526020820180516001600160e01b031663e5f3511b60e01b1790525160e084901b6001600160e01b0319168152610695929190620f4240906004016109c4565b600060405180830381600087803b1580156106af57600080fd5b505af11580156106c3573d6000803e3d6000fd5b5050600480549250905060006106d883610951565b919050555050565b6080810151600090439081101561074d5760405162461bcd60e51b815260206004820152602b60248201527f4572726f72203a20626c6f636b206e756d626572206973206c6573732074686160448201526a6e20737461727454696d6560a81b60648201526084016101f6565b8260a00151836080015161076191906108f6565b81106107705750506060015190565b608083015161077f90826108df565b836060015161078e9190610a14565b9392505050565b6000602082840312156107a757600080fd5b5035919050565b80356001600160a01b03811681146107c557600080fd5b919050565b600060e082840312156107dc57600080fd5b60405160e0810181811067ffffffffffffffff8211171561080d57634e487b7160e01b600052604160045260246000fd5b604052610819836107ae565b8152610827602084016107ae565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201528091505092915050565b60005b8381101561088357818101518382015260200161086b565b838111156105435750506000910152565b600082516108a6818460208701610868565b9190910192915050565b6000602082840312156108c257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156108f1576108f16108c9565b500390565b60008219821115610909576109096108c9565b500190565b82815260a0810161078e6020830184805182526020808201516001600160a01b039081169184019190915260408083015190911690830152606090810151910152565b600060018201610963576109636108c9565b5060010190565b60008261098757634e487b7160e01b600052601260045260246000fd5b500690565b60006020828403121561099e57600080fd5b8151801515811461078e57600080fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038416815260606020820152600083518060608401526109f1816080850160208801610868565b63ffffffff93909316604083015250601f91909101601f19160160800192915050565b6000816000190483118215151615610a2e57610a2e6108c9565b50029056fea2646970667358221220dd75c0ed0c0ae430b07c28f3e9c28d3d8c8ae02115f03ba83f2608d0145e488e64736f6c634300080d0033", "bytecodeSha1": "1c12e228cb0d381ab450e19533ea7213352f635b", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "DestinationDomainSideBridge", "coverageMap": {"branches": {"0": {"DestinationDomainSideBridge.claim": {"22": [1825, 1865, true], "23": [2525, 2562, false], "24": [2704, 2747, false], "25": [2770, 2803, true]}, "DestinationDomainSideBridge.declareNewHashOnionHeadToL1": {"26": [3380, 3438, true]}, "DestinationDomainSideBridge.getLPFee": {"27": [4349, 4387, true], "28": [4449, 4513, false]}}, "3": {}, "4": {}}, "statements": {"0": {"DestinationDomainSideBridge.claim": {"0": [1817, 1897], "1": [1907, 1953], "2": [2013, 2086], "3": [2145, 2191], "4": [2201, 2253], "5": [2263, 2294], "6": [2304, 2359], "7": [2369, 2434], "8": [2445, 2489], "9": [2499, 2511], "10": [2577, 2625], "11": [2639, 2680], "12": [2762, 2844], "13": [2858, 2923], "14": [3013, 3109]}, "DestinationDomainSideBridge.declareNewHashOnionHeadToL1": {"15": [3372, 3472], "16": [3491, 3572], "17": [3670, 3939], "18": [3949, 3973]}, "DestinationDomainSideBridge.getLPFee": {"19": [4341, 4435], "20": [4527, 4551], "21": [4578, 4644]}}, "3": {}, "4": {}}}, "dependencies": ["ERC20", "ICrossDomainMessenger"], "deployedBytecode": "60806040526004361061003f5760003560e01c80635142042d146100445780637afb3a9f1461007657806380b92f9a1461008b5780638da4d3c9146100a0575b600080fd5b34801561005057600080fd5b5061006461005f366004610795565b6100b6565b60405190815260200160405180910390f35b6100896100843660046107ca565b6100d7565b005b34801561009757600080fd5b50610089610549565b3480156100ac57600080fd5b5061006460025481565b600181815481106100c657600080fd5b600091825260209091200154905081565b600060028260405160200161013e919081516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b60408051601f198184030181529082905261015891610894565b602060405180830381855afa158015610175573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061019891906108b0565b60008181526003602052604090205490915060ff16156101ff5760405162461bcd60e51b815260206004820152601b60248201527f5472616e7366657220616c726561647920636c61696d6564212121000000000060448201526064015b60405180910390fd5b6000818152600360205260408120805460ff19166001179055610221836106e0565b905082606001518161023391906108df565b836040015161024291906108f6565b60408481019182528051608081018252600060208201818152928201818152606083019190915285825286516001600160a01b031690925233909152905161028a90836108f6565b60608201526000546040516002916102a691849060200161090e565b60408051601f19818403018152908290526102c091610894565b602060405180830381855afa1580156102dd573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061030091906108b0565b60005560c084015160408051835181526020808501516001600160a01b0390811691830191909152848301511681830152606080850151908201526080810192909252517f546343aedb3e113cf931aed78f2e83902c295dc1c5296d4a82a0dddab915b4849181900360a00190a16002805490600061037e83610951565b91905055506014600254610392919061096a565b600003610403576000805460018054808201825592527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69091018190556040519081527fc88cea9cd8278eca3c21369ddae1825e3118d7fc925beb6297e5a7672b9d48959060200160405180910390a15b83516001600160a01b03166104b95783604001513410156104725760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084016101f6565b83602001516001600160a01b03166108fc85604001519081150290604051600060405180830381858888f193505050501580156104b3573d6000803e3d6000fd5b50610543565b8351602085015160408087015190516323b872dd60e01b81523360048201526001600160a01b0392831660248201526044810191909152908216906323b872dd906064016020604051808303816000875af115801561051c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610540919061098c565b50505b50505050565b6001546004541061059c5760405162461bcd60e51b815260206004820152601d60248201527f4e6f206e65772068617368206f6e696f6e7320746f207265706f72742e00000060448201526064016101f6565b7f9034ac9f41d98d9bb9fe35278080334324d0ecebe02e47481bb00e524fb40aa66001600454815481106105d2576105d26109ae565b90600052602060002001546040516105ec91815260200190565b60405180910390a1600554600454600180546007602160991b01938493633dbb202b936001600160a01b03909216928110610629576106296109ae565b906000526020600020015460405160240161064691815260200190565b60408051601f198184030181529181526020820180516001600160e01b031663e5f3511b60e01b1790525160e084901b6001600160e01b0319168152610695929190620f4240906004016109c4565b600060405180830381600087803b1580156106af57600080fd5b505af11580156106c3573d6000803e3d6000fd5b5050600480549250905060006106d883610951565b919050555050565b6080810151600090439081101561074d5760405162461bcd60e51b815260206004820152602b60248201527f4572726f72203a20626c6f636b206e756d626572206973206c6573732074686160448201526a6e20737461727454696d6560a81b60648201526084016101f6565b8260a00151836080015161076191906108f6565b81106107705750506060015190565b608083015161077f90826108df565b836060015161078e9190610a14565b9392505050565b6000602082840312156107a757600080fd5b5035919050565b80356001600160a01b03811681146107c557600080fd5b919050565b600060e082840312156107dc57600080fd5b60405160e0810181811067ffffffffffffffff8211171561080d57634e487b7160e01b600052604160045260246000fd5b604052610819836107ae565b8152610827602084016107ae565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201528091505092915050565b60005b8381101561088357818101518382015260200161086b565b838111156105435750506000910152565b600082516108a6818460208701610868565b9190910192915050565b6000602082840312156108c257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156108f1576108f16108c9565b500390565b60008219821115610909576109096108c9565b500190565b82815260a0810161078e6020830184805182526020808201516001600160a01b039081169184019190915260408083015190911690830152606090810151910152565b600060018201610963576109636108c9565b5060010190565b60008261098757634e487b7160e01b600052601260045260246000fd5b500690565b60006020828403121561099e57600080fd5b8151801515811461078e57600080fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038416815260606020820152600083518060608401526109f1816080850160208801610868565b63ffffffff93909316604083015250601f91909101601f19160160800192915050565b6000816000190483118215151615610a2e57610a2e6108c9565b50029056fea2646970667358221220dd75c0ed0c0ae430b07c28f3e9c28d3d8c8ae02115f03ba83f2608d0145e488e64736f6c634300080d0033", "deployedSourceMap": "306:4360:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:43;;;;;;;;;;-1:-1:-1;459:43:0;;;;;:::i;:::-;;:::i;:::-;;;345:25:6;;;333:2;318:18;459:43:0;;;;;;;1661:1465;;;;;;:::i;:::-;;:::i;:::-;;3315:665;;;;;;;;;;;;;:::i;508:25::-;;;;;;;;;;;;;;;;459:43;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;459:43:0;:::o;1661:1465::-;1747:24;1774:33;1792:13;1781:25;;;;;;;1969:13:6;;-1:-1:-1;;;;;1965:22:6;;;1947:41;;2048:4;2036:17;;;2030:24;2026:33;;;2004:20;;;1997:63;2116:4;2104:17;;;2098:24;2076:20;;;2069:54;2179:4;2167:17;;;2161:24;2139:20;;;2132:54;2242:4;2230:17;;;2224:24;2202:20;;;2195:54;1927:3;2293:17;;;2287:24;2265:20;;;2258:54;2368:4;2356:17;;;2350:24;2328:20;;;2321:54;;;;1896:3;1881:19;;1702:679;1781:25:0;;;;-1:-1:-1;;1781:25:0;;;;;;;;;;1774:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1826:39;;;;:21;:39;;;;;;1747:60;;-1:-1:-1;1826:39:0;;1825:40;1817:80;;;;-1:-1:-1;;;1817:80:0;;3319:2:6;1817:80:0;;;3301:21:6;3358:2;3338:18;;;3331:30;3397:29;3377:18;;;3370:57;3444:18;;1817:80:0;;;;;;;;;1907:39;;;;:21;:39;;;;;:46;;-1:-1:-1;;1907:46:0;1949:4;1907:46;;;1980:23;1989:13;1980:8;:23::i;:::-;1964:39;;2068:13;:17;;;2060:5;:25;;;;:::i;:::-;2036:13;:20;;;:50;;;;:::i;:::-;2013:20;;;;:73;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:46:0;;;2227:26;;-1:-1:-1;;;;;2201:52:0;;;;2284:10;2263:31;;;2339:20;;2331:28;;:5;:28;:::i;:::-;2304:24;;;:55;2405:15;;2394:39;;2387:47;;2394:39;;2304:10;;2394:39;;;:::i;:::-;;;;-1:-1:-1;;2394:39:0;;;;;;;;;;2387:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2369:15;:65;2469:19;;;;2450:39;;;3944:12:6;;3932:25;;4003:4;3992:16;;;3986:23;-1:-1:-1;;;;;4079:21:6;;;4063:14;;;4056:45;;;;4143:16;;;4137:23;4133:32;4117:14;;;4110:56;4215:4;4204:16;;;4198:23;4182:14;;;4175:47;4874:3;4859:19;;4852:35;;;;2450:39:0;;;;;;4783:3:6;2450:39:0;;;2499:10;:12;;;:10;:12;;;:::i;:::-;;;;;;578:2;2525:10;;:32;;;;:::i;:::-;2561:1;2525:37;2522:169;;2609:15;;;2577:26;:48;;;;;;;;;;;;;;;;2644:36;;345:25:6;;;2644:36:0;;333:2:6;318:18;2644:36:0;;;;;;;2522:169;2704:26;;-1:-1:-1;;;;;2704:43:0;2701:419;;2783:13;:20;;;2770:9;:33;;2762:82;;;;-1:-1:-1;;;2762:82:0;;5454:2:6;2762:82:0;;;5436:21:6;5493:2;5473:18;;;5466:30;5532:34;5512:18;;;5505:62;-1:-1:-1;;;5583:18:6;;;5576:34;5627:19;;2762:82:0;5252:400:6;2762:82:0;2866:13;:25;;;-1:-1:-1;;;;;2858:43:0;:65;2902:13;:20;;;2858:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2701:419;;;2972:26;;3044:25;;;;3088:20;;;;;3013:96;;-1:-1:-1;;;3013:96:0;;3032:10;3013:96;;;5897:34:6;-1:-1:-1;;;;;5967:15:6;;;5947:18;;;5940:43;5999:18;;;5992:34;;;;3013:18:0;;;;;;5832::6;;3013:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2938:182;2701:419;1737:1389;;;1661:1465;:::o;3315:665::-;3405:26;:33;3380:22;;:58;3372:100;;;;-1:-1:-1;;;3372:100:0;;6521:2:6;3372:100:0;;;6503:21:6;6560:2;6540:18;;;6533:30;6599:31;6579:18;;;6572:59;6648:18;;3372:100:0;6319:353:6;3372:100:0;3496:76;3521:26;3548:22;;3521:50;;;;;;;;:::i;:::-;;;;;;;;;3496:76;;;;345:25:6;;333:2;318:18;;199:177;3496:76:0;;;;;;;;3701:27;;3870:22;;3701:27;3843:50;;-1:-1:-1;;;;;981:42:0;;;3670:17;;-1:-1:-1;;;;;3701:27:0;;;;3843:50;;;;;;:::i;:::-;;;;;;;;;3742:165;;;;;;345:25:6;;333:2;318:18;;199:177;3742:165:0;;;;-1:-1:-1;;3742:165:0;;;;;;;;;;;;;;-1:-1:-1;;;;;3742:165:0;-1:-1:-1;;;3742:165:0;;;3670:269;;;;;-1:-1:-1;;;;;;3670:269:0;;;;;;3742:165;3921:7;;3670:269;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3949:22:0;:24;;;-1:-1:-1;3949:22:0;-1:-1:-1;3949:22:0;:24;;;:::i;:::-;;;;;;3362:618;3315:665::o;4192:472::-;4364:23;;;;4277:7;;4318:12;;4349:38;;;4341:94;;;;-1:-1:-1;;;4341:94:0;;7597:2:6;4341:94:0;;;7579:21:6;7636:2;7616:18;;;7609:30;7675:34;7655:18;;;7648:62;-1:-1:-1;;;7726:18:6;;;7719:41;7777:19;;4341:94:0;7395:407:6;4341:94:0;4490:13;:23;;;4464:13;:23;;;:49;;;;:::i;:::-;4449:11;:64;4446:198;;-1:-1:-1;;4534:17:0;;;;4192:472::o;4446:198::-;4620:23;;;;4606:37;;:11;:37;:::i;:::-;4585:13;:17;;;:59;;;;:::i;:::-;4578:66;4192:472;-1:-1:-1;;;4192:472:0:o;14:180:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o;381:173::-;449:20;;-1:-1:-1;;;;;498:31:6;;488:42;;478:70;;544:1;541;534:12;478:70;381:173;;;:::o;559:956::-;648:6;701:3;689:9;680:7;676:23;672:33;669:53;;;718:1;715;708:12;669:53;751:2;745:9;793:3;785:6;781:16;863:6;851:10;848:22;827:18;815:10;812:34;809:62;806:185;;;913:10;908:3;904:20;901:1;894:31;948:4;945:1;938:15;976:4;973:1;966:15;806:185;1007:2;1000:22;1046:29;1065:9;1046:29;:::i;:::-;1038:6;1031:45;1109:38;1143:2;1132:9;1128:18;1109:38;:::i;:::-;1104:2;1096:6;1092:15;1085:63;1209:2;1198:9;1194:18;1181:32;1176:2;1168:6;1164:15;1157:57;1275:2;1264:9;1260:18;1247:32;1242:2;1234:6;1230:15;1223:57;1342:3;1331:9;1327:19;1314:33;1308:3;1300:6;1296:16;1289:59;1410:3;1399:9;1395:19;1382:33;1376:3;1368:6;1364:16;1357:59;1478:3;1467:9;1463:19;1450:33;1444:3;1436:6;1432:16;1425:59;1503:6;1493:16;;;559:956;;;;:::o;2386:258::-;2458:1;2468:113;2482:6;2479:1;2476:13;2468:113;;;2558:11;;;2552:18;2539:11;;;2532:39;2504:2;2497:10;2468:113;;;2599:6;2596:1;2593:13;2590:48;;;-1:-1:-1;;2634:1:6;2616:16;;2609:27;2386:258::o;2649:274::-;2778:3;2816:6;2810:13;2832:53;2878:6;2873:3;2866:4;2858:6;2854:17;2832:53;:::i;:::-;2901:16;;;;;2649:274;-1:-1:-1;;2649:274:6:o;2928:184::-;2998:6;3051:2;3039:9;3030:7;3026:23;3022:32;3019:52;;;3067:1;3064;3057:12;3019:52;-1:-1:-1;3090:16:6;;2928:184;-1:-1:-1;2928:184:6:o;3473:127::-;3534:10;3529:3;3525:20;3522:1;3515:31;3565:4;3562:1;3555:15;3589:4;3586:1;3579:15;3605:125;3645:4;3673:1;3670;3667:8;3664:34;;;3678:18;;:::i;:::-;-1:-1:-1;3715:9:6;;3605:125::o;3735:128::-;3775:3;3806:1;3802:6;3799:1;3796:13;3793:39;;;3812:18;;:::i;:::-;-1:-1:-1;3848:9:6;;3735:128::o;4233:327::-;4464:25;;;4451:3;4436:19;;4498:56;4550:2;4535:18;;4527:6;3944:12;;3932:25;;4003:4;3992:16;;;3986:23;-1:-1:-1;;;;;4079:21:6;;;4063:14;;;4056:45;;;;4154:4;4143:16;;;4137:23;4133:32;;;4117:14;;;4110:56;4215:4;4204:16;;;4198:23;4182:14;;4175:47;3868:360;4898:135;4937:3;4958:17;;;4955:43;;4978:18;;:::i;:::-;-1:-1:-1;5025:1:6;5014:13;;4898:135::o;5038:209::-;5070:1;5096;5086:132;;5140:10;5135:3;5131:20;5128:1;5121:31;5175:4;5172:1;5165:15;5203:4;5200:1;5193:15;5086:132;-1:-1:-1;5232:9:6;;5038:209::o;6037:277::-;6104:6;6157:2;6145:9;6136:7;6132:23;6128:32;6125:52;;;6173:1;6170;6163:12;6125:52;6205:9;6199:16;6258:5;6251:13;6244:21;6237:5;6234:32;6224:60;;6280:1;6277;6270:12;6677:127;6738:10;6733:3;6729:20;6726:1;6719:31;6769:4;6766:1;6759:15;6793:4;6790:1;6783:15;6809:581;7054:1;7050;7045:3;7041:11;7037:19;7029:6;7025:32;7014:9;7007:51;7094:2;7089;7078:9;7074:18;7067:30;6988:4;7126:6;7120:13;7169:6;7164:2;7153:9;7149:18;7142:34;7185:67;7245:6;7239:3;7228:9;7224:19;7219:2;7211:6;7207:15;7185:67;:::i;:::-;7372:10;7360:23;;;;7355:2;7340:18;;7333:51;-1:-1:-1;7313:2:6;7292:15;;;;-1:-1:-1;;7288:29:6;7273:45;7320:3;7269:55;;6809:581;-1:-1:-1;;6809:581:6:o;7807:168::-;7847:7;7913:1;7909;7905:6;7901:14;7898:1;7895:21;7890:1;7883:9;7876:17;7872:45;7869:71;;;7920:18;;:::i;:::-;-1:-1:-1;7960:9:6;;7807:168::o", "language": "Solidity", "natspec": {"author": "Sherif Abdelmoatty", "kind": "dev", "methods": {"claim((address,address,uint256,uint256,uint256,uint256,uint256))": {"notice": "liquidity providers can provide liquidity to be transfered to the destination address and register a claim to the liquidity fee", "params": {"_transferData": "struct emitted from the Transaction event at the source contract"}}, "constructor": {"params": {"_l1DomainSideContractAddress": "is the address of the contract in etherium L1"}}, "declareNewHashOnionHeadToL1()": {"notice": "sends new hash onions one by one to the l1 side contract to be sent to the source side contractthis function is rollup dependant - Optimism Kovan"}}, "notice": "This contract is to be deployed in the destination rollup", "title": "DestinationDomainSideBridge Contract", "version": 1}, "offset": [306, 4666], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5142042D EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x7AFB3A9F EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x80B92F9A EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8DA4D3C9 EQ PUSH2 0xA0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x795 JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH2 0x549 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13E SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x158 SWAP2 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x175 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616C726561647920636C61696D65642121210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x221 DUP4 PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 ADD MLOAD DUP2 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x8DF JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 DUP5 DUP2 ADD SWAP2 DUP3 MSTORE DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 DUP2 MSTORE SWAP3 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 DUP3 MSTORE DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SWAP3 MSTORE CALLER SWAP1 SWAP2 MSTORE SWAP1 MLOAD PUSH2 0x28A SWAP1 DUP4 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x2 SWAP2 PUSH2 0x2A6 SWAP2 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2C0 SWAP2 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 DUP4 ADD MLOAD AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x546343AEDB3E113CF931AED78F2E83902C295DC1C5296D4A82A0DDDAB915B484 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x37E DUP4 PUSH2 0x951 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x14 PUSH1 0x2 SLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x96A JUMP JUMPDEST PUSH1 0x0 SUB PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE SWAP3 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC88CEA9CD8278ECA3C21369DDAE1825E3118D7FC925BEB6297E5A7672B9D4895 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B9 JUMPI DUP4 PUSH1 0x40 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x21212121 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F6 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP6 PUSH1 0x40 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x543 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD LT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206E65772068617368206F6E696F6E7320746F207265706F72742E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH32 0x9034AC9F41D98D9BB9FE35278080334324D0ECEBE02E47481BB00E524FB40AA6 PUSH1 0x1 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x5D2 JUMPI PUSH2 0x5D2 PUSH2 0x9AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x5EC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x7 PUSH1 0x21 PUSH1 0x99 SHL ADD SWAP4 DUP5 SWAP4 PUSH4 0x3DBB202B SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP2 LT PUSH2 0x629 JUMPI PUSH2 0x629 PUSH2 0x9AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x646 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xE5F3511B PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH2 0x695 SWAP3 SWAP2 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x4 ADD PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x6D8 DUP4 PUSH2 0x951 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 NUMBER SWAP1 DUP2 LT ISZERO PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F72203A20626C6F636B206E756D626572206973206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E20737461727454696D65 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F6 JUMP JUMPDEST DUP3 PUSH1 0xA0 ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST DUP2 LT PUSH2 0x770 JUMPI POP POP PUSH1 0x60 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x77F SWAP1 DUP3 PUSH2 0x8DF JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x80D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x819 DUP4 PUSH2 0x7AE JUMP JUMPDEST DUP2 MSTORE PUSH2 0x827 PUSH1 0x20 DUP5 ADD PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x883 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x86B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x543 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x8A6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x868 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x8F1 JUMPI PUSH2 0x8F1 PUSH2 0x8C9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x909 JUMPI PUSH2 0x909 PUSH2 0x8C9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD PUSH2 0x78E PUSH1 0x20 DUP4 ADD DUP5 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x963 JUMPI PUSH2 0x963 PUSH2 0x8C9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x987 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x9F1 DUP2 PUSH1 0x80 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x868 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA2E JUMPI PUSH2 0xA2E PUSH2 0x8C9 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH22 0xC0ED0C0AE430B07C28F3E9C28D3D8C8AE02115F03BA8 EXTCODEHASH 0x26 ADDMOD 0xD0 EQ 0x5E BASEFEE DUP15 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ", "pcMap": {"0": {"offset": [306, 4666], "op": "PUSH1", "path": "0", "value": "0x80"}, "2": {"fn": null, "offset": [306, 4666], "op": "PUSH1", "path": "0", "value": "0x40"}, "4": {"fn": null, "offset": [306, 4666], "op": "MSTORE", "path": "0"}, "5": {"fn": null, "offset": [306, 4666], "op": "PUSH1", "path": "0", "value": "0x4"}, "7": {"fn": null, "offset": [306, 4666], "op": "CALLDATASIZE", "path": "0"}, "8": {"fn": null, "offset": [306, 4666], "op": "LT", "path": "0"}, "9": {"fn": null, "offset": [306, 4666], "op": "PUSH2", "path": "0", "value": "0x3F"}, "12": {"fn": null, "offset": [306, 4666], "op": "JUMPI", "path": "0"}, "13": {"fn": null, "offset": [306, 4666], "op": "PUSH1", "path": "0", "value": "0x0"}, "15": {"fn": null, "offset": [306, 4666], "op": "CALLDATALOAD", "path": "0"}, "16": {"fn": null, "offset": [306, 4666], "op": "PUSH1", "path": "0", "value": "0xE0"}, "18": {"fn": null, "offset": [306, 4666], "op": "SHR", "path": "0"}, "19": {"fn": null, "offset": [306, 4666], "op": "DUP1", "path": "0"}, "20": {"fn": null, "offset": [306, 4666], "op": "PUSH4", "path": "0", "value": "0x5142042D"}, "25": {"fn": null, "offset": [306, 4666], "op": "EQ", "path": "0"}, "26": {"fn": null, "offset": [306, 4666], "op": "PUSH2", "path": "0", "value": "0x44"}, "29": {"fn": null, "offset": [306, 4666], "op": "JUMPI", "path": "0"}, "30": {"fn": null, "offset": [306, 4666], "op": "DUP1", "path": "0"}, "31": {"fn": null, "offset": [306, 4666], "op": "PUSH4", "path": "0", "value": "0x7AFB3A9F"}, "36": {"fn": null, "offset": [306, 4666], "op": "EQ", "path": "0"}, "37": {"fn": null, "offset": [306, 4666], "op": "PUSH2", "path": "0", "value": "0x76"}, "40": {"fn": null, "offset": [306, 4666], "op": "JUMPI", "path": "0"}, "41": {"fn": null, "offset": [306, 4666], "op": "DUP1", "path": "0"}, "42": {"fn": null, "offset": [306, 4666], "op": "PUSH4", "path": "0", "value": "0x80B92F9A"}, "47": {"fn": null, "offset": [306, 4666], "op": "EQ", "path": "0"}, "48": {"fn": null, "offset": [306, 4666], "op": "PUSH2", "path": "0", "value": "0x8B"}, "51": {"fn": null, "offset": [306, 4666], "op": "JUMPI", "path": "0"}, "52": {"fn": null, "offset": [306, 4666], "op": "DUP1", "path": "0"}, "53": {"fn": null, "offset": [306, 4666], "op": "PUSH4", "path": "0", "value": "0x8DA4D3C9"}, "58": {"fn": null, "offset": [306, 4666], "op": "EQ", "path": "0"}, "59": {"fn": null, "offset": [306, 4666], "op": "PUSH2", "path": "0", "value": "0xA0"}, "62": {"fn": null, "offset": [306, 4666], "op": "JUMPI", "path": "0"}, "63": {"fn": null, "offset": [306, 4666], "op": "JUMPDEST", "path": "0"}, "64": {"fn": null, "offset": [306, 4666], "op": "PUSH1", "path": "0", "value": "0x0"}, "66": {"fn": null, "offset": [306, 4666], "op": "DUP1", "path": "0"}, "67": {"first_revert": true, "fn": null, "offset": [306, 4666], "op": "REVERT", "path": "0"}, "68": {"offset": [459, 502], "op": "JUMPDEST", "path": "0"}, "69": {"fn": null, "offset": [459, 502], "op": "CALLVALUE", "path": "0"}, "70": {"fn": null, "offset": [459, 502], "op": "DUP1", "path": "0"}, "71": {"fn": null, "offset": [459, 502], "op": "ISZERO", "path": "0"}, "72": {"fn": null, "offset": [459, 502], "op": "PUSH2", "path": "0", "value": "0x50"}, "75": {"fn": null, "offset": [459, 502], "op": "JUMPI", "path": "0"}, "76": {"fn": null, "offset": [459, 502], "op": "PUSH1", "path": "0", "value": "0x0"}, "78": {"fn": null, "offset": [459, 502], "op": "DUP1", "path": "0"}, "79": {"fn": null, "offset": [459, 502], "op": "REVERT", "path": "0"}, "80": {"fn": null, "offset": [459, 502], "op": "JUMPDEST", "path": "0"}, "81": {"op": "POP"}, "82": {"offset": [459, 502], "op": "PUSH2", "path": "0", "value": "0x64"}, "85": {"fn": null, "offset": [459, 502], "op": "PUSH2", "path": "0", "value": "0x5F"}, "88": {"fn": null, "offset": [459, 502], "op": "CALLDATASIZE", "path": "0"}, "89": {"fn": null, "offset": [459, 502], "op": "PUSH1", "path": "0", "value": "0x4"}, "91": {"fn": null, "offset": [459, 502], "op": "PUSH2", "path": "0", "value": "0x795"}, "94": {"fn": null, "jump": "i", "offset": [459, 502], "op": "JUMP", "path": "0"}, "95": {"fn": null, "offset": [459, 502], "op": "JUMPDEST", "path": "0"}, "96": {"fn": null, "offset": [459, 502], "op": "PUSH2", "path": "0", "value": "0xB6"}, "99": {"fn": null, "jump": "i", "offset": [459, 502], "op": "JUMP", "path": "0"}, "100": {"fn": null, "offset": [459, 502], "op": "JUMPDEST", "path": "0"}, "101": {"fn": null, "offset": [459, 502], "op": "PUSH1", "path": "0", "value": "0x40"}, "103": {"fn": null, "offset": [459, 502], "op": "MLOAD", "path": "0"}, "104": {"op": "SWAP1"}, "105": {"op": "DUP2"}, "106": {"op": "MSTORE"}, "107": {"op": "PUSH1", "value": "0x20"}, "109": {"op": "ADD"}, "110": {"offset": [459, 502], "op": "PUSH1", "path": "0", "value": "0x40"}, "112": {"fn": null, "offset": [459, 502], "op": "MLOAD", "path": "0"}, "113": {"fn": null, "offset": [459, 502], "op": "DUP1", "path": "0"}, "114": {"fn": null, "offset": [459, 502], "op": "SWAP2", "path": "0"}, "115": {"fn": null, "offset": [459, 502], "op": "SUB", "path": "0"}, "116": {"fn": null, "offset": [459, 502], "op": "SWAP1", "path": "0"}, "117": {"fn": null, "offset": [459, 502], "op": "RETURN", "path": "0"}, "118": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "JUMPDEST", "path": "0"}, "119": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "PUSH2", "path": "0", "value": "0x89"}, "122": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "PUSH2", "path": "0", "value": "0x84"}, "125": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "CALLDATASIZE", "path": "0"}, "126": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "PUSH1", "path": "0", "value": "0x4"}, "128": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "PUSH2", "path": "0", "value": "0x7CA"}, "131": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [1661, 3126], "op": "JUMP", "path": "0"}, "132": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "JUMPDEST", "path": "0"}, "133": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "PUSH2", "path": "0", "value": "0xD7"}, "136": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [1661, 3126], "op": "JUMP", "path": "0"}, "137": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "JUMPDEST", "path": "0"}, "138": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "STOP", "path": "0"}, "139": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "JUMPDEST", "path": "0"}, "140": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "CALLVALUE", "path": "0"}, "141": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "DUP1", "path": "0"}, "142": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "ISZERO", "path": "0"}, "143": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "PUSH2", "path": "0", "value": "0x97"}, "146": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "JUMPI", "path": "0"}, "147": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "PUSH1", "path": "0", "value": "0x0"}, "149": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "DUP1", "path": "0"}, "150": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "REVERT", "path": "0"}, "151": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "JUMPDEST", "path": "0"}, "152": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "POP", "path": "0"}, "153": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "PUSH2", "path": "0", "value": "0x89"}, "156": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "PUSH2", "path": "0", "value": "0x549"}, "159": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "jump": "i", "offset": [3315, 3980], "op": "JUMP", "path": "0"}, "160": {"offset": [508, 533], "op": "JUMPDEST", "path": "0"}, "161": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "CALLVALUE", "path": "0"}, "162": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "DUP1", "path": "0"}, "163": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "ISZERO", "path": "0"}, "164": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "PUSH2", "path": "0", "value": "0xAC"}, "167": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "JUMPI", "path": "0"}, "168": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "PUSH1", "path": "0", "value": "0x0"}, "170": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "DUP1", "path": "0"}, "171": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "REVERT", "path": "0"}, "172": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "JUMPDEST", "path": "0"}, "173": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "POP", "path": "0"}, "174": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "PUSH2", "path": "0", "value": "0x64"}, "177": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "PUSH1", "path": "0", "value": "0x2"}, "179": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "SLOAD", "path": "0"}, "180": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "DUP2", "path": "0"}, "181": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [508, 533], "op": "JUMP", "path": "0"}, "182": {"offset": [459, 502], "op": "JUMPDEST", "path": "0"}, "183": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "PUSH1", "path": "0", "value": "0x1"}, "185": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "DUP2", "path": "0"}, "186": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "DUP2", "path": "0"}, "187": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "SLOAD", "path": "0"}, "188": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "DUP2", "path": "0"}, "189": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "LT", "path": "0"}, "190": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "PUSH2", "path": "0", "value": "0xC6"}, "193": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "JUMPI", "path": "0"}, "194": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "PUSH1", "path": "0", "value": "0x0"}, "196": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "DUP1", "path": "0"}, "197": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "REVERT", "path": "0"}, "198": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "JUMPDEST", "path": "0"}, "199": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "PUSH1", "path": "0", "value": "0x0"}, "201": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "SWAP2", "path": "0"}, "202": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "DUP3", "path": "0"}, "203": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "MSTORE", "path": "0"}, "204": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "PUSH1", "path": "0", "value": "0x20"}, "206": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "SWAP1", "path": "0"}, "207": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "SWAP2", "path": "0"}, "208": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "KECCAK256", "path": "0"}, "209": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "ADD", "path": "0"}, "210": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "SLOAD", "path": "0"}, "211": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [459, 502], "op": "SWAP1", "path": "0"}, "212": {"op": "POP"}, "213": {"offset": [459, 502], "op": "DUP2", "path": "0"}, "214": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "jump": "o", "offset": [459, 502], "op": "JUMP", "path": "0"}, "215": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "JUMPDEST", "path": "0"}, "216": {"fn": "DestinationDomainSideBridge.claim", "offset": [1747, 1771], "op": "PUSH1", "path": "0", "value": "0x0"}, "218": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x2"}, "220": {"fn": "DestinationDomainSideBridge.claim", "offset": [1792, 1805], "op": "DUP3", "path": "0"}, "221": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "PUSH1", "path": "0", "value": "0x40"}, "223": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "MLOAD", "path": "0"}, "224": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "PUSH1", "path": "0", "value": "0x20"}, "226": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "ADD", "path": "0"}, "227": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "PUSH2", "path": "0", "value": "0x13E"}, "230": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "SWAP2", "path": "0"}, "231": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "SWAP1", "path": "0"}, "232": {"op": "DUP2"}, "233": {"op": "MLOAD"}, "234": {"op": "PUSH1", "value": "0x1"}, "236": {"op": "PUSH1", "value": "0x1"}, "238": {"op": "PUSH1", "value": "0xA0"}, "240": {"op": "SHL"}, "241": {"op": "SUB"}, "242": {"op": "SWAP1"}, "243": {"op": "DUP2"}, "244": {"op": "AND"}, "245": {"op": "DUP3"}, "246": {"op": "MSTORE"}, "247": {"op": "PUSH1", "value": "0x20"}, "249": {"op": "DUP1"}, "250": {"op": "DUP5"}, "251": {"op": "ADD"}, "252": {"op": "MLOAD"}, "253": {"op": "SWAP1"}, "254": {"op": "SWAP2"}, "255": {"op": "AND"}, "256": {"op": "SWAP1"}, "257": {"op": "DUP3"}, "258": {"op": "ADD"}, "259": {"op": "MSTORE"}, "260": {"op": "PUSH1", "value": "0x40"}, "262": {"op": "DUP1"}, "263": {"op": "DUP4"}, "264": {"op": "ADD"}, "265": {"op": "MLOAD"}, "266": {"op": "SWAP1"}, "267": {"op": "DUP3"}, "268": {"op": "ADD"}, "269": {"op": "MSTORE"}, "270": {"op": "PUSH1", "value": "0x60"}, "272": {"op": "DUP1"}, "273": {"op": "DUP4"}, "274": {"op": "ADD"}, "275": {"op": "MLOAD"}, "276": {"op": "SWAP1"}, "277": {"op": "DUP3"}, "278": {"op": "ADD"}, "279": {"op": "MSTORE"}, "280": {"op": "PUSH1", "value": "0x80"}, "282": {"op": "DUP1"}, "283": {"op": "DUP4"}, "284": {"op": "ADD"}, "285": {"op": "MLOAD"}, "286": {"op": "SWAP1"}, "287": {"op": "DUP3"}, "288": {"op": "ADD"}, "289": {"op": "MSTORE"}, "290": {"op": "PUSH1", "value": "0xA0"}, "292": {"op": "DUP3"}, "293": {"op": "DUP2"}, "294": {"op": "ADD"}, "295": {"op": "MLOAD"}, "296": {"op": "SWAP1"}, "297": {"op": "DUP3"}, "298": {"op": "ADD"}, "299": {"op": "MSTORE"}, "300": {"op": "PUSH1", "value": "0xC0"}, "302": {"op": "SWAP2"}, "303": {"op": "DUP3"}, "304": {"op": "ADD"}, "305": {"op": "MLOAD"}, "306": {"op": "SWAP2"}, "307": {"op": "DUP2"}, "308": {"op": "ADD"}, "309": {"op": "SWAP2"}, "310": {"op": "SWAP1"}, "311": {"op": "SWAP2"}, "312": {"op": "MSTORE"}, "313": {"op": "PUSH1", "value": "0xE0"}, "315": {"op": "ADD"}, "316": {"op": "SWAP1"}, "317": {"op": "JUMP"}, "318": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "JUMPDEST", "path": "0"}, "319": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "PUSH1", "path": "0", "value": "0x40"}, "321": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "DUP1", "path": "0"}, "322": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "MLOAD", "path": "0"}, "323": {"op": "PUSH1", "value": "0x1F"}, "325": {"op": "NOT"}, "326": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "DUP2", "path": "0"}, "327": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "DUP5", "path": "0"}, "328": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "SUB", "path": "0"}, "329": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "ADD", "path": "0"}, "330": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "DUP2", "path": "0"}, "331": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "MSTORE", "path": "0"}, "332": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "SWAP1", "path": "0"}, "333": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "DUP3", "path": "0"}, "334": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "SWAP1", "path": "0"}, "335": {"fn": "DestinationDomainSideBridge.claim", "offset": [1781, 1806], "op": "MSTORE", "path": "0"}, "336": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH2", "path": "0", "value": "0x158"}, "339": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "SWAP2", "path": "0"}, "340": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH2", "path": "0", "value": "0x894"}, "343": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [1774, 1807], "op": "JUMP", "path": "0"}, "344": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "JUMPDEST", "path": "0"}, "345": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x20"}, "347": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x40"}, "349": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "MLOAD", "path": "0"}, "350": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP1", "path": "0"}, "351": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP4", "path": "0"}, "352": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "SUB", "path": "0"}, "353": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP2", "path": "0"}, "354": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP6", "path": "0"}, "355": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "GAS", "path": "0"}, "356": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "STATICCALL", "path": "0"}, "357": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "ISZERO", "path": "0"}, "358": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP1", "path": "0"}, "359": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "ISZERO", "path": "0"}, "360": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH2", "path": "0", "value": "0x175"}, "363": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "JUMPI", "path": "0"}, "364": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "RETURNDATASIZE", "path": "0"}, "365": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x0"}, "367": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP1", "path": "0"}, "368": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "RETURNDATACOPY", "path": "0"}, "369": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "RETURNDATASIZE", "path": "0"}, "370": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x0"}, "372": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "REVERT", "path": "0"}, "373": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "JUMPDEST", "path": "0"}, "374": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "POP", "path": "0"}, "375": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "POP", "path": "0"}, "376": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "POP", "path": "0"}, "377": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x40"}, "379": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "MLOAD", "path": "0"}, "380": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "RETURNDATASIZE", "path": "0"}, "381": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x1F"}, "383": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "NOT", "path": "0"}, "384": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x1F"}, "386": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP3", "path": "0"}, "387": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "ADD", "path": "0"}, "388": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "AND", "path": "0"}, "389": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP3", "path": "0"}, "390": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "ADD", "path": "0"}, "391": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP1", "path": "0"}, "392": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH1", "path": "0", "value": "0x40"}, "394": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "MSTORE", "path": "0"}, "395": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "POP", "path": "0"}, "396": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "DUP2", "path": "0"}, "397": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "ADD", "path": "0"}, "398": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "SWAP1", "path": "0"}, "399": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH2", "path": "0", "value": "0x198"}, "402": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "SWAP2", "path": "0"}, "403": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "SWAP1", "path": "0"}, "404": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "PUSH2", "path": "0", "value": "0x8B0"}, "407": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [1774, 1807], "op": "JUMP", "path": "0"}, "408": {"fn": "DestinationDomainSideBridge.claim", "offset": [1774, 1807], "op": "JUMPDEST", "path": "0"}, "409": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "PUSH1", "path": "0", "statement": 0, "value": "0x0"}, "411": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "DUP2", "path": "0"}, "412": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "DUP2", "path": "0"}, "413": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "MSTORE", "path": "0"}, "414": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1847], "op": "PUSH1", "path": "0", "value": "0x3"}, "416": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "PUSH1", "path": "0", "value": "0x20"}, "418": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "MSTORE", "path": "0"}, "419": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "PUSH1", "path": "0", "value": "0x40"}, "421": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "SWAP1", "path": "0"}, "422": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "KECCAK256", "path": "0"}, "423": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "SLOAD", "path": "0"}, "424": {"fn": "DestinationDomainSideBridge.claim", "offset": [1747, 1807], "op": "SWAP1", "path": "0"}, "425": {"fn": "DestinationDomainSideBridge.claim", "offset": [1747, 1807], "op": "SWAP2", "path": "0"}, "426": {"op": "POP"}, "427": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "PUSH1", "path": "0", "value": "0xFF"}, "429": {"fn": "DestinationDomainSideBridge.claim", "offset": [1826, 1865], "op": "AND", "path": "0"}, "430": {"branch": 22, "fn": "DestinationDomainSideBridge.claim", "offset": [1825, 1865], "op": "ISZERO", "path": "0"}, "431": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "PUSH2", "path": "0", "value": "0x1FF"}, "434": {"branch": 22, "fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "JUMPI", "path": "0"}, "435": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "PUSH1", "path": "0", "value": "0x40"}, "437": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "MLOAD", "path": "0"}, "438": {"op": "PUSH3", "value": "0x461BCD"}, "442": {"op": "PUSH1", "value": "0xE5"}, "444": {"op": "SHL"}, "445": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "DUP2", "path": "0"}, "446": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "MSTORE", "path": "0"}, "447": {"op": "PUSH1", "value": "0x20"}, "449": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "PUSH1", "path": "0", "value": "0x4"}, "451": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "DUP3", "path": "0"}, "452": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "ADD", "path": "0"}, "453": {"op": "MSTORE"}, "454": {"op": "PUSH1", "value": "0x1B"}, "456": {"op": "PUSH1", "value": "0x24"}, "458": {"op": "DUP3"}, "459": {"op": "ADD"}, "460": {"op": "MSTORE"}, "461": {"op": "PUSH32", "value": "0x5472616E7366657220616C726561647920636C61696D65642121210000000000"}, "494": {"op": "PUSH1", "value": "0x44"}, "496": {"op": "DUP3"}, "497": {"op": "ADD"}, "498": {"op": "MSTORE"}, "499": {"op": "PUSH1", "value": "0x64"}, "501": {"op": "ADD"}, "502": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "JUMPDEST", "path": "0"}, "503": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "PUSH1", "path": "0", "value": "0x40"}, "505": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "MLOAD", "path": "0"}, "506": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "DUP1", "path": "0"}, "507": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "SWAP2", "path": "0"}, "508": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "SUB", "path": "0"}, "509": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "SWAP1", "path": "0"}, "510": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "REVERT", "optimizer_revert": true, "path": "0"}, "511": {"fn": "DestinationDomainSideBridge.claim", "offset": [1817, 1897], "op": "JUMPDEST", "path": "0"}, "512": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "PUSH1", "path": "0", "statement": 1, "value": "0x0"}, "514": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "DUP2", "path": "0"}, "515": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "DUP2", "path": "0"}, "516": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "MSTORE", "path": "0"}, "517": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1928], "op": "PUSH1", "path": "0", "value": "0x3"}, "519": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "PUSH1", "path": "0", "value": "0x20"}, "521": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "MSTORE", "path": "0"}, "522": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "PUSH1", "path": "0", "value": "0x40"}, "524": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "DUP2", "path": "0"}, "525": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1946], "op": "KECCAK256", "path": "0"}, "526": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1953], "op": "DUP1", "path": "0"}, "527": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1953], "op": "SLOAD", "path": "0"}, "528": {"op": "PUSH1", "value": "0xFF"}, "530": {"op": "NOT"}, "531": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1953], "op": "AND", "path": "0"}, "532": {"fn": "DestinationDomainSideBridge.claim", "offset": [1949, 1953], "op": "PUSH1", "path": "0", "value": "0x1"}, "534": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1953], "op": "OR", "path": "0"}, "535": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1953], "op": "SWAP1", "path": "0"}, "536": {"fn": "DestinationDomainSideBridge.claim", "offset": [1907, 1953], "op": "SSTORE", "path": "0"}, "537": {"fn": "DestinationDomainSideBridge.claim", "offset": [1980, 2003], "op": "PUSH2", "path": "0", "value": "0x221"}, "540": {"fn": "DestinationDomainSideBridge.claim", "offset": [1989, 2002], "op": "DUP4", "path": "0"}, "541": {"fn": "DestinationDomainSideBridge.claim", "offset": [1980, 1988], "op": "PUSH2", "path": "0", "value": "0x6E0"}, "544": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [1980, 2003], "op": "JUMP", "path": "0"}, "545": {"fn": "DestinationDomainSideBridge.claim", "offset": [1980, 2003], "op": "JUMPDEST", "path": "0"}, "546": {"fn": "DestinationDomainSideBridge.claim", "offset": [1964, 2003], "op": "SWAP1", "path": "0"}, "547": {"fn": "DestinationDomainSideBridge.claim", "offset": [1964, 2003], "op": "POP", "path": "0"}, "548": {"fn": "DestinationDomainSideBridge.claim", "offset": [2068, 2081], "op": "DUP3", "path": "0", "statement": 2}, "549": {"fn": "DestinationDomainSideBridge.claim", "offset": [2068, 2085], "op": "PUSH1", "path": "0", "value": "0x60"}, "551": {"fn": "DestinationDomainSideBridge.claim", "offset": [2068, 2085], "op": "ADD", "path": "0"}, "552": {"fn": "DestinationDomainSideBridge.claim", "offset": [2068, 2085], "op": "MLOAD", "path": "0"}, "553": {"fn": "DestinationDomainSideBridge.claim", "offset": [2060, 2065], "op": "DUP2", "path": "0"}, "554": {"fn": "DestinationDomainSideBridge.claim", "offset": [2060, 2085], "op": "PUSH2", "path": "0", "value": "0x233"}, "557": {"fn": "DestinationDomainSideBridge.claim", "offset": [2060, 2085], "op": "SWAP2", "path": "0"}, "558": {"fn": "DestinationDomainSideBridge.claim", "offset": [2060, 2085], "op": "SWAP1", "path": "0"}, "559": {"fn": "DestinationDomainSideBridge.claim", "offset": [2060, 2085], "op": "PUSH2", "path": "0", "value": "0x8DF"}, "562": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [2060, 2085], "op": "JUMP", "path": "0"}, "563": {"fn": "DestinationDomainSideBridge.claim", "offset": [2060, 2085], "op": "JUMPDEST", "path": "0"}, "564": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2049], "op": "DUP4", "path": "0"}, "565": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2056], "op": "PUSH1", "path": "0", "value": "0x40"}, "567": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2056], "op": "ADD", "path": "0"}, "568": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2056], "op": "MLOAD", "path": "0"}, "569": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2086], "op": "PUSH2", "path": "0", "value": "0x242"}, "572": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2086], "op": "SWAP2", "path": "0"}, "573": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2086], "op": "SWAP1", "path": "0"}, "574": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2086], "op": "PUSH2", "path": "0", "value": "0x8F6"}, "577": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [2036, 2086], "op": "JUMP", "path": "0"}, "578": {"fn": "DestinationDomainSideBridge.claim", "offset": [2036, 2086], "op": "JUMPDEST", "path": "0"}, "579": {"fn": "DestinationDomainSideBridge.claim", "offset": [2013, 2033], "op": "PUSH1", "path": "0", "value": "0x40"}, "581": {"fn": "DestinationDomainSideBridge.claim", "offset": [2013, 2033], "op": "DUP5", "path": "0"}, "582": {"fn": "DestinationDomainSideBridge.claim", "offset": [2013, 2033], "op": "DUP2", "path": "0"}, "583": {"fn": "DestinationDomainSideBridge.claim", "offset": [2013, 2033], "op": "ADD", "path": "0"}, "584": {"fn": "DestinationDomainSideBridge.claim", "offset": [2013, 2086], "op": "SWAP2", "path": "0"}, "585": {"fn": "DestinationDomainSideBridge.claim", "offset": [2013, 2086], "op": "DUP3", "path": "0"}, "586": {"fn": "DestinationDomainSideBridge.claim", "offset": [2013, 2086], "op": "MSTORE", "path": "0"}, "587": {"op": "DUP1"}, "588": {"op": "MLOAD"}, "589": {"op": "PUSH1", "value": "0x80"}, "591": {"op": "DUP2"}, "592": {"op": "ADD"}, "593": {"op": "DUP3"}, "594": {"op": "MSTORE"}, "595": {"op": "PUSH1", "value": "0x0"}, "597": {"op": "PUSH1", "value": "0x20"}, "599": {"op": "DUP3"}, "600": {"op": "ADD"}, "601": {"op": "DUP2"}, "602": {"op": "DUP2"}, "603": {"op": "MSTORE"}, "604": {"op": "SWAP3"}, "605": {"op": "DUP3"}, "606": {"op": "ADD"}, "607": {"op": "DUP2"}, "608": {"op": "DUP2"}, "609": {"op": "MSTORE"}, "610": {"op": "PUSH1", "value": "0x60"}, "612": {"op": "DUP4"}, "613": {"op": "ADD"}, "614": {"op": "SWAP2"}, "615": {"op": "SWAP1"}, "616": {"op": "SWAP2"}, "617": {"op": "MSTORE"}, "618": {"fn": "DestinationDomainSideBridge.claim", "offset": [2145, 2191], "op": "DUP6", "path": "0", "statement": 3}, "619": {"fn": "DestinationDomainSideBridge.claim", "offset": [2145, 2191], "op": "DUP3", "path": "0"}, "620": {"fn": "DestinationDomainSideBridge.claim", "offset": [2145, 2191], "op": "MSTORE", "path": "0"}, "621": {"fn": "DestinationDomainSideBridge.claim", "offset": [2227, 2253], "op": "DUP7", "path": "0", "statement": 4}, "622": {"fn": "DestinationDomainSideBridge.claim", "offset": [2227, 2253], "op": "MLOAD", "path": "0"}, "623": {"op": "PUSH1", "value": "0x1"}, "625": {"op": "PUSH1", "value": "0x1"}, "627": {"op": "PUSH1", "value": "0xA0"}, "629": {"op": "SHL"}, "630": {"op": "SUB"}, "631": {"fn": "DestinationDomainSideBridge.claim", "offset": [2201, 2253], "op": "AND", "path": "0"}, "632": {"fn": "DestinationDomainSideBridge.claim", "offset": [2201, 2253], "op": "SWAP1", "path": "0"}, "633": {"fn": "DestinationDomainSideBridge.claim", "offset": [2201, 2253], "op": "SWAP3", "path": "0"}, "634": {"fn": "DestinationDomainSideBridge.claim", "offset": [2201, 2253], "op": "MSTORE", "path": "0"}, "635": {"fn": "DestinationDomainSideBridge.claim", "offset": [2284, 2294], "op": "CALLER", "path": "0", "statement": 5}, "636": {"fn": "DestinationDomainSideBridge.claim", "offset": [2263, 2294], "op": "SWAP1", "path": "0"}, "637": {"fn": "DestinationDomainSideBridge.claim", "offset": [2263, 2294], "op": "SWAP2", "path": "0"}, "638": {"fn": "DestinationDomainSideBridge.claim", "offset": [2263, 2294], "op": "MSTORE", "path": "0"}, "639": {"fn": "DestinationDomainSideBridge.claim", "offset": [2339, 2359], "op": "SWAP1", "path": "0", "statement": 6}, "640": {"fn": "DestinationDomainSideBridge.claim", "offset": [2339, 2359], "op": "MLOAD", "path": "0"}, "641": {"fn": "DestinationDomainSideBridge.claim", "offset": [2331, 2359], "op": "PUSH2", "path": "0", "value": "0x28A"}, "644": {"fn": "DestinationDomainSideBridge.claim", "offset": [2331, 2359], "op": "SWAP1", "path": "0"}, "645": {"fn": "DestinationDomainSideBridge.claim", "offset": [2331, 2336], "op": "DUP4", "path": "0"}, "646": {"fn": "DestinationDomainSideBridge.claim", "offset": [2331, 2359], "op": "PUSH2", "path": "0", "value": "0x8F6"}, "649": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [2331, 2359], "op": "JUMP", "path": "0"}, "650": {"fn": "DestinationDomainSideBridge.claim", "offset": [2331, 2359], "op": "JUMPDEST", "path": "0"}, "651": {"fn": "DestinationDomainSideBridge.claim", "offset": [2304, 2328], "op": "PUSH1", "path": "0", "value": "0x60"}, "653": {"fn": "DestinationDomainSideBridge.claim", "offset": [2304, 2328], "op": "DUP3", "path": "0"}, "654": {"fn": "DestinationDomainSideBridge.claim", "offset": [2304, 2328], "op": "ADD", "path": "0"}, "655": {"fn": "DestinationDomainSideBridge.claim", "offset": [2304, 2359], "op": "MSTORE", "path": "0"}, "656": {"fn": "DestinationDomainSideBridge.claim", "offset": [2405, 2420], "op": "PUSH1", "path": "0", "statement": 7, "value": "0x0"}, "658": {"fn": "DestinationDomainSideBridge.claim", "offset": [2405, 2420], "op": "SLOAD", "path": "0"}, "659": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "PUSH1", "path": "0", "value": "0x40"}, "661": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "MLOAD", "path": "0"}, "662": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x2"}, "664": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "SWAP2", "path": "0"}, "665": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "PUSH2", "path": "0", "value": "0x2A6"}, "668": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "SWAP2", "path": "0"}, "669": {"fn": "DestinationDomainSideBridge.claim", "offset": [2304, 2314], "op": "DUP5", "path": "0"}, "670": {"fn": "DestinationDomainSideBridge.claim", "offset": [2304, 2314], "op": "SWAP1", "path": "0"}, "671": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "PUSH1", "path": "0", "value": "0x20"}, "673": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "ADD", "path": "0"}, "674": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "PUSH2", "path": "0", "value": "0x90E"}, "677": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [2394, 2433], "op": "JUMP", "path": "0"}, "678": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "JUMPDEST", "path": "0"}, "679": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "PUSH1", "path": "0", "value": "0x40"}, "681": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "DUP1", "path": "0"}, "682": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "MLOAD", "path": "0"}, "683": {"op": "PUSH1", "value": "0x1F"}, "685": {"op": "NOT"}, "686": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "DUP2", "path": "0"}, "687": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "DUP5", "path": "0"}, "688": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "SUB", "path": "0"}, "689": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "ADD", "path": "0"}, "690": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "DUP2", "path": "0"}, "691": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "MSTORE", "path": "0"}, "692": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "SWAP1", "path": "0"}, "693": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "DUP3", "path": "0"}, "694": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "SWAP1", "path": "0"}, "695": {"fn": "DestinationDomainSideBridge.claim", "offset": [2394, 2433], "op": "MSTORE", "path": "0"}, "696": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH2", "path": "0", "value": "0x2C0"}, "699": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "SWAP2", "path": "0"}, "700": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH2", "path": "0", "value": "0x894"}, "703": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [2387, 2434], "op": "JUMP", "path": "0"}, "704": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "JUMPDEST", "path": "0"}, "705": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x20"}, "707": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x40"}, "709": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "MLOAD", "path": "0"}, "710": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP1", "path": "0"}, "711": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP4", "path": "0"}, "712": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "SUB", "path": "0"}, "713": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP2", "path": "0"}, "714": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP6", "path": "0"}, "715": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "GAS", "path": "0"}, "716": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "STATICCALL", "path": "0"}, "717": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "ISZERO", "path": "0"}, "718": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP1", "path": "0"}, "719": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "ISZERO", "path": "0"}, "720": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH2", "path": "0", "value": "0x2DD"}, "723": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "JUMPI", "path": "0"}, "724": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "RETURNDATASIZE", "path": "0"}, "725": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x0"}, "727": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP1", "path": "0"}, "728": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "RETURNDATACOPY", "path": "0"}, "729": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "RETURNDATASIZE", "path": "0"}, "730": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x0"}, "732": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "REVERT", "path": "0"}, "733": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "JUMPDEST", "path": "0"}, "734": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "POP", "path": "0"}, "735": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "POP", "path": "0"}, "736": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "POP", "path": "0"}, "737": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x40"}, "739": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "MLOAD", "path": "0"}, "740": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "RETURNDATASIZE", "path": "0"}, "741": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x1F"}, "743": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "NOT", "path": "0"}, "744": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x1F"}, "746": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP3", "path": "0"}, "747": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "ADD", "path": "0"}, "748": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "AND", "path": "0"}, "749": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP3", "path": "0"}, "750": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "ADD", "path": "0"}, "751": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP1", "path": "0"}, "752": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH1", "path": "0", "value": "0x40"}, "754": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "MSTORE", "path": "0"}, "755": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "POP", "path": "0"}, "756": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "DUP2", "path": "0"}, "757": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "ADD", "path": "0"}, "758": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "SWAP1", "path": "0"}, "759": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH2", "path": "0", "value": "0x300"}, "762": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "SWAP2", "path": "0"}, "763": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "SWAP1", "path": "0"}, "764": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "PUSH2", "path": "0", "value": "0x8B0"}, "767": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [2387, 2434], "op": "JUMP", "path": "0"}, "768": {"fn": "DestinationDomainSideBridge.claim", "offset": [2387, 2434], "op": "JUMPDEST", "path": "0"}, "769": {"fn": "DestinationDomainSideBridge.claim", "offset": [2369, 2384], "op": "PUSH1", "path": "0", "value": "0x0"}, "771": {"fn": "DestinationDomainSideBridge.claim", "offset": [2369, 2434], "op": "SSTORE", "path": "0"}, "772": {"fn": "DestinationDomainSideBridge.claim", "offset": [2469, 2488], "op": "PUSH1", "path": "0", "statement": 8, "value": "0xC0"}, "774": {"fn": "DestinationDomainSideBridge.claim", "offset": [2469, 2488], "op": "DUP5", "path": "0"}, "775": {"fn": "DestinationDomainSideBridge.claim", "offset": [2469, 2488], "op": "ADD", "path": "0"}, "776": {"fn": "DestinationDomainSideBridge.claim", "offset": [2469, 2488], "op": "MLOAD", "path": "0"}, "777": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "PUSH1", "path": "0", "value": "0x40"}, "779": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "DUP1", "path": "0"}, "780": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "MLOAD", "path": "0"}, "781": {"op": "DUP4"}, "782": {"op": "MLOAD"}, "783": {"op": "DUP2"}, "784": {"op": "MSTORE"}, "785": {"op": "PUSH1", "value": "0x20"}, "787": {"op": "DUP1"}, "788": {"op": "DUP6"}, "789": {"op": "ADD"}, "790": {"op": "MLOAD"}, "791": {"op": "PUSH1", "value": "0x1"}, "793": {"op": "PUSH1", "value": "0x1"}, "795": {"op": "PUSH1", "value": "0xA0"}, "797": {"op": "SHL"}, "798": {"op": "SUB"}, "799": {"op": "SWAP1"}, "800": {"op": "DUP2"}, "801": {"op": "AND"}, "802": {"op": "SWAP2"}, "803": {"op": "DUP4"}, "804": {"op": "ADD"}, "805": {"op": "SWAP2"}, "806": {"op": "SWAP1"}, "807": {"op": "SWAP2"}, "808": {"op": "MSTORE"}, "809": {"op": "DUP5"}, "810": {"op": "DUP4"}, "811": {"op": "ADD"}, "812": {"op": "MLOAD"}, "813": {"op": "AND"}, "814": {"op": "DUP2"}, "815": {"op": "DUP4"}, "816": {"op": "ADD"}, "817": {"op": "MSTORE"}, "818": {"op": "PUSH1", "value": "0x60"}, "820": {"op": "DUP1"}, "821": {"op": "DUP6"}, "822": {"op": "ADD"}, "823": {"op": "MLOAD"}, "824": {"op": "SWAP1"}, "825": {"op": "DUP3"}, "826": {"op": "ADD"}, "827": {"op": "MSTORE"}, "828": {"op": "PUSH1", "value": "0x80"}, "830": {"op": "DUP2"}, "831": {"op": "ADD"}, "832": {"op": "SWAP3"}, "833": {"op": "SWAP1"}, "834": {"op": "SWAP3"}, "835": {"op": "MSTORE"}, "836": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "MLOAD", "path": "0"}, "837": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "PUSH32", "path": "0", "value": "0x546343AEDB3E113CF931AED78F2E83902C295DC1C5296D4A82A0DDDAB915B484"}, "870": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "SWAP2", "path": "0"}, "871": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "DUP2", "path": "0"}, "872": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "SWAP1", "path": "0"}, "873": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "SUB", "path": "0"}, "874": {"op": "PUSH1", "value": "0xA0"}, "876": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "ADD", "path": "0"}, "877": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "SWAP1", "path": "0"}, "878": {"fn": "DestinationDomainSideBridge.claim", "offset": [2450, 2489], "op": "LOG1", "path": "0"}, "879": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2509], "op": "PUSH1", "path": "0", "statement": 9, "value": "0x2"}, "881": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "DUP1", "path": "0"}, "882": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "SLOAD", "path": "0"}, "883": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "SWAP1", "path": "0"}, "884": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2509], "op": "PUSH1", "path": "0", "value": "0x0"}, "886": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "PUSH2", "path": "0", "value": "0x37E"}, "889": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "DUP4", "path": "0"}, "890": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "PUSH2", "path": "0", "value": "0x951"}, "893": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [2499, 2511], "op": "JUMP", "path": "0"}, "894": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "JUMPDEST", "path": "0"}, "895": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "SWAP2", "path": "0"}, "896": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "SWAP1", "path": "0"}, "897": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "POP", "path": "0"}, "898": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "SSTORE", "path": "0"}, "899": {"fn": "DestinationDomainSideBridge.claim", "offset": [2499, 2511], "op": "POP", "path": "0"}, "900": {"offset": [578, 580], "op": "PUSH1", "path": "0", "value": "0x14"}, "902": {"fn": "DestinationDomainSideBridge.claim", "offset": [2525, 2535], "op": "PUSH1", "path": "0", "value": "0x2"}, "904": {"fn": "DestinationDomainSideBridge.claim", "offset": [2525, 2535], "op": "SLOAD", "path": "0"}, "905": {"fn": "DestinationDomainSideBridge.claim", "offset": [2525, 2557], "op": "PUSH2", "path": "0", "value": "0x392"}, "908": {"fn": "DestinationDomainSideBridge.claim", "offset": [2525, 2557], "op": "SWAP2", "path": "0"}, "909": {"fn": "DestinationDomainSideBridge.claim", "offset": [2525, 2557], "op": "SWAP1", "path": "0"}, "910": {"fn": "DestinationDomainSideBridge.claim", "offset": [2525, 2557], "op": "PUSH2", "path": "0", "value": "0x96A"}, "913": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [2525, 2557], "op": "JUMP", "path": "0"}, "914": {"fn": "DestinationDomainSideBridge.claim", "offset": [2525, 2557], "op": "JUMPDEST", "path": "0"}, "915": {"fn": "DestinationDomainSideBridge.claim", "offset": [2561, 2562], "op": "PUSH1", "path": "0", "value": "0x0"}, "917": {"branch": 23, "fn": "DestinationDomainSideBridge.claim", "offset": [2525, 2562], "op": "SUB", "path": "0"}, "918": {"fn": "DestinationDomainSideBridge.claim", "offset": [2522, 2691], "op": "PUSH2", "path": "0", "value": "0x403"}, "921": {"branch": 23, "fn": "DestinationDomainSideBridge.claim", "offset": [2522, 2691], "op": "JUMPI", "path": "0"}, "922": {"fn": "DestinationDomainSideBridge.claim", "offset": [2609, 2624], "op": "PUSH1", "path": "0", "statement": 10, "value": "0x0"}, "924": {"fn": "DestinationDomainSideBridge.claim", "offset": [2609, 2624], "op": "DUP1", "path": "0"}, "925": {"fn": "DestinationDomainSideBridge.claim", "offset": [2609, 2624], "op": "SLOAD", "path": "0"}, "926": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2603], "op": "PUSH1", "path": "0", "value": "0x1"}, "928": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "DUP1", "path": "0"}, "929": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "SLOAD", "path": "0"}, "930": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "DUP1", "path": "0"}, "931": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "DUP3", "path": "0"}, "932": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "ADD", "path": "0"}, "933": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "DUP3", "path": "0"}, "934": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "SSTORE", "path": "0"}, "935": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "SWAP3", "path": "0"}, "936": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "MSTORE", "path": "0"}, "937": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "PUSH32", "path": "0", "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"}, "970": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "SWAP1", "path": "0"}, "971": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "SWAP2", "path": "0"}, "972": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "ADD", "path": "0"}, "973": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "DUP2", "path": "0"}, "974": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "SWAP1", "path": "0"}, "975": {"fn": "DestinationDomainSideBridge.claim", "offset": [2577, 2625], "op": "SSTORE", "path": "0"}, "976": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "PUSH1", "path": "0", "statement": 11, "value": "0x40"}, "978": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "MLOAD", "path": "0"}, "979": {"op": "SWAP1"}, "980": {"op": "DUP2"}, "981": {"op": "MSTORE"}, "982": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "PUSH32", "path": "0", "value": "0xC88CEA9CD8278ECA3C21369DDAE1825E3118D7FC925BEB6297E5A7672B9D4895"}, "1015": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "SWAP1", "path": "0"}, "1016": {"op": "PUSH1", "value": "0x20"}, "1018": {"op": "ADD"}, "1019": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "PUSH1", "path": "0", "value": "0x40"}, "1021": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "MLOAD", "path": "0"}, "1022": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "DUP1", "path": "0"}, "1023": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "SWAP2", "path": "0"}, "1024": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "SUB", "path": "0"}, "1025": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "SWAP1", "path": "0"}, "1026": {"fn": "DestinationDomainSideBridge.claim", "offset": [2644, 2680], "op": "LOG1", "path": "0"}, "1027": {"fn": "DestinationDomainSideBridge.claim", "offset": [2522, 2691], "op": "JUMPDEST", "path": "0"}, "1028": {"fn": "DestinationDomainSideBridge.claim", "offset": [2704, 2730], "op": "DUP4", "path": "0"}, "1029": {"fn": "DestinationDomainSideBridge.claim", "offset": [2704, 2730], "op": "MLOAD", "path": "0"}, "1030": {"op": "PUSH1", "value": "0x1"}, "1032": {"op": "PUSH1", "value": "0x1"}, "1034": {"op": "PUSH1", "value": "0xA0"}, "1036": {"op": "SHL"}, "1037": {"op": "SUB"}, "1038": {"branch": 24, "fn": "DestinationDomainSideBridge.claim", "offset": [2704, 2747], "op": "AND", "path": "0"}, "1039": {"fn": "DestinationDomainSideBridge.claim", "offset": [2701, 3120], "op": "PUSH2", "path": "0", "value": "0x4B9"}, "1042": {"branch": 24, "fn": "DestinationDomainSideBridge.claim", "offset": [2701, 3120], "op": "JUMPI", "path": "0"}, "1043": {"fn": "DestinationDomainSideBridge.claim", "offset": [2783, 2796], "op": "DUP4", "path": "0", "statement": 12}, "1044": {"fn": "DestinationDomainSideBridge.claim", "offset": [2783, 2803], "op": "PUSH1", "path": "0", "value": "0x40"}, "1046": {"fn": "DestinationDomainSideBridge.claim", "offset": [2783, 2803], "op": "ADD", "path": "0"}, "1047": {"fn": "DestinationDomainSideBridge.claim", "offset": [2783, 2803], "op": "MLOAD", "path": "0"}, "1048": {"fn": "DestinationDomainSideBridge.claim", "offset": [2770, 2779], "op": "CALLVALUE", "path": "0"}, "1049": {"fn": "DestinationDomainSideBridge.claim", "offset": [2770, 2803], "op": "LT", "path": "0"}, "1050": {"branch": 25, "fn": "DestinationDomainSideBridge.claim", "offset": [2770, 2803], "op": "ISZERO", "path": "0"}, "1051": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "PUSH2", "path": "0", "value": "0x472"}, "1054": {"branch": 25, "fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "JUMPI", "path": "0"}, "1055": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "PUSH1", "path": "0", "value": "0x40"}, "1057": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "MLOAD", "path": "0"}, "1058": {"op": "PUSH3", "value": "0x461BCD"}, "1062": {"op": "PUSH1", "value": "0xE5"}, "1064": {"op": "SHL"}, "1065": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "DUP2", "path": "0"}, "1066": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "MSTORE", "path": "0"}, "1067": {"op": "PUSH1", "value": "0x20"}, "1069": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "PUSH1", "path": "0", "value": "0x4"}, "1071": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "DUP3", "path": "0"}, "1072": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "ADD", "path": "0"}, "1073": {"op": "MSTORE"}, "1074": {"op": "PUSH1", "value": "0x24"}, "1076": {"op": "DUP1"}, "1077": {"op": "DUP3"}, "1078": {"op": "ADD"}, "1079": {"op": "MSTORE"}, "1080": {"op": "PUSH32", "value": "0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121"}, "1113": {"op": "PUSH1", "value": "0x44"}, "1115": {"op": "DUP3"}, "1116": {"op": "ADD"}, "1117": {"op": "MSTORE"}, "1118": {"op": "PUSH4", "value": "0x21212121"}, "1123": {"op": "PUSH1", "value": "0xE0"}, "1125": {"op": "SHL"}, "1126": {"op": "PUSH1", "value": "0x64"}, "1128": {"op": "DUP3"}, "1129": {"op": "ADD"}, "1130": {"op": "MSTORE"}, "1131": {"op": "PUSH1", "value": "0x84"}, "1133": {"op": "ADD"}, "1134": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "PUSH2", "path": "0", "value": "0x1F6"}, "1137": {"op": "JUMP"}, "1138": {"fn": "DestinationDomainSideBridge.claim", "offset": [2762, 2844], "op": "JUMPDEST", "path": "0"}, "1139": {"fn": "DestinationDomainSideBridge.claim", "offset": [2866, 2879], "op": "DUP4", "path": "0", "statement": 13}, "1140": {"fn": "DestinationDomainSideBridge.claim", "offset": [2866, 2891], "op": "PUSH1", "path": "0", "value": "0x20"}, "1142": {"fn": "DestinationDomainSideBridge.claim", "offset": [2866, 2891], "op": "ADD", "path": "0"}, "1143": {"fn": "DestinationDomainSideBridge.claim", "offset": [2866, 2891], "op": "MLOAD", "path": "0"}, "1144": {"op": "PUSH1", "value": "0x1"}, "1146": {"op": "PUSH1", "value": "0x1"}, "1148": {"op": "PUSH1", "value": "0xA0"}, "1150": {"op": "SHL"}, "1151": {"op": "SUB"}, "1152": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2901], "op": "AND", "path": "0"}, "1153": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "PUSH2", "path": "0", "value": "0x8FC"}, "1156": {"fn": "DestinationDomainSideBridge.claim", "offset": [2902, 2915], "op": "DUP6", "path": "0"}, "1157": {"fn": "DestinationDomainSideBridge.claim", "offset": [2902, 2922], "op": "PUSH1", "path": "0", "value": "0x40"}, "1159": {"fn": "DestinationDomainSideBridge.claim", "offset": [2902, 2922], "op": "ADD", "path": "0"}, "1160": {"fn": "DestinationDomainSideBridge.claim", "offset": [2902, 2922], "op": "MLOAD", "path": "0"}, "1161": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "SWAP1", "path": "0"}, "1162": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP2", "path": "0"}, "1163": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "ISZERO", "path": "0"}, "1164": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "MUL", "path": "0"}, "1165": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "SWAP1", "path": "0"}, "1166": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "PUSH1", "path": "0", "value": "0x40"}, "1168": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "MLOAD", "path": "0"}, "1169": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "PUSH1", "path": "0", "value": "0x0"}, "1171": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "PUSH1", "path": "0", "value": "0x40"}, "1173": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "MLOAD", "path": "0"}, "1174": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP1", "path": "0"}, "1175": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP4", "path": "0"}, "1176": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "SUB", "path": "0"}, "1177": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP2", "path": "0"}, "1178": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP6", "path": "0"}, "1179": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP9", "path": "0"}, "1180": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP9", "path": "0"}, "1181": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "CALL", "path": "0"}, "1182": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "SWAP4", "path": "0"}, "1183": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "POP", "path": "0"}, "1184": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "POP", "path": "0"}, "1185": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "POP", "path": "0"}, "1186": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "POP", "path": "0"}, "1187": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "ISZERO", "path": "0"}, "1188": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP1", "path": "0"}, "1189": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "ISZERO", "path": "0"}, "1190": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "PUSH2", "path": "0", "value": "0x4B3"}, "1193": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "JUMPI", "path": "0"}, "1194": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "RETURNDATASIZE", "path": "0"}, "1195": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "PUSH1", "path": "0", "value": "0x0"}, "1197": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "DUP1", "path": "0"}, "1198": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "RETURNDATACOPY", "path": "0"}, "1199": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "RETURNDATASIZE", "path": "0"}, "1200": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "PUSH1", "path": "0", "value": "0x0"}, "1202": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "REVERT", "path": "0"}, "1203": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "JUMPDEST", "path": "0"}, "1204": {"fn": "DestinationDomainSideBridge.claim", "offset": [2858, 2923], "op": "POP", "path": "0"}, "1205": {"fn": "DestinationDomainSideBridge.claim", "offset": [2701, 3120], "op": "PUSH2", "path": "0", "value": "0x543"}, "1208": {"fn": "DestinationDomainSideBridge.claim", "offset": [2701, 3120], "op": "JUMP", "path": "0"}, "1209": {"fn": "DestinationDomainSideBridge.claim", "offset": [2701, 3120], "op": "JUMPDEST", "path": "0"}, "1210": {"fn": "DestinationDomainSideBridge.claim", "offset": [2972, 2998], "op": "DUP4", "path": "0"}, "1211": {"fn": "DestinationDomainSideBridge.claim", "offset": [2972, 2998], "op": "MLOAD", "path": "0"}, "1212": {"fn": "DestinationDomainSideBridge.claim", "offset": [3044, 3069], "op": "PUSH1", "path": "0", "statement": 14, "value": "0x20"}, "1214": {"fn": "DestinationDomainSideBridge.claim", "offset": [3044, 3069], "op": "DUP6", "path": "0"}, "1215": {"fn": "DestinationDomainSideBridge.claim", "offset": [3044, 3069], "op": "ADD", "path": "0"}, "1216": {"fn": "DestinationDomainSideBridge.claim", "offset": [3044, 3069], "op": "MLOAD", "path": "0"}, "1217": {"fn": "DestinationDomainSideBridge.claim", "offset": [3088, 3108], "op": "PUSH1", "path": "0", "value": "0x40"}, "1219": {"fn": "DestinationDomainSideBridge.claim", "offset": [3088, 3108], "op": "DUP1", "path": "0"}, "1220": {"fn": "DestinationDomainSideBridge.claim", "offset": [3088, 3108], "op": "DUP8", "path": "0"}, "1221": {"fn": "DestinationDomainSideBridge.claim", "offset": [3088, 3108], "op": "ADD", "path": "0"}, "1222": {"fn": "DestinationDomainSideBridge.claim", "offset": [3088, 3108], "op": "MLOAD", "path": "0"}, "1223": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "SWAP1", "path": "0"}, "1224": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "MLOAD", "path": "0"}, "1225": {"op": "PUSH4", "value": "0x23B872DD"}, "1230": {"op": "PUSH1", "value": "0xE0"}, "1232": {"op": "SHL"}, "1233": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP2", "path": "0"}, "1234": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "MSTORE", "path": "0"}, "1235": {"fn": "DestinationDomainSideBridge.claim", "offset": [3032, 3042], "op": "CALLER", "path": "0"}, "1236": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x4"}, "1238": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP3", "path": "0"}, "1239": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "ADD", "path": "0"}, "1240": {"op": "MSTORE"}, "1241": {"op": "PUSH1", "value": "0x1"}, "1243": {"op": "PUSH1", "value": "0x1"}, "1245": {"op": "PUSH1", "value": "0xA0"}, "1247": {"op": "SHL"}, "1248": {"op": "SUB"}, "1249": {"op": "SWAP3"}, "1250": {"op": "DUP4"}, "1251": {"op": "AND"}, "1252": {"op": "PUSH1", "value": "0x24"}, "1254": {"op": "DUP3"}, "1255": {"op": "ADD"}, "1256": {"op": "MSTORE"}, "1257": {"op": "PUSH1", "value": "0x44"}, "1259": {"op": "DUP2"}, "1260": {"op": "ADD"}, "1261": {"op": "SWAP2"}, "1262": {"op": "SWAP1"}, "1263": {"op": "SWAP2"}, "1264": {"op": "MSTORE"}, "1265": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3031], "op": "SWAP1", "path": "0"}, "1266": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3031], "op": "DUP3", "path": "0"}, "1267": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3031], "op": "AND", "path": "0"}, "1268": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3031], "op": "SWAP1", "path": "0"}, "1269": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3031], "op": "PUSH4", "path": "0", "value": "0x23B872DD"}, "1274": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3031], "op": "SWAP1", "path": "0"}, "1275": {"op": "PUSH1", "value": "0x64"}, "1277": {"op": "ADD"}, "1278": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x20"}, "1280": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x40"}, "1282": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "MLOAD", "path": "0"}, "1283": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP1", "path": "0"}, "1284": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP4", "path": "0"}, "1285": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "SUB", "path": "0"}, "1286": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP2", "path": "0"}, "1287": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x0"}, "1289": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP8", "path": "0"}, "1290": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "GAS", "path": "0"}, "1291": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "CALL", "path": "0"}, "1292": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "ISZERO", "path": "0"}, "1293": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP1", "path": "0"}, "1294": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "ISZERO", "path": "0"}, "1295": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH2", "path": "0", "value": "0x51C"}, "1298": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "JUMPI", "path": "0"}, "1299": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "RETURNDATASIZE", "path": "0"}, "1300": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x0"}, "1302": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP1", "path": "0"}, "1303": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "RETURNDATACOPY", "path": "0"}, "1304": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "RETURNDATASIZE", "path": "0"}, "1305": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x0"}, "1307": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "REVERT", "path": "0"}, "1308": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "JUMPDEST", "path": "0"}, "1309": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "POP", "path": "0"}, "1310": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "POP", "path": "0"}, "1311": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "POP", "path": "0"}, "1312": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "POP", "path": "0"}, "1313": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x40"}, "1315": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "MLOAD", "path": "0"}, "1316": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "RETURNDATASIZE", "path": "0"}, "1317": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1319": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "NOT", "path": "0"}, "1320": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1322": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP3", "path": "0"}, "1323": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "ADD", "path": "0"}, "1324": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "AND", "path": "0"}, "1325": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP3", "path": "0"}, "1326": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "ADD", "path": "0"}, "1327": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP1", "path": "0"}, "1328": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH1", "path": "0", "value": "0x40"}, "1330": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "MSTORE", "path": "0"}, "1331": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "POP", "path": "0"}, "1332": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "DUP2", "path": "0"}, "1333": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "ADD", "path": "0"}, "1334": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "SWAP1", "path": "0"}, "1335": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH2", "path": "0", "value": "0x540"}, "1338": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "SWAP2", "path": "0"}, "1339": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "SWAP1", "path": "0"}, "1340": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "PUSH2", "path": "0", "value": "0x98C"}, "1343": {"fn": "DestinationDomainSideBridge.claim", "jump": "i", "offset": [3013, 3109], "op": "JUMP", "path": "0"}, "1344": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "JUMPDEST", "path": "0"}, "1345": {"fn": "DestinationDomainSideBridge.claim", "offset": [3013, 3109], "op": "POP", "path": "0"}, "1346": {"fn": "DestinationDomainSideBridge.claim", "offset": [2938, 3120], "op": "POP", "path": "0"}, "1347": {"fn": "DestinationDomainSideBridge.claim", "offset": [2701, 3120], "op": "JUMPDEST", "path": "0"}, "1348": {"fn": "DestinationDomainSideBridge.claim", "offset": [1737, 3126], "op": "POP", "path": "0"}, "1349": {"fn": "DestinationDomainSideBridge.claim", "offset": [1737, 3126], "op": "POP", "path": "0"}, "1350": {"fn": "DestinationDomainSideBridge.claim", "offset": [1737, 3126], "op": "POP", "path": "0"}, "1351": {"fn": "DestinationDomainSideBridge.claim", "offset": [1661, 3126], "op": "POP", "path": "0"}, "1352": {"fn": "DestinationDomainSideBridge.claim", "jump": "o", "offset": [1661, 3126], "op": "JUMP", "path": "0"}, "1353": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3315, 3980], "op": "JUMPDEST", "path": "0"}, "1354": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3405, 3431], "op": "PUSH1", "path": "0", "statement": 15, "value": "0x1"}, "1356": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3405, 3438], "op": "SLOAD", "path": "0"}, "1357": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3380, 3402], "op": "PUSH1", "path": "0", "value": "0x4"}, "1359": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3380, 3402], "op": "SLOAD", "path": "0"}, "1360": {"branch": 26, "fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3380, 3438], "op": "LT", "path": "0"}, "1361": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "PUSH2", "path": "0", "value": "0x59C"}, "1364": {"branch": 26, "fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "JUMPI", "path": "0"}, "1365": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "PUSH1", "path": "0", "value": "0x40"}, "1367": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "MLOAD", "path": "0"}, "1368": {"op": "PUSH3", "value": "0x461BCD"}, "1372": {"op": "PUSH1", "value": "0xE5"}, "1374": {"op": "SHL"}, "1375": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "DUP2", "path": "0"}, "1376": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "MSTORE", "path": "0"}, "1377": {"op": "PUSH1", "value": "0x20"}, "1379": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "PUSH1", "path": "0", "value": "0x4"}, "1381": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "DUP3", "path": "0"}, "1382": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "ADD", "path": "0"}, "1383": {"op": "MSTORE"}, "1384": {"op": "PUSH1", "value": "0x1D"}, "1386": {"op": "PUSH1", "value": "0x24"}, "1388": {"op": "DUP3"}, "1389": {"op": "ADD"}, "1390": {"op": "MSTORE"}, "1391": {"op": "PUSH32", "value": "0x4E6F206E65772068617368206F6E696F6E7320746F207265706F72742E000000"}, "1424": {"op": "PUSH1", "value": "0x44"}, "1426": {"op": "DUP3"}, "1427": {"op": "ADD"}, "1428": {"op": "MSTORE"}, "1429": {"op": "PUSH1", "value": "0x64"}, "1431": {"op": "ADD"}, "1432": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "PUSH2", "path": "0", "value": "0x1F6"}, "1435": {"op": "JUMP"}, "1436": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3372, 3472], "op": "JUMPDEST", "path": "0"}, "1437": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "PUSH32", "path": "0", "statement": 16, "value": "0x9034AC9F41D98D9BB9FE35278080334324D0ECEBE02E47481BB00E524FB40AA6"}, "1470": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3547], "op": "PUSH1", "path": "0", "value": "0x1"}, "1472": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3548, 3570], "op": "PUSH1", "path": "0", "value": "0x4"}, "1474": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3548, 3570], "op": "SLOAD", "path": "0"}, "1475": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "DUP2", "path": "0"}, "1476": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "SLOAD", "path": "0"}, "1477": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "DUP2", "path": "0"}, "1478": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "LT", "path": "0"}, "1479": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "PUSH2", "path": "0", "value": "0x5D2"}, "1482": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "JUMPI", "path": "0"}, "1483": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "PUSH2", "path": "0", "value": "0x5D2"}, "1486": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "PUSH2", "path": "0", "value": "0x9AE"}, "1489": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "jump": "i", "offset": [3521, 3571], "op": "JUMP", "path": "0"}, "1490": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "JUMPDEST", "path": "0"}, "1491": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "SWAP1", "path": "0"}, "1492": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "PUSH1", "path": "0", "value": "0x0"}, "1494": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "MSTORE", "path": "0"}, "1495": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "PUSH1", "path": "0", "value": "0x20"}, "1497": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "PUSH1", "path": "0", "value": "0x0"}, "1499": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "KECCAK256", "path": "0"}, "1500": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "ADD", "path": "0"}, "1501": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3521, 3571], "op": "SLOAD", "path": "0"}, "1502": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "PUSH1", "path": "0", "value": "0x40"}, "1504": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "MLOAD", "path": "0"}, "1505": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "PUSH2", "path": "0", "value": "0x5EC"}, "1508": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "SWAP2", "path": "0"}, "1509": {"op": "DUP2"}, "1510": {"op": "MSTORE"}, "1511": {"op": "PUSH1", "value": "0x20"}, "1513": {"op": "ADD"}, "1514": {"op": "SWAP1"}, "1515": {"op": "JUMP"}, "1516": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "JUMPDEST", "path": "0"}, "1517": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "PUSH1", "path": "0", "value": "0x40"}, "1519": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "MLOAD", "path": "0"}, "1520": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "DUP1", "path": "0"}, "1521": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "SWAP2", "path": "0"}, "1522": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "SUB", "path": "0"}, "1523": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "SWAP1", "path": "0"}, "1524": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3496, 3572], "op": "LOG1", "path": "0"}, "1525": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3701, 3728], "op": "PUSH1", "path": "0", "statement": 17, "value": "0x5"}, "1527": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3701, 3728], "op": "SLOAD", "path": "0"}, "1528": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3870, 3892], "op": "PUSH1", "path": "0", "value": "0x4"}, "1530": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3870, 3892], "op": "SLOAD", "path": "0"}, "1531": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3701, 3728], "op": "PUSH1", "path": "0", "value": "0x1"}, "1533": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "DUP1", "path": "0"}, "1534": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "SLOAD", "path": "0"}, "1535": {"op": "PUSH1", "value": "0x7"}, "1537": {"op": "PUSH1", "value": "0x21"}, "1539": {"op": "PUSH1", "value": "0x99"}, "1541": {"op": "SHL"}, "1542": {"op": "ADD"}, "1543": {"offset": [981, 1023], "op": "SWAP4", "path": "0"}, "1544": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [981, 1023], "op": "DUP5", "path": "0"}, "1545": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [981, 1023], "op": "SWAP4", "path": "0"}, "1546": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3687], "op": "PUSH4", "path": "0", "value": "0x3DBB202B"}, "1551": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3687], "op": "SWAP4", "path": "0"}, "1552": {"op": "PUSH1", "value": "0x1"}, "1554": {"op": "PUSH1", "value": "0x1"}, "1556": {"op": "PUSH1", "value": "0xA0"}, "1558": {"op": "SHL"}, "1559": {"op": "SUB"}, "1560": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3701, 3728], "op": "SWAP1", "path": "0"}, "1561": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3701, 3728], "op": "SWAP3", "path": "0"}, "1562": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3701, 3728], "op": "AND", "path": "0"}, "1563": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3701, 3728], "op": "SWAP3", "path": "0"}, "1564": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "DUP2", "path": "0"}, "1565": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "LT", "path": "0"}, "1566": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "PUSH2", "path": "0", "value": "0x629"}, "1569": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "JUMPI", "path": "0"}, "1570": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "PUSH2", "path": "0", "value": "0x629"}, "1573": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "PUSH2", "path": "0", "value": "0x9AE"}, "1576": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "jump": "i", "offset": [3843, 3893], "op": "JUMP", "path": "0"}, "1577": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "JUMPDEST", "path": "0"}, "1578": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "SWAP1", "path": "0"}, "1579": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "PUSH1", "path": "0", "value": "0x0"}, "1581": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "MSTORE", "path": "0"}, "1582": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "PUSH1", "path": "0", "value": "0x20"}, "1584": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "PUSH1", "path": "0", "value": "0x0"}, "1586": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "KECCAK256", "path": "0"}, "1587": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "ADD", "path": "0"}, "1588": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3843, 3893], "op": "SLOAD", "path": "0"}, "1589": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "PUSH1", "path": "0", "value": "0x40"}, "1591": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "MLOAD", "path": "0"}, "1592": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "PUSH1", "path": "0", "value": "0x24"}, "1594": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "ADD", "path": "0"}, "1595": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "PUSH2", "path": "0", "value": "0x646"}, "1598": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "SWAP2", "path": "0"}, "1599": {"op": "DUP2"}, "1600": {"op": "MSTORE"}, "1601": {"op": "PUSH1", "value": "0x20"}, "1603": {"op": "ADD"}, "1604": {"op": "SWAP1"}, "1605": {"op": "JUMP"}, "1606": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "JUMPDEST", "path": "0"}, "1607": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "PUSH1", "path": "0", "value": "0x40"}, "1609": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "DUP1", "path": "0"}, "1610": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "MLOAD", "path": "0"}, "1611": {"op": "PUSH1", "value": "0x1F"}, "1613": {"op": "NOT"}, "1614": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "DUP2", "path": "0"}, "1615": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "DUP5", "path": "0"}, "1616": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "SUB", "path": "0"}, "1617": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "ADD", "path": "0"}, "1618": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "DUP2", "path": "0"}, "1619": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "MSTORE", "path": "0"}, "1620": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "SWAP2", "path": "0"}, "1621": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "DUP2", "path": "0"}, "1622": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "MSTORE", "path": "0"}, "1623": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "PUSH1", "path": "0", "value": "0x20"}, "1625": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "DUP3", "path": "0"}, "1626": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "ADD", "path": "0"}, "1627": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "DUP1", "path": "0"}, "1628": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "MLOAD", "path": "0"}, "1629": {"op": "PUSH1", "value": "0x1"}, "1631": {"op": "PUSH1", "value": "0x1"}, "1633": {"op": "PUSH1", "value": "0xE0"}, "1635": {"op": "SHL"}, "1636": {"op": "SUB"}, "1637": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "AND", "path": "0"}, "1638": {"op": "PUSH4", "value": "0xE5F3511B"}, "1643": {"op": "PUSH1", "value": "0xE0"}, "1645": {"op": "SHL"}, "1646": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "OR", "path": "0"}, "1647": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "SWAP1", "path": "0"}, "1648": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "MSTORE", "path": "0"}, "1649": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "MLOAD", "path": "0"}, "1650": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH1", "path": "0", "value": "0xE0"}, "1652": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP5", "path": "0"}, "1653": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "SWAP1", "path": "0"}, "1654": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "SHL", "path": "0"}, "1655": {"op": "PUSH1", "value": "0x1"}, "1657": {"op": "PUSH1", "value": "0x1"}, "1659": {"op": "PUSH1", "value": "0xE0"}, "1661": {"op": "SHL"}, "1662": {"op": "SUB"}, "1663": {"op": "NOT"}, "1664": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "AND", "path": "0"}, "1665": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP2", "path": "0"}, "1666": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "MSTORE", "path": "0"}, "1667": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH2", "path": "0", "value": "0x695"}, "1670": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "SWAP3", "path": "0"}, "1671": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "SWAP2", "path": "0"}, "1672": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3742, 3907], "op": "SWAP1", "path": "0"}, "1673": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3921, 3928], "op": "PUSH3", "path": "0", "value": "0xF4240"}, "1677": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3921, 3928], "op": "SWAP1", "path": "0"}, "1678": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH1", "path": "0", "value": "0x4"}, "1680": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "ADD", "path": "0"}, "1681": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH2", "path": "0", "value": "0x9C4"}, "1684": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "jump": "i", "offset": [3670, 3939], "op": "JUMP", "path": "0"}, "1685": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "JUMPDEST", "path": "0"}, "1686": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH1", "path": "0", "value": "0x0"}, "1688": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH1", "path": "0", "value": "0x40"}, "1690": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "MLOAD", "path": "0"}, "1691": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP1", "path": "0"}, "1692": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP4", "path": "0"}, "1693": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "SUB", "path": "0"}, "1694": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP2", "path": "0"}, "1695": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH1", "path": "0", "value": "0x0"}, "1697": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP8", "path": "0"}, "1698": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP1", "path": "0"}, "1699": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "EXTCODESIZE", "path": "0"}, "1700": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "ISZERO", "path": "0"}, "1701": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP1", "path": "0"}, "1702": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "ISZERO", "path": "0"}, "1703": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH2", "path": "0", "value": "0x6AF"}, "1706": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "JUMPI", "path": "0"}, "1707": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH1", "path": "0", "value": "0x0"}, "1709": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP1", "path": "0"}, "1710": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "REVERT", "path": "0"}, "1711": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "JUMPDEST", "path": "0"}, "1712": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "POP", "path": "0"}, "1713": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "GAS", "path": "0"}, "1714": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "CALL", "path": "0"}, "1715": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "ISZERO", "path": "0"}, "1716": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP1", "path": "0"}, "1717": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "ISZERO", "path": "0"}, "1718": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH2", "path": "0", "value": "0x6C3"}, "1721": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "JUMPI", "path": "0"}, "1722": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "RETURNDATASIZE", "path": "0"}, "1723": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH1", "path": "0", "value": "0x0"}, "1725": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "DUP1", "path": "0"}, "1726": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "RETURNDATACOPY", "path": "0"}, "1727": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "RETURNDATASIZE", "path": "0"}, "1728": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "PUSH1", "path": "0", "value": "0x0"}, "1730": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "REVERT", "path": "0"}, "1731": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3670, 3939], "op": "JUMPDEST", "path": "0"}, "1732": {"op": "POP"}, "1733": {"op": "POP"}, "1734": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3971], "op": "PUSH1", "path": "0", "statement": 18, "value": "0x4"}, "1736": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "DUP1", "path": "0"}, "1737": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "SLOAD", "path": "0"}, "1738": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "SWAP3", "path": "0"}, "1739": {"op": "POP"}, "1740": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3971], "op": "SWAP1", "path": "0"}, "1741": {"op": "POP"}, "1742": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3971], "op": "PUSH1", "path": "0", "value": "0x0"}, "1744": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "PUSH2", "path": "0", "value": "0x6D8"}, "1747": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "DUP4", "path": "0"}, "1748": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "PUSH2", "path": "0", "value": "0x951"}, "1751": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "jump": "i", "offset": [3949, 3973], "op": "JUMP", "path": "0"}, "1752": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "JUMPDEST", "path": "0"}, "1753": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "SWAP2", "path": "0"}, "1754": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "SWAP1", "path": "0"}, "1755": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "POP", "path": "0"}, "1756": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "SSTORE", "path": "0"}, "1757": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3949, 3973], "op": "POP", "path": "0"}, "1758": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "offset": [3362, 3980], "op": "POP", "path": "0"}, "1759": {"fn": "DestinationDomainSideBridge.declareNewHashOnionHeadToL1", "jump": "o", "offset": [3315, 3980], "op": "JUMP", "path": "0"}, "1760": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4192, 4664], "op": "JUMPDEST", "path": "0"}, "1761": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4364, 4387], "op": "PUSH1", "path": "0", "statement": 19, "value": "0x80"}, "1763": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4364, 4387], "op": "DUP2", "path": "0"}, "1764": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4364, 4387], "op": "ADD", "path": "0"}, "1765": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4364, 4387], "op": "MLOAD", "path": "0"}, "1766": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4277, 4284], "op": "PUSH1", "path": "0", "value": "0x0"}, "1768": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4277, 4284], "op": "SWAP1", "path": "0"}, "1769": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4318, 4330], "op": "NUMBER", "path": "0"}, "1770": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4318, 4330], "op": "SWAP1", "path": "0"}, "1771": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4349, 4387], "op": "DUP2", "path": "0"}, "1772": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4349, 4387], "op": "LT", "path": "0"}, "1773": {"branch": 27, "fn": "DestinationDomainSideBridge.getLPFee", "offset": [4349, 4387], "op": "ISZERO", "path": "0"}, "1774": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "PUSH2", "path": "0", "value": "0x74D"}, "1777": {"branch": 27, "fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "JUMPI", "path": "0"}, "1778": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "PUSH1", "path": "0", "value": "0x40"}, "1780": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "MLOAD", "path": "0"}, "1781": {"op": "PUSH3", "value": "0x461BCD"}, "1785": {"op": "PUSH1", "value": "0xE5"}, "1787": {"op": "SHL"}, "1788": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "DUP2", "path": "0"}, "1789": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "MSTORE", "path": "0"}, "1790": {"op": "PUSH1", "value": "0x20"}, "1792": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "PUSH1", "path": "0", "value": "0x4"}, "1794": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "DUP3", "path": "0"}, "1795": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "ADD", "path": "0"}, "1796": {"op": "MSTORE"}, "1797": {"op": "PUSH1", "value": "0x2B"}, "1799": {"op": "PUSH1", "value": "0x24"}, "1801": {"op": "DUP3"}, "1802": {"op": "ADD"}, "1803": {"op": "MSTORE"}, "1804": {"op": "PUSH32", "value": "0x4572726F72203A20626C6F636B206E756D626572206973206C65737320746861"}, "1837": {"op": "PUSH1", "value": "0x44"}, "1839": {"op": "DUP3"}, "1840": {"op": "ADD"}, "1841": {"op": "MSTORE"}, "1842": {"op": "PUSH11", "value": "0x6E20737461727454696D65"}, "1854": {"op": "PUSH1", "value": "0xA8"}, "1856": {"op": "SHL"}, "1857": {"op": "PUSH1", "value": "0x64"}, "1859": {"op": "DUP3"}, "1860": {"op": "ADD"}, "1861": {"op": "MSTORE"}, "1862": {"op": "PUSH1", "value": "0x84"}, "1864": {"op": "ADD"}, "1865": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "PUSH2", "path": "0", "value": "0x1F6"}, "1868": {"op": "JUMP"}, "1869": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4341, 4435], "op": "JUMPDEST", "path": "0"}, "1870": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4490, 4503], "op": "DUP3", "path": "0"}, "1871": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4490, 4513], "op": "PUSH1", "path": "0", "value": "0xA0"}, "1873": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4490, 4513], "op": "ADD", "path": "0"}, "1874": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4490, 4513], "op": "MLOAD", "path": "0"}, "1875": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4477], "op": "DUP4", "path": "0"}, "1876": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4487], "op": "PUSH1", "path": "0", "value": "0x80"}, "1878": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4487], "op": "ADD", "path": "0"}, "1879": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4487], "op": "MLOAD", "path": "0"}, "1880": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4513], "op": "PUSH2", "path": "0", "value": "0x761"}, "1883": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4513], "op": "SWAP2", "path": "0"}, "1884": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4513], "op": "SWAP1", "path": "0"}, "1885": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4513], "op": "PUSH2", "path": "0", "value": "0x8F6"}, "1888": {"fn": "DestinationDomainSideBridge.getLPFee", "jump": "i", "offset": [4464, 4513], "op": "JUMP", "path": "0"}, "1889": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4464, 4513], "op": "JUMPDEST", "path": "0"}, "1890": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4449, 4460], "op": "DUP2", "path": "0"}, "1891": {"branch": 28, "fn": "DestinationDomainSideBridge.getLPFee", "offset": [4449, 4513], "op": "LT", "path": "0"}, "1892": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4446, 4644], "op": "PUSH2", "path": "0", "value": "0x770"}, "1895": {"branch": 28, "fn": "DestinationDomainSideBridge.getLPFee", "offset": [4446, 4644], "op": "JUMPI", "path": "0"}, "1896": {"op": "POP"}, "1897": {"op": "POP"}, "1898": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4534, 4551], "op": "PUSH1", "path": "0", "statement": 20, "value": "0x60"}, "1900": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4534, 4551], "op": "ADD", "path": "0"}, "1901": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4534, 4551], "op": "MLOAD", "path": "0"}, "1902": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4534, 4551], "op": "SWAP1", "path": "0"}, "1903": {"fn": "DestinationDomainSideBridge.getLPFee", "jump": "o", "offset": [4192, 4664], "op": "JUMP", "path": "0"}, "1904": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4446, 4644], "op": "JUMPDEST", "path": "0"}, "1905": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4620, 4643], "op": "PUSH1", "path": "0", "statement": 21, "value": "0x80"}, "1907": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4620, 4643], "op": "DUP4", "path": "0"}, "1908": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4620, 4643], "op": "ADD", "path": "0"}, "1909": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4620, 4643], "op": "MLOAD", "path": "0"}, "1910": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4606, 4643], "op": "PUSH2", "path": "0", "value": "0x77F"}, "1913": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4606, 4643], "op": "SWAP1", "path": "0"}, "1914": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4606, 4617], "op": "DUP3", "path": "0"}, "1915": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4606, 4643], "op": "PUSH2", "path": "0", "value": "0x8DF"}, "1918": {"fn": "DestinationDomainSideBridge.getLPFee", "jump": "i", "offset": [4606, 4643], "op": "JUMP", "path": "0"}, "1919": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4606, 4643], "op": "JUMPDEST", "path": "0"}, "1920": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4598], "op": "DUP4", "path": "0"}, "1921": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4602], "op": "PUSH1", "path": "0", "value": "0x60"}, "1923": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4602], "op": "ADD", "path": "0"}, "1924": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4602], "op": "MLOAD", "path": "0"}, "1925": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4644], "op": "PUSH2", "path": "0", "value": "0x78E"}, "1928": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4644], "op": "SWAP2", "path": "0"}, "1929": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4644], "op": "SWAP1", "path": "0"}, "1930": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4644], "op": "PUSH2", "path": "0", "value": "0xA14"}, "1933": {"fn": "DestinationDomainSideBridge.getLPFee", "jump": "i", "offset": [4585, 4644], "op": "JUMP", "path": "0"}, "1934": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4585, 4644], "op": "JUMPDEST", "path": "0"}, "1935": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4578, 4644], "op": "SWAP4", "path": "0"}, "1936": {"fn": "DestinationDomainSideBridge.getLPFee", "offset": [4192, 4664], "op": "SWAP3", "path": "0"}, "1937": {"op": "POP"}, "1938": {"op": "POP"}, "1939": {"op": "POP"}, "1940": {"fn": "DestinationDomainSideBridge.getLPFee", "jump": "o", "offset": [4192, 4664], "op": "JUMP", "path": "0"}, "1941": {"op": "JUMPDEST"}, "1942": {"op": "PUSH1", "value": "0x0"}, "1944": {"op": "PUSH1", "value": "0x20"}, "1946": {"op": "DUP3"}, "1947": {"op": "DUP5"}, "1948": {"op": "SUB"}, "1949": {"op": "SLT"}, "1950": {"op": "ISZERO"}, "1951": {"op": "PUSH2", "value": "0x7A7"}, "1954": {"op": "JUMPI"}, "1955": {"op": "PUSH1", "value": "0x0"}, "1957": {"op": "DUP1"}, "1958": {"op": "REVERT"}, "1959": {"op": "JUMPDEST"}, "1960": {"op": "POP"}, "1961": {"op": "CALLDATALOAD"}, "1962": {"op": "SWAP2"}, "1963": {"op": "SWAP1"}, "1964": {"op": "POP"}, "1965": {"jump": "o", "op": "JUMP"}, "1966": {"op": "JUMPDEST"}, "1967": {"op": "DUP1"}, "1968": {"op": "CALLDATALOAD"}, "1969": {"op": "PUSH1", "value": "0x1"}, "1971": {"op": "PUSH1", "value": "0x1"}, "1973": {"op": "PUSH1", "value": "0xA0"}, "1975": {"op": "SHL"}, "1976": {"op": "SUB"}, "1977": {"op": "DUP2"}, "1978": {"op": "AND"}, "1979": {"op": "DUP2"}, "1980": {"op": "EQ"}, "1981": {"op": "PUSH2", "value": "0x7C5"}, "1984": {"op": "JUMPI"}, "1985": {"op": "PUSH1", "value": "0x0"}, "1987": {"op": "DUP1"}, "1988": {"op": "REVERT"}, "1989": {"op": "JUMPDEST"}, "1990": {"op": "SWAP2"}, "1991": {"op": "SWAP1"}, "1992": {"op": "POP"}, "1993": {"jump": "o", "op": "JUMP"}, "1994": {"op": "JUMPDEST"}, "1995": {"op": "PUSH1", "value": "0x0"}, "1997": {"op": "PUSH1", "value": "0xE0"}, "1999": {"op": "DUP3"}, "2000": {"op": "DUP5"}, "2001": {"op": "SUB"}, "2002": {"op": "SLT"}, "2003": {"op": "ISZERO"}, "2004": {"op": "PUSH2", "value": "0x7DC"}, "2007": {"op": "JUMPI"}, "2008": {"op": "PUSH1", "value": "0x0"}, "2010": {"op": "DUP1"}, "2011": {"op": "REVERT"}, "2012": {"op": "JUMPDEST"}, "2013": {"op": "PUSH1", "value": "0x40"}, "2015": {"op": "MLOAD"}, "2016": {"op": "PUSH1", "value": "0xE0"}, "2018": {"op": "DUP2"}, "2019": {"op": "ADD"}, "2020": {"op": "DUP2"}, "2021": {"op": "DUP2"}, "2022": {"op": "LT"}, "2023": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2032": {"op": "DUP3"}, "2033": {"op": "GT"}, "2034": {"op": "OR"}, "2035": {"op": "ISZERO"}, "2036": {"op": "PUSH2", "value": "0x80D"}, "2039": {"op": "JUMPI"}, "2040": {"op": "PUSH4", "value": "0x4E487B71"}, "2045": {"op": "PUSH1", "value": "0xE0"}, "2047": {"op": "SHL"}, "2048": {"op": "PUSH1", "value": "0x0"}, "2050": {"op": "MSTORE"}, "2051": {"op": "PUSH1", "value": "0x41"}, "2053": {"op": "PUSH1", "value": "0x4"}, "2055": {"op": "MSTORE"}, "2056": {"op": "PUSH1", "value": "0x24"}, "2058": {"op": "PUSH1", "value": "0x0"}, "2060": {"op": "REVERT"}, "2061": {"op": "JUMPDEST"}, "2062": {"op": "PUSH1", "value": "0x40"}, "2064": {"op": "MSTORE"}, "2065": {"op": "PUSH2", "value": "0x819"}, "2068": {"op": "DUP4"}, "2069": {"op": "PUSH2", "value": "0x7AE"}, "2072": {"jump": "i", "op": "JUMP"}, "2073": {"op": "JUMPDEST"}, "2074": {"op": "DUP2"}, "2075": {"op": "MSTORE"}, "2076": {"op": "PUSH2", "value": "0x827"}, "2079": {"op": "PUSH1", "value": "0x20"}, "2081": {"op": "DUP5"}, "2082": {"op": "ADD"}, "2083": {"op": "PUSH2", "value": "0x7AE"}, "2086": {"jump": "i", "op": "JUMP"}, "2087": {"op": "JUMPDEST"}, "2088": {"op": "PUSH1", "value": "0x20"}, "2090": {"op": "DUP3"}, "2091": {"op": "ADD"}, "2092": {"op": "MSTORE"}, "2093": {"op": "PUSH1", "value": "0x40"}, "2095": {"op": "DUP4"}, "2096": {"op": "ADD"}, "2097": {"op": "CALLDATALOAD"}, "2098": {"op": "PUSH1", "value": "0x40"}, "2100": {"op": "DUP3"}, "2101": {"op": "ADD"}, "2102": {"op": "MSTORE"}, "2103": {"op": "PUSH1", "value": "0x60"}, "2105": {"op": "DUP4"}, "2106": {"op": "ADD"}, "2107": {"op": "CALLDATALOAD"}, "2108": {"op": "PUSH1", "value": "0x60"}, "2110": {"op": "DUP3"}, "2111": {"op": "ADD"}, "2112": {"op": "MSTORE"}, "2113": {"op": "PUSH1", "value": "0x80"}, "2115": {"op": "DUP4"}, "2116": {"op": "ADD"}, "2117": {"op": "CALLDATALOAD"}, "2118": {"op": "PUSH1", "value": "0x80"}, "2120": {"op": "DUP3"}, "2121": {"op": "ADD"}, "2122": {"op": "MSTORE"}, "2123": {"op": "PUSH1", "value": "0xA0"}, "2125": {"op": "DUP4"}, "2126": {"op": "ADD"}, "2127": {"op": "CALLDATALOAD"}, "2128": {"op": "PUSH1", "value": "0xA0"}, "2130": {"op": "DUP3"}, "2131": {"op": "ADD"}, "2132": {"op": "MSTORE"}, "2133": {"op": "PUSH1", "value": "0xC0"}, "2135": {"op": "DUP4"}, "2136": {"op": "ADD"}, "2137": {"op": "CALLDATALOAD"}, "2138": {"op": "PUSH1", "value": "0xC0"}, "2140": {"op": "DUP3"}, "2141": {"op": "ADD"}, "2142": {"op": "MSTORE"}, "2143": {"op": "DUP1"}, "2144": {"op": "SWAP2"}, "2145": {"op": "POP"}, "2146": {"op": "POP"}, "2147": {"op": "SWAP3"}, "2148": {"op": "SWAP2"}, "2149": {"op": "POP"}, "2150": {"op": "POP"}, "2151": {"jump": "o", "op": "JUMP"}, "2152": {"op": "JUMPDEST"}, "2153": {"op": "PUSH1", "value": "0x0"}, "2155": {"op": "JUMPDEST"}, "2156": {"op": "DUP4"}, "2157": {"op": "DUP2"}, "2158": {"op": "LT"}, "2159": {"op": "ISZERO"}, "2160": {"op": "PUSH2", "value": "0x883"}, "2163": {"op": "JUMPI"}, "2164": {"op": "DUP2"}, "2165": {"op": "DUP2"}, "2166": {"op": "ADD"}, "2167": {"op": "MLOAD"}, "2168": {"op": "DUP4"}, "2169": {"op": "DUP3"}, "2170": {"op": "ADD"}, "2171": {"op": "MSTORE"}, "2172": {"op": "PUSH1", "value": "0x20"}, "2174": {"op": "ADD"}, "2175": {"op": "PUSH2", "value": "0x86B"}, "2178": {"op": "JUMP"}, "2179": {"op": "JUMPDEST"}, "2180": {"op": "DUP4"}, "2181": {"op": "DUP2"}, "2182": {"op": "GT"}, "2183": {"op": "ISZERO"}, "2184": {"op": "PUSH2", "value": "0x543"}, "2187": {"op": "JUMPI"}, "2188": {"op": "POP"}, "2189": {"op": "POP"}, "2190": {"op": "PUSH1", "value": "0x0"}, "2192": {"op": "SWAP2"}, "2193": {"op": "ADD"}, "2194": {"op": "MSTORE"}, "2195": {"jump": "o", "op": "JUMP"}, "2196": {"op": "JUMPDEST"}, "2197": {"op": "PUSH1", "value": "0x0"}, "2199": {"op": "DUP3"}, "2200": {"op": "MLOAD"}, "2201": {"op": "PUSH2", "value": "0x8A6"}, "2204": {"op": "DUP2"}, "2205": {"op": "DUP5"}, "2206": {"op": "PUSH1", "value": "0x20"}, "2208": {"op": "DUP8"}, "2209": {"op": "ADD"}, "2210": {"op": "PUSH2", "value": "0x868"}, "2213": {"jump": "i", "op": "JUMP"}, "2214": {"op": "JUMPDEST"}, "2215": {"op": "SWAP2"}, "2216": {"op": "SWAP1"}, "2217": {"op": "SWAP2"}, "2218": {"op": "ADD"}, "2219": {"op": "SWAP3"}, "2220": {"op": "SWAP2"}, "2221": {"op": "POP"}, "2222": {"op": "POP"}, "2223": {"jump": "o", "op": "JUMP"}, "2224": {"op": "JUMPDEST"}, "2225": {"op": "PUSH1", "value": "0x0"}, "2227": {"op": "PUSH1", "value": "0x20"}, "2229": {"op": "DUP3"}, "2230": {"op": "DUP5"}, "2231": {"op": "SUB"}, "2232": {"op": "SLT"}, "2233": {"op": "ISZERO"}, "2234": {"op": "PUSH2", "value": "0x8C2"}, "2237": {"op": "JUMPI"}, "2238": {"op": "PUSH1", "value": "0x0"}, "2240": {"op": "DUP1"}, "2241": {"op": "REVERT"}, "2242": {"op": "JUMPDEST"}, "2243": {"op": "POP"}, "2244": {"op": "MLOAD"}, "2245": {"op": "SWAP2"}, "2246": {"op": "SWAP1"}, "2247": {"op": "POP"}, "2248": {"jump": "o", "op": "JUMP"}, "2249": {"op": "JUMPDEST"}, "2250": {"op": "PUSH4", "value": "0x4E487B71"}, "2255": {"op": "PUSH1", "value": "0xE0"}, "2257": {"op": "SHL"}, "2258": {"op": "PUSH1", "value": "0x0"}, "2260": {"op": "MSTORE"}, "2261": {"op": "PUSH1", "value": "0x11"}, "2263": {"op": "PUSH1", "value": "0x4"}, "2265": {"op": "MSTORE"}, "2266": {"op": "PUSH1", "value": "0x24"}, "2268": {"op": "PUSH1", "value": "0x0"}, "2270": {"op": "REVERT"}, "2271": {"op": "JUMPDEST"}, "2272": {"op": "PUSH1", "value": "0x0"}, "2274": {"op": "DUP3"}, "2275": {"op": "DUP3"}, "2276": {"op": "LT"}, "2277": {"op": "ISZERO"}, "2278": {"op": "PUSH2", "value": "0x8F1"}, "2281": {"op": "JUMPI"}, "2282": {"op": "PUSH2", "value": "0x8F1"}, "2285": {"op": "PUSH2", "value": "0x8C9"}, "2288": {"jump": "i", "op": "JUMP"}, "2289": {"op": "JUMPDEST"}, "2290": {"op": "POP"}, "2291": {"op": "SUB"}, "2292": {"op": "SWAP1"}, "2293": {"jump": "o", "op": "JUMP"}, "2294": {"op": "JUMPDEST"}, "2295": {"op": "PUSH1", "value": "0x0"}, "2297": {"op": "DUP3"}, "2298": {"op": "NOT"}, "2299": {"op": "DUP3"}, "2300": {"op": "GT"}, "2301": {"op": "ISZERO"}, "2302": {"op": "PUSH2", "value": "0x909"}, "2305": {"op": "JUMPI"}, "2306": {"op": "PUSH2", "value": "0x909"}, "2309": {"op": "PUSH2", "value": "0x8C9"}, "2312": {"jump": "i", "op": "JUMP"}, "2313": {"op": "JUMPDEST"}, "2314": {"op": "POP"}, "2315": {"op": "ADD"}, "2316": {"op": "SWAP1"}, "2317": {"jump": "o", "op": "JUMP"}, "2318": {"op": "JUMPDEST"}, "2319": {"op": "DUP3"}, "2320": {"op": "DUP2"}, "2321": {"op": "MSTORE"}, "2322": {"op": "PUSH1", "value": "0xA0"}, "2324": {"op": "DUP2"}, "2325": {"op": "ADD"}, "2326": {"op": "PUSH2", "value": "0x78E"}, "2329": {"op": "PUSH1", "value": "0x20"}, "2331": {"op": "DUP4"}, "2332": {"op": "ADD"}, "2333": {"op": "DUP5"}, "2334": {"op": "DUP1"}, "2335": {"op": "MLOAD"}, "2336": {"op": "DUP3"}, "2337": {"op": "MSTORE"}, "2338": {"op": "PUSH1", "value": "0x20"}, "2340": {"op": "DUP1"}, "2341": {"op": "DUP3"}, "2342": {"op": "ADD"}, "2343": {"op": "MLOAD"}, "2344": {"op": "PUSH1", "value": "0x1"}, "2346": {"op": "PUSH1", "value": "0x1"}, "2348": {"op": "PUSH1", "value": "0xA0"}, "2350": {"op": "SHL"}, "2351": {"op": "SUB"}, "2352": {"op": "SWAP1"}, "2353": {"op": "DUP2"}, "2354": {"op": "AND"}, "2355": {"op": "SWAP2"}, "2356": {"op": "DUP5"}, "2357": {"op": "ADD"}, "2358": {"op": "SWAP2"}, "2359": {"op": "SWAP1"}, "2360": {"op": "SWAP2"}, "2361": {"op": "MSTORE"}, "2362": {"op": "PUSH1", "value": "0x40"}, "2364": {"op": "DUP1"}, "2365": {"op": "DUP4"}, "2366": {"op": "ADD"}, "2367": {"op": "MLOAD"}, "2368": {"op": "SWAP1"}, "2369": {"op": "SWAP2"}, "2370": {"op": "AND"}, "2371": {"op": "SWAP1"}, "2372": {"op": "DUP4"}, "2373": {"op": "ADD"}, "2374": {"op": "MSTORE"}, "2375": {"op": "PUSH1", "value": "0x60"}, "2377": {"op": "SWAP1"}, "2378": {"op": "DUP2"}, "2379": {"op": "ADD"}, "2380": {"op": "MLOAD"}, "2381": {"op": "SWAP2"}, "2382": {"op": "ADD"}, "2383": {"op": "MSTORE"}, "2384": {"op": "JUMP"}, "2385": {"op": "JUMPDEST"}, "2386": {"op": "PUSH1", "value": "0x0"}, "2388": {"op": "PUSH1", "value": "0x1"}, "2390": {"op": "DUP3"}, "2391": {"op": "ADD"}, "2392": {"op": "PUSH2", "value": "0x963"}, "2395": {"op": "JUMPI"}, "2396": {"op": "PUSH2", "value": "0x963"}, "2399": {"op": "PUSH2", "value": "0x8C9"}, "2402": {"jump": "i", "op": "JUMP"}, "2403": {"op": "JUMPDEST"}, "2404": {"op": "POP"}, "2405": {"op": "PUSH1", "value": "0x1"}, "2407": {"op": "ADD"}, "2408": {"op": "SWAP1"}, "2409": {"jump": "o", "op": "JUMP"}, "2410": {"op": "JUMPDEST"}, "2411": {"op": "PUSH1", "value": "0x0"}, "2413": {"op": "DUP3"}, "2414": {"op": "PUSH2", "value": "0x987"}, "2417": {"op": "JUMPI"}, "2418": {"op": "PUSH4", "value": "0x4E487B71"}, "2423": {"op": "PUSH1", "value": "0xE0"}, "2425": {"op": "SHL"}, "2426": {"op": "PUSH1", "value": "0x0"}, "2428": {"op": "MSTORE"}, "2429": {"op": "PUSH1", "value": "0x12"}, "2431": {"op": "PUSH1", "value": "0x4"}, "2433": {"op": "MSTORE"}, "2434": {"op": "PUSH1", "value": "0x24"}, "2436": {"op": "PUSH1", "value": "0x0"}, "2438": {"op": "REVERT"}, "2439": {"op": "JUMPDEST"}, "2440": {"op": "POP"}, "2441": {"op": "MOD"}, "2442": {"op": "SWAP1"}, "2443": {"jump": "o", "op": "JUMP"}, "2444": {"op": "JUMPDEST"}, "2445": {"op": "PUSH1", "value": "0x0"}, "2447": {"op": "PUSH1", "value": "0x20"}, "2449": {"op": "DUP3"}, "2450": {"op": "DUP5"}, "2451": {"op": "SUB"}, "2452": {"op": "SLT"}, "2453": {"op": "ISZERO"}, "2454": {"op": "PUSH2", "value": "0x99E"}, "2457": {"op": "JUMPI"}, "2458": {"op": "PUSH1", "value": "0x0"}, "2460": {"op": "DUP1"}, "2461": {"op": "REVERT"}, "2462": {"op": "JUMPDEST"}, "2463": {"op": "DUP2"}, "2464": {"op": "MLOAD"}, "2465": {"op": "DUP1"}, "2466": {"op": "ISZERO"}, "2467": {"op": "ISZERO"}, "2468": {"op": "DUP2"}, "2469": {"op": "EQ"}, "2470": {"op": "PUSH2", "value": "0x78E"}, "2473": {"op": "JUMPI"}, "2474": {"op": "PUSH1", "value": "0x0"}, "2476": {"op": "DUP1"}, "2477": {"op": "REVERT"}, "2478": {"op": "JUMPDEST"}, "2479": {"op": "PUSH4", "value": "0x4E487B71"}, "2484": {"op": "PUSH1", "value": "0xE0"}, "2486": {"op": "SHL"}, "2487": {"op": "PUSH1", "value": "0x0"}, "2489": {"op": "MSTORE"}, "2490": {"op": "PUSH1", "value": "0x32"}, "2492": {"op": "PUSH1", "value": "0x4"}, "2494": {"op": "MSTORE"}, "2495": {"op": "PUSH1", "value": "0x24"}, "2497": {"op": "PUSH1", "value": "0x0"}, "2499": {"op": "REVERT"}, "2500": {"op": "JUMPDEST"}, "2501": {"op": "PUSH1", "value": "0x1"}, "2503": {"op": "DUP1"}, "2504": {"op": "PUSH1", "value": "0xA0"}, "2506": {"op": "SHL"}, "2507": {"op": "SUB"}, "2508": {"op": "DUP5"}, "2509": {"op": "AND"}, "2510": {"op": "DUP2"}, "2511": {"op": "MSTORE"}, "2512": {"op": "PUSH1", "value": "0x60"}, "2514": {"op": "PUSH1", "value": "0x20"}, "2516": {"op": "DUP3"}, "2517": {"op": "ADD"}, "2518": {"op": "MSTORE"}, "2519": {"op": "PUSH1", "value": "0x0"}, "2521": {"op": "DUP4"}, "2522": {"op": "MLOAD"}, "2523": {"op": "DUP1"}, "2524": {"op": "PUSH1", "value": "0x60"}, "2526": {"op": "DUP5"}, "2527": {"op": "ADD"}, "2528": {"op": "MSTORE"}, "2529": {"op": "PUSH2", "value": "0x9F1"}, "2532": {"op": "DUP2"}, "2533": {"op": "PUSH1", "value": "0x80"}, "2535": {"op": "DUP6"}, "2536": {"op": "ADD"}, "2537": {"op": "PUSH1", "value": "0x20"}, "2539": {"op": "DUP9"}, "2540": {"op": "ADD"}, "2541": {"op": "PUSH2", "value": "0x868"}, "2544": {"jump": "i", "op": "JUMP"}, "2545": {"op": "JUMPDEST"}, "2546": {"op": "PUSH4", "value": "0xFFFFFFFF"}, "2551": {"op": "SWAP4"}, "2552": {"op": "SWAP1"}, "2553": {"op": "SWAP4"}, "2554": {"op": "AND"}, "2555": {"op": "PUSH1", "value": "0x40"}, "2557": {"op": "DUP4"}, "2558": {"op": "ADD"}, "2559": {"op": "MSTORE"}, "2560": {"op": "POP"}, "2561": {"op": "PUSH1", "value": "0x1F"}, "2563": {"op": "SWAP2"}, "2564": {"op": "SWAP1"}, "2565": {"op": "SWAP2"}, "2566": {"op": "ADD"}, "2567": {"op": "PUSH1", "value": "0x1F"}, "2569": {"op": "NOT"}, "2570": {"op": "AND"}, "2571": {"op": "ADD"}, "2572": {"op": "PUSH1", "value": "0x80"}, "2574": {"op": "ADD"}, "2575": {"op": "SWAP3"}, "2576": {"op": "SWAP2"}, "2577": {"op": "POP"}, "2578": {"op": "POP"}, "2579": {"jump": "o", "op": "JUMP"}, "2580": {"op": "JUMPDEST"}, "2581": {"op": "PUSH1", "value": "0x0"}, "2583": {"op": "DUP2"}, "2584": {"op": "PUSH1", "value": "0x0"}, "2586": {"op": "NOT"}, "2587": {"op": "DIV"}, "2588": {"op": "DUP4"}, "2589": {"op": "GT"}, "2590": {"op": "DUP3"}, "2591": {"op": "ISZERO"}, "2592": {"op": "ISZERO"}, "2593": {"op": "AND"}, "2594": {"op": "ISZERO"}, "2595": {"op": "PUSH2", "value": "0xA2E"}, "2598": {"op": "JUMPI"}, "2599": {"op": "PUSH2", "value": "0xA2E"}, "2602": {"op": "PUSH2", "value": "0x8C9"}, "2605": {"jump": "i", "op": "JUMP"}, "2606": {"op": "JUMPDEST"}, "2607": {"op": "POP"}, "2608": {"op": "MUL"}, "2609": {"op": "SWAP1"}, "2610": {"jump": "o", "op": "JUMP"}}, "sha1": "921a778bfbcc8c0633f8bf506e53f9ff5843d6e0", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./deb/ERC20.sol\";\nimport \"./deb/ICrossDomainMessenger.sol\";\nimport \"./deb/StructLib.sol\";\n\n\n/// @title DestinationDomainSideBridge Contract\n/// @author Sherif Abdelmoatty\n/// @notice This contract is to be deployed in the destination rollup\ncontract DestinationDomainSideBridge {\n    address constant ETHER_ADDRESS = 0x0000000000000000000000000000000000000000;\n    bytes32 rewardHashOnion;\n    bytes32[] public rewardHashOnionHistoryList;\n    uint256 public claimCount;\n    uint256 constant TRANSFERS_PER_ONION = 20;\n\n    mapping(bytes32 => bool) claimedTransferHashes; //mapping of claimed transfer hashes sent to the destination address\n    uint256 indexReportedHashOnion; //number of reported hahs onions\n    event Reward(StructLib.RewardData rewardData, uint nonce);\n    event NewHashOnionCreated(bytes32 hash);\n    event NewHashOnionDeclaredToL1(bytes32 hash);\n\n    address constant ovmL2CrossDomainMessenger = 0x4200000000000000000000000000000000000007;  //ovmL2CrossDomainMessenger contract address(Optimism)\n    address l1DomainSideContractAddress;  //L1DomainSideBridge deployed contract address on mainnet\n\n    /// @param _l1DomainSideContractAddress is the address of the contract in etherium L1\n    constructor(address _l1DomainSideContractAddress){\n        l1DomainSideContractAddress = _l1DomainSideContractAddress;\n    }\n\n    /// @notice liquidity providers can provide liquidity to be transfered to the \n    /// @notice destination address and register a claim to the liquidity fee\n    /// @param _transferData struct emitted from the Transaction event at the source contract\n    function claim(StructLib.TransferData memory _transferData) external payable{\n        bytes32 transferDataHash = sha256(abi.encode(_transferData));\n        require(!claimedTransferHashes[transferDataHash], \"Transfer already claimed!!!\");\n        claimedTransferHashes[transferDataHash] = true;\n\n        uint256 lPfee = getLPFee(_transferData);\n        _transferData.amount = _transferData.amount + (lPfee - _transferData.fee);\n\n        StructLib.RewardData memory rewardData;\n        rewardData.transferDataHash = transferDataHash;\n        rewardData.tokenAddress = _transferData.tokenAddress;\n        rewardData.claimer = msg.sender;\n        rewardData.amountPlusFee = lPfee + _transferData.amount;\n        rewardHashOnion = sha256(abi.encode(rewardHashOnion, rewardData));\n\n        emit Reward(rewardData, _transferData.nonce);\n        claimCount++;\n\n        if(claimCount % TRANSFERS_PER_ONION == 0){\n            rewardHashOnionHistoryList.push(rewardHashOnion);\n            emit NewHashOnionCreated(rewardHashOnion);\n        }\n\n        if(_transferData.tokenAddress == ETHER_ADDRESS){\n            require(msg.value >= _transferData.amount, \"Error : Non Suffecient funds!!!!!!!!\");\n            payable(_transferData.destination).transfer(_transferData.amount);\n        }else{\n            ERC20 token = ERC20(_transferData.tokenAddress);\n            token.transferFrom(msg.sender, _transferData.destination,\n                 _transferData.amount);\n        }\n    }\n    \n    /// @notice sends new hash onions one by one to the l1 side contract to be sent to the source side contract\n    /// @notice this function is rollup dependant - Optimism Kovan\n    function declareNewHashOnionHeadToL1() external{\n        require(indexReportedHashOnion < rewardHashOnionHistoryList.length, \"No new hash onions to report.\");\n        \n        emit NewHashOnionDeclaredToL1(rewardHashOnionHistoryList[indexReportedHashOnion]);\n        ICrossDomainMessenger l2cdm = ICrossDomainMessenger(ovmL2CrossDomainMessenger);\n        l2cdm.sendMessage(\n            l1DomainSideContractAddress,\n            abi.encodeWithSignature(\n                \"declareNewHashOnionHeadToSource(bytes32)\",\n                rewardHashOnionHistoryList[indexReportedHashOnion]\n            ),\n            1000000 \n        );\n        indexReportedHashOnion++;\n    }\n\n    /// @notice calculates the liquidity provider fee based on the feeRampup\n    /// @param _transferData struct emitted from the Transaction event at the source contract\n    /// @return the calculated fee\n    function getLPFee(StructLib.TransferData memory _transferData) private view returns (uint256) {\n        uint256 currentTime = block.number;\n\n        require(currentTime >= _transferData.startTime, \"Error : block number is less than startTime\");\n\n        if(currentTime >= _transferData.startTime + _transferData.feeRampup)\n            return _transferData.fee;\n        else\n            return _transferData.fee * (currentTime - _transferData.startTime); // feeRampup\n    }\n}", "sourceMap": "306:4360:0:-:0;;;1276:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1335:27;:58;;-1:-1:-1;;;;;;1335:58:0;-1:-1:-1;;;;;1335:58:0;;;;;;;;;;306:4360;;14:290:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;:::-;306:4360:0;;;;;;", "sourcePath": "contracts/DestinationDomainSideBridge.sol", "type": "contract", "deployment": {"address": "0x33323F2B2D204DBa2A55341D099c5bA6B3C952e5", "chainid": "69", "blockHeight": 3939219}}