{"abi": [{"inputs": [{"internalType": "address", "name": "_l1DomainSideContractAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "bool", "name": "success", "type": "bool"}], "name": "ClaimPayed", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "indexed": false, "internalType": "struct SourceDomainSideBridge.TransferData", "name": "transferData", "type": "tuple"}], "name": "Transaction", "type": "event"}, {"inputs": [], "name": "CONTRACT_FEE_BASIS_POINTS", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "TRADE_LIMIT", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_newKnownHashOnions", "type": "bytes32"}], "name": "addNewKnownHashOnion", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "knownHashOnions", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.RewardData[]", "name": "_rewardData", "type": "tuple[]"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.TransferData[]", "name": "_transferData", "type": "tuple[]"}], "name": "processClaims", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_tokenAddress", "type": "address"}, {"internalType": "address", "name": "_destination", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "uint256", "name": "_feeRampup", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "validTransferHashes", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol", "1": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol", "2": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol", "3": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol", "4": "contracts/SourceDomainSideBridge.sol", "5": "contracts/deb/ICrossDomainMessenger.sol"}, "ast": {"absolutePath": "contracts/SourceDomainSideBridge.sol", "exportedSymbols": {"Context": [1180], "ERC20": [1016], "ICrossDomainMessenger": [1055], "IERC20": [1133], "IERC20Metadata": [1158], "SourceDomainSideBridge": [428]}, "id": 429, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "31:23:4"}, {"absolutePath": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 429, "sourceUnit": 1017, "src": "56:55:4", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/ICrossDomainMessenger.sol", "file": "./deb/ICrossDomainMessenger.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 429, "sourceUnit": 1056, "src": "112:41:4", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "SourceDomainSideBridge", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 4, "nodeType": "StructuredDocumentation", "src": "155:139:4", "text": "@title SourceDomainSideBridge Contract\n @author Sherif Abdelmoatty\n @notice This contract is to be deployed in the source rollup"}, "fullyImplemented": true, "id": 428, "linearizedBaseContracts": [428], "name": "SourceDomainSideBridge", "nameLocation": "303:22:4", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "functionSelector": "13457d88", "id": 7, "mutability": "constant", "name": "CONTRACT_FEE_BASIS_POINTS", "nameLocation": "358:25:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "337:50:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5, "name": "uint", "nodeType": "ElementaryTypeName", "src": "337:4:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "35", "id": 6, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "386:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "visibility": "public"}, {"constant": true, "functionSelector": "eb66091f", "id": 10, "mutability": "constant", "name": "TRADE_LIMIT", "nameLocation": "414:11:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "393:44:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8, "name": "uint", "nodeType": "ElementaryTypeName", "src": "393:4:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "302e31", "id": 9, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "428:9:4", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000_by_1", "typeString": "int_const 100000000000000000"}, "value": "0.1"}, "visibility": "public"}, {"constant": true, "id": 13, "mutability": "constant", "name": "ETHER_ADDRESS", "nameLocation": "460:13:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "443:75:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 11, "name": "address", "nodeType": "ElementaryTypeName", "src": "443:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030", "id": 12, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "476:42:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x0000000000000000000000000000000000000000"}, "visibility": "internal"}, {"canonicalName": "SourceDomainSideBridge.TransferData", "id": 28, "members": [{"constant": false, "id": 15, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "564:12:4", "nodeType": "VariableDeclaration", "scope": 28, "src": "555:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 14, "name": "address", "nodeType": "ElementaryTypeName", "src": "555:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17, "mutability": "mutable", "name": "destination", "nameLocation": "596:11:4", "nodeType": "VariableDeclaration", "scope": 28, "src": "587:20:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16, "name": "address", "nodeType": "ElementaryTypeName", "src": "587:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 19, "mutability": "mutable", "name": "amount", "nameLocation": "626:6:4", "nodeType": "VariableDeclaration", "scope": 28, "src": "617:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 18, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "617:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 21, "mutability": "mutable", "name": "fee", "nameLocation": "651:3:4", "nodeType": "VariableDeclaration", "scope": 28, "src": "642:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "642:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 23, "mutability": "mutable", "name": "startTime", "nameLocation": "673:9:4", "nodeType": "VariableDeclaration", "scope": 28, "src": "664:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "664:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 25, "mutability": "mutable", "name": "feeRampup", "nameLocation": "701:9:4", "nodeType": "VariableDeclaration", "scope": 28, "src": "692:18:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "692:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 27, "mutability": "mutable", "name": "nonce", "nameLocation": "729:5:4", "nodeType": "VariableDeclaration", "scope": 28, "src": "720:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 26, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "720:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "TransferData", "nameLocation": "532:12:4", "nodeType": "StructDefinition", "scope": 428, "src": "525:216:4", "visibility": "public"}, {"canonicalName": "SourceDomainSideBridge.RewardData", "id": 37, "members": [{"constant": false, "id": 30, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "783:16:4", "nodeType": "VariableDeclaration", "scope": 37, "src": "774:25:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 29, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "774:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 32, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "818:12:4", "nodeType": "VariableDeclaration", "scope": 37, "src": "809:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 31, "name": "address", "nodeType": "ElementaryTypeName", "src": "809:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 34, "mutability": "mutable", "name": "claimer", "nameLocation": "850:7:4", "nodeType": "VariableDeclaration", "scope": 37, "src": "841:16:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 33, "name": "address", "nodeType": "ElementaryTypeName", "src": "841:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 36, "mutability": "mutable", "name": "fee", "nameLocation": "876:3:4", "nodeType": "VariableDeclaration", "scope": 37, "src": "867:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 35, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "867:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "RewardData", "nameLocation": "753:10:4", "nodeType": "StructDefinition", "scope": 428, "src": "746:140:4", "visibility": "public"}, {"constant": false, "functionSelector": "040c05b6", "id": 41, "mutability": "mutable", "name": "validTransferHashes", "nameLocation": "923:19:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "891:51:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 40, "keyType": {"id": 38, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "899:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "891:24:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 39, "name": "bool", "nodeType": "ElementaryTypeName", "src": "910:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "5a1294b7", "id": 45, "mutability": "mutable", "name": "knownHashOnions", "nameLocation": "980:15:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "948:47:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 44, "keyType": {"id": 42, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "956:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "948:24:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 43, "name": "bool", "nodeType": "ElementaryTypeName", "src": "967:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "id": 47, "mutability": "mutable", "name": "processedRewardHashOnion", "nameLocation": "1009:24:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "1001:32:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 46, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1001:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 49, "mutability": "mutable", "name": "ovmL2CrossDomainMessenger", "nameLocation": "1052:25:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "1044:33:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 48, "name": "address", "nodeType": "ElementaryTypeName", "src": "1044:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 51, "mutability": "mutable", "name": "l1DomainSideContractAddress", "nameLocation": "1147:27:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "1139:35:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 50, "name": "address", "nodeType": "ElementaryTypeName", "src": "1139:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 53, "mutability": "mutable", "name": "currentNonce", "nameLocation": "1251:12:4", "nodeType": "VariableDeclaration", "scope": 428, "src": "1242:21:4", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 52, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1242:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "d8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f89", "id": 58, "name": "Transaction", "nameLocation": "1276:11:4", "nodeType": "EventDefinition", "parameters": {"id": 57, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 56, "indexed": false, "mutability": "mutable", "name": "transferData", "nameLocation": "1301:12:4", "nodeType": "VariableDeclaration", "scope": 58, "src": "1288:25:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 55, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 54, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 28, "src": "1288:12:4"}, "referencedDeclaration": 28, "src": "1288:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "src": "1287:27:4"}, "src": "1270:45:4"}, {"anonymous": false, "eventSelector": "6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a", "id": 64, "name": "ClaimPayed", "nameLocation": "1326:10:4", "nodeType": "EventDefinition", "parameters": {"id": 63, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 60, "indexed": false, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1345:16:4", "nodeType": "VariableDeclaration", "scope": 64, "src": "1337:24:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 59, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1337:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 62, "indexed": false, "mutability": "mutable", "name": "success", "nameLocation": "1368:7:4", "nodeType": "VariableDeclaration", "scope": 64, "src": "1363:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 61, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1363:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1336:40:4"}, "src": "1320:57:4"}, {"body": {"id": 91, "nodeType": "Block", "src": "1620:270:4", "statements": [{"assignments": [69], "declarations": [{"constant": false, "id": 69, "mutability": "mutable", "name": "l2cdm", "nameLocation": "1652:5:4", "nodeType": "VariableDeclaration", "scope": 91, "src": "1630:27:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1055", "typeString": "contract ICrossDomainMessenger"}, "typeName": {"id": 68, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 67, "name": "ICrossDomainMessenger", "nodeType": "IdentifierPath", "referencedDeclaration": 1055, "src": "1630:21:4"}, "referencedDeclaration": 1055, "src": "1630:21:4", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1055", "typeString": "contract ICrossDomainMessenger"}}, "visibility": "internal"}], "id": 73, "initialValue": {"arguments": [{"id": 71, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "1682:25:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 70, "name": "ICrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1055, "src": "1660:21:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$1055_$", "typeString": "type(contract ICrossDomainMessenger)"}}, "id": 72, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1660:48:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1055", "typeString": "contract ICrossDomainMessenger"}}, "nodeType": "VariableDeclarationStatement", "src": "1630:78:4"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 87, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 81, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 75, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1739:3:4", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 76, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1739:10:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 79, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "1761:25:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 78, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1753:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 77, "name": "address", "nodeType": "ElementaryTypeName", "src": "1753:7:4", "typeDescriptions": {}}}, "id": 80, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1753:34:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1739:48:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 82, "name": "l2cdm", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1803:5:4", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1055", "typeString": "contract ICrossDomainMessenger"}}, "id": 83, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "xDomainMessageSender", "nodeType": "MemberAccess", "referencedDeclaration": 1044, "src": "1803:26:4", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 84, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1803:28:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 85, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "1835:27:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1803:59:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1739:123:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 74, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1718:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1718:154:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 89, "nodeType": "ExpressionStatement", "src": "1718:154:4"}, {"id": 90, "nodeType": "PlaceholderStatement", "src": "1882:1:4"}]}, "documentation": {"id": 65, "nodeType": "StructuredDocumentation", "src": "1387:202:4", "text": "@notice onlyL1Contract modifier\n @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n @notice to call the approveStateRoot function"}, "id": 92, "name": "onlyL1Contract", "nameLocation": "1603:14:4", "nodeType": "ModifierDefinition", "parameters": {"id": 66, "nodeType": "ParameterList", "parameters": [], "src": "1617:2:4"}, "src": "1594:296:4", "virtual": false, "visibility": "internal"}, {"body": {"id": 106, "nodeType": "Block", "src": "2019:155:4", "statements": [{"expression": {"id": 100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 98, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "2029:25:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303037", "id": 99, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2057:42:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4200000000000000000000000000000000000007"}, "src": "2029:70:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 101, "nodeType": "ExpressionStatement", "src": "2029:70:4"}, {"expression": {"id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 102, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "2109:27:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 103, "name": "_l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95, "src": "2139:28:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2109:58:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 105, "nodeType": "ExpressionStatement", "src": "2109:58:4"}]}, "documentation": {"id": 93, "nodeType": "StructuredDocumentation", "src": "1896:69:4", "text": "@notice Constructior function\n @notice Intialize variables"}, "id": 107, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 96, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 95, "mutability": "mutable", "name": "_l1DomainSideContractAddress", "nameLocation": "1990:28:4", "nodeType": "VariableDeclaration", "scope": 107, "src": "1982:36:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 94, "name": "address", "nodeType": "ElementaryTypeName", "src": "1982:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1981:38:4"}, "returnParameters": {"id": 97, "nodeType": "ParameterList", "parameters": [], "src": "2019:0:4"}, "scope": 428, "src": "1970:204:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 248, "nodeType": "Block", "src": "2561:1089:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 124, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 122, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "2588:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 123, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2597:4:4", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "2588:13:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 125, "name": "TRADE_LIMIT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2605:11:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2588:28:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420686967686572207468616e207472616465206c696d6974", "id": 127, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2618:32:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2847f3c8e537b3e952c276b8e24cd091d5e275357e1ebcc6dc037999d4bf70ab", "typeString": "literal_string \"Amount higher than trade limit\""}, "value": "Amount higher than trade limit"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2847f3c8e537b3e952c276b8e24cd091d5e275357e1ebcc6dc037999d4bf70ab", "typeString": "literal_string \"Amount higher than trade limit\""}], "id": 121, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2580:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 128, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2580:71:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 129, "nodeType": "ExpressionStatement", "src": "2580:71:4"}, {"assignments": [131], "declarations": [{"constant": false, "id": 131, "mutability": "mutable", "name": "fee", "nameLocation": "2669:3:4", "nodeType": "VariableDeclaration", "scope": 248, "src": "2661:11:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 130, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2661:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 135, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 132, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "2675:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 133, "name": "CONTRACT_FEE_BASIS_POINTS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7, "src": "2685:25:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2675:35:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2661:49:4"}, {"assignments": [137], "declarations": [{"constant": false, "id": 137, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "2728:13:4", "nodeType": "VariableDeclaration", "scope": 248, "src": "2720:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 136, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2720:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 143, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 142, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 140, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 138, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "2744:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 139, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2754:4:4", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "2744:14:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 141, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 131, "src": "2761:3:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2744:20:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2720:44:4"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 144, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "2786:13:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 145, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "2803:13:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2786:30:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 175, "nodeType": "Block", "src": "2921:133:4", "statements": [{"assignments": [158], "declarations": [{"constant": false, "id": 158, "mutability": "mutable", "name": "token", "nameLocation": "2941:5:4", "nodeType": "VariableDeclaration", "scope": 175, "src": "2935:11:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1016", "typeString": "contract ERC20"}, "typeName": {"id": 157, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 156, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1016, "src": "2935:5:4"}, "referencedDeclaration": 1016, "src": "2935:5:4", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1016", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 162, "initialValue": {"arguments": [{"id": 160, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "2955:13:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 159, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1016, "src": "2949:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$1016_$", "typeString": "type(contract ERC20)"}}, "id": 161, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2949:20:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1016", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "2935:34:4"}, {"expression": {"arguments": [{"expression": {"id": 166, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3002:3:4", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 167, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3002:10:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 170, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3022:4:4", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$428", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$428", "typeString": "contract SourceDomainSideBridge"}], "id": 169, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3014:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 168, "name": "address", "nodeType": "ElementaryTypeName", "src": "3014:7:4", "typeDescriptions": {}}}, "id": 171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3014:13:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 172, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 137, "src": "3029:13:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 163, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 158, "src": "2983:5:4", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1016", "typeString": "contract ERC20"}}, "id": 165, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 628, "src": "2983:18:4", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 173, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2983:60:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 174, "nodeType": "ExpressionStatement", "src": "2983:60:4"}]}, "id": 176, "nodeType": "IfStatement", "src": "2783:271:4", "trueBody": {"id": 155, "nodeType": "Block", "src": "2817:100:4", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 148, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2839:3:4", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 149, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "2839:9:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 150, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 137, "src": "2852:13:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2839:26:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4572726f72203a204e6f6e2053756666656369656e742066756e64732121212121212121", "id": 152, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2867:38:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}, "value": "Error : Non Suffecient funds!!!!!!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}], "id": 147, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2831:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 153, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2831:75:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 154, "nodeType": "ExpressionStatement", "src": "2831:75:4"}]}}, {"assignments": [179], "declarations": [{"constant": false, "id": 179, "mutability": "mutable", "name": "transferData", "nameLocation": "3084:12:4", "nodeType": "VariableDeclaration", "scope": 248, "src": "3064:32:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 178, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 177, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 28, "src": "3064:12:4"}, "referencedDeclaration": 28, "src": "3064:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "id": 180, "nodeType": "VariableDeclarationStatement", "src": "3064:32:4"}, {"expression": {"id": 185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 181, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3106:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 183, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15, "src": "3106:25:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 184, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "3134:13:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3106:41:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 186, "nodeType": "ExpressionStatement", "src": "3106:41:4"}, {"expression": {"id": 191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 187, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3157:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 189, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 17, "src": "3157:24:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 190, "name": "_destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 112, "src": "3184:12:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3157:39:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 192, "nodeType": "ExpressionStatement", "src": "3157:39:4"}, {"expression": {"id": 197, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 193, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3206:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 195, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 19, "src": "3206:19:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 196, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "3228:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3206:29:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 198, "nodeType": "ExpressionStatement", "src": "3206:29:4"}, {"expression": {"id": 203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 199, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3245:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 201, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 21, "src": "3245:16:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 202, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 131, "src": "3264:3:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3245:22:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 204, "nodeType": "ExpressionStatement", "src": "3245:22:4"}, {"expression": {"id": 210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 205, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3277:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 207, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 23, "src": "3277:22:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 208, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3302:5:4", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "3302:12:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3277:37:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 211, "nodeType": "ExpressionStatement", "src": "3277:37:4"}, {"expression": {"id": 216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 212, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3324:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 214, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "feeRampup", "nodeType": "MemberAccess", "referencedDeclaration": 25, "src": "3324:22:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 215, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 116, "src": "3349:10:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3324:35:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 217, "nodeType": "ExpressionStatement", "src": "3324:35:4"}, {"expression": {"id": 222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 218, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3369:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 220, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "nonce", "nodeType": "MemberAccess", "referencedDeclaration": 27, "src": "3369:18:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 221, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "3390:12:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3369:33:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 223, "nodeType": "ExpressionStatement", "src": "3369:33:4"}, {"expression": {"id": 225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3413:14:4", "subExpression": {"id": 224, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "3413:12:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 226, "nodeType": "ExpressionStatement", "src": "3413:14:4"}, {"assignments": [228], "declarations": [{"constant": false, "id": 228, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "3446:16:4", "nodeType": "VariableDeclaration", "scope": 248, "src": "3438:24:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 227, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3438:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 235, "initialValue": {"arguments": [{"arguments": [{"id": 232, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3483:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "expression": {"id": 230, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "3472:3:4", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 231, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "3472:10:4", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 233, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3472:24:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 229, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "3465:6:4", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 234, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3465:32:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3438:59:4"}, {"expression": {"id": 240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 236, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "3516:19:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 238, "indexExpression": {"id": 237, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "3536:16:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3516:37:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 239, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3556:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "3516:44:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 241, "nodeType": "ExpressionStatement", "src": "3516:44:4"}, {"eventCall": {"arguments": [{"id": 243, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3588:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "id": 242, "name": "Transaction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 58, "src": "3576:11:4", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_TransferData_$28_memory_ptr_$returns$__$", "typeString": "function (struct SourceDomainSideBridge.TransferData memory)"}}, "id": 244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3576:25:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 245, "nodeType": "EmitStatement", "src": "3571:30:4"}, {"expression": {"id": 246, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "3627:16:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 120, "id": 247, "nodeType": "Return", "src": "3620:23:4"}]}, "documentation": {"id": 108, "nodeType": "StructuredDocumentation", "src": "2180:233:4", "text": "@notice withdraw function\n @notice withdraws the required funds plus fees to be sent \n @notice to the domain side rollup\nfunction transfer(TransferData memory _transferData) external payable returns(bytes32){"}, "functionSelector": "0411b252", "id": 249, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "2427:8:4", "nodeType": "FunctionDefinition", "parameters": {"id": 117, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 110, "mutability": "mutable", "name": "_tokenAddress", "nameLocation": "2444:13:4", "nodeType": "VariableDeclaration", "scope": 249, "src": "2436:21:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 109, "name": "address", "nodeType": "ElementaryTypeName", "src": "2436:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 112, "mutability": "mutable", "name": "_destination", "nameLocation": "2467:12:4", "nodeType": "VariableDeclaration", "scope": 249, "src": "2459:20:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 111, "name": "address", "nodeType": "ElementaryTypeName", "src": "2459:7:4", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 114, "mutability": "mutable", "name": "_amount", "nameLocation": "2489:7:4", "nodeType": "VariableDeclaration", "scope": 249, "src": "2481:15:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2481:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 116, "mutability": "mutable", "name": "_feeRampup", "nameLocation": "2516:10:4", "nodeType": "VariableDeclaration", "scope": 249, "src": "2507:19:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 115, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2507:7:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2435:92:4"}, "returnParameters": {"id": 120, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 119, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 249, "src": "2553:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 118, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2553:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2552:9:4"}, "scope": 428, "src": "2418:1232:4", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 369, "nodeType": "Block", "src": "3860:993:4", "statements": [{"assignments": [262], "declarations": [{"constant": false, "id": 262, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "3878:27:4", "nodeType": "VariableDeclaration", "scope": 369, "src": "3870:35:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 261, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3870:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 266, "initialValue": {"arguments": [{"id": 264, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "3945:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}], "id": 263, "name": "calculateNewProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 412, "src": "3908:36:4", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (struct SourceDomainSideBridge.RewardData memory[] memory) returns (bytes32)"}}, "id": 265, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3908:49:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3870:87:4"}, {"expression": {"arguments": [{"baseExpression": {"id": 268, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 45, "src": "3975:15:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 270, "indexExpression": {"id": 269, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 262, "src": "3991:27:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3975:44:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964652052657761726444617461206c6973742e", "id": 271, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4021:27:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}, "value": "Invalide RewardData list."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}], "id": 267, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3967:7:4", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 272, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3967:82:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 273, "nodeType": "ExpressionStatement", "src": "3967:82:4"}, {"expression": {"id": 276, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 274, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "4059:24:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 275, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 262, "src": "4086:27:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4059:54:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 277, "nodeType": "ExpressionStatement", "src": "4059:54:4"}, {"body": {"id": 367, "nodeType": "Block", "src": "4168:670:4", "statements": [{"condition": {"baseExpression": {"id": 289, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "4185:19:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 294, "indexExpression": {"expression": {"baseExpression": {"id": 290, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4205:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 292, "indexExpression": {"id": 291, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4217:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4205:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 293, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "4205:31:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4185:52:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 366, "nodeType": "IfStatement", "src": "4182:646:4", "trueBody": {"id": 365, "nodeType": "Block", "src": "4238:590:4", "statements": [{"assignments": [296], "declarations": [{"constant": false, "id": 296, "mutability": "mutable", "name": "success", "nameLocation": "4261:7:4", "nodeType": "VariableDeclaration", "scope": 365, "src": "4256:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 295, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4256:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 297, "nodeType": "VariableDeclarationStatement", "src": "4256:12:4"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 303, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 298, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4289:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 300, "indexExpression": {"id": 299, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4301:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4289:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 301, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 32, "src": "4289:27:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 302, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "4320:13:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4289:44:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 355, "nodeType": "Block", "src": "4496:243:4", "statements": [{"assignments": [329], "declarations": [{"constant": false, "id": 329, "mutability": "mutable", "name": "token", "nameLocation": "4524:5:4", "nodeType": "VariableDeclaration", "scope": 355, "src": "4518:11:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1016", "typeString": "contract ERC20"}, "typeName": {"id": 328, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 327, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1016, "src": "4518:5:4"}, "referencedDeclaration": 1016, "src": "4518:5:4", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1016", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 336, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 331, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4538:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 333, "indexExpression": {"id": 332, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4550:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4538:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 334, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 32, "src": "4538:27:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 330, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1016, "src": "4532:5:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$1016_$", "typeString": "type(contract ERC20)"}}, "id": 335, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4532:34:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1016", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "4518:48:4"}, {"expression": {"id": 353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 337, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 296, "src": "4609:7:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 342, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "4646:4:4", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$428", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$428", "typeString": "contract SourceDomainSideBridge"}], "id": 341, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4638:7:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 340, "name": "address", "nodeType": "ElementaryTypeName", "src": "4638:7:4", "typeDescriptions": {}}}, "id": 343, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4638:13:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 344, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4653:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 346, "indexExpression": {"id": 345, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4665:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4653:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 347, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 34, "src": "4653:22:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 348, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4701:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 350, "indexExpression": {"id": 349, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4713:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4701:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 351, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 36, "src": "4701:18:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 338, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "4619:5:4", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1016", "typeString": "contract ERC20"}}, "id": 339, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 628, "src": "4619:18:4", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4619:101:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4609:111:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 354, "nodeType": "ExpressionStatement", "src": "4609:111:4"}]}, "id": 356, "nodeType": "IfStatement", "src": "4286:453:4", "trueBody": {"id": 326, "nodeType": "Block", "src": "4334:158:4", "statements": [{"assignments": [305, null], "declarations": [{"constant": false, "id": 305, "mutability": "mutable", "name": "suc", "nameLocation": "4362:3:4", "nodeType": "VariableDeclaration", "scope": 326, "src": "4357:8:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 304, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4357:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 321, "initialValue": {"arguments": [{"hexValue": "", "id": 319, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4435:2:4", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 308, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4379:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 310, "indexExpression": {"id": 309, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4391:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4379:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 311, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 34, "src": "4379:22:4", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 307, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4371:8:4", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 306, "name": "address", "nodeType": "ElementaryTypeName", "src": "4371:8:4", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 312, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4371:31:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 313, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "4371:36:4", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 318, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"expression": {"baseExpression": {"id": 314, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4415:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 316, "indexExpression": {"id": 315, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4427:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4415:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 317, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 36, "src": "4415:18:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "4371:63:4", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4371:67:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "4356:82:4"}, {"expression": {"id": 324, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 322, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 296, "src": "4460:7:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 323, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 305, "src": "4470:3:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4460:13:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 325, "nodeType": "ExpressionStatement", "src": "4460:13:4"}]}}, {"eventCall": {"arguments": [{"expression": {"baseExpression": {"id": 358, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4772:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 360, "indexExpression": {"id": 359, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4784:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4772:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 361, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "4772:31:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 362, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 296, "src": "4805:7:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 357, "name": "ClaimPayed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 64, "src": "4761:10:4", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$", "typeString": "function (bytes32,bool)"}}, "id": 363, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4761:52:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 364, "nodeType": "EmitStatement", "src": "4756:57:4"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 285, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 282, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4139:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 283, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4143:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4143:18:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4139:22:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 368, "initializationExpression": {"assignments": [279], "declarations": [{"constant": false, "id": 279, "mutability": "mutable", "name": "n", "nameLocation": "4132:1:4", "nodeType": "VariableDeclaration", "scope": 368, "src": "4127:6:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 278, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4127:4:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 281, "initialValue": {"hexValue": "30", "id": 280, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4136:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4127:10:4"}, "loopExpression": {"expression": {"id": 287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4163:3:4", "subExpression": {"id": 286, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 279, "src": "4163:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 288, "nodeType": "ExpressionStatement", "src": "4163:3:4"}, "nodeType": "ForStatement", "src": "4123:715:4"}]}, "documentation": {"id": 250, "nodeType": "StructuredDocumentation", "src": "3656:89:4", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "functionSelector": "edf5a2dc", "id": 370, "implemented": true, "kind": "function", "modifiers": [], "name": "processClaims", "nameLocation": "3759:13:4", "nodeType": "FunctionDefinition", "parameters": {"id": 259, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 254, "mutability": "mutable", "name": "_rewardData", "nameLocation": "3793:11:4", "nodeType": "VariableDeclaration", "scope": 370, "src": "3773:31:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 252, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 251, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 37, "src": "3773:10:4"}, "referencedDeclaration": 37, "src": "3773:10:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 253, "nodeType": "ArrayTypeName", "src": "3773:12:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}, {"constant": false, "id": 258, "mutability": "mutable", "name": "_transferData", "nameLocation": "3828:13:4", "nodeType": "VariableDeclaration", "scope": 370, "src": "3806:35:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TransferData_$28_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData[]"}, "typeName": {"baseType": {"id": 256, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 255, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 28, "src": "3806:12:4"}, "referencedDeclaration": 28, "src": "3806:12:4", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "id": 257, "nodeType": "ArrayTypeName", "src": "3806:14:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TransferData_$28_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData[]"}}, "visibility": "internal"}], "src": "3772:70:4"}, "returnParameters": {"id": 260, "nodeType": "ParameterList", "parameters": [], "src": "3860:0:4"}, "scope": 428, "src": "3750:1103:4", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 411, "nodeType": "Block", "src": "5057:311:4", "statements": [{"assignments": [381], "declarations": [{"constant": false, "id": 381, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "5075:27:4", "nodeType": "VariableDeclaration", "scope": 411, "src": "5067:35:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 380, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5067:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 383, "initialValue": {"id": 382, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "5105:24:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "5067:62:4"}, {"body": {"id": 407, "nodeType": "Block", "src": "5184:134:4", "statements": [{"expression": {"id": 405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 395, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5198:27:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 399, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5263:27:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 400, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "5291:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 402, "indexExpression": {"id": 401, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5303:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5291:14:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}], "expression": {"id": 397, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "5252:3:4", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 398, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "5252:10:4", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 403, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5252:54:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 396, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "5245:6:4", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 404, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5245:62:4", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "5198:109:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 406, "nodeType": "ExpressionStatement", "src": "5198:109:4"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 391, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 388, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5155:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 389, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "5159:11:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 390, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5159:18:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5155:22:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 408, "initializationExpression": {"assignments": [385], "declarations": [{"constant": false, "id": 385, "mutability": "mutable", "name": "n", "nameLocation": "5148:1:4", "nodeType": "VariableDeclaration", "scope": 408, "src": "5143:6:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 384, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5143:4:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 387, "initialValue": {"hexValue": "30", "id": 386, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5152:1:4", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5143:10:4"}, "loopExpression": {"expression": {"id": 393, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5179:3:4", "subExpression": {"id": 392, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 385, "src": "5179:1:4", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 394, "nodeType": "ExpressionStatement", "src": "5179:3:4"}, "nodeType": "ForStatement", "src": "5139:179:4"}, {"expression": {"id": 409, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5334:27:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 379, "id": 410, "nodeType": "Return", "src": "5327:34:4"}]}, "documentation": {"id": 371, "nodeType": "StructuredDocumentation", "src": "4859:89:4", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "id": 412, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateNewProcessedRewardHashOnion", "nameLocation": "4962:36:4", "nodeType": "FunctionDefinition", "parameters": {"id": 376, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 375, "mutability": "mutable", "name": "_rewardData", "nameLocation": "5019:11:4", "nodeType": "VariableDeclaration", "scope": 412, "src": "4999:31:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 373, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 372, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 37, "src": "4999:10:4"}, "referencedDeclaration": 37, "src": "4999:10:4", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 374, "nodeType": "ArrayTypeName", "src": "4999:12:4", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "4998:33:4"}, "returnParameters": {"id": 379, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 378, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 412, "src": "5049:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 377, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5049:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5048:9:4"}, "scope": 428, "src": "4953:415:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 426, "nodeType": "Block", "src": "5550:60:4", "statements": [{"expression": {"id": 424, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 420, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 45, "src": "5560:15:4", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 422, "indexExpression": {"id": 421, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 415, "src": "5576:19:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5560:36:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 423, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5599:4:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5560:43:4", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 425, "nodeType": "ExpressionStatement", "src": "5560:43:4"}]}, "documentation": {"id": 413, "nodeType": "StructuredDocumentation", "src": "5374:89:4", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "functionSelector": "a9d72b02", "id": 427, "implemented": true, "kind": "function", "modifiers": [{"id": 418, "kind": "modifierInvocation", "modifierName": {"id": 417, "name": "onlyL1Contract", "nodeType": "IdentifierPath", "referencedDeclaration": 92, "src": "5536:14:4"}, "nodeType": "ModifierInvocation", "src": "5536:14:4"}], "name": "addNewKnownHashOnion", "nameLocation": "5477:20:4", "nodeType": "FunctionDefinition", "parameters": {"id": 416, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 415, "mutability": "mutable", "name": "_newKnownHashOnions", "nameLocation": "5506:19:4", "nodeType": "VariableDeclaration", "scope": 427, "src": "5498:27:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 414, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5498:7:4", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5497:29:4"}, "returnParameters": {"id": 419, "nodeType": "ParameterList", "parameters": [], "src": "5550:0:4"}, "scope": 428, "src": "5468:142:4", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 429, "src": "294:5322:4", "usedErrors": []}], "src": "31:5585:4"}, "bytecode": "608060405234801561001057600080fd5b50604051610e55380380610e5583398101604081905261002f91610076565b600380547342000000000000000000000000000000000000076001600160a01b031991821617909155600480549091166001600160a01b03929092169190911790556100a6565b60006020828403121561008857600080fd5b81516001600160a01b038116811461009f57600080fd5b9392505050565b610da0806100b56000396000f3fe6080604052600436106100705760003560e01c80635a1294b71161004e5780635a1294b7146100f0578063a9d72b0214610120578063eb66091f14610142578063edf5a2dc1461015e57600080fd5b8063040c05b6146100755780630411b252146100ba57806313457d88146100db575b600080fd5b34801561008157600080fd5b506100a56100903660046108f8565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100cd6100c8366004610929565b610171565b6040519081526020016100b1565b3480156100e757600080fd5b506100cd600581565b3480156100fc57600080fd5b506100a561010b3660046108f8565b60016020526000908152604090205460ff1681565b34801561012c57600080fd5b5061014061013b3660046108f8565b61045c565b005b34801561014e57600080fd5b506100cd67016345785d8a000081565b61014061016c366004610af9565b610526565b600067016345785d8a0000610188846103e8610c13565b11156101db5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420686967686572207468616e207472616465206c696d6974000060448201526064015b60405180910390fd5b60006101e8600585610c13565b90506000816101f9866103e8610c13565b6102039190610c32565b90506001600160a01b038716610274578034101561026f5760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084016101d2565b6102f0565b6040516323b872dd60e01b81523360048201523060248201526044810182905287906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610c4a565b50505b6103426040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808916825287166020820152604081018690526060810183905243608082015260a081018590526005805460c0830181905290600061038883610c73565b919050555060006002826040516020016103a29190610c8c565b60408051601f19818403018152908290526103bc91610ce3565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc9190610d1e565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f8990610448908490610c8c565b60405180910390a198975050505050505050565b6003546001600160a01b031633811480156104fe5750600460009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610d37565b6001600160a01b0316145b61050757600080fd5b506000908152600160208190526040909120805460ff19169091179055565b600061053183610814565b60008181526001602052604090205490915060ff166105925760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e0000000000000060448201526064016101d2565b600281905560005b835181101561080e576000808583815181106105b8576105b8610d54565b6020908102919091018101515182528101919091526040016000205460ff16156107fc576000806001600160a01b03168583815181106105fa576105fa610d54565b6020026020010151602001516001600160a01b0316036106ac57600085838151811061062857610628610d54565b6020026020010151604001516001600160a01b031686848151811061064f5761064f610d54565b60200260200101516060015160405160006040518083038185875af1925050503d806000811461069b576040519150601f19603f3d011682016040523d82523d6000602084013e6106a0565b606091505b50909250610799915050565b60008583815181106106c0576106c0610d54565b6020026020010151602001519050806001600160a01b03166323b872dd308886815181106106f0576106f0610d54565b60200260200101516040015189878151811061070e5761070e610d54565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610c4a565b9150505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a8583815181106107cc576107cc610d54565b602002602001015160000151826040516107f29291909182521515602082015260400190565b60405180910390a1505b8061080681610c73565b91505061059a565b50505050565b600254600090815b83518110156108f15760028285838151811061083a5761083a610d54565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f198184030181529082905261089d91610ce3565b602060405180830381855afa1580156108ba573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108dd9190610d1e565b9150806108e981610c73565b91505061081c565b5092915050565b60006020828403121561090a57600080fd5b5035919050565b6001600160a01b038116811461092657600080fd5b50565b6000806000806080858703121561093f57600080fd5b843561094a81610911565b9350602085013561095a81610911565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156109a8576109a861096f565b60405290565b6040516080810167ffffffffffffffff811182821017156109a8576109a861096f565b604051601f8201601f1916810167ffffffffffffffff811182821017156109fa576109fa61096f565b604052919050565b600067ffffffffffffffff821115610a1c57610a1c61096f565b5060051b60200190565b600082601f830112610a3757600080fd5b81356020610a4c610a4783610a02565b6109d1565b82815260e09283028501820192828201919087851115610a6b57600080fd5b8387015b85811015610aec5781818a031215610a875760008081fd5b610a8f610985565b8135610a9a81610911565b815281860135610aa981610911565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101610a6f565b5090979650505050505050565b6000806040808486031215610b0d57600080fd5b833567ffffffffffffffff80821115610b2557600080fd5b818601915086601f830112610b3957600080fd5b81356020610b49610a4783610a02565b82815260079290921b8401810191818101908a841115610b6857600080fd5b948201945b83861015610bcf576080868c031215610b865760008081fd5b610b8e6109ae565b8635815283870135610b9f81610911565b8185015286880135610bb081610911565b8189015260608781013590820152825260809095019490820190610b6d565b97505087013593505080831115610be557600080fd5b5050610bf385828601610a26565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610c2d57610c2d610bfd565b500290565b60008219821115610c4557610c45610bfd565b500190565b600060208284031215610c5c57600080fd5b81518015158114610c6c57600080fd5b9392505050565b600060018201610c8557610c85610bfd565b5060010190565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610d045760208186018101518583015201610cea565b81811115610d13576000828501525b509190910192915050565b600060208284031215610d3057600080fd5b5051919050565b600060208284031215610d4957600080fd5b8151610c6c81610911565b634e487b7160e01b600052603260045260246000fdfea26469706673582212208467e6503893aca6b9947ebaacc0f8052fa4fe60f158633552e7b20ed840885464736f6c634300080d0033", "bytecodeSha1": "16ef615fa2a0a04b634da0f85b427dd7f2ed9f05", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "SourceDomainSideBridge", "coverageMap": {"branches": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {"SourceDomainSideBridge.addNewKnownHashOnion": {"26": [1739, 1787, false], "27": [1803, 1862, true]}, "SourceDomainSideBridge.processClaims": {"28": [3975, 4019, true], "29": [4185, 4237, false], "30": [4289, 4333, false]}, "SourceDomainSideBridge.transfer": {"23": [2588, 2616, true], "24": [2786, 2816, false], "25": [2839, 2865, true]}}, "5": {}}, "statements": {"0": {}, "1": {}, "2": {}, "3": {}, "4": {"SourceDomainSideBridge.addNewKnownHashOnion": {"14": [5560, 5603]}, "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion": {"20": [5198, 5307], "21": [5179, 5182], "22": [5327, 5361]}, "SourceDomainSideBridge.processClaims": {"15": [3967, 4049], "16": [4059, 4113], "17": [4609, 4720], "18": [4756, 4813], "19": [4163, 4166]}, "SourceDomainSideBridge.transfer": {"0": [2580, 2651], "1": [2831, 2906], "2": [2983, 3043], "3": [3106, 3147], "4": [3157, 3196], "5": [3206, 3235], "6": [3245, 3267], "7": [3277, 3314], "8": [3324, 3359], "9": [3369, 3402], "10": [3413, 3427], "11": [3516, 3560], "12": [3571, 3601], "13": [3620, 3643]}}, "5": {}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.5.0/Context", "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20", "ICrossDomainMessenger", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata"], "deployedBytecode": "6080604052600436106100705760003560e01c80635a1294b71161004e5780635a1294b7146100f0578063a9d72b0214610120578063eb66091f14610142578063edf5a2dc1461015e57600080fd5b8063040c05b6146100755780630411b252146100ba57806313457d88146100db575b600080fd5b34801561008157600080fd5b506100a56100903660046108f8565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100cd6100c8366004610929565b610171565b6040519081526020016100b1565b3480156100e757600080fd5b506100cd600581565b3480156100fc57600080fd5b506100a561010b3660046108f8565b60016020526000908152604090205460ff1681565b34801561012c57600080fd5b5061014061013b3660046108f8565b61045c565b005b34801561014e57600080fd5b506100cd67016345785d8a000081565b61014061016c366004610af9565b610526565b600067016345785d8a0000610188846103e8610c13565b11156101db5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420686967686572207468616e207472616465206c696d6974000060448201526064015b60405180910390fd5b60006101e8600585610c13565b90506000816101f9866103e8610c13565b6102039190610c32565b90506001600160a01b038716610274578034101561026f5760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084016101d2565b6102f0565b6040516323b872dd60e01b81523360048201523060248201526044810182905287906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610c4a565b50505b6103426040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808916825287166020820152604081018690526060810183905243608082015260a081018590526005805460c0830181905290600061038883610c73565b919050555060006002826040516020016103a29190610c8c565b60408051601f19818403018152908290526103bc91610ce3565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc9190610d1e565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f8990610448908490610c8c565b60405180910390a198975050505050505050565b6003546001600160a01b031633811480156104fe5750600460009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610d37565b6001600160a01b0316145b61050757600080fd5b506000908152600160208190526040909120805460ff19169091179055565b600061053183610814565b60008181526001602052604090205490915060ff166105925760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e0000000000000060448201526064016101d2565b600281905560005b835181101561080e576000808583815181106105b8576105b8610d54565b6020908102919091018101515182528101919091526040016000205460ff16156107fc576000806001600160a01b03168583815181106105fa576105fa610d54565b6020026020010151602001516001600160a01b0316036106ac57600085838151811061062857610628610d54565b6020026020010151604001516001600160a01b031686848151811061064f5761064f610d54565b60200260200101516060015160405160006040518083038185875af1925050503d806000811461069b576040519150601f19603f3d011682016040523d82523d6000602084013e6106a0565b606091505b50909250610799915050565b60008583815181106106c0576106c0610d54565b6020026020010151602001519050806001600160a01b03166323b872dd308886815181106106f0576106f0610d54565b60200260200101516040015189878151811061070e5761070e610d54565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610c4a565b9150505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a8583815181106107cc576107cc610d54565b602002602001015160000151826040516107f29291909182521515602082015260400190565b60405180910390a1505b8061080681610c73565b91505061059a565b50505050565b600254600090815b83518110156108f15760028285838151811061083a5761083a610d54565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f198184030181529082905261089d91610ce3565b602060405180830381855afa1580156108ba573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108dd9190610d1e565b9150806108e981610c73565b91505061081c565b5092915050565b60006020828403121561090a57600080fd5b5035919050565b6001600160a01b038116811461092657600080fd5b50565b6000806000806080858703121561093f57600080fd5b843561094a81610911565b9350602085013561095a81610911565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156109a8576109a861096f565b60405290565b6040516080810167ffffffffffffffff811182821017156109a8576109a861096f565b604051601f8201601f1916810167ffffffffffffffff811182821017156109fa576109fa61096f565b604052919050565b600067ffffffffffffffff821115610a1c57610a1c61096f565b5060051b60200190565b600082601f830112610a3757600080fd5b81356020610a4c610a4783610a02565b6109d1565b82815260e09283028501820192828201919087851115610a6b57600080fd5b8387015b85811015610aec5781818a031215610a875760008081fd5b610a8f610985565b8135610a9a81610911565b815281860135610aa981610911565b8187015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c080830135908201528452928401928101610a6f565b5090979650505050505050565b6000806040808486031215610b0d57600080fd5b833567ffffffffffffffff80821115610b2557600080fd5b818601915086601f830112610b3957600080fd5b81356020610b49610a4783610a02565b82815260079290921b8401810191818101908a841115610b6857600080fd5b948201945b83861015610bcf576080868c031215610b865760008081fd5b610b8e6109ae565b8635815283870135610b9f81610911565b8185015286880135610bb081610911565b8189015260608781013590820152825260809095019490820190610b6d565b97505087013593505080831115610be557600080fd5b5050610bf385828601610a26565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610c2d57610c2d610bfd565b500290565b60008219821115610c4557610c45610bfd565b500190565b600060208284031215610c5c57600080fd5b81518015158114610c6c57600080fd5b9392505050565b600060018201610c8557610c85610bfd565b5060010190565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610d045760208186018101518583015201610cea565b81811115610d13576000828501525b509190910192915050565b600060208284031215610d3057600080fd5b5051919050565b600060208284031215610d4957600080fd5b8151610c6c81610911565b634e487b7160e01b600052603260045260246000fdfea26469706673582212208467e6503893aca6b9947ebaacc0f8052fa4fe60f158633552e7b20ed840885464736f6c634300080d0033", "deployedSourceMap": "294:5322:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:51;;;;;;;;;;-1:-1:-1;891:51:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;364:14:6;;357:22;339:41;;327:2;312:18;891:51:4;;;;;;;;2418:1232;;;;;;:::i;:::-;;:::i;:::-;;;1203:25:6;;;1191:2;1176:18;2418:1232:4;1057:177:6;337:50:4;;;;;;;;;;;;386:1;337:50;;948:47;;;;;;;;;;-1:-1:-1;948:47:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;5468:142;;;;;;;;;;-1:-1:-1;5468:142:4;;;;;:::i;:::-;;:::i;:::-;;393:44;;;;;;;;;;;;428:9;393:44;;3750:1103;;;;;;:::i;:::-;;:::i;2418:1232::-;2553:7;428:9;2588:13;:7;2597:4;2588:13;:::i;:::-;:28;;2580:71;;;;-1:-1:-1;;;2580:71:4;;6473:2:6;2580:71:4;;;6455:21:6;6512:2;6492:18;;;6485:30;6551:32;6531:18;;;6524:60;6601:18;;2580:71:4;;;;;;;;;2661:11;2675:35;386:1;2675:7;:35;:::i;:::-;2661:49;-1:-1:-1;2720:21:4;2661:49;2744:14;:7;2754:4;2744:14;:::i;:::-;:20;;;;:::i;:::-;2720:44;-1:-1:-1;;;;;;2786:30:4;;2783:271;;2852:13;2839:9;:26;;2831:75;;;;-1:-1:-1;;;2831:75:4;;6965:2:6;2831:75:4;;;6947:21:6;7004:2;6984:18;;;6977:30;7043:34;7023:18;;;7016:62;-1:-1:-1;;;7094:18:6;;;7087:34;7138:19;;2831:75:4;6763:400:6;2831:75:4;2783:271;;;2983:60;;-1:-1:-1;;;2983:60:4;;3002:10;2983:60;;;7408:34:6;3022:4:4;7458:18:6;;;7451:43;7510:18;;;7503:34;;;2955:13:4;;-1:-1:-1;;;;;2983:18:4;;;;;7343::6;;2983:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2921:133;2783:271;3064:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:32:4;-1:-1:-1;;;;;3106:41:4;;;;;3157:39;;:24;;;:39;3206:19;;;:29;;;3245:16;;;:22;;;3302:12;3277:22;;;:37;3324:22;;;:35;;;3390:12;;;3369:18;;;:33;;;3390:12;3106:25;3413:14;3390:12;3413:14;:::i;:::-;;;;;;3438:24;3465:32;3483:12;3472:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3472:24:4;;;;;;;;;;3465:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3516:19;:37;;;;;;;;;;;;:44;;-1:-1:-1;;3516:44:4;3556:4;3516:44;;;3576:25;3438:59;;-1:-1:-1;3576:25:4;;;;3588:12;;3576:25;:::i;:::-;;;;;;;;3627:16;2418:1232;-1:-1:-1;;;;;;;;2418:1232:4:o;5468:142::-;1682:25;;-1:-1:-1;;;;;1682:25:4;1739:10;:48;;:123;;;;;1835:27;;;;;;;;;-1:-1:-1;;;;;1835:27:4;-1:-1:-1;;;;;1803:59:4;:5;-1:-1:-1;;;;;1803:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1803:59:4;;1739:123;1718:154;;;;;;-1:-1:-1;5560:36:4::1;::::0;;;5599:4:::1;5560:36;::::0;;;;;;;:43;;-1:-1:-1;;5560:43:4::1;::::0;;::::1;::::0;;5468:142::o;3750:1103::-;3870:35;3908:49;3945:11;3908:36;:49::i;:::-;3975:44;;;;:15;:44;;;;;;3870:87;;-1:-1:-1;3975:44:4;;3967:82;;;;-1:-1:-1;;;3967:82:4;;9728:2:6;3967:82:4;;;9710:21:6;9767:2;9747:18;;;9740:30;9806:27;9786:18;;;9779:55;9851:18;;3967:82:4;9526:349:6;3967:82:4;4059:24;:54;;;4127:6;4123:715;4143:11;:18;4139:1;:22;4123:715;;;4185:19;:52;4205:11;4217:1;4205:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;4185:52;;;;;;;;;;4205:31;4185:52;;;;4182:646;;;4256:12;476:42;-1:-1:-1;;;;;4289:44:4;:11;4301:1;4289:14;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;4289:44:4;;4286:453;;4357:8;4379:11;4391:1;4379:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;4371:36:4;4415:11;4427:1;4415:14;;;;;;;;:::i;:::-;;;;;;;:18;;;4371:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4356:82:4;;-1:-1:-1;4286:453:4;;-1:-1:-1;;4286:453:4;;4518:11;4538;4550:1;4538:14;;;;;;;;:::i;:::-;;;;;;;:27;;;4518:48;;4619:5;-1:-1:-1;;;;;4619:18:4;;4646:4;4653:11;4665:1;4653:14;;;;;;;;:::i;:::-;;;;;;;:22;;;4701:11;4713:1;4701:14;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;4619:101;;-1:-1:-1;;;;;;4619:101:4;;;;;;;-1:-1:-1;;;;;7426:15:6;;;4619:101:4;;;7408:34:6;7478:15;;;;7458:18;;;7451:43;7510:18;;;7503:34;7343:18;;4619:101:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4609:111;;4496:243;4286:453;4761:52;4772:11;4784:1;4772:14;;;;;;;;:::i;:::-;;;;;;;:31;;;4805:7;4761:52;;;;;;10390:25:6;;;10458:14;10451:22;10446:2;10431:18;;10424:50;10378:2;10363:18;;10222:258;4761:52:4;;;;;;;;4238:590;4182:646;4163:3;;;;:::i;:::-;;;;4123:715;;;;3860:993;3750:1103;;:::o;4953:415::-;5105:24;;5049:7;;;5139:179;5159:11;:18;5155:1;:22;5139:179;;;5245:62;5263:27;5291:11;5303:1;5291:14;;;;;;;;:::i;:::-;;;;;;;;;;;;5252:54;;;;;;10712:25:6;;;;10773:13;;10753:18;;;10746:41;10822:15;;;10816:22;-1:-1:-1;;;;;10912:21:6;;;10892:18;;;;10885:49;;;;10980:15;;;10974:22;10970:31;10950:18;;;10943:59;11045:15;11039:22;11018:19;;;11011:51;10684:19;;5252:54:4;;;-1:-1:-1;;5252:54:4;;;;;;;;;;5245:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5198:109;-1:-1:-1;5179:3:4;;;;:::i;:::-;;;;5139:179;;;-1:-1:-1;5334:27:4;4953:415;-1:-1:-1;;4953:415:4:o;14:180:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o;391:131::-;-1:-1:-1;;;;;466:31:6;;456:42;;446:70;;512:1;509;502:12;446:70;391:131;:::o;527:525::-;613:6;621;629;637;690:3;678:9;669:7;665:23;661:33;658:53;;;707:1;704;697:12;658:53;746:9;733:23;765:31;790:5;765:31;:::i;:::-;815:5;-1:-1:-1;872:2:6;857:18;;844:32;885:33;844:32;885:33;:::i;:::-;527:525;;937:7;;-1:-1:-1;;;;991:2:6;976:18;;963:32;;1042:2;1027:18;1014:32;;527:525::o;1421:127::-;1482:10;1477:3;1473:20;1470:1;1463:31;1513:4;1510:1;1503:15;1537:4;1534:1;1527:15;1553:253;1625:2;1619:9;1667:4;1655:17;;1702:18;1687:34;;1723:22;;;1684:62;1681:88;;;1749:18;;:::i;:::-;1785:2;1778:22;1553:253;:::o;1811:::-;1883:2;1877:9;1925:4;1913:17;;1960:18;1945:34;;1981:22;;;1942:62;1939:88;;;2007:18;;:::i;2069:275::-;2140:2;2134:9;2205:2;2186:13;;-1:-1:-1;;2182:27:6;2170:40;;2240:18;2225:34;;2261:22;;;2222:62;2219:88;;;2287:18;;:::i;:::-;2323:2;2316:22;2069:275;;-1:-1:-1;2069:275:6:o;2349:193::-;2419:4;2452:18;2444:6;2441:30;2438:56;;;2474:18;;:::i;:::-;-1:-1:-1;2519:1:6;2515:14;2531:4;2511:25;;2349:193::o;2547:1582::-;2613:5;2666:3;2659:4;2651:6;2647:17;2643:27;2633:55;;2684:1;2681;2674:12;2633:55;2720:6;2707:20;2746:4;2770:70;2786:53;2836:2;2786:53;:::i;:::-;2770:70;:::i;:::-;2874:15;;;2936:4;2979:11;;;2967:24;;2963:33;;;2905:12;;;;2862:3;3008:15;;;3005:35;;;3036:1;3033;3026:12;3005:35;3072:2;3064:6;3060:15;3084:1016;3100:6;3095:3;3092:15;3084:1016;;;3176:2;3170:3;3165;3161:13;3157:22;3154:112;;;3220:1;3249:2;3245;3238:14;3154:112;3292:22;;:::i;:::-;3355:3;3342:17;3372:33;3397:7;3372:33;:::i;:::-;3418:22;;3481:12;;;3468:26;3507:33;3468:26;3507:33;:::i;:::-;3560:14;;;3553:31;3607:2;3658:12;;;3645:26;3629:14;;;3622:50;3695:2;3746:12;;;3733:26;3717:14;;;3710:50;3783:3;3835:12;;;3822:26;3806:14;;;3799:50;3872:3;3924:12;;;3911:26;3895:14;;;3888:50;3961:3;4013:12;;;4000:26;3984:14;;;3977:50;4040:18;;4078:12;;;;3117;;3084:1016;;;-1:-1:-1;4118:5:6;;2547:1582;-1:-1:-1;;;;;;;2547:1582:6:o;4134:1827::-;4306:6;4314;4345:2;4388;4376:9;4367:7;4363:23;4359:32;4356:52;;;4404:1;4401;4394:12;4356:52;4444:9;4431:23;4473:18;4514:2;4506:6;4503:14;4500:34;;;4530:1;4527;4520:12;4500:34;4568:6;4557:9;4553:22;4543:32;;4613:7;4606:4;4602:2;4598:13;4594:27;4584:55;;4635:1;4632;4625:12;4584:55;4671:2;4658:16;4693:4;4717:70;4733:53;4783:2;4733:53;:::i;4717:70::-;4821:15;;;4903:1;4899:10;;;;4891:19;;4887:28;;;4852:12;;;;4927:19;;;4924:39;;;4959:1;4956;4949:12;4924:39;4983:11;;;;5003:732;5019:6;5014:3;5011:15;5003:732;;;5101:4;5095:3;5086:7;5082:17;5078:28;5075:118;;;5147:1;5176:2;5172;5165:14;5075:118;5219:22;;:::i;:::-;5281:3;5268:17;5261:5;5254:32;5336:2;5331:3;5327:12;5314:26;5353:33;5378:7;5353:33;:::i;:::-;5406:14;;;5399:31;5471:12;;;5458:26;5497:33;5458:26;5497:33;:::i;:::-;5550:14;;;5543:31;5597:2;5648:12;;;5635:26;5619:14;;;5612:50;5675:18;;5045:4;5036:14;;;;5713:12;;;;5003:732;;;5754:5;-1:-1:-1;;5797:18:6;;5784:32;;-1:-1:-1;;5828:16:6;;;5825:36;;;5857:1;5854;5847:12;5825:36;;;5880:75;5947:7;5936:8;5925:9;5921:24;5880:75;:::i;:::-;5870:85;;;4134:1827;;;;;:::o;5966:127::-;6027:10;6022:3;6018:20;6015:1;6008:31;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6098:168;6138:7;6204:1;6200;6196:6;6192:14;6189:1;6186:21;6181:1;6174:9;6167:17;6163:45;6160:71;;;6211:18;;:::i;:::-;-1:-1:-1;6251:9:6;;6098:168::o;6630:128::-;6670:3;6701:1;6697:6;6694:1;6691:13;6688:39;;;6707:18;;:::i;:::-;-1:-1:-1;6743:9:6;;6630:128::o;7548:277::-;7615:6;7668:2;7656:9;7647:7;7643:23;7639:32;7636:52;;;7684:1;7681;7674:12;7636:52;7716:9;7710:16;7769:5;7762:13;7755:21;7748:5;7745:32;7735:60;;7791:1;7788;7781:12;7735:60;7814:5;7548:277;-1:-1:-1;;;7548:277:6:o;7830:135::-;7869:3;7890:17;;;7887:43;;7910:18;;:::i;:::-;-1:-1:-1;7957:1:6;7946:13;;7830:135::o;7970:675::-;8233:13;;-1:-1:-1;;;;;8229:22:6;;;8211:41;;8312:4;8300:17;;;8294:24;8290:33;;;8268:20;;;8261:63;8380:4;8368:17;;;8362:24;8340:20;;;8333:54;8443:4;8431:17;;;8425:24;8403:20;;;8396:54;8506:4;8494:17;;;8488:24;8466:20;;;8459:54;8191:3;8557:17;;;8551:24;8529:20;;;8522:54;8632:4;8620:17;;;8614:24;8592:20;;;8585:54;;;;8160:3;8145:19;;7970:675::o;8650:426::-;8779:3;8817:6;8811:13;8842:1;8852:129;8866:6;8863:1;8860:13;8852:129;;;8964:4;8948:14;;;8944:25;;8938:32;8925:11;;;8918:53;8881:12;8852:129;;;8999:6;8996:1;8993:13;8990:48;;;9034:1;9025:6;9020:3;9016:16;9009:27;8990:48;-1:-1:-1;9054:16:6;;;;;8650:426;-1:-1:-1;;8650:426:6:o;9081:184::-;9151:6;9204:2;9192:9;9183:7;9179:23;9175:32;9172:52;;;9220:1;9217;9210:12;9172:52;-1:-1:-1;9243:16:6;;9081:184;-1:-1:-1;9081:184:6:o;9270:251::-;9340:6;9393:2;9381:9;9372:7;9368:23;9364:32;9361:52;;;9409:1;9406;9399:12;9361:52;9441:9;9435:16;9460:31;9485:5;9460:31;:::i;9880:127::-;9941:10;9936:3;9932:20;9929:1;9922:31;9972:4;9969:1;9962:15;9996:4;9993:1;9986:15", "language": "Solidity", "natspec": {"author": "Sherif Abdelmoatty", "kind": "dev", "methods": {"addNewKnownHashOnion(bytes32)": {"notice": "processClaims functioncalculates the liquidity provider fee."}, "constructor": {"notice": "Constructior functionIntialize variables"}, "processClaims((bytes32,address,address,uint256)[],(address,address,uint256,uint256,uint256,uint256,uint256)[])": {"notice": "processClaims functioncalculates the liquidity provider fee."}, "transfer(address,address,uint256,uint256)": {"notice": "withdraw functionwithdraws the required funds plus fees to be sent to the domain side rollup function transfer(TransferData memory _transferData) external payable returns(bytes32){"}}, "notice": "This contract is to be deployed in the source rollup", "title": "SourceDomainSideBridge Contract", "version": 1}, "offset": [294, 5616], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A1294B7 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x5A1294B7 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA9D72B02 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xEB66091F EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xEDF5A2DC EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C05B6 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x411B252 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x13457D88 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x929 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 PUSH8 0x16345785D8A0000 PUSH2 0x188 DUP5 PUSH2 0x3E8 PUSH2 0xC13 JUMP JUMPDEST GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420686967686572207468616E207472616465206C696D69740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x5 DUP6 PUSH2 0xC13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x1F9 DUP7 PUSH2 0x3E8 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x274 JUMPI DUP1 CALLVALUE LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x21212121 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x342 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE NUMBER PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH1 0x0 PUSH2 0x388 DUP4 PUSH2 0xC73 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x3BC SWAP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89 SWAP1 PUSH2 0x448 SWAP1 DUP5 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP4 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964652052657761726444617461206C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5FA JUMPI PUSH2 0x5FA PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6AC JUMPI PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x64F JUMPI PUSH2 0x64F PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP PUSH2 0x799 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6C0 JUMPI PUSH2 0x6C0 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x6F0 JUMPI PUSH2 0x6F0 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH2 0x70E PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH32 0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7CC JUMPI PUSH2 0x7CC PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST DUP1 PUSH2 0x806 DUP2 PUSH2 0xC73 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x59A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x2 DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x83A JUMPI PUSH2 0x83A PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 MLOAD DUP5 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP3 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x89D SWAP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x8E9 DUP2 PUSH2 0xC73 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x81C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x94A DUP2 PUSH2 0x911 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x95A DUP2 PUSH2 0x911 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9FA JUMPI PUSH2 0x9FA PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1C PUSH2 0x96F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xA4C PUSH2 0xA47 DUP4 PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0xE0 SWAP3 DUP4 MUL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP3 ADD SWAP2 SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xAEC JUMPI DUP2 DUP2 DUP11 SUB SLT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA8F PUSH2 0x985 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA9A DUP2 PUSH2 0x911 JUMP JUMPDEST DUP2 MSTORE DUP2 DUP7 ADD CALLDATALOAD PUSH2 0xAA9 DUP2 PUSH2 0x911 JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0xA6F JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP1 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xB49 PUSH2 0xA47 DUP4 PUSH2 0xA02 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x7 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xBCF JUMPI PUSH1 0x80 DUP7 DUP13 SUB SLT ISZERO PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB8E PUSH2 0x9AE JUMP JUMPDEST DUP7 CALLDATALOAD DUP2 MSTORE DUP4 DUP8 ADD CALLDATALOAD PUSH2 0xB9F DUP2 PUSH2 0x911 JUMP JUMPDEST DUP2 DUP6 ADD MSTORE DUP7 DUP9 ADD CALLDATALOAD PUSH2 0xBB0 DUP2 PUSH2 0x911 JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0x60 DUP8 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xB6D JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP4 POP POP DUP1 DUP4 GT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0xBF3 DUP6 DUP3 DUP7 ADD PUSH2 0xA26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2D PUSH2 0xBFD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC45 JUMPI PUSH2 0xC45 PUSH2 0xBFD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xC85 JUMPI PUSH2 0xC85 PUSH2 0xBFD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD04 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xCEA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC6C DUP2 PUSH2 0x911 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 PUSH8 0xE6503893ACA6B994 PUSH31 0xBAACC0F8052FA4FE60F158633552E7B20ED840885464736F6C634300080D00 CALLER ", "pcMap": {"0": {"offset": [294, 5616], "op": "PUSH1", "path": "4", "value": "0x80"}, "2": {"fn": null, "offset": [294, 5616], "op": "PUSH1", "path": "4", "value": "0x40"}, "4": {"fn": null, "offset": [294, 5616], "op": "MSTORE", "path": "4"}, "5": {"fn": null, "offset": [294, 5616], "op": "PUSH1", "path": "4", "value": "0x4"}, "7": {"fn": null, "offset": [294, 5616], "op": "CALLDATASIZE", "path": "4"}, "8": {"fn": null, "offset": [294, 5616], "op": "LT", "path": "4"}, "9": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0x70"}, "12": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "13": {"fn": null, "offset": [294, 5616], "op": "PUSH1", "path": "4", "value": "0x0"}, "15": {"fn": null, "offset": [294, 5616], "op": "CALLDATALOAD", "path": "4"}, "16": {"fn": null, "offset": [294, 5616], "op": "PUSH1", "path": "4", "value": "0xE0"}, "18": {"fn": null, "offset": [294, 5616], "op": "SHR", "path": "4"}, "19": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "20": {"fn": null, "offset": [294, 5616], "op": "PUSH4", "path": "4", "value": "0x5A1294B7"}, "25": {"fn": null, "offset": [294, 5616], "op": "GT", "path": "4"}, "26": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0x4E"}, "29": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "30": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "31": {"fn": null, "offset": [294, 5616], "op": "PUSH4", "path": "4", "value": "0x5A1294B7"}, "36": {"fn": null, "offset": [294, 5616], "op": "EQ", "path": "4"}, "37": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0xF0"}, "40": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "41": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "42": {"fn": null, "offset": [294, 5616], "op": "PUSH4", "path": "4", "value": "0xA9D72B02"}, "47": {"fn": null, "offset": [294, 5616], "op": "EQ", "path": "4"}, "48": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0x120"}, "51": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "52": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "53": {"fn": null, "offset": [294, 5616], "op": "PUSH4", "path": "4", "value": "0xEB66091F"}, "58": {"fn": null, "offset": [294, 5616], "op": "EQ", "path": "4"}, "59": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0x142"}, "62": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "63": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "64": {"fn": null, "offset": [294, 5616], "op": "PUSH4", "path": "4", "value": "0xEDF5A2DC"}, "69": {"fn": null, "offset": [294, 5616], "op": "EQ", "path": "4"}, "70": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0x15E"}, "73": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "74": {"fn": null, "offset": [294, 5616], "op": "PUSH1", "path": "4", "value": "0x0"}, "76": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "77": {"fn": null, "offset": [294, 5616], "op": "REVERT", "path": "4"}, "78": {"fn": null, "offset": [294, 5616], "op": "JUMPDEST", "path": "4"}, "79": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "80": {"fn": null, "offset": [294, 5616], "op": "PUSH4", "path": "4", "value": "0x40C05B6"}, "85": {"fn": null, "offset": [294, 5616], "op": "EQ", "path": "4"}, "86": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0x75"}, "89": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "90": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "91": {"fn": null, "offset": [294, 5616], "op": "PUSH4", "path": "4", "value": "0x411B252"}, "96": {"fn": null, "offset": [294, 5616], "op": "EQ", "path": "4"}, "97": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0xBA"}, "100": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "101": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "102": {"fn": null, "offset": [294, 5616], "op": "PUSH4", "path": "4", "value": "0x13457D88"}, "107": {"fn": null, "offset": [294, 5616], "op": "EQ", "path": "4"}, "108": {"fn": null, "offset": [294, 5616], "op": "PUSH2", "path": "4", "value": "0xDB"}, "111": {"fn": null, "offset": [294, 5616], "op": "JUMPI", "path": "4"}, "112": {"fn": null, "offset": [294, 5616], "op": "JUMPDEST", "path": "4"}, "113": {"fn": null, "offset": [294, 5616], "op": "PUSH1", "path": "4", "value": "0x0"}, "115": {"fn": null, "offset": [294, 5616], "op": "DUP1", "path": "4"}, "116": {"first_revert": true, "fn": null, "offset": [294, 5616], "op": "REVERT", "path": "4"}, "117": {"offset": [891, 942], "op": "JUMPDEST", "path": "4"}, "118": {"fn": null, "offset": [891, 942], "op": "CALLVALUE", "path": "4"}, "119": {"fn": null, "offset": [891, 942], "op": "DUP1", "path": "4"}, "120": {"fn": null, "offset": [891, 942], "op": "ISZERO", "path": "4"}, "121": {"fn": null, "offset": [891, 942], "op": "PUSH2", "path": "4", "value": "0x81"}, "124": {"fn": null, "offset": [891, 942], "op": "JUMPI", "path": "4"}, "125": {"fn": null, "offset": [891, 942], "op": "PUSH1", "path": "4", "value": "0x0"}, "127": {"fn": null, "offset": [891, 942], "op": "DUP1", "path": "4"}, "128": {"fn": null, "offset": [891, 942], "op": "REVERT", "path": "4"}, "129": {"fn": null, "offset": [891, 942], "op": "JUMPDEST", "path": "4"}, "130": {"op": "POP"}, "131": {"offset": [891, 942], "op": "PUSH2", "path": "4", "value": "0xA5"}, "134": {"fn": null, "offset": [891, 942], "op": "PUSH2", "path": "4", "value": "0x90"}, "137": {"fn": null, "offset": [891, 942], "op": "CALLDATASIZE", "path": "4"}, "138": {"fn": null, "offset": [891, 942], "op": "PUSH1", "path": "4", "value": "0x4"}, "140": {"fn": null, "offset": [891, 942], "op": "PUSH2", "path": "4", "value": "0x8F8"}, "143": {"fn": null, "jump": "i", "offset": [891, 942], "op": "JUMP", "path": "4"}, "144": {"fn": null, "offset": [891, 942], "op": "JUMPDEST", "path": "4"}, "145": {"fn": null, "offset": [891, 942], "op": "PUSH1", "path": "4", "value": "0x0"}, "147": {"fn": null, "offset": [891, 942], "op": "PUSH1", "path": "4", "value": "0x20"}, "149": {"fn": null, "offset": [891, 942], "op": "DUP2", "path": "4"}, "150": {"fn": null, "offset": [891, 942], "op": "SWAP1", "path": "4"}, "151": {"fn": null, "offset": [891, 942], "op": "MSTORE", "path": "4"}, "152": {"fn": null, "offset": [891, 942], "op": "SWAP1", "path": "4"}, "153": {"fn": null, "offset": [891, 942], "op": "DUP2", "path": "4"}, "154": {"fn": null, "offset": [891, 942], "op": "MSTORE", "path": "4"}, "155": {"fn": null, "offset": [891, 942], "op": "PUSH1", "path": "4", "value": "0x40"}, "157": {"fn": null, "offset": [891, 942], "op": "SWAP1", "path": "4"}, "158": {"fn": null, "offset": [891, 942], "op": "KECCAK256", "path": "4"}, "159": {"fn": null, "offset": [891, 942], "op": "SLOAD", "path": "4"}, "160": {"fn": null, "offset": [891, 942], "op": "PUSH1", "path": "4", "value": "0xFF"}, "162": {"fn": null, "offset": [891, 942], "op": "AND", "path": "4"}, "163": {"fn": null, "offset": [891, 942], "op": "DUP2", "path": "4"}, "164": {"fn": null, "offset": [891, 942], "op": "JUMP", "path": "4"}, "165": {"fn": null, "offset": [891, 942], "op": "JUMPDEST", "path": "4"}, "166": {"fn": null, "offset": [891, 942], "op": "PUSH1", "path": "4", "value": "0x40"}, "168": {"fn": null, "offset": [891, 942], "op": "MLOAD", "path": "4"}, "169": {"op": "SWAP1"}, "170": {"op": "ISZERO"}, "171": {"op": "ISZERO"}, "172": {"op": "DUP2"}, "173": {"op": "MSTORE"}, "174": {"op": "PUSH1", "value": "0x20"}, "176": {"op": "ADD"}, "177": {"offset": [891, 942], "op": "JUMPDEST", "path": "4"}, "178": {"fn": null, "offset": [891, 942], "op": "PUSH1", "path": "4", "value": "0x40"}, "180": {"fn": null, "offset": [891, 942], "op": "MLOAD", "path": "4"}, "181": {"fn": null, "offset": [891, 942], "op": "DUP1", "path": "4"}, "182": {"fn": null, "offset": [891, 942], "op": "SWAP2", "path": "4"}, "183": {"fn": null, "offset": [891, 942], "op": "SUB", "path": "4"}, "184": {"fn": null, "offset": [891, 942], "op": "SWAP1", "path": "4"}, "185": {"fn": null, "offset": [891, 942], "op": "RETURN", "path": "4"}, "186": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "JUMPDEST", "path": "4"}, "187": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "PUSH2", "path": "4", "value": "0xCD"}, "190": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "PUSH2", "path": "4", "value": "0xC8"}, "193": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "CALLDATASIZE", "path": "4"}, "194": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "PUSH1", "path": "4", "value": "0x4"}, "196": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "PUSH2", "path": "4", "value": "0x929"}, "199": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2418, 3650], "op": "JUMP", "path": "4"}, "200": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "JUMPDEST", "path": "4"}, "201": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "PUSH2", "path": "4", "value": "0x171"}, "204": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2418, 3650], "op": "JUMP", "path": "4"}, "205": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "JUMPDEST", "path": "4"}, "206": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "PUSH1", "path": "4", "value": "0x40"}, "208": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "MLOAD", "path": "4"}, "209": {"op": "SWAP1"}, "210": {"op": "DUP2"}, "211": {"op": "MSTORE"}, "212": {"op": "PUSH1", "value": "0x20"}, "214": {"op": "ADD"}, "215": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "PUSH2", "path": "4", "value": "0xB1"}, "218": {"op": "JUMP"}, "219": {"offset": [337, 387], "op": "JUMPDEST", "path": "4"}, "220": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "CALLVALUE", "path": "4"}, "221": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "DUP1", "path": "4"}, "222": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "ISZERO", "path": "4"}, "223": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "PUSH2", "path": "4", "value": "0xE7"}, "226": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "JUMPI", "path": "4"}, "227": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "PUSH1", "path": "4", "value": "0x0"}, "229": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "DUP1", "path": "4"}, "230": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "REVERT", "path": "4"}, "231": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "JUMPDEST", "path": "4"}, "232": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "POP", "path": "4"}, "233": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "PUSH2", "path": "4", "value": "0xCD"}, "236": {"offset": [386, 387], "op": "PUSH1", "path": "4", "value": "0x5"}, "238": {"offset": [337, 387], "op": "DUP2", "path": "4"}, "239": {"fn": "SourceDomainSideBridge.transfer", "offset": [337, 387], "op": "JUMP", "path": "4"}, "240": {"offset": [948, 995], "op": "JUMPDEST", "path": "4"}, "241": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "CALLVALUE", "path": "4"}, "242": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "DUP1", "path": "4"}, "243": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "ISZERO", "path": "4"}, "244": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH2", "path": "4", "value": "0xFC"}, "247": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "JUMPI", "path": "4"}, "248": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH1", "path": "4", "value": "0x0"}, "250": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "DUP1", "path": "4"}, "251": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "REVERT", "path": "4"}, "252": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "JUMPDEST", "path": "4"}, "253": {"op": "POP"}, "254": {"offset": [948, 995], "op": "PUSH2", "path": "4", "value": "0xA5"}, "257": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH2", "path": "4", "value": "0x10B"}, "260": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "CALLDATASIZE", "path": "4"}, "261": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH1", "path": "4", "value": "0x4"}, "263": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH2", "path": "4", "value": "0x8F8"}, "266": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [948, 995], "op": "JUMP", "path": "4"}, "267": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "JUMPDEST", "path": "4"}, "268": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH1", "path": "4", "value": "0x1"}, "270": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH1", "path": "4", "value": "0x20"}, "272": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "MSTORE", "path": "4"}, "273": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH1", "path": "4", "value": "0x0"}, "275": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "SWAP1", "path": "4"}, "276": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "DUP2", "path": "4"}, "277": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "MSTORE", "path": "4"}, "278": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH1", "path": "4", "value": "0x40"}, "280": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "SWAP1", "path": "4"}, "281": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "KECCAK256", "path": "4"}, "282": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "SLOAD", "path": "4"}, "283": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "PUSH1", "path": "4", "value": "0xFF"}, "285": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "AND", "path": "4"}, "286": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "DUP2", "path": "4"}, "287": {"fn": "SourceDomainSideBridge.transfer", "offset": [948, 995], "op": "JUMP", "path": "4"}, "288": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "JUMPDEST", "path": "4"}, "289": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "CALLVALUE", "path": "4"}, "290": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "DUP1", "path": "4"}, "291": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "ISZERO", "path": "4"}, "292": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "PUSH2", "path": "4", "value": "0x12C"}, "295": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "JUMPI", "path": "4"}, "296": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "PUSH1", "path": "4", "value": "0x0"}, "298": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "DUP1", "path": "4"}, "299": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "REVERT", "path": "4"}, "300": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "JUMPDEST", "path": "4"}, "301": {"op": "POP"}, "302": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "PUSH2", "path": "4", "value": "0x140"}, "305": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "PUSH2", "path": "4", "value": "0x13B"}, "308": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "CALLDATASIZE", "path": "4"}, "309": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "PUSH1", "path": "4", "value": "0x4"}, "311": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "PUSH2", "path": "4", "value": "0x8F8"}, "314": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5468, 5610], "op": "JUMP", "path": "4"}, "315": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "JUMPDEST", "path": "4"}, "316": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "PUSH2", "path": "4", "value": "0x45C"}, "319": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5468, 5610], "op": "JUMP", "path": "4"}, "320": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "JUMPDEST", "path": "4"}, "321": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "STOP", "path": "4"}, "322": {"offset": [393, 437], "op": "JUMPDEST", "path": "4"}, "323": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "CALLVALUE", "path": "4"}, "324": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "DUP1", "path": "4"}, "325": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "ISZERO", "path": "4"}, "326": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "PUSH2", "path": "4", "value": "0x14E"}, "329": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "JUMPI", "path": "4"}, "330": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "PUSH1", "path": "4", "value": "0x0"}, "332": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "DUP1", "path": "4"}, "333": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "REVERT", "path": "4"}, "334": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "JUMPDEST", "path": "4"}, "335": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "POP", "path": "4"}, "336": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "PUSH2", "path": "4", "value": "0xCD"}, "339": {"offset": [428, 437], "op": "PUSH8", "path": "4", "value": "0x16345785D8A0000"}, "348": {"offset": [393, 437], "op": "DUP2", "path": "4"}, "349": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [393, 437], "op": "JUMP", "path": "4"}, "350": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "JUMPDEST", "path": "4"}, "351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "PUSH2", "path": "4", "value": "0x140"}, "354": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "PUSH2", "path": "4", "value": "0x16C"}, "357": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "CALLDATASIZE", "path": "4"}, "358": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "PUSH1", "path": "4", "value": "0x4"}, "360": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "PUSH2", "path": "4", "value": "0xAF9"}, "363": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3750, 4853], "op": "JUMP", "path": "4"}, "364": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "JUMPDEST", "path": "4"}, "365": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "PUSH2", "path": "4", "value": "0x526"}, "368": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3750, 4853], "op": "JUMP", "path": "4"}, "369": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "JUMPDEST", "path": "4"}, "370": {"fn": "SourceDomainSideBridge.transfer", "offset": [2553, 2560], "op": "PUSH1", "path": "4", "value": "0x0"}, "372": {"offset": [428, 437], "op": "PUSH8", "path": "4", "value": "0x16345785D8A0000"}, "381": {"fn": "SourceDomainSideBridge.transfer", "offset": [2588, 2601], "op": "PUSH2", "path": "4", "statement": 0, "value": "0x188"}, "384": {"fn": "SourceDomainSideBridge.transfer", "offset": [2588, 2595], "op": "DUP5", "path": "4"}, "385": {"fn": "SourceDomainSideBridge.transfer", "offset": [2597, 2601], "op": "PUSH2", "path": "4", "value": "0x3E8"}, "388": {"fn": "SourceDomainSideBridge.transfer", "offset": [2588, 2601], "op": "PUSH2", "path": "4", "value": "0xC13"}, "391": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2588, 2601], "op": "JUMP", "path": "4"}, "392": {"fn": "SourceDomainSideBridge.transfer", "offset": [2588, 2601], "op": "JUMPDEST", "path": "4"}, "393": {"fn": "SourceDomainSideBridge.transfer", "offset": [2588, 2616], "op": "GT", "path": "4"}, "394": {"branch": 23, "fn": "SourceDomainSideBridge.transfer", "offset": [2588, 2616], "op": "ISZERO", "path": "4"}, "395": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "PUSH2", "path": "4", "value": "0x1DB"}, "398": {"branch": 23, "fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "JUMPI", "path": "4"}, "399": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "PUSH1", "path": "4", "value": "0x40"}, "401": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "MLOAD", "path": "4"}, "402": {"op": "PUSH3", "value": "0x461BCD"}, "406": {"op": "PUSH1", "value": "0xE5"}, "408": {"op": "SHL"}, "409": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "DUP2", "path": "4"}, "410": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "MSTORE", "path": "4"}, "411": {"op": "PUSH1", "value": "0x20"}, "413": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "PUSH1", "path": "4", "value": "0x4"}, "415": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "DUP3", "path": "4"}, "416": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "ADD", "path": "4"}, "417": {"op": "MSTORE"}, "418": {"op": "PUSH1", "value": "0x1E"}, "420": {"op": "PUSH1", "value": "0x24"}, "422": {"op": "DUP3"}, "423": {"op": "ADD"}, "424": {"op": "MSTORE"}, "425": {"op": "PUSH32", "value": "0x416D6F756E7420686967686572207468616E207472616465206C696D69740000"}, "458": {"op": "PUSH1", "value": "0x44"}, "460": {"op": "DUP3"}, "461": {"op": "ADD"}, "462": {"op": "MSTORE"}, "463": {"op": "PUSH1", "value": "0x64"}, "465": {"op": "ADD"}, "466": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "JUMPDEST", "path": "4"}, "467": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "PUSH1", "path": "4", "value": "0x40"}, "469": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "MLOAD", "path": "4"}, "470": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "DUP1", "path": "4"}, "471": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "SWAP2", "path": "4"}, "472": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "SUB", "path": "4"}, "473": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "SWAP1", "path": "4"}, "474": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "REVERT", "optimizer_revert": true, "path": "4"}, "475": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2651], "op": "JUMPDEST", "path": "4"}, "476": {"fn": "SourceDomainSideBridge.transfer", "offset": [2661, 2672], "op": "PUSH1", "path": "4", "value": "0x0"}, "478": {"fn": "SourceDomainSideBridge.transfer", "offset": [2675, 2710], "op": "PUSH2", "path": "4", "value": "0x1E8"}, "481": {"offset": [386, 387], "op": "PUSH1", "path": "4", "value": "0x5"}, "483": {"fn": "SourceDomainSideBridge.transfer", "offset": [2675, 2682], "op": "DUP6", "path": "4"}, "484": {"fn": "SourceDomainSideBridge.transfer", "offset": [2675, 2710], "op": "PUSH2", "path": "4", "value": "0xC13"}, "487": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2675, 2710], "op": "JUMP", "path": "4"}, "488": {"fn": "SourceDomainSideBridge.transfer", "offset": [2675, 2710], "op": "JUMPDEST", "path": "4"}, "489": {"fn": "SourceDomainSideBridge.transfer", "offset": [2661, 2710], "op": "SWAP1", "path": "4"}, "490": {"op": "POP"}, "491": {"fn": "SourceDomainSideBridge.transfer", "offset": [2720, 2741], "op": "PUSH1", "path": "4", "value": "0x0"}, "493": {"fn": "SourceDomainSideBridge.transfer", "offset": [2661, 2710], "op": "DUP2", "path": "4"}, "494": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2758], "op": "PUSH2", "path": "4", "value": "0x1F9"}, "497": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2751], "op": "DUP7", "path": "4"}, "498": {"fn": "SourceDomainSideBridge.transfer", "offset": [2754, 2758], "op": "PUSH2", "path": "4", "value": "0x3E8"}, "501": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2758], "op": "PUSH2", "path": "4", "value": "0xC13"}, "504": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2744, 2758], "op": "JUMP", "path": "4"}, "505": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2758], "op": "JUMPDEST", "path": "4"}, "506": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2764], "op": "PUSH2", "path": "4", "value": "0x203"}, "509": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2764], "op": "SWAP2", "path": "4"}, "510": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2764], "op": "SWAP1", "path": "4"}, "511": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2764], "op": "PUSH2", "path": "4", "value": "0xC32"}, "514": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2744, 2764], "op": "JUMP", "path": "4"}, "515": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 2764], "op": "JUMPDEST", "path": "4"}, "516": {"fn": "SourceDomainSideBridge.transfer", "offset": [2720, 2764], "op": "SWAP1", "path": "4"}, "517": {"op": "POP"}, "518": {"op": "PUSH1", "value": "0x1"}, "520": {"op": "PUSH1", "value": "0x1"}, "522": {"op": "PUSH1", "value": "0xA0"}, "524": {"op": "SHL"}, "525": {"op": "SUB"}, "526": {"fn": "SourceDomainSideBridge.transfer", "offset": [2786, 2816], "op": "DUP8", "path": "4"}, "527": {"branch": 24, "fn": "SourceDomainSideBridge.transfer", "offset": [2786, 2816], "op": "AND", "path": "4"}, "528": {"fn": "SourceDomainSideBridge.transfer", "offset": [2783, 3054], "op": "PUSH2", "path": "4", "value": "0x274"}, "531": {"branch": 24, "fn": "SourceDomainSideBridge.transfer", "offset": [2783, 3054], "op": "JUMPI", "path": "4"}, "532": {"fn": "SourceDomainSideBridge.transfer", "offset": [2852, 2865], "op": "DUP1", "path": "4", "statement": 1}, "533": {"fn": "SourceDomainSideBridge.transfer", "offset": [2839, 2848], "op": "CALLVALUE", "path": "4"}, "534": {"fn": "SourceDomainSideBridge.transfer", "offset": [2839, 2865], "op": "LT", "path": "4"}, "535": {"branch": 25, "fn": "SourceDomainSideBridge.transfer", "offset": [2839, 2865], "op": "ISZERO", "path": "4"}, "536": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "PUSH2", "path": "4", "value": "0x26F"}, "539": {"branch": 25, "fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "JUMPI", "path": "4"}, "540": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "PUSH1", "path": "4", "value": "0x40"}, "542": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "MLOAD", "path": "4"}, "543": {"op": "PUSH3", "value": "0x461BCD"}, "547": {"op": "PUSH1", "value": "0xE5"}, "549": {"op": "SHL"}, "550": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "DUP2", "path": "4"}, "551": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "MSTORE", "path": "4"}, "552": {"op": "PUSH1", "value": "0x20"}, "554": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "PUSH1", "path": "4", "value": "0x4"}, "556": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "DUP3", "path": "4"}, "557": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "ADD", "path": "4"}, "558": {"op": "MSTORE"}, "559": {"op": "PUSH1", "value": "0x24"}, "561": {"op": "DUP1"}, "562": {"op": "DUP3"}, "563": {"op": "ADD"}, "564": {"op": "MSTORE"}, "565": {"op": "PUSH32", "value": "0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121"}, "598": {"op": "PUSH1", "value": "0x44"}, "600": {"op": "DUP3"}, "601": {"op": "ADD"}, "602": {"op": "MSTORE"}, "603": {"op": "PUSH4", "value": "0x21212121"}, "608": {"op": "PUSH1", "value": "0xE0"}, "610": {"op": "SHL"}, "611": {"op": "PUSH1", "value": "0x64"}, "613": {"op": "DUP3"}, "614": {"op": "ADD"}, "615": {"op": "MSTORE"}, "616": {"op": "PUSH1", "value": "0x84"}, "618": {"op": "ADD"}, "619": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "PUSH2", "path": "4", "value": "0x1D2"}, "622": {"op": "JUMP"}, "623": {"fn": "SourceDomainSideBridge.transfer", "offset": [2831, 2906], "op": "JUMPDEST", "path": "4"}, "624": {"fn": "SourceDomainSideBridge.transfer", "offset": [2783, 3054], "op": "PUSH2", "path": "4", "value": "0x2F0"}, "627": {"fn": "SourceDomainSideBridge.transfer", "offset": [2783, 3054], "op": "JUMP", "path": "4"}, "628": {"fn": "SourceDomainSideBridge.transfer", "offset": [2783, 3054], "op": "JUMPDEST", "path": "4"}, "629": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "statement": 2, "value": "0x40"}, "631": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "MLOAD", "path": "4"}, "632": {"op": "PUSH4", "value": "0x23B872DD"}, "637": {"op": "PUSH1", "value": "0xE0"}, "639": {"op": "SHL"}, "640": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP2", "path": "4"}, "641": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "MSTORE", "path": "4"}, "642": {"fn": "SourceDomainSideBridge.transfer", "offset": [3002, 3012], "op": "CALLER", "path": "4"}, "643": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x4"}, "645": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP3", "path": "4"}, "646": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "ADD", "path": "4"}, "647": {"op": "MSTORE"}, "648": {"fn": "SourceDomainSideBridge.transfer", "offset": [3022, 3026], "op": "ADDRESS", "path": "4"}, "649": {"op": "PUSH1", "value": "0x24"}, "651": {"op": "DUP3"}, "652": {"op": "ADD"}, "653": {"op": "MSTORE"}, "654": {"op": "PUSH1", "value": "0x44"}, "656": {"op": "DUP2"}, "657": {"op": "ADD"}, "658": {"op": "DUP3"}, "659": {"op": "SWAP1"}, "660": {"op": "MSTORE"}, "661": {"fn": "SourceDomainSideBridge.transfer", "offset": [2955, 2968], "op": "DUP8", "path": "4"}, "662": {"fn": "SourceDomainSideBridge.transfer", "offset": [2955, 2968], "op": "SWAP1", "path": "4"}, "663": {"op": "PUSH1", "value": "0x1"}, "665": {"op": "PUSH1", "value": "0x1"}, "667": {"op": "PUSH1", "value": "0xA0"}, "669": {"op": "SHL"}, "670": {"op": "SUB"}, "671": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3001], "op": "DUP3", "path": "4"}, "672": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3001], "op": "AND", "path": "4"}, "673": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3001], "op": "SWAP1", "path": "4"}, "674": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3001], "op": "PUSH4", "path": "4", "value": "0x23B872DD"}, "679": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3001], "op": "SWAP1", "path": "4"}, "680": {"op": "PUSH1", "value": "0x64"}, "682": {"op": "ADD"}, "683": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x20"}, "685": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x40"}, "687": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "MLOAD", "path": "4"}, "688": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP1", "path": "4"}, "689": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP4", "path": "4"}, "690": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "SUB", "path": "4"}, "691": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP2", "path": "4"}, "692": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x0"}, "694": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP8", "path": "4"}, "695": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "GAS", "path": "4"}, "696": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "CALL", "path": "4"}, "697": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "ISZERO", "path": "4"}, "698": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP1", "path": "4"}, "699": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "ISZERO", "path": "4"}, "700": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH2", "path": "4", "value": "0x2C9"}, "703": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "JUMPI", "path": "4"}, "704": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "RETURNDATASIZE", "path": "4"}, "705": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x0"}, "707": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP1", "path": "4"}, "708": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "RETURNDATACOPY", "path": "4"}, "709": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "RETURNDATASIZE", "path": "4"}, "710": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x0"}, "712": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "REVERT", "path": "4"}, "713": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "JUMPDEST", "path": "4"}, "714": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "POP", "path": "4"}, "715": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "POP", "path": "4"}, "716": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "POP", "path": "4"}, "717": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "POP", "path": "4"}, "718": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x40"}, "720": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "MLOAD", "path": "4"}, "721": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "RETURNDATASIZE", "path": "4"}, "722": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x1F"}, "724": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "NOT", "path": "4"}, "725": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x1F"}, "727": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP3", "path": "4"}, "728": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "ADD", "path": "4"}, "729": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "AND", "path": "4"}, "730": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP3", "path": "4"}, "731": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "ADD", "path": "4"}, "732": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP1", "path": "4"}, "733": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH1", "path": "4", "value": "0x40"}, "735": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "MSTORE", "path": "4"}, "736": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "POP", "path": "4"}, "737": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "DUP2", "path": "4"}, "738": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "ADD", "path": "4"}, "739": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "SWAP1", "path": "4"}, "740": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH2", "path": "4", "value": "0x2ED"}, "743": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "SWAP2", "path": "4"}, "744": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "SWAP1", "path": "4"}, "745": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "PUSH2", "path": "4", "value": "0xC4A"}, "748": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2983, 3043], "op": "JUMP", "path": "4"}, "749": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "JUMPDEST", "path": "4"}, "750": {"fn": "SourceDomainSideBridge.transfer", "offset": [2983, 3043], "op": "POP", "path": "4"}, "751": {"fn": "SourceDomainSideBridge.transfer", "offset": [2921, 3054], "op": "POP", "path": "4"}, "752": {"fn": "SourceDomainSideBridge.transfer", "offset": [2783, 3054], "op": "JUMPDEST", "path": "4"}, "753": {"fn": "SourceDomainSideBridge.transfer", "offset": [3064, 3096], "op": "PUSH2", "path": "4", "value": "0x342"}, "756": {"op": "PUSH1", "value": "0x40"}, "758": {"op": "MLOAD"}, "759": {"op": "DUP1"}, "760": {"op": "PUSH1", "value": "0xE0"}, "762": {"op": "ADD"}, "763": {"op": "PUSH1", "value": "0x40"}, "765": {"op": "MSTORE"}, "766": {"op": "DUP1"}, "767": {"op": "PUSH1", "value": "0x0"}, "769": {"op": "PUSH1", "value": "0x1"}, "771": {"op": "PUSH1", "value": "0x1"}, "773": {"op": "PUSH1", "value": "0xA0"}, "775": {"op": "SHL"}, "776": {"op": "SUB"}, "777": {"op": "AND"}, "778": {"op": "DUP2"}, "779": {"op": "MSTORE"}, "780": {"op": "PUSH1", "value": "0x20"}, "782": {"op": "ADD"}, "783": {"op": "PUSH1", "value": "0x0"}, "785": {"op": "PUSH1", "value": "0x1"}, "787": {"op": "PUSH1", "value": "0x1"}, "789": {"op": "PUSH1", "value": "0xA0"}, "791": {"op": "SHL"}, "792": {"op": "SUB"}, "793": {"op": "AND"}, "794": {"op": "DUP2"}, "795": {"op": "MSTORE"}, "796": {"op": "PUSH1", "value": "0x20"}, "798": {"op": "ADD"}, "799": {"op": "PUSH1", "value": "0x0"}, "801": {"op": "DUP2"}, "802": {"op": "MSTORE"}, "803": {"op": "PUSH1", "value": "0x20"}, "805": {"op": "ADD"}, "806": {"op": "PUSH1", "value": "0x0"}, "808": {"op": "DUP2"}, "809": {"op": "MSTORE"}, "810": {"op": "PUSH1", "value": "0x20"}, "812": {"op": "ADD"}, "813": {"op": "PUSH1", "value": "0x0"}, "815": {"op": "DUP2"}, "816": {"op": "MSTORE"}, "817": {"op": "PUSH1", "value": "0x20"}, "819": {"op": "ADD"}, "820": {"op": "PUSH1", "value": "0x0"}, "822": {"op": "DUP2"}, "823": {"op": "MSTORE"}, "824": {"op": "PUSH1", "value": "0x20"}, "826": {"op": "ADD"}, "827": {"op": "PUSH1", "value": "0x0"}, "829": {"op": "DUP2"}, "830": {"op": "MSTORE"}, "831": {"op": "POP"}, "832": {"op": "SWAP1"}, "833": {"op": "JUMP"}, "834": {"fn": "SourceDomainSideBridge.transfer", "offset": [3064, 3096], "op": "JUMPDEST", "path": "4"}, "835": {"op": "PUSH1", "value": "0x1"}, "837": {"op": "PUSH1", "value": "0x1"}, "839": {"op": "PUSH1", "value": "0xA0"}, "841": {"op": "SHL"}, "842": {"op": "SUB"}, "843": {"fn": "SourceDomainSideBridge.transfer", "offset": [3106, 3147], "op": "DUP1", "path": "4", "statement": 3}, "844": {"fn": "SourceDomainSideBridge.transfer", "offset": [3106, 3147], "op": "DUP10", "path": "4"}, "845": {"fn": "SourceDomainSideBridge.transfer", "offset": [3106, 3147], "op": "AND", "path": "4"}, "846": {"fn": "SourceDomainSideBridge.transfer", "offset": [3106, 3147], "op": "DUP3", "path": "4"}, "847": {"fn": "SourceDomainSideBridge.transfer", "offset": [3106, 3147], "op": "MSTORE", "path": "4"}, "848": {"fn": "SourceDomainSideBridge.transfer", "offset": [3157, 3196], "op": "DUP8", "path": "4", "statement": 4}, "849": {"fn": "SourceDomainSideBridge.transfer", "offset": [3157, 3196], "op": "AND", "path": "4"}, "850": {"fn": "SourceDomainSideBridge.transfer", "offset": [3157, 3181], "op": "PUSH1", "path": "4", "value": "0x20"}, "852": {"fn": "SourceDomainSideBridge.transfer", "offset": [3157, 3181], "op": "DUP3", "path": "4"}, "853": {"fn": "SourceDomainSideBridge.transfer", "offset": [3157, 3181], "op": "ADD", "path": "4"}, "854": {"fn": "SourceDomainSideBridge.transfer", "offset": [3157, 3196], "op": "MSTORE", "path": "4"}, "855": {"fn": "SourceDomainSideBridge.transfer", "offset": [3206, 3225], "op": "PUSH1", "path": "4", "statement": 5, "value": "0x40"}, "857": {"fn": "SourceDomainSideBridge.transfer", "offset": [3206, 3225], "op": "DUP2", "path": "4"}, "858": {"fn": "SourceDomainSideBridge.transfer", "offset": [3206, 3225], "op": "ADD", "path": "4"}, "859": {"fn": "SourceDomainSideBridge.transfer", "offset": [3206, 3235], "op": "DUP7", "path": "4"}, "860": {"fn": "SourceDomainSideBridge.transfer", "offset": [3206, 3235], "op": "SWAP1", "path": "4"}, "861": {"fn": "SourceDomainSideBridge.transfer", "offset": [3206, 3235], "op": "MSTORE", "path": "4"}, "862": {"fn": "SourceDomainSideBridge.transfer", "offset": [3245, 3261], "op": "PUSH1", "path": "4", "statement": 6, "value": "0x60"}, "864": {"fn": "SourceDomainSideBridge.transfer", "offset": [3245, 3261], "op": "DUP2", "path": "4"}, "865": {"fn": "SourceDomainSideBridge.transfer", "offset": [3245, 3261], "op": "ADD", "path": "4"}, "866": {"fn": "SourceDomainSideBridge.transfer", "offset": [3245, 3267], "op": "DUP4", "path": "4"}, "867": {"fn": "SourceDomainSideBridge.transfer", "offset": [3245, 3267], "op": "SWAP1", "path": "4"}, "868": {"fn": "SourceDomainSideBridge.transfer", "offset": [3245, 3267], "op": "MSTORE", "path": "4"}, "869": {"fn": "SourceDomainSideBridge.transfer", "offset": [3302, 3314], "op": "NUMBER", "path": "4", "statement": 7}, "870": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3299], "op": "PUSH1", "path": "4", "value": "0x80"}, "872": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3299], "op": "DUP3", "path": "4"}, "873": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3299], "op": "ADD", "path": "4"}, "874": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3314], "op": "MSTORE", "path": "4"}, "875": {"fn": "SourceDomainSideBridge.transfer", "offset": [3324, 3346], "op": "PUSH1", "path": "4", "statement": 8, "value": "0xA0"}, "877": {"fn": "SourceDomainSideBridge.transfer", "offset": [3324, 3346], "op": "DUP2", "path": "4"}, "878": {"fn": "SourceDomainSideBridge.transfer", "offset": [3324, 3346], "op": "ADD", "path": "4"}, "879": {"fn": "SourceDomainSideBridge.transfer", "offset": [3324, 3359], "op": "DUP6", "path": "4"}, "880": {"fn": "SourceDomainSideBridge.transfer", "offset": [3324, 3359], "op": "SWAP1", "path": "4"}, "881": {"fn": "SourceDomainSideBridge.transfer", "offset": [3324, 3359], "op": "MSTORE", "path": "4"}, "882": {"fn": "SourceDomainSideBridge.transfer", "offset": [3390, 3402], "op": "PUSH1", "path": "4", "statement": 9, "value": "0x5"}, "884": {"fn": "SourceDomainSideBridge.transfer", "offset": [3390, 3402], "op": "DUP1", "path": "4"}, "885": {"fn": "SourceDomainSideBridge.transfer", "offset": [3390, 3402], "op": "SLOAD", "path": "4"}, "886": {"fn": "SourceDomainSideBridge.transfer", "offset": [3369, 3387], "op": "PUSH1", "path": "4", "value": "0xC0"}, "888": {"fn": "SourceDomainSideBridge.transfer", "offset": [3369, 3387], "op": "DUP4", "path": "4"}, "889": {"fn": "SourceDomainSideBridge.transfer", "offset": [3369, 3387], "op": "ADD", "path": "4"}, "890": {"fn": "SourceDomainSideBridge.transfer", "offset": [3369, 3402], "op": "DUP2", "path": "4"}, "891": {"fn": "SourceDomainSideBridge.transfer", "offset": [3369, 3402], "op": "SWAP1", "path": "4"}, "892": {"fn": "SourceDomainSideBridge.transfer", "offset": [3369, 3402], "op": "MSTORE", "path": "4"}, "893": {"fn": "SourceDomainSideBridge.transfer", "offset": [3390, 3402], "op": "SWAP1", "path": "4"}, "894": {"fn": "SourceDomainSideBridge.transfer", "offset": [3106, 3131], "op": "PUSH1", "path": "4", "value": "0x0"}, "896": {"fn": "SourceDomainSideBridge.transfer", "offset": [3413, 3427], "op": "PUSH2", "path": "4", "statement": 10, "value": "0x388"}, "899": {"fn": "SourceDomainSideBridge.transfer", "offset": [3390, 3402], "op": "DUP4", "path": "4"}, "900": {"fn": "SourceDomainSideBridge.transfer", "offset": [3413, 3427], "op": "PUSH2", "path": "4", "value": "0xC73"}, "903": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3413, 3427], "op": "JUMP", "path": "4"}, "904": {"fn": "SourceDomainSideBridge.transfer", "offset": [3413, 3427], "op": "JUMPDEST", "path": "4"}, "905": {"fn": "SourceDomainSideBridge.transfer", "offset": [3413, 3427], "op": "SWAP2", "path": "4"}, "906": {"fn": "SourceDomainSideBridge.transfer", "offset": [3413, 3427], "op": "SWAP1", "path": "4"}, "907": {"fn": "SourceDomainSideBridge.transfer", "offset": [3413, 3427], "op": "POP", "path": "4"}, "908": {"fn": "SourceDomainSideBridge.transfer", "offset": [3413, 3427], "op": "SSTORE", "path": "4"}, "909": {"fn": "SourceDomainSideBridge.transfer", "offset": [3413, 3427], "op": "POP", "path": "4"}, "910": {"fn": "SourceDomainSideBridge.transfer", "offset": [3438, 3462], "op": "PUSH1", "path": "4", "value": "0x0"}, "912": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x2"}, "914": {"fn": "SourceDomainSideBridge.transfer", "offset": [3483, 3495], "op": "DUP3", "path": "4"}, "915": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "PUSH1", "path": "4", "value": "0x40"}, "917": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "MLOAD", "path": "4"}, "918": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "PUSH1", "path": "4", "value": "0x20"}, "920": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "ADD", "path": "4"}, "921": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "PUSH2", "path": "4", "value": "0x3A2"}, "924": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "SWAP2", "path": "4"}, "925": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "SWAP1", "path": "4"}, "926": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "PUSH2", "path": "4", "value": "0xC8C"}, "929": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3472, 3496], "op": "JUMP", "path": "4"}, "930": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "JUMPDEST", "path": "4"}, "931": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "PUSH1", "path": "4", "value": "0x40"}, "933": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "DUP1", "path": "4"}, "934": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "MLOAD", "path": "4"}, "935": {"op": "PUSH1", "value": "0x1F"}, "937": {"op": "NOT"}, "938": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "DUP2", "path": "4"}, "939": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "DUP5", "path": "4"}, "940": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "SUB", "path": "4"}, "941": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "ADD", "path": "4"}, "942": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "DUP2", "path": "4"}, "943": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "MSTORE", "path": "4"}, "944": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "SWAP1", "path": "4"}, "945": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "DUP3", "path": "4"}, "946": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "SWAP1", "path": "4"}, "947": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3496], "op": "MSTORE", "path": "4"}, "948": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH2", "path": "4", "value": "0x3BC"}, "951": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "SWAP2", "path": "4"}, "952": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH2", "path": "4", "value": "0xCE3"}, "955": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3465, 3497], "op": "JUMP", "path": "4"}, "956": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "JUMPDEST", "path": "4"}, "957": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x20"}, "959": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x40"}, "961": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "MLOAD", "path": "4"}, "962": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP1", "path": "4"}, "963": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP4", "path": "4"}, "964": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "SUB", "path": "4"}, "965": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP2", "path": "4"}, "966": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP6", "path": "4"}, "967": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "GAS", "path": "4"}, "968": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "STATICCALL", "path": "4"}, "969": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "ISZERO", "path": "4"}, "970": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP1", "path": "4"}, "971": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "ISZERO", "path": "4"}, "972": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH2", "path": "4", "value": "0x3D9"}, "975": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "JUMPI", "path": "4"}, "976": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "RETURNDATASIZE", "path": "4"}, "977": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x0"}, "979": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP1", "path": "4"}, "980": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "RETURNDATACOPY", "path": "4"}, "981": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "RETURNDATASIZE", "path": "4"}, "982": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x0"}, "984": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "REVERT", "path": "4"}, "985": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "JUMPDEST", "path": "4"}, "986": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "POP", "path": "4"}, "987": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "POP", "path": "4"}, "988": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "POP", "path": "4"}, "989": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x40"}, "991": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "MLOAD", "path": "4"}, "992": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "RETURNDATASIZE", "path": "4"}, "993": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x1F"}, "995": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "NOT", "path": "4"}, "996": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x1F"}, "998": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP3", "path": "4"}, "999": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "ADD", "path": "4"}, "1000": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "AND", "path": "4"}, "1001": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP3", "path": "4"}, "1002": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "ADD", "path": "4"}, "1003": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP1", "path": "4"}, "1004": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH1", "path": "4", "value": "0x40"}, "1006": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "MSTORE", "path": "4"}, "1007": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "POP", "path": "4"}, "1008": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "DUP2", "path": "4"}, "1009": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "ADD", "path": "4"}, "1010": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "SWAP1", "path": "4"}, "1011": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH2", "path": "4", "value": "0x3FC"}, "1014": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "SWAP2", "path": "4"}, "1015": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "SWAP1", "path": "4"}, "1016": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "PUSH2", "path": "4", "value": "0xD1E"}, "1019": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3465, 3497], "op": "JUMP", "path": "4"}, "1020": {"fn": "SourceDomainSideBridge.transfer", "offset": [3465, 3497], "op": "JUMPDEST", "path": "4"}, "1021": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3535], "op": "PUSH1", "path": "4", "statement": 11, "value": "0x0"}, "1023": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "DUP2", "path": "4"}, "1024": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "DUP2", "path": "4"}, "1025": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "MSTORE", "path": "4"}, "1026": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "PUSH1", "path": "4", "value": "0x20"}, "1028": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "DUP2", "path": "4"}, "1029": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "SWAP1", "path": "4"}, "1030": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "MSTORE", "path": "4"}, "1031": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "PUSH1", "path": "4", "value": "0x40"}, "1033": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "SWAP1", "path": "4"}, "1034": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "DUP2", "path": "4"}, "1035": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "SWAP1", "path": "4"}, "1036": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3553], "op": "KECCAK256", "path": "4"}, "1037": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3560], "op": "DUP1", "path": "4"}, "1038": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3560], "op": "SLOAD", "path": "4"}, "1039": {"op": "PUSH1", "value": "0xFF"}, "1041": {"op": "NOT"}, "1042": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3560], "op": "AND", "path": "4"}, "1043": {"fn": "SourceDomainSideBridge.transfer", "offset": [3556, 3560], "op": "PUSH1", "path": "4", "value": "0x1"}, "1045": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3560], "op": "OR", "path": "4"}, "1046": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3560], "op": "SWAP1", "path": "4"}, "1047": {"fn": "SourceDomainSideBridge.transfer", "offset": [3516, 3560], "op": "SSTORE", "path": "4"}, "1048": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "MLOAD", "path": "4", "statement": 12}, "1049": {"fn": "SourceDomainSideBridge.transfer", "offset": [3438, 3497], "op": "SWAP1", "path": "4"}, "1050": {"fn": "SourceDomainSideBridge.transfer", "offset": [3438, 3497], "op": "SWAP2", "path": "4"}, "1051": {"op": "POP"}, "1052": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "PUSH32", "path": "4", "value": "0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89"}, "1085": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "SWAP1", "path": "4"}, "1086": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "PUSH2", "path": "4", "value": "0x448"}, "1089": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "SWAP1", "path": "4"}, "1090": {"fn": "SourceDomainSideBridge.transfer", "offset": [3588, 3600], "op": "DUP5", "path": "4"}, "1091": {"fn": "SourceDomainSideBridge.transfer", "offset": [3588, 3600], "op": "SWAP1", "path": "4"}, "1092": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "PUSH2", "path": "4", "value": "0xC8C"}, "1095": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3576, 3601], "op": "JUMP", "path": "4"}, "1096": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "JUMPDEST", "path": "4"}, "1097": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "PUSH1", "path": "4", "value": "0x40"}, "1099": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "MLOAD", "path": "4"}, "1100": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "DUP1", "path": "4"}, "1101": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "SWAP2", "path": "4"}, "1102": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "SUB", "path": "4"}, "1103": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "SWAP1", "path": "4"}, "1104": {"fn": "SourceDomainSideBridge.transfer", "offset": [3576, 3601], "op": "LOG1", "path": "4"}, "1105": {"fn": "SourceDomainSideBridge.transfer", "offset": [3627, 3643], "op": "SWAP9", "path": "4", "statement": 13}, "1106": {"fn": "SourceDomainSideBridge.transfer", "offset": [2418, 3650], "op": "SWAP8", "path": "4"}, "1107": {"op": "POP"}, "1108": {"op": "POP"}, "1109": {"op": "POP"}, "1110": {"op": "POP"}, "1111": {"op": "POP"}, "1112": {"op": "POP"}, "1113": {"op": "POP"}, "1114": {"op": "POP"}, "1115": {"fn": "SourceDomainSideBridge.transfer", "jump": "o", "offset": [2418, 3650], "op": "JUMP", "path": "4"}, "1116": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5468, 5610], "op": "JUMPDEST", "path": "4"}, "1117": {"offset": [1682, 1707], "op": "PUSH1", "path": "4", "value": "0x3"}, "1119": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1682, 1707], "op": "SLOAD", "path": "4"}, "1120": {"op": "PUSH1", "value": "0x1"}, "1122": {"op": "PUSH1", "value": "0x1"}, "1124": {"op": "PUSH1", "value": "0xA0"}, "1126": {"op": "SHL"}, "1127": {"op": "SUB"}, "1128": {"offset": [1682, 1707], "op": "AND", "path": "4"}, "1129": {"offset": [1739, 1749], "op": "CALLER", "path": "4"}, "1130": {"offset": [1739, 1787], "op": "DUP2", "path": "4"}, "1131": {"branch": 26, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1739, 1787], "op": "EQ", "path": "4"}, "1132": {"offset": [1739, 1862], "op": "DUP1", "path": "4"}, "1133": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1739, 1862], "op": "ISZERO", "path": "4"}, "1134": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1739, 1862], "op": "PUSH2", "path": "4", "value": "0x4FE"}, "1137": {"branch": 26, "offset": [1739, 1862], "op": "JUMPI", "path": "4"}, "1138": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1739, 1862], "op": "POP", "path": "4"}, "1139": {"offset": [1835, 1862], "op": "PUSH1", "path": "4", "value": "0x4"}, "1141": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1835, 1862], "op": "PUSH1", "path": "4", "value": "0x0"}, "1143": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1835, 1862], "op": "SWAP1", "path": "4"}, "1144": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1835, 1862], "op": "SLOAD", "path": "4"}, "1145": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1835, 1862], "op": "SWAP1", "path": "4"}, "1146": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1835, 1862], "op": "PUSH2", "path": "4", "value": "0x100"}, "1149": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1835, 1862], "op": "EXP", "path": "4"}, "1150": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1835, 1862], "op": "SWAP1", "path": "4"}, "1151": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1835, 1862], "op": "DIV", "path": "4"}, "1152": {"op": "PUSH1", "value": "0x1"}, "1154": {"op": "PUSH1", "value": "0x1"}, "1156": {"op": "PUSH1", "value": "0xA0"}, "1158": {"op": "SHL"}, "1159": {"op": "SUB"}, "1160": {"offset": [1835, 1862], "op": "AND", "path": "4"}, "1161": {"op": "PUSH1", "value": "0x1"}, "1163": {"op": "PUSH1", "value": "0x1"}, "1165": {"op": "PUSH1", "value": "0xA0"}, "1167": {"op": "SHL"}, "1168": {"op": "SUB"}, "1169": {"offset": [1803, 1862], "op": "AND", "path": "4"}, "1170": {"offset": [1803, 1808], "op": "DUP2", "path": "4"}, "1171": {"op": "PUSH1", "value": "0x1"}, "1173": {"op": "PUSH1", "value": "0x1"}, "1175": {"op": "PUSH1", "value": "0xA0"}, "1177": {"op": "SHL"}, "1178": {"op": "SUB"}, "1179": {"offset": [1803, 1829], "op": "AND", "path": "4"}, "1180": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1829], "op": "PUSH4", "path": "4", "value": "0x6E296E45"}, "1185": {"offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x40"}, "1187": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "MLOAD", "path": "4"}, "1188": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP2", "path": "4"}, "1189": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH4", "path": "4", "value": "0xFFFFFFFF"}, "1194": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "AND", "path": "4"}, "1195": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0xE0"}, "1197": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "SHL", "path": "4"}, "1198": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP2", "path": "4"}, "1199": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "MSTORE", "path": "4"}, "1200": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x4"}, "1202": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "ADD", "path": "4"}, "1203": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x20"}, "1205": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x40"}, "1207": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "MLOAD", "path": "4"}, "1208": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP1", "path": "4"}, "1209": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP4", "path": "4"}, "1210": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "SUB", "path": "4"}, "1211": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP2", "path": "4"}, "1212": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP7", "path": "4"}, "1213": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "GAS", "path": "4"}, "1214": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "STATICCALL", "path": "4"}, "1215": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "ISZERO", "path": "4"}, "1216": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP1", "path": "4"}, "1217": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "ISZERO", "path": "4"}, "1218": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH2", "path": "4", "value": "0x4CF"}, "1221": {"offset": [1803, 1831], "op": "JUMPI", "path": "4"}, "1222": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "RETURNDATASIZE", "path": "4"}, "1223": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x0"}, "1225": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP1", "path": "4"}, "1226": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "RETURNDATACOPY", "path": "4"}, "1227": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "RETURNDATASIZE", "path": "4"}, "1228": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x0"}, "1230": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "REVERT", "path": "4"}, "1231": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "JUMPDEST", "path": "4"}, "1232": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "POP", "path": "4"}, "1233": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "POP", "path": "4"}, "1234": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "POP", "path": "4"}, "1235": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "POP", "path": "4"}, "1236": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x40"}, "1238": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "MLOAD", "path": "4"}, "1239": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "RETURNDATASIZE", "path": "4"}, "1240": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x1F"}, "1242": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "NOT", "path": "4"}, "1243": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x1F"}, "1245": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP3", "path": "4"}, "1246": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "ADD", "path": "4"}, "1247": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "AND", "path": "4"}, "1248": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP3", "path": "4"}, "1249": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "ADD", "path": "4"}, "1250": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP1", "path": "4"}, "1251": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH1", "path": "4", "value": "0x40"}, "1253": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "MSTORE", "path": "4"}, "1254": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "POP", "path": "4"}, "1255": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "DUP2", "path": "4"}, "1256": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "ADD", "path": "4"}, "1257": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "SWAP1", "path": "4"}, "1258": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH2", "path": "4", "value": "0x4F3"}, "1261": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "SWAP2", "path": "4"}, "1262": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "SWAP1", "path": "4"}, "1263": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "PUSH2", "path": "4", "value": "0xD37"}, "1266": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [1803, 1831], "op": "JUMP", "path": "4"}, "1267": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1831], "op": "JUMPDEST", "path": "4"}, "1268": {"op": "PUSH1", "value": "0x1"}, "1270": {"op": "PUSH1", "value": "0x1"}, "1272": {"op": "PUSH1", "value": "0xA0"}, "1274": {"op": "SHL"}, "1275": {"op": "SUB"}, "1276": {"offset": [1803, 1862], "op": "AND", "path": "4"}, "1277": {"branch": 27, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1803, 1862], "op": "EQ", "path": "4"}, "1278": {"offset": [1739, 1862], "op": "JUMPDEST", "path": "4"}, "1279": {"offset": [1718, 1872], "op": "PUSH2", "path": "4", "value": "0x507"}, "1282": {"branch": 27, "offset": [1718, 1872], "op": "JUMPI", "path": "4"}, "1283": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1718, 1872], "op": "PUSH1", "path": "4", "value": "0x0"}, "1285": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1718, 1872], "op": "DUP1", "path": "4"}, "1286": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1718, 1872], "op": "REVERT", "path": "4"}, "1287": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1718, 1872], "op": "JUMPDEST", "path": "4"}, "1288": {"op": "POP"}, "1289": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "PUSH1", "path": "4", "statement": 14, "value": "0x0"}, "1291": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "SWAP1", "path": "4"}, "1292": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "DUP2", "path": "4"}, "1293": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "MSTORE", "path": "4"}, "1294": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5599, 5603], "op": "PUSH1", "path": "4", "value": "0x1"}, "1296": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "PUSH1", "path": "4", "value": "0x20"}, "1298": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "DUP2", "path": "4"}, "1299": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "SWAP1", "path": "4"}, "1300": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "MSTORE", "path": "4"}, "1301": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "PUSH1", "path": "4", "value": "0x40"}, "1303": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "SWAP1", "path": "4"}, "1304": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "SWAP2", "path": "4"}, "1305": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5596], "op": "KECCAK256", "path": "4"}, "1306": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5603], "op": "DUP1", "path": "4"}, "1307": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5603], "op": "SLOAD", "path": "4"}, "1308": {"op": "PUSH1", "value": "0xFF"}, "1310": {"op": "NOT"}, "1311": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5603], "op": "AND", "path": "4"}, "1312": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5603], "op": "SWAP1", "path": "4"}, "1313": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5603], "op": "SWAP2", "path": "4"}, "1314": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5603], "op": "OR", "path": "4"}, "1315": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5603], "op": "SWAP1", "path": "4"}, "1316": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5560, 5603], "op": "SSTORE", "path": "4"}, "1317": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "o", "offset": [5468, 5610], "op": "JUMP", "path": "4"}, "1318": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "JUMPDEST", "path": "4"}, "1319": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3870, 3905], "op": "PUSH1", "path": "4", "value": "0x0"}, "1321": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3957], "op": "PUSH2", "path": "4", "value": "0x531"}, "1324": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3956], "op": "DUP4", "path": "4"}, "1325": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3944], "op": "PUSH2", "path": "4", "value": "0x814"}, "1328": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3908, 3957], "op": "JUMP", "path": "4"}, "1329": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3957], "op": "JUMPDEST", "path": "4"}, "1330": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "PUSH1", "path": "4", "statement": 15, "value": "0x0"}, "1332": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "DUP2", "path": "4"}, "1333": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "DUP2", "path": "4"}, "1334": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "MSTORE", "path": "4"}, "1335": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 3990], "op": "PUSH1", "path": "4", "value": "0x1"}, "1337": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "PUSH1", "path": "4", "value": "0x20"}, "1339": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "MSTORE", "path": "4"}, "1340": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "PUSH1", "path": "4", "value": "0x40"}, "1342": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "SWAP1", "path": "4"}, "1343": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "KECCAK256", "path": "4"}, "1344": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "SLOAD", "path": "4"}, "1345": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3870, 3957], "op": "SWAP1", "path": "4"}, "1346": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3870, 3957], "op": "SWAP2", "path": "4"}, "1347": {"op": "POP"}, "1348": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "PUSH1", "path": "4", "value": "0xFF"}, "1350": {"branch": 28, "fn": "SourceDomainSideBridge.processClaims", "offset": [3975, 4019], "op": "AND", "path": "4"}, "1351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "PUSH2", "path": "4", "value": "0x592"}, "1354": {"branch": 28, "fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "JUMPI", "path": "4"}, "1355": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "PUSH1", "path": "4", "value": "0x40"}, "1357": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "MLOAD", "path": "4"}, "1358": {"op": "PUSH3", "value": "0x461BCD"}, "1362": {"op": "PUSH1", "value": "0xE5"}, "1364": {"op": "SHL"}, "1365": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "DUP2", "path": "4"}, "1366": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "MSTORE", "path": "4"}, "1367": {"op": "PUSH1", "value": "0x20"}, "1369": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "PUSH1", "path": "4", "value": "0x4"}, "1371": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "DUP3", "path": "4"}, "1372": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "ADD", "path": "4"}, "1373": {"op": "MSTORE"}, "1374": {"op": "PUSH1", "value": "0x19"}, "1376": {"op": "PUSH1", "value": "0x24"}, "1378": {"op": "DUP3"}, "1379": {"op": "ADD"}, "1380": {"op": "MSTORE"}, "1381": {"op": "PUSH32", "value": "0x496E76616C6964652052657761726444617461206C6973742E00000000000000"}, "1414": {"op": "PUSH1", "value": "0x44"}, "1416": {"op": "DUP3"}, "1417": {"op": "ADD"}, "1418": {"op": "MSTORE"}, "1419": {"op": "PUSH1", "value": "0x64"}, "1421": {"op": "ADD"}, "1422": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "PUSH2", "path": "4", "value": "0x1D2"}, "1425": {"op": "JUMP"}, "1426": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3967, 4049], "op": "JUMPDEST", "path": "4"}, "1427": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4059, 4083], "op": "PUSH1", "path": "4", "statement": 16, "value": "0x2"}, "1429": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4059, 4113], "op": "DUP2", "path": "4"}, "1430": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4059, 4113], "op": "SWAP1", "path": "4"}, "1431": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4059, 4113], "op": "SSTORE", "path": "4"}, "1432": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4127, 4133], "op": "PUSH1", "path": "4", "value": "0x0"}, "1434": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4123, 4838], "op": "JUMPDEST", "path": "4"}, "1435": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4143, 4154], "op": "DUP4", "path": "4"}, "1436": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4143, 4161], "op": "MLOAD", "path": "4"}, "1437": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4139, 4140], "op": "DUP2", "path": "4"}, "1438": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4139, 4161], "op": "LT", "path": "4"}, "1439": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4123, 4838], "op": "ISZERO", "path": "4"}, "1440": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4123, 4838], "op": "PUSH2", "path": "4", "value": "0x80E"}, "1443": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4123, 4838], "op": "JUMPI", "path": "4"}, "1444": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4204], "op": "PUSH1", "path": "4", "value": "0x0"}, "1446": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "DUP1", "path": "4"}, "1447": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4216], "op": "DUP6", "path": "4"}, "1448": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4217, 4218], "op": "DUP4", "path": "4"}, "1449": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "DUP2", "path": "4"}, "1450": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "MLOAD", "path": "4"}, "1451": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "DUP2", "path": "4"}, "1452": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "LT", "path": "4"}, "1453": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "PUSH2", "path": "4", "value": "0x5B8"}, "1456": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "JUMPI", "path": "4"}, "1457": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "PUSH2", "path": "4", "value": "0x5B8"}, "1460": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "PUSH2", "path": "4", "value": "0xD54"}, "1463": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4205, 4219], "op": "JUMP", "path": "4"}, "1464": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "JUMPDEST", "path": "4"}, "1465": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "PUSH1", "path": "4", "value": "0x20"}, "1467": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "SWAP1", "path": "4"}, "1468": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "DUP2", "path": "4"}, "1469": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "MUL", "path": "4"}, "1470": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "SWAP2", "path": "4"}, "1471": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "SWAP1", "path": "4"}, "1472": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "SWAP2", "path": "4"}, "1473": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "ADD", "path": "4"}, "1474": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "DUP2", "path": "4"}, "1475": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "ADD", "path": "4"}, "1476": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4219], "op": "MLOAD", "path": "4"}, "1477": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4236], "op": "MLOAD", "path": "4"}, "1478": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "DUP3", "path": "4"}, "1479": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "MSTORE", "path": "4"}, "1480": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "DUP2", "path": "4"}, "1481": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "ADD", "path": "4"}, "1482": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "SWAP2", "path": "4"}, "1483": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "SWAP1", "path": "4"}, "1484": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "SWAP2", "path": "4"}, "1485": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "MSTORE", "path": "4"}, "1486": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "PUSH1", "path": "4", "value": "0x40"}, "1488": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "ADD", "path": "4"}, "1489": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4205, 4236], "op": "PUSH1", "path": "4", "value": "0x0"}, "1491": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "KECCAK256", "path": "4"}, "1492": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "SLOAD", "path": "4"}, "1493": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "PUSH1", "path": "4", "value": "0xFF"}, "1495": {"branch": 29, "fn": "SourceDomainSideBridge.processClaims", "offset": [4185, 4237], "op": "AND", "path": "4"}, "1496": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4182, 4828], "op": "ISZERO", "path": "4"}, "1497": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4182, 4828], "op": "PUSH2", "path": "4", "value": "0x7FC"}, "1500": {"branch": 29, "fn": "SourceDomainSideBridge.processClaims", "offset": [4182, 4828], "op": "JUMPI", "path": "4"}, "1501": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4256, 4268], "op": "PUSH1", "path": "4", "value": "0x0"}, "1503": {"offset": [476, 518], "op": "DUP1", "path": "4"}, "1504": {"op": "PUSH1", "value": "0x1"}, "1506": {"op": "PUSH1", "value": "0x1"}, "1508": {"op": "PUSH1", "value": "0xA0"}, "1510": {"op": "SHL"}, "1511": {"op": "SUB"}, "1512": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4333], "op": "AND", "path": "4"}, "1513": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4300], "op": "DUP6", "path": "4"}, "1514": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4301, 4302], "op": "DUP4", "path": "4"}, "1515": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "DUP2", "path": "4"}, "1516": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "MLOAD", "path": "4"}, "1517": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "DUP2", "path": "4"}, "1518": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "LT", "path": "4"}, "1519": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "PUSH2", "path": "4", "value": "0x5FA"}, "1522": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "JUMPI", "path": "4"}, "1523": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "PUSH2", "path": "4", "value": "0x5FA"}, "1526": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "PUSH2", "path": "4", "value": "0xD54"}, "1529": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4289, 4303], "op": "JUMP", "path": "4"}, "1530": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "JUMPDEST", "path": "4"}, "1531": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "PUSH1", "path": "4", "value": "0x20"}, "1533": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "MUL", "path": "4"}, "1534": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "PUSH1", "path": "4", "value": "0x20"}, "1536": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "ADD", "path": "4"}, "1537": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "ADD", "path": "4"}, "1538": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4303], "op": "MLOAD", "path": "4"}, "1539": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4316], "op": "PUSH1", "path": "4", "value": "0x20"}, "1541": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4316], "op": "ADD", "path": "4"}, "1542": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4316], "op": "MLOAD", "path": "4"}, "1543": {"op": "PUSH1", "value": "0x1"}, "1545": {"op": "PUSH1", "value": "0x1"}, "1547": {"op": "PUSH1", "value": "0xA0"}, "1549": {"op": "SHL"}, "1550": {"op": "SUB"}, "1551": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4333], "op": "AND", "path": "4"}, "1552": {"branch": 30, "fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4333], "op": "SUB", "path": "4"}, "1553": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4286, 4739], "op": "PUSH2", "path": "4", "value": "0x6AC"}, "1556": {"branch": 30, "fn": "SourceDomainSideBridge.processClaims", "offset": [4286, 4739], "op": "JUMPI", "path": "4"}, "1557": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4357, 4365], "op": "PUSH1", "path": "4", "value": "0x0"}, "1559": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4390], "op": "DUP6", "path": "4"}, "1560": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4391, 4392], "op": "DUP4", "path": "4"}, "1561": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "DUP2", "path": "4"}, "1562": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "MLOAD", "path": "4"}, "1563": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "DUP2", "path": "4"}, "1564": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "LT", "path": "4"}, "1565": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "PUSH2", "path": "4", "value": "0x628"}, "1568": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "JUMPI", "path": "4"}, "1569": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "PUSH2", "path": "4", "value": "0x628"}, "1572": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "PUSH2", "path": "4", "value": "0xD54"}, "1575": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4379, 4393], "op": "JUMP", "path": "4"}, "1576": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "JUMPDEST", "path": "4"}, "1577": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "PUSH1", "path": "4", "value": "0x20"}, "1579": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "MUL", "path": "4"}, "1580": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "PUSH1", "path": "4", "value": "0x20"}, "1582": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "ADD", "path": "4"}, "1583": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "ADD", "path": "4"}, "1584": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4393], "op": "MLOAD", "path": "4"}, "1585": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4401], "op": "PUSH1", "path": "4", "value": "0x40"}, "1587": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4401], "op": "ADD", "path": "4"}, "1588": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4379, 4401], "op": "MLOAD", "path": "4"}, "1589": {"op": "PUSH1", "value": "0x1"}, "1591": {"op": "PUSH1", "value": "0x1"}, "1593": {"op": "PUSH1", "value": "0xA0"}, "1595": {"op": "SHL"}, "1596": {"op": "SUB"}, "1597": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4407], "op": "AND", "path": "4"}, "1598": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4426], "op": "DUP7", "path": "4"}, "1599": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4427, 4428], "op": "DUP5", "path": "4"}, "1600": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "DUP2", "path": "4"}, "1601": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "MLOAD", "path": "4"}, "1602": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "DUP2", "path": "4"}, "1603": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "LT", "path": "4"}, "1604": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "PUSH2", "path": "4", "value": "0x64F"}, "1607": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "JUMPI", "path": "4"}, "1608": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "PUSH2", "path": "4", "value": "0x64F"}, "1611": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "PUSH2", "path": "4", "value": "0xD54"}, "1614": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4415, 4429], "op": "JUMP", "path": "4"}, "1615": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "JUMPDEST", "path": "4"}, "1616": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "PUSH1", "path": "4", "value": "0x20"}, "1618": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "MUL", "path": "4"}, "1619": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "PUSH1", "path": "4", "value": "0x20"}, "1621": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "ADD", "path": "4"}, "1622": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "ADD", "path": "4"}, "1623": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4429], "op": "MLOAD", "path": "4"}, "1624": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4433], "op": "PUSH1", "path": "4", "value": "0x60"}, "1626": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4433], "op": "ADD", "path": "4"}, "1627": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4415, 4433], "op": "MLOAD", "path": "4"}, "1628": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x40"}, "1630": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "MLOAD", "path": "4"}, "1631": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x0"}, "1633": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x40"}, "1635": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "MLOAD", "path": "4"}, "1636": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP1", "path": "4"}, "1637": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP4", "path": "4"}, "1638": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "SUB", "path": "4"}, "1639": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP2", "path": "4"}, "1640": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP6", "path": "4"}, "1641": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP8", "path": "4"}, "1642": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "GAS", "path": "4"}, "1643": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "CALL", "path": "4"}, "1644": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "SWAP3", "path": "4"}, "1645": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "POP", "path": "4"}, "1646": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "POP", "path": "4"}, "1647": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "POP", "path": "4"}, "1648": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "RETURNDATASIZE", "path": "4"}, "1649": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP1", "path": "4"}, "1650": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x0"}, "1652": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP2", "path": "4"}, "1653": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "EQ", "path": "4"}, "1654": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH2", "path": "4", "value": "0x69B"}, "1657": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "JUMPI", "path": "4"}, "1658": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x40"}, "1660": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "MLOAD", "path": "4"}, "1661": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "SWAP2", "path": "4"}, "1662": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "POP", "path": "4"}, "1663": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x1F"}, "1665": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "NOT", "path": "4"}, "1666": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x3F"}, "1668": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "RETURNDATASIZE", "path": "4"}, "1669": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "ADD", "path": "4"}, "1670": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "AND", "path": "4"}, "1671": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP3", "path": "4"}, "1672": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "ADD", "path": "4"}, "1673": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x40"}, "1675": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "MSTORE", "path": "4"}, "1676": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "RETURNDATASIZE", "path": "4"}, "1677": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP3", "path": "4"}, "1678": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "MSTORE", "path": "4"}, "1679": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "RETURNDATASIZE", "path": "4"}, "1680": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x0"}, "1682": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x20"}, "1684": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "DUP5", "path": "4"}, "1685": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "ADD", "path": "4"}, "1686": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "RETURNDATACOPY", "path": "4"}, "1687": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH2", "path": "4", "value": "0x6A0"}, "1690": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "JUMP", "path": "4"}, "1691": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "JUMPDEST", "path": "4"}, "1692": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "PUSH1", "path": "4", "value": "0x60"}, "1694": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "SWAP2", "path": "4"}, "1695": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "POP", "path": "4"}, "1696": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4371, 4438], "op": "JUMPDEST", "path": "4"}, "1697": {"op": "POP"}, "1698": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4356, 4438], "op": "SWAP1", "path": "4"}, "1699": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4356, 4438], "op": "SWAP3", "path": "4"}, "1700": {"op": "POP"}, "1701": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4286, 4739], "op": "PUSH2", "path": "4", "value": "0x799"}, "1704": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4286, 4739], "op": "SWAP2", "path": "4"}, "1705": {"op": "POP"}, "1706": {"op": "POP"}, "1707": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4286, 4739], "op": "JUMP", "path": "4"}, "1708": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4286, 4739], "op": "JUMPDEST", "path": "4"}, "1709": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4518, 4529], "op": "PUSH1", "path": "4", "value": "0x0"}, "1711": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4549], "op": "DUP6", "path": "4"}, "1712": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4550, 4551], "op": "DUP4", "path": "4"}, "1713": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "DUP2", "path": "4"}, "1714": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "MLOAD", "path": "4"}, "1715": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "DUP2", "path": "4"}, "1716": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "LT", "path": "4"}, "1717": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "PUSH2", "path": "4", "value": "0x6C0"}, "1720": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "JUMPI", "path": "4"}, "1721": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "PUSH2", "path": "4", "value": "0x6C0"}, "1724": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "PUSH2", "path": "4", "value": "0xD54"}, "1727": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4538, 4552], "op": "JUMP", "path": "4"}, "1728": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "JUMPDEST", "path": "4"}, "1729": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "PUSH1", "path": "4", "value": "0x20"}, "1731": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "MUL", "path": "4"}, "1732": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "PUSH1", "path": "4", "value": "0x20"}, "1734": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "ADD", "path": "4"}, "1735": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "ADD", "path": "4"}, "1736": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4552], "op": "MLOAD", "path": "4"}, "1737": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4565], "op": "PUSH1", "path": "4", "value": "0x20"}, "1739": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4565], "op": "ADD", "path": "4"}, "1740": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4538, 4565], "op": "MLOAD", "path": "4"}, "1741": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4518, 4566], "op": "SWAP1", "path": "4"}, "1742": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4518, 4566], "op": "POP", "path": "4"}, "1743": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4624], "op": "DUP1", "path": "4", "statement": 17}, "1744": {"op": "PUSH1", "value": "0x1"}, "1746": {"op": "PUSH1", "value": "0x1"}, "1748": {"op": "PUSH1", "value": "0xA0"}, "1750": {"op": "SHL"}, "1751": {"op": "SUB"}, "1752": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4637], "op": "AND", "path": "4"}, "1753": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4637], "op": "PUSH4", "path": "4", "value": "0x23B872DD"}, "1758": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4646, 4650], "op": "ADDRESS", "path": "4"}, "1759": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4664], "op": "DUP9", "path": "4"}, "1760": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4665, 4666], "op": "DUP7", "path": "4"}, "1761": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "DUP2", "path": "4"}, "1762": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "MLOAD", "path": "4"}, "1763": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "DUP2", "path": "4"}, "1764": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "LT", "path": "4"}, "1765": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "PUSH2", "path": "4", "value": "0x6F0"}, "1768": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "JUMPI", "path": "4"}, "1769": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "PUSH2", "path": "4", "value": "0x6F0"}, "1772": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "PUSH2", "path": "4", "value": "0xD54"}, "1775": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4653, 4667], "op": "JUMP", "path": "4"}, "1776": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "JUMPDEST", "path": "4"}, "1777": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "PUSH1", "path": "4", "value": "0x20"}, "1779": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "MUL", "path": "4"}, "1780": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "PUSH1", "path": "4", "value": "0x20"}, "1782": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "ADD", "path": "4"}, "1783": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "ADD", "path": "4"}, "1784": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4667], "op": "MLOAD", "path": "4"}, "1785": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4675], "op": "PUSH1", "path": "4", "value": "0x40"}, "1787": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4675], "op": "ADD", "path": "4"}, "1788": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4653, 4675], "op": "MLOAD", "path": "4"}, "1789": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4712], "op": "DUP10", "path": "4"}, "1790": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4713, 4714], "op": "DUP8", "path": "4"}, "1791": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "DUP2", "path": "4"}, "1792": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "MLOAD", "path": "4"}, "1793": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "DUP2", "path": "4"}, "1794": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "LT", "path": "4"}, "1795": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "PUSH2", "path": "4", "value": "0x70E"}, "1798": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "JUMPI", "path": "4"}, "1799": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "PUSH2", "path": "4", "value": "0x70E"}, "1802": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "PUSH2", "path": "4", "value": "0xD54"}, "1805": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4701, 4715], "op": "JUMP", "path": "4"}, "1806": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "JUMPDEST", "path": "4"}, "1807": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "PUSH1", "path": "4", "value": "0x20"}, "1809": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "SWAP1", "path": "4"}, "1810": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "DUP2", "path": "4"}, "1811": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "MUL", "path": "4"}, "1812": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "SWAP2", "path": "4"}, "1813": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "SWAP1", "path": "4"}, "1814": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "SWAP2", "path": "4"}, "1815": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "ADD", "path": "4"}, "1816": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "ADD", "path": "4"}, "1817": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4715], "op": "MLOAD", "path": "4"}, "1818": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4719], "op": "PUSH1", "path": "4", "value": "0x60"}, "1820": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4719], "op": "ADD", "path": "4"}, "1821": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4701, 4719], "op": "MLOAD", "path": "4"}, "1822": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x40"}, "1824": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "MLOAD", "path": "4"}, "1825": {"op": "PUSH1", "value": "0x1"}, "1827": {"op": "PUSH1", "value": "0x1"}, "1829": {"op": "PUSH1", "value": "0xE0"}, "1831": {"op": "SHL"}, "1832": {"op": "SUB"}, "1833": {"op": "NOT"}, "1834": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0xE0"}, "1836": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP7", "path": "4"}, "1837": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "SWAP1", "path": "4"}, "1838": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "SHL", "path": "4"}, "1839": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "AND", "path": "4"}, "1840": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP2", "path": "4"}, "1841": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "MSTORE", "path": "4"}, "1842": {"op": "PUSH1", "value": "0x1"}, "1844": {"op": "PUSH1", "value": "0x1"}, "1846": {"op": "PUSH1", "value": "0xA0"}, "1848": {"op": "SHL"}, "1849": {"op": "SUB"}, "1850": {"op": "SWAP4"}, "1851": {"op": "DUP5"}, "1852": {"op": "AND"}, "1853": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x4"}, "1855": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP3", "path": "4"}, "1856": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "ADD", "path": "4"}, "1857": {"op": "MSTORE"}, "1858": {"op": "SWAP3"}, "1859": {"op": "SWAP1"}, "1860": {"op": "SWAP2"}, "1861": {"op": "AND"}, "1862": {"op": "PUSH1", "value": "0x24"}, "1864": {"op": "DUP4"}, "1865": {"op": "ADD"}, "1866": {"op": "MSTORE"}, "1867": {"op": "PUSH1", "value": "0x44"}, "1869": {"op": "DUP3"}, "1870": {"op": "ADD"}, "1871": {"op": "MSTORE"}, "1872": {"op": "PUSH1", "value": "0x64"}, "1874": {"op": "ADD"}, "1875": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x20"}, "1877": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x40"}, "1879": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "MLOAD", "path": "4"}, "1880": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP1", "path": "4"}, "1881": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP4", "path": "4"}, "1882": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "SUB", "path": "4"}, "1883": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP2", "path": "4"}, "1884": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x0"}, "1886": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP8", "path": "4"}, "1887": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "GAS", "path": "4"}, "1888": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "CALL", "path": "4"}, "1889": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "ISZERO", "path": "4"}, "1890": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP1", "path": "4"}, "1891": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "ISZERO", "path": "4"}, "1892": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH2", "path": "4", "value": "0x771"}, "1895": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "JUMPI", "path": "4"}, "1896": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "RETURNDATASIZE", "path": "4"}, "1897": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x0"}, "1899": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP1", "path": "4"}, "1900": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "RETURNDATACOPY", "path": "4"}, "1901": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "RETURNDATASIZE", "path": "4"}, "1902": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x0"}, "1904": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "REVERT", "path": "4"}, "1905": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "JUMPDEST", "path": "4"}, "1906": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "POP", "path": "4"}, "1907": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "POP", "path": "4"}, "1908": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "POP", "path": "4"}, "1909": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "POP", "path": "4"}, "1910": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x40"}, "1912": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "MLOAD", "path": "4"}, "1913": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "RETURNDATASIZE", "path": "4"}, "1914": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x1F"}, "1916": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "NOT", "path": "4"}, "1917": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x1F"}, "1919": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP3", "path": "4"}, "1920": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "ADD", "path": "4"}, "1921": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "AND", "path": "4"}, "1922": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP3", "path": "4"}, "1923": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "ADD", "path": "4"}, "1924": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP1", "path": "4"}, "1925": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH1", "path": "4", "value": "0x40"}, "1927": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "MSTORE", "path": "4"}, "1928": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "POP", "path": "4"}, "1929": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "DUP2", "path": "4"}, "1930": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "ADD", "path": "4"}, "1931": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "SWAP1", "path": "4"}, "1932": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH2", "path": "4", "value": "0x795"}, "1935": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "SWAP2", "path": "4"}, "1936": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "SWAP1", "path": "4"}, "1937": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "PUSH2", "path": "4", "value": "0xC4A"}, "1940": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4619, 4720], "op": "JUMP", "path": "4"}, "1941": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4619, 4720], "op": "JUMPDEST", "path": "4"}, "1942": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4609, 4720], "op": "SWAP2", "path": "4"}, "1943": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4609, 4720], "op": "POP", "path": "4"}, "1944": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4496, 4739], "op": "POP", "path": "4"}, "1945": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4286, 4739], "op": "JUMPDEST", "path": "4"}, "1946": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "PUSH32", "path": "4", "statement": 18, "value": "0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A"}, "1979": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4783], "op": "DUP6", "path": "4"}, "1980": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4784, 4785], "op": "DUP4", "path": "4"}, "1981": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "DUP2", "path": "4"}, "1982": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "MLOAD", "path": "4"}, "1983": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "DUP2", "path": "4"}, "1984": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "LT", "path": "4"}, "1985": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "PUSH2", "path": "4", "value": "0x7CC"}, "1988": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "JUMPI", "path": "4"}, "1989": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "PUSH2", "path": "4", "value": "0x7CC"}, "1992": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "PUSH2", "path": "4", "value": "0xD54"}, "1995": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4772, 4786], "op": "JUMP", "path": "4"}, "1996": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "JUMPDEST", "path": "4"}, "1997": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "PUSH1", "path": "4", "value": "0x20"}, "1999": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "MUL", "path": "4"}, "2000": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "PUSH1", "path": "4", "value": "0x20"}, "2002": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "ADD", "path": "4"}, "2003": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "ADD", "path": "4"}, "2004": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4786], "op": "MLOAD", "path": "4"}, "2005": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4803], "op": "PUSH1", "path": "4", "value": "0x0"}, "2007": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4803], "op": "ADD", "path": "4"}, "2008": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4772, 4803], "op": "MLOAD", "path": "4"}, "2009": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4805, 4812], "op": "DUP3", "path": "4"}, "2010": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "PUSH1", "path": "4", "value": "0x40"}, "2012": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "MLOAD", "path": "4"}, "2013": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "PUSH2", "path": "4", "value": "0x7F2"}, "2016": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "SWAP3", "path": "4"}, "2017": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "SWAP2", "path": "4"}, "2018": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "SWAP1", "path": "4"}, "2019": {"op": "SWAP2"}, "2020": {"op": "DUP3"}, "2021": {"op": "MSTORE"}, "2022": {"op": "ISZERO"}, "2023": {"op": "ISZERO"}, "2024": {"op": "PUSH1", "value": "0x20"}, "2026": {"op": "DUP3"}, "2027": {"op": "ADD"}, "2028": {"op": "MSTORE"}, "2029": {"op": "PUSH1", "value": "0x40"}, "2031": {"op": "ADD"}, "2032": {"op": "SWAP1"}, "2033": {"op": "JUMP"}, "2034": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "JUMPDEST", "path": "4"}, "2035": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "PUSH1", "path": "4", "value": "0x40"}, "2037": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "MLOAD", "path": "4"}, "2038": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "DUP1", "path": "4"}, "2039": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "SWAP2", "path": "4"}, "2040": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "SUB", "path": "4"}, "2041": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "SWAP1", "path": "4"}, "2042": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4761, 4813], "op": "LOG1", "path": "4"}, "2043": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4238, 4828], "op": "POP", "path": "4"}, "2044": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4182, 4828], "op": "JUMPDEST", "path": "4"}, "2045": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4163, 4166], "op": "DUP1", "path": "4", "statement": 19}, "2046": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4163, 4166], "op": "PUSH2", "path": "4", "value": "0x806"}, "2049": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4163, 4166], "op": "DUP2", "path": "4"}, "2050": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4163, 4166], "op": "PUSH2", "path": "4", "value": "0xC73"}, "2053": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4163, 4166], "op": "JUMP", "path": "4"}, "2054": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4163, 4166], "op": "JUMPDEST", "path": "4"}, "2055": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4163, 4166], "op": "SWAP2", "path": "4"}, "2056": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4163, 4166], "op": "POP", "path": "4"}, "2057": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4163, 4166], "op": "POP", "path": "4"}, "2058": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4123, 4838], "op": "PUSH2", "path": "4", "value": "0x59A"}, "2061": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4123, 4838], "op": "JUMP", "path": "4"}, "2062": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4123, 4838], "op": "JUMPDEST", "path": "4"}, "2063": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4123, 4838], "op": "POP", "path": "4"}, "2064": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3860, 4853], "op": "POP", "path": "4"}, "2065": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "POP", "path": "4"}, "2066": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3750, 4853], "op": "POP", "path": "4"}, "2067": {"fn": "SourceDomainSideBridge.processClaims", "jump": "o", "offset": [3750, 4853], "op": "JUMP", "path": "4"}, "2068": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4953, 5368], "op": "JUMPDEST", "path": "4"}, "2069": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5105, 5129], "op": "PUSH1", "path": "4", "value": "0x2"}, "2071": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5105, 5129], "op": "SLOAD", "path": "4"}, "2072": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5049, 5056], "op": "PUSH1", "path": "4", "value": "0x0"}, "2074": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5049, 5056], "op": "SWAP1", "path": "4"}, "2075": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5049, 5056], "op": "DUP2", "path": "4"}, "2076": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5139, 5318], "op": "JUMPDEST", "path": "4"}, "2077": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5159, 5170], "op": "DUP4", "path": "4"}, "2078": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5159, 5177], "op": "MLOAD", "path": "4"}, "2079": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5155, 5156], "op": "DUP2", "path": "4"}, "2080": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5155, 5177], "op": "LT", "path": "4"}, "2081": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5139, 5318], "op": "ISZERO", "path": "4"}, "2082": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5139, 5318], "op": "PUSH2", "path": "4", "value": "0x8F1"}, "2085": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5139, 5318], "op": "JUMPI", "path": "4"}, "2086": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "statement": 20, "value": "0x2"}, "2088": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5263, 5290], "op": "DUP3", "path": "4"}, "2089": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5302], "op": "DUP6", "path": "4"}, "2090": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5303, 5304], "op": "DUP4", "path": "4"}, "2091": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "DUP2", "path": "4"}, "2092": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "MLOAD", "path": "4"}, "2093": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "DUP2", "path": "4"}, "2094": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "LT", "path": "4"}, "2095": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "PUSH2", "path": "4", "value": "0x83A"}, "2098": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "JUMPI", "path": "4"}, "2099": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "PUSH2", "path": "4", "value": "0x83A"}, "2102": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "PUSH2", "path": "4", "value": "0xD54"}, "2105": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5291, 5305], "op": "JUMP", "path": "4"}, "2106": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "JUMPDEST", "path": "4"}, "2107": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "PUSH1", "path": "4", "value": "0x20"}, "2109": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "SWAP1", "path": "4"}, "2110": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "DUP2", "path": "4"}, "2111": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "MUL", "path": "4"}, "2112": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "SWAP2", "path": "4"}, "2113": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "SWAP1", "path": "4"}, "2114": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "SWAP2", "path": "4"}, "2115": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "ADD", "path": "4"}, "2116": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "DUP2", "path": "4"}, "2117": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "ADD", "path": "4"}, "2118": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5291, 5305], "op": "MLOAD", "path": "4"}, "2119": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "PUSH1", "path": "4", "value": "0x40"}, "2121": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "DUP1", "path": "4"}, "2122": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "MLOAD", "path": "4"}, "2123": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "DUP1", "path": "4"}, "2124": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "DUP5", "path": "4"}, "2125": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "ADD", "path": "4"}, "2126": {"op": "SWAP5"}, "2127": {"op": "SWAP1"}, "2128": {"op": "SWAP5"}, "2129": {"op": "MSTORE"}, "2130": {"op": "DUP2"}, "2131": {"op": "MLOAD"}, "2132": {"op": "DUP5"}, "2133": {"op": "DUP3"}, "2134": {"op": "ADD"}, "2135": {"op": "MSTORE"}, "2136": {"op": "SWAP2"}, "2137": {"op": "DUP2"}, "2138": {"op": "ADD"}, "2139": {"op": "MLOAD"}, "2140": {"op": "PUSH1", "value": "0x1"}, "2142": {"op": "PUSH1", "value": "0x1"}, "2144": {"op": "PUSH1", "value": "0xA0"}, "2146": {"op": "SHL"}, "2147": {"op": "SUB"}, "2148": {"op": "SWAP1"}, "2149": {"op": "DUP2"}, "2150": {"op": "AND"}, "2151": {"op": "PUSH1", "value": "0x60"}, "2153": {"op": "DUP1"}, "2154": {"op": "DUP7"}, "2155": {"op": "ADD"}, "2156": {"op": "SWAP2"}, "2157": {"op": "SWAP1"}, "2158": {"op": "SWAP2"}, "2159": {"op": "MSTORE"}, "2160": {"op": "SWAP3"}, "2161": {"op": "DUP3"}, "2162": {"op": "ADD"}, "2163": {"op": "MLOAD"}, "2164": {"op": "AND"}, "2165": {"op": "PUSH1", "value": "0x80"}, "2167": {"op": "DUP5"}, "2168": {"op": "ADD"}, "2169": {"op": "MSTORE"}, "2170": {"op": "ADD"}, "2171": {"op": "MLOAD"}, "2172": {"op": "PUSH1", "value": "0xA0"}, "2174": {"op": "DUP3"}, "2175": {"op": "ADD"}, "2176": {"op": "MSTORE"}, "2177": {"op": "PUSH1", "value": "0xC0"}, "2179": {"op": "ADD"}, "2180": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "PUSH1", "path": "4", "value": "0x40"}, "2182": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "DUP1", "path": "4"}, "2183": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "MLOAD", "path": "4"}, "2184": {"op": "PUSH1", "value": "0x1F"}, "2186": {"op": "NOT"}, "2187": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "DUP2", "path": "4"}, "2188": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "DUP5", "path": "4"}, "2189": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "SUB", "path": "4"}, "2190": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "ADD", "path": "4"}, "2191": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "DUP2", "path": "4"}, "2192": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "MSTORE", "path": "4"}, "2193": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "SWAP1", "path": "4"}, "2194": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "DUP3", "path": "4"}, "2195": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "SWAP1", "path": "4"}, "2196": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5252, 5306], "op": "MSTORE", "path": "4"}, "2197": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH2", "path": "4", "value": "0x89D"}, "2200": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "SWAP2", "path": "4"}, "2201": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH2", "path": "4", "value": "0xCE3"}, "2204": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5245, 5307], "op": "JUMP", "path": "4"}, "2205": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "JUMPDEST", "path": "4"}, "2206": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "value": "0x20"}, "2208": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "value": "0x40"}, "2210": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "MLOAD", "path": "4"}, "2211": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP1", "path": "4"}, "2212": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP4", "path": "4"}, "2213": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "SUB", "path": "4"}, "2214": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP2", "path": "4"}, "2215": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP6", "path": "4"}, "2216": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "GAS", "path": "4"}, "2217": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "STATICCALL", "path": "4"}, "2218": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "ISZERO", "path": "4"}, "2219": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP1", "path": "4"}, "2220": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "ISZERO", "path": "4"}, "2221": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH2", "path": "4", "value": "0x8BA"}, "2224": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "JUMPI", "path": "4"}, "2225": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "RETURNDATASIZE", "path": "4"}, "2226": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "value": "0x0"}, "2228": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP1", "path": "4"}, "2229": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "RETURNDATACOPY", "path": "4"}, "2230": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "RETURNDATASIZE", "path": "4"}, "2231": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "value": "0x0"}, "2233": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "REVERT", "path": "4"}, "2234": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "JUMPDEST", "path": "4"}, "2235": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "POP", "path": "4"}, "2236": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "POP", "path": "4"}, "2237": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "POP", "path": "4"}, "2238": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "value": "0x40"}, "2240": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "MLOAD", "path": "4"}, "2241": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "RETURNDATASIZE", "path": "4"}, "2242": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "value": "0x1F"}, "2244": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "NOT", "path": "4"}, "2245": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "value": "0x1F"}, "2247": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP3", "path": "4"}, "2248": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "ADD", "path": "4"}, "2249": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "AND", "path": "4"}, "2250": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP3", "path": "4"}, "2251": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "ADD", "path": "4"}, "2252": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP1", "path": "4"}, "2253": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH1", "path": "4", "value": "0x40"}, "2255": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "MSTORE", "path": "4"}, "2256": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "POP", "path": "4"}, "2257": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "DUP2", "path": "4"}, "2258": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "ADD", "path": "4"}, "2259": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "SWAP1", "path": "4"}, "2260": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH2", "path": "4", "value": "0x8DD"}, "2263": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "SWAP2", "path": "4"}, "2264": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "SWAP1", "path": "4"}, "2265": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "PUSH2", "path": "4", "value": "0xD1E"}, "2268": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5245, 5307], "op": "JUMP", "path": "4"}, "2269": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5245, 5307], "op": "JUMPDEST", "path": "4"}, "2270": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5198, 5307], "op": "SWAP2", "path": "4"}, "2271": {"op": "POP"}, "2272": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5179, 5182], "op": "DUP1", "path": "4", "statement": 21}, "2273": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5179, 5182], "op": "PUSH2", "path": "4", "value": "0x8E9"}, "2276": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5179, 5182], "op": "DUP2", "path": "4"}, "2277": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5179, 5182], "op": "PUSH2", "path": "4", "value": "0xC73"}, "2280": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5179, 5182], "op": "JUMP", "path": "4"}, "2281": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5179, 5182], "op": "JUMPDEST", "path": "4"}, "2282": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5179, 5182], "op": "SWAP2", "path": "4"}, "2283": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5179, 5182], "op": "POP", "path": "4"}, "2284": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5179, 5182], "op": "POP", "path": "4"}, "2285": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5139, 5318], "op": "PUSH2", "path": "4", "value": "0x81C"}, "2288": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5139, 5318], "op": "JUMP", "path": "4"}, "2289": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5139, 5318], "op": "JUMPDEST", "path": "4"}, "2290": {"op": "POP"}, "2291": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5334, 5361], "op": "SWAP3", "path": "4", "statement": 22}, "2292": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4953, 5368], "op": "SWAP2", "path": "4"}, "2293": {"op": "POP"}, "2294": {"op": "POP"}, "2295": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "o", "offset": [4953, 5368], "op": "JUMP", "path": "4"}, "2296": {"op": "JUMPDEST"}, "2297": {"op": "PUSH1", "value": "0x0"}, "2299": {"op": "PUSH1", "value": "0x20"}, "2301": {"op": "DUP3"}, "2302": {"op": "DUP5"}, "2303": {"op": "SUB"}, "2304": {"op": "SLT"}, "2305": {"op": "ISZERO"}, "2306": {"op": "PUSH2", "value": "0x90A"}, "2309": {"op": "JUMPI"}, "2310": {"op": "PUSH1", "value": "0x0"}, "2312": {"op": "DUP1"}, "2313": {"op": "REVERT"}, "2314": {"op": "JUMPDEST"}, "2315": {"op": "POP"}, "2316": {"op": "CALLDATALOAD"}, "2317": {"op": "SWAP2"}, "2318": {"op": "SWAP1"}, "2319": {"op": "POP"}, "2320": {"jump": "o", "op": "JUMP"}, "2321": {"op": "JUMPDEST"}, "2322": {"op": "PUSH1", "value": "0x1"}, "2324": {"op": "PUSH1", "value": "0x1"}, "2326": {"op": "PUSH1", "value": "0xA0"}, "2328": {"op": "SHL"}, "2329": {"op": "SUB"}, "2330": {"op": "DUP2"}, "2331": {"op": "AND"}, "2332": {"op": "DUP2"}, "2333": {"op": "EQ"}, "2334": {"op": "PUSH2", "value": "0x926"}, "2337": {"op": "JUMPI"}, "2338": {"op": "PUSH1", "value": "0x0"}, "2340": {"op": "DUP1"}, "2341": {"op": "REVERT"}, "2342": {"op": "JUMPDEST"}, "2343": {"op": "POP"}, "2344": {"jump": "o", "op": "JUMP"}, "2345": {"op": "JUMPDEST"}, "2346": {"op": "PUSH1", "value": "0x0"}, "2348": {"op": "DUP1"}, "2349": {"op": "PUSH1", "value": "0x0"}, "2351": {"op": "DUP1"}, "2352": {"op": "PUSH1", "value": "0x80"}, "2354": {"op": "DUP6"}, "2355": {"op": "DUP8"}, "2356": {"op": "SUB"}, "2357": {"op": "SLT"}, "2358": {"op": "ISZERO"}, "2359": {"op": "PUSH2", "value": "0x93F"}, "2362": {"op": "JUMPI"}, "2363": {"op": "PUSH1", "value": "0x0"}, "2365": {"op": "DUP1"}, "2366": {"op": "REVERT"}, "2367": {"op": "JUMPDEST"}, "2368": {"op": "DUP5"}, "2369": {"op": "CALLDATALOAD"}, "2370": {"op": "PUSH2", "value": "0x94A"}, "2373": {"op": "DUP2"}, "2374": {"op": "PUSH2", "value": "0x911"}, "2377": {"jump": "i", "op": "JUMP"}, "2378": {"op": "JUMPDEST"}, "2379": {"op": "SWAP4"}, "2380": {"op": "POP"}, "2381": {"op": "PUSH1", "value": "0x20"}, "2383": {"op": "DUP6"}, "2384": {"op": "ADD"}, "2385": {"op": "CALLDATALOAD"}, "2386": {"op": "PUSH2", "value": "0x95A"}, "2389": {"op": "DUP2"}, "2390": {"op": "PUSH2", "value": "0x911"}, "2393": {"jump": "i", "op": "JUMP"}, "2394": {"op": "JUMPDEST"}, "2395": {"op": "SWAP4"}, "2396": {"op": "SWAP7"}, "2397": {"op": "SWAP4"}, "2398": {"op": "SWAP6"}, "2399": {"op": "POP"}, "2400": {"op": "POP"}, "2401": {"op": "POP"}, "2402": {"op": "POP"}, "2403": {"op": "PUSH1", "value": "0x40"}, "2405": {"op": "DUP3"}, "2406": {"op": "ADD"}, "2407": {"op": "CALLDATALOAD"}, "2408": {"op": "SWAP2"}, "2409": {"op": "PUSH1", "value": "0x60"}, "2411": {"op": "ADD"}, "2412": {"op": "CALLDATALOAD"}, "2413": {"op": "SWAP1"}, "2414": {"jump": "o", "op": "JUMP"}, "2415": {"op": "JUMPDEST"}, "2416": {"op": "PUSH4", "value": "0x4E487B71"}, "2421": {"op": "PUSH1", "value": "0xE0"}, "2423": {"op": "SHL"}, "2424": {"op": "PUSH1", "value": "0x0"}, "2426": {"op": "MSTORE"}, "2427": {"op": "PUSH1", "value": "0x41"}, "2429": {"op": "PUSH1", "value": "0x4"}, "2431": {"op": "MSTORE"}, "2432": {"op": "PUSH1", "value": "0x24"}, "2434": {"op": "PUSH1", "value": "0x0"}, "2436": {"op": "REVERT"}, "2437": {"op": "JUMPDEST"}, "2438": {"op": "PUSH1", "value": "0x40"}, "2440": {"op": "MLOAD"}, "2441": {"op": "PUSH1", "value": "0xE0"}, "2443": {"op": "DUP2"}, "2444": {"op": "ADD"}, "2445": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2454": {"op": "DUP2"}, "2455": {"op": "GT"}, "2456": {"op": "DUP3"}, "2457": {"op": "DUP3"}, "2458": {"op": "LT"}, "2459": {"op": "OR"}, "2460": {"op": "ISZERO"}, "2461": {"op": "PUSH2", "value": "0x9A8"}, "2464": {"op": "JUMPI"}, "2465": {"op": "PUSH2", "value": "0x9A8"}, "2468": {"op": "PUSH2", "value": "0x96F"}, "2471": {"jump": "i", "op": "JUMP"}, "2472": {"op": "JUMPDEST"}, "2473": {"op": "PUSH1", "value": "0x40"}, "2475": {"op": "MSTORE"}, "2476": {"op": "SWAP1"}, "2477": {"jump": "o", "op": "JUMP"}, "2478": {"op": "JUMPDEST"}, "2479": {"op": "PUSH1", "value": "0x40"}, "2481": {"op": "MLOAD"}, "2482": {"op": "PUSH1", "value": "0x80"}, "2484": {"op": "DUP2"}, "2485": {"op": "ADD"}, "2486": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2495": {"op": "DUP2"}, "2496": {"op": "GT"}, "2497": {"op": "DUP3"}, "2498": {"op": "DUP3"}, "2499": {"op": "LT"}, "2500": {"op": "OR"}, "2501": {"op": "ISZERO"}, "2502": {"op": "PUSH2", "value": "0x9A8"}, "2505": {"op": "JUMPI"}, "2506": {"op": "PUSH2", "value": "0x9A8"}, "2509": {"op": "PUSH2", "value": "0x96F"}, "2512": {"jump": "i", "op": "JUMP"}, "2513": {"op": "JUMPDEST"}, "2514": {"op": "PUSH1", "value": "0x40"}, "2516": {"op": "MLOAD"}, "2517": {"op": "PUSH1", "value": "0x1F"}, "2519": {"op": "DUP3"}, "2520": {"op": "ADD"}, "2521": {"op": "PUSH1", "value": "0x1F"}, "2523": {"op": "NOT"}, "2524": {"op": "AND"}, "2525": {"op": "DUP2"}, "2526": {"op": "ADD"}, "2527": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2536": {"op": "DUP2"}, "2537": {"op": "GT"}, "2538": {"op": "DUP3"}, "2539": {"op": "DUP3"}, "2540": {"op": "LT"}, "2541": {"op": "OR"}, "2542": {"op": "ISZERO"}, "2543": {"op": "PUSH2", "value": "0x9FA"}, "2546": {"op": "JUMPI"}, "2547": {"op": "PUSH2", "value": "0x9FA"}, "2550": {"op": "PUSH2", "value": "0x96F"}, "2553": {"jump": "i", "op": "JUMP"}, "2554": {"op": "JUMPDEST"}, "2555": {"op": "PUSH1", "value": "0x40"}, "2557": {"op": "MSTORE"}, "2558": {"op": "SWAP2"}, "2559": {"op": "SWAP1"}, "2560": {"op": "POP"}, "2561": {"jump": "o", "op": "JUMP"}, "2562": {"op": "JUMPDEST"}, "2563": {"op": "PUSH1", "value": "0x0"}, "2565": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2574": {"op": "DUP3"}, "2575": {"op": "GT"}, "2576": {"op": "ISZERO"}, "2577": {"op": "PUSH2", "value": "0xA1C"}, "2580": {"op": "JUMPI"}, "2581": {"op": "PUSH2", "value": "0xA1C"}, "2584": {"op": "PUSH2", "value": "0x96F"}, "2587": {"jump": "i", "op": "JUMP"}, "2588": {"op": "JUMPDEST"}, "2589": {"op": "POP"}, "2590": {"op": "PUSH1", "value": "0x5"}, "2592": {"op": "SHL"}, "2593": {"op": "PUSH1", "value": "0x20"}, "2595": {"op": "ADD"}, "2596": {"op": "SWAP1"}, "2597": {"jump": "o", "op": "JUMP"}, "2598": {"op": "JUMPDEST"}, "2599": {"op": "PUSH1", "value": "0x0"}, "2601": {"op": "DUP3"}, "2602": {"op": "PUSH1", "value": "0x1F"}, "2604": {"op": "DUP4"}, "2605": {"op": "ADD"}, "2606": {"op": "SLT"}, "2607": {"op": "PUSH2", "value": "0xA37"}, "2610": {"op": "JUMPI"}, "2611": {"op": "PUSH1", "value": "0x0"}, "2613": {"op": "DUP1"}, "2614": {"op": "REVERT"}, "2615": {"op": "JUMPDEST"}, "2616": {"op": "DUP2"}, "2617": {"op": "CALLDATALOAD"}, "2618": {"op": "PUSH1", "value": "0x20"}, "2620": {"op": "PUSH2", "value": "0xA4C"}, "2623": {"op": "PUSH2", "value": "0xA47"}, "2626": {"op": "DUP4"}, "2627": {"op": "PUSH2", "value": "0xA02"}, "2630": {"jump": "i", "op": "JUMP"}, "2631": {"op": "JUMPDEST"}, "2632": {"op": "PUSH2", "value": "0x9D1"}, "2635": {"jump": "i", "op": "JUMP"}, "2636": {"op": "JUMPDEST"}, "2637": {"op": "DUP3"}, "2638": {"op": "DUP2"}, "2639": {"op": "MSTORE"}, "2640": {"op": "PUSH1", "value": "0xE0"}, "2642": {"op": "SWAP3"}, "2643": {"op": "DUP4"}, "2644": {"op": "MUL"}, "2645": {"op": "DUP6"}, "2646": {"op": "ADD"}, "2647": {"op": "DUP3"}, "2648": {"op": "ADD"}, "2649": {"op": "SWAP3"}, "2650": {"op": "DUP3"}, "2651": {"op": "DUP3"}, "2652": {"op": "ADD"}, "2653": {"op": "SWAP2"}, "2654": {"op": "SWAP1"}, "2655": {"op": "DUP8"}, "2656": {"op": "DUP6"}, "2657": {"op": "GT"}, "2658": {"op": "ISZERO"}, "2659": {"op": "PUSH2", "value": "0xA6B"}, "2662": {"op": "JUMPI"}, "2663": {"op": "PUSH1", "value": "0x0"}, "2665": {"op": "DUP1"}, "2666": {"op": "REVERT"}, "2667": {"op": "JUMPDEST"}, "2668": {"op": "DUP4"}, "2669": {"op": "DUP8"}, "2670": {"op": "ADD"}, "2671": {"op": "JUMPDEST"}, "2672": {"op": "DUP6"}, "2673": {"op": "DUP2"}, "2674": {"op": "LT"}, "2675": {"op": "ISZERO"}, "2676": {"op": "PUSH2", "value": "0xAEC"}, "2679": {"op": "JUMPI"}, "2680": {"op": "DUP2"}, "2681": {"op": "DUP2"}, "2682": {"op": "DUP11"}, "2683": {"op": "SUB"}, "2684": {"op": "SLT"}, "2685": {"op": "ISZERO"}, "2686": {"op": "PUSH2", "value": "0xA87"}, "2689": {"op": "JUMPI"}, "2690": {"op": "PUSH1", "value": "0x0"}, "2692": {"op": "DUP1"}, "2693": {"op": "DUP2"}, "2694": {"op": "REVERT"}, "2695": {"op": "JUMPDEST"}, "2696": {"op": "PUSH2", "value": "0xA8F"}, "2699": {"op": "PUSH2", "value": "0x985"}, "2702": {"jump": "i", "op": "JUMP"}, "2703": {"op": "JUMPDEST"}, "2704": {"op": "DUP2"}, "2705": {"op": "CALLDATALOAD"}, "2706": {"op": "PUSH2", "value": "0xA9A"}, "2709": {"op": "DUP2"}, "2710": {"op": "PUSH2", "value": "0x911"}, "2713": {"jump": "i", "op": "JUMP"}, "2714": {"op": "JUMPDEST"}, "2715": {"op": "DUP2"}, "2716": {"op": "MSTORE"}, "2717": {"op": "DUP2"}, "2718": {"op": "DUP7"}, "2719": {"op": "ADD"}, "2720": {"op": "CALLDATALOAD"}, "2721": {"op": "PUSH2", "value": "0xAA9"}, "2724": {"op": "DUP2"}, "2725": {"op": "PUSH2", "value": "0x911"}, "2728": {"jump": "i", "op": "JUMP"}, "2729": {"op": "JUMPDEST"}, "2730": {"op": "DUP2"}, "2731": {"op": "DUP8"}, "2732": {"op": "ADD"}, "2733": {"op": "MSTORE"}, "2734": {"op": "PUSH1", "value": "0x40"}, "2736": {"op": "DUP3"}, "2737": {"op": "DUP2"}, "2738": {"op": "ADD"}, "2739": {"op": "CALLDATALOAD"}, "2740": {"op": "SWAP1"}, "2741": {"op": "DUP3"}, "2742": {"op": "ADD"}, "2743": {"op": "MSTORE"}, "2744": {"op": "PUSH1", "value": "0x60"}, "2746": {"op": "DUP1"}, "2747": {"op": "DUP4"}, "2748": {"op": "ADD"}, "2749": {"op": "CALLDATALOAD"}, "2750": {"op": "SWAP1"}, "2751": {"op": "DUP3"}, "2752": {"op": "ADD"}, "2753": {"op": "MSTORE"}, "2754": {"op": "PUSH1", "value": "0x80"}, "2756": {"op": "DUP1"}, "2757": {"op": "DUP4"}, "2758": {"op": "ADD"}, "2759": {"op": "CALLDATALOAD"}, "2760": {"op": "SWAP1"}, "2761": {"op": "DUP3"}, "2762": {"op": "ADD"}, "2763": {"op": "MSTORE"}, "2764": {"op": "PUSH1", "value": "0xA0"}, "2766": {"op": "DUP1"}, "2767": {"op": "DUP4"}, "2768": {"op": "ADD"}, "2769": {"op": "CALLDATALOAD"}, "2770": {"op": "SWAP1"}, "2771": {"op": "DUP3"}, "2772": {"op": "ADD"}, "2773": {"op": "MSTORE"}, "2774": {"op": "PUSH1", "value": "0xC0"}, "2776": {"op": "DUP1"}, "2777": {"op": "DUP4"}, "2778": {"op": "ADD"}, "2779": {"op": "CALLDATALOAD"}, "2780": {"op": "SWAP1"}, "2781": {"op": "DUP3"}, "2782": {"op": "ADD"}, "2783": {"op": "MSTORE"}, "2784": {"op": "DUP5"}, "2785": {"op": "MSTORE"}, "2786": {"op": "SWAP3"}, "2787": {"op": "DUP5"}, "2788": {"op": "ADD"}, "2789": {"op": "SWAP3"}, "2790": {"op": "DUP2"}, "2791": {"op": "ADD"}, "2792": {"op": "PUSH2", "value": "0xA6F"}, "2795": {"op": "JUMP"}, "2796": {"op": "JUMPDEST"}, "2797": {"op": "POP"}, "2798": {"op": "SWAP1"}, "2799": {"op": "SWAP8"}, "2800": {"op": "SWAP7"}, "2801": {"op": "POP"}, "2802": {"op": "POP"}, "2803": {"op": "POP"}, "2804": {"op": "POP"}, "2805": {"op": "POP"}, "2806": {"op": "POP"}, "2807": {"op": "POP"}, "2808": {"jump": "o", "op": "JUMP"}, "2809": {"op": "JUMPDEST"}, "2810": {"op": "PUSH1", "value": "0x0"}, "2812": {"op": "DUP1"}, "2813": {"op": "PUSH1", "value": "0x40"}, "2815": {"op": "DUP1"}, "2816": {"op": "DUP5"}, "2817": {"op": "DUP7"}, "2818": {"op": "SUB"}, "2819": {"op": "SLT"}, "2820": {"op": "ISZERO"}, "2821": {"op": "PUSH2", "value": "0xB0D"}, "2824": {"op": "JUMPI"}, "2825": {"op": "PUSH1", "value": "0x0"}, "2827": {"op": "DUP1"}, "2828": {"op": "REVERT"}, "2829": {"op": "JUMPDEST"}, "2830": {"op": "DUP4"}, "2831": {"op": "CALLDATALOAD"}, "2832": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2841": {"op": "DUP1"}, "2842": {"op": "DUP3"}, "2843": {"op": "GT"}, "2844": {"op": "ISZERO"}, "2845": {"op": "PUSH2", "value": "0xB25"}, "2848": {"op": "JUMPI"}, "2849": {"op": "PUSH1", "value": "0x0"}, "2851": {"op": "DUP1"}, "2852": {"op": "REVERT"}, "2853": {"op": "JUMPDEST"}, "2854": {"op": "DUP2"}, "2855": {"op": "DUP7"}, "2856": {"op": "ADD"}, "2857": {"op": "SWAP2"}, "2858": {"op": "POP"}, "2859": {"op": "DUP7"}, "2860": {"op": "PUSH1", "value": "0x1F"}, "2862": {"op": "DUP4"}, "2863": {"op": "ADD"}, "2864": {"op": "SLT"}, "2865": {"op": "PUSH2", "value": "0xB39"}, "2868": {"op": "JUMPI"}, "2869": {"op": "PUSH1", "value": "0x0"}, "2871": {"op": "DUP1"}, "2872": {"op": "REVERT"}, "2873": {"op": "JUMPDEST"}, "2874": {"op": "DUP2"}, "2875": {"op": "CALLDATALOAD"}, "2876": {"op": "PUSH1", "value": "0x20"}, "2878": {"op": "PUSH2", "value": "0xB49"}, "2881": {"op": "PUSH2", "value": "0xA47"}, "2884": {"op": "DUP4"}, "2885": {"op": "PUSH2", "value": "0xA02"}, "2888": {"jump": "i", "op": "JUMP"}, "2889": {"op": "JUMPDEST"}, "2890": {"op": "DUP3"}, "2891": {"op": "DUP2"}, "2892": {"op": "MSTORE"}, "2893": {"op": "PUSH1", "value": "0x7"}, "2895": {"op": "SWAP3"}, "2896": {"op": "SWAP1"}, "2897": {"op": "SWAP3"}, "2898": {"op": "SHL"}, "2899": {"op": "DUP5"}, "2900": {"op": "ADD"}, "2901": {"op": "DUP2"}, "2902": {"op": "ADD"}, "2903": {"op": "SWAP2"}, "2904": {"op": "DUP2"}, "2905": {"op": "DUP2"}, "2906": {"op": "ADD"}, "2907": {"op": "SWAP1"}, "2908": {"op": "DUP11"}, "2909": {"op": "DUP5"}, "2910": {"op": "GT"}, "2911": {"op": "ISZERO"}, "2912": {"op": "PUSH2", "value": "0xB68"}, "2915": {"op": "JUMPI"}, "2916": {"op": "PUSH1", "value": "0x0"}, "2918": {"op": "DUP1"}, "2919": {"op": "REVERT"}, "2920": {"op": "JUMPDEST"}, "2921": {"op": "SWAP5"}, "2922": {"op": "DUP3"}, "2923": {"op": "ADD"}, "2924": {"op": "SWAP5"}, "2925": {"op": "JUMPDEST"}, "2926": {"op": "DUP4"}, "2927": {"op": "DUP7"}, "2928": {"op": "LT"}, "2929": {"op": "ISZERO"}, "2930": {"op": "PUSH2", "value": "0xBCF"}, "2933": {"op": "JUMPI"}, "2934": {"op": "PUSH1", "value": "0x80"}, "2936": {"op": "DUP7"}, "2937": {"op": "DUP13"}, "2938": {"op": "SUB"}, "2939": {"op": "SLT"}, "2940": {"op": "ISZERO"}, "2941": {"op": "PUSH2", "value": "0xB86"}, "2944": {"op": "JUMPI"}, "2945": {"op": "PUSH1", "value": "0x0"}, "2947": {"op": "DUP1"}, "2948": {"op": "DUP2"}, "2949": {"op": "REVERT"}, "2950": {"op": "JUMPDEST"}, "2951": {"op": "PUSH2", "value": "0xB8E"}, "2954": {"op": "PUSH2", "value": "0x9AE"}, "2957": {"jump": "i", "op": "JUMP"}, "2958": {"op": "JUMPDEST"}, "2959": {"op": "DUP7"}, "2960": {"op": "CALLDATALOAD"}, "2961": {"op": "DUP2"}, "2962": {"op": "MSTORE"}, "2963": {"op": "DUP4"}, "2964": {"op": "DUP8"}, "2965": {"op": "ADD"}, "2966": {"op": "CALLDATALOAD"}, "2967": {"op": "PUSH2", "value": "0xB9F"}, "2970": {"op": "DUP2"}, "2971": {"op": "PUSH2", "value": "0x911"}, "2974": {"jump": "i", "op": "JUMP"}, "2975": {"op": "JUMPDEST"}, "2976": {"op": "DUP2"}, "2977": {"op": "DUP6"}, "2978": {"op": "ADD"}, "2979": {"op": "MSTORE"}, "2980": {"op": "DUP7"}, "2981": {"op": "DUP9"}, "2982": {"op": "ADD"}, "2983": {"op": "CALLDATALOAD"}, "2984": {"op": "PUSH2", "value": "0xBB0"}, "2987": {"op": "DUP2"}, "2988": {"op": "PUSH2", "value": "0x911"}, "2991": {"jump": "i", "op": "JUMP"}, "2992": {"op": "JUMPDEST"}, "2993": {"op": "DUP2"}, "2994": {"op": "DUP10"}, "2995": {"op": "ADD"}, "2996": {"op": "MSTORE"}, "2997": {"op": "PUSH1", "value": "0x60"}, "2999": {"op": "DUP8"}, "3000": {"op": "DUP2"}, "3001": {"op": "ADD"}, "3002": {"op": "CALLDATALOAD"}, "3003": {"op": "SWAP1"}, "3004": {"op": "DUP3"}, "3005": {"op": "ADD"}, "3006": {"op": "MSTORE"}, "3007": {"op": "DUP3"}, "3008": {"op": "MSTORE"}, "3009": {"op": "PUSH1", "value": "0x80"}, "3011": {"op": "SWAP1"}, "3012": {"op": "SWAP6"}, "3013": {"op": "ADD"}, "3014": {"op": "SWAP5"}, "3015": {"op": "SWAP1"}, "3016": {"op": "DUP3"}, "3017": {"op": "ADD"}, "3018": {"op": "SWAP1"}, "3019": {"op": "PUSH2", "value": "0xB6D"}, "3022": {"op": "JUMP"}, "3023": {"op": "JUMPDEST"}, "3024": {"op": "SWAP8"}, "3025": {"op": "POP"}, "3026": {"op": "POP"}, "3027": {"op": "DUP8"}, "3028": {"op": "ADD"}, "3029": {"op": "CALLDATALOAD"}, "3030": {"op": "SWAP4"}, "3031": {"op": "POP"}, "3032": {"op": "POP"}, "3033": {"op": "DUP1"}, "3034": {"op": "DUP4"}, "3035": {"op": "GT"}, "3036": {"op": "ISZERO"}, "3037": {"op": "PUSH2", "value": "0xBE5"}, "3040": {"op": "JUMPI"}, "3041": {"op": "PUSH1", "value": "0x0"}, "3043": {"op": "DUP1"}, "3044": {"op": "REVERT"}, "3045": {"op": "JUMPDEST"}, "3046": {"op": "POP"}, "3047": {"op": "POP"}, "3048": {"op": "PUSH2", "value": "0xBF3"}, "3051": {"op": "DUP6"}, "3052": {"op": "DUP3"}, "3053": {"op": "DUP7"}, "3054": {"op": "ADD"}, "3055": {"op": "PUSH2", "value": "0xA26"}, "3058": {"jump": "i", "op": "JUMP"}, "3059": {"op": "JUMPDEST"}, "3060": {"op": "SWAP2"}, "3061": {"op": "POP"}, "3062": {"op": "POP"}, "3063": {"op": "SWAP3"}, "3064": {"op": "POP"}, "3065": {"op": "SWAP3"}, "3066": {"op": "SWAP1"}, "3067": {"op": "POP"}, "3068": {"jump": "o", "op": "JUMP"}, "3069": {"op": "JUMPDEST"}, "3070": {"op": "PUSH4", "value": "0x4E487B71"}, "3075": {"op": "PUSH1", "value": "0xE0"}, "3077": {"op": "SHL"}, "3078": {"op": "PUSH1", "value": "0x0"}, "3080": {"op": "MSTORE"}, "3081": {"op": "PUSH1", "value": "0x11"}, "3083": {"op": "PUSH1", "value": "0x4"}, "3085": {"op": "MSTORE"}, "3086": {"op": "PUSH1", "value": "0x24"}, "3088": {"op": "PUSH1", "value": "0x0"}, "3090": {"op": "REVERT"}, "3091": {"op": "JUMPDEST"}, "3092": {"op": "PUSH1", "value": "0x0"}, "3094": {"op": "DUP2"}, "3095": {"op": "PUSH1", "value": "0x0"}, "3097": {"op": "NOT"}, "3098": {"op": "DIV"}, "3099": {"op": "DUP4"}, "3100": {"op": "GT"}, "3101": {"op": "DUP3"}, "3102": {"op": "ISZERO"}, "3103": {"op": "ISZERO"}, "3104": {"op": "AND"}, "3105": {"op": "ISZERO"}, "3106": {"op": "PUSH2", "value": "0xC2D"}, "3109": {"op": "JUMPI"}, "3110": {"op": "PUSH2", "value": "0xC2D"}, "3113": {"op": "PUSH2", "value": "0xBFD"}, "3116": {"jump": "i", "op": "JUMP"}, "3117": {"op": "JUMPDEST"}, "3118": {"op": "POP"}, "3119": {"op": "MUL"}, "3120": {"op": "SWAP1"}, "3121": {"jump": "o", "op": "JUMP"}, "3122": {"op": "JUMPDEST"}, "3123": {"op": "PUSH1", "value": "0x0"}, "3125": {"op": "DUP3"}, "3126": {"op": "NOT"}, "3127": {"op": "DUP3"}, "3128": {"op": "GT"}, "3129": {"op": "ISZERO"}, "3130": {"op": "PUSH2", "value": "0xC45"}, "3133": {"op": "JUMPI"}, "3134": {"op": "PUSH2", "value": "0xC45"}, "3137": {"op": "PUSH2", "value": "0xBFD"}, "3140": {"jump": "i", "op": "JUMP"}, "3141": {"op": "JUMPDEST"}, "3142": {"op": "POP"}, "3143": {"op": "ADD"}, "3144": {"op": "SWAP1"}, "3145": {"jump": "o", "op": "JUMP"}, "3146": {"op": "JUMPDEST"}, "3147": {"op": "PUSH1", "value": "0x0"}, "3149": {"op": "PUSH1", "value": "0x20"}, "3151": {"op": "DUP3"}, "3152": {"op": "DUP5"}, "3153": {"op": "SUB"}, "3154": {"op": "SLT"}, "3155": {"op": "ISZERO"}, "3156": {"op": "PUSH2", "value": "0xC5C"}, "3159": {"op": "JUMPI"}, "3160": {"op": "PUSH1", "value": "0x0"}, "3162": {"op": "DUP1"}, "3163": {"op": "REVERT"}, "3164": {"op": "JUMPDEST"}, "3165": {"op": "DUP2"}, "3166": {"op": "MLOAD"}, "3167": {"op": "DUP1"}, "3168": {"op": "ISZERO"}, "3169": {"op": "ISZERO"}, "3170": {"op": "DUP2"}, "3171": {"op": "EQ"}, "3172": {"op": "PUSH2", "value": "0xC6C"}, "3175": {"op": "JUMPI"}, "3176": {"op": "PUSH1", "value": "0x0"}, "3178": {"op": "DUP1"}, "3179": {"op": "REVERT"}, "3180": {"op": "JUMPDEST"}, "3181": {"op": "SWAP4"}, "3182": {"op": "SWAP3"}, "3183": {"op": "POP"}, "3184": {"op": "POP"}, "3185": {"op": "POP"}, "3186": {"jump": "o", "op": "JUMP"}, "3187": {"op": "JUMPDEST"}, "3188": {"op": "PUSH1", "value": "0x0"}, "3190": {"op": "PUSH1", "value": "0x1"}, "3192": {"op": "DUP3"}, "3193": {"op": "ADD"}, "3194": {"op": "PUSH2", "value": "0xC85"}, "3197": {"op": "JUMPI"}, "3198": {"op": "PUSH2", "value": "0xC85"}, "3201": {"op": "PUSH2", "value": "0xBFD"}, "3204": {"jump": "i", "op": "JUMP"}, "3205": {"op": "JUMPDEST"}, "3206": {"op": "POP"}, "3207": {"op": "PUSH1", "value": "0x1"}, "3209": {"op": "ADD"}, "3210": {"op": "SWAP1"}, "3211": {"jump": "o", "op": "JUMP"}, "3212": {"op": "JUMPDEST"}, "3213": {"op": "DUP2"}, "3214": {"op": "MLOAD"}, "3215": {"op": "PUSH1", "value": "0x1"}, "3217": {"op": "PUSH1", "value": "0x1"}, "3219": {"op": "PUSH1", "value": "0xA0"}, "3221": {"op": "SHL"}, "3222": {"op": "SUB"}, "3223": {"op": "SWAP1"}, "3224": {"op": "DUP2"}, "3225": {"op": "AND"}, "3226": {"op": "DUP3"}, "3227": {"op": "MSTORE"}, "3228": {"op": "PUSH1", "value": "0x20"}, "3230": {"op": "DUP1"}, "3231": {"op": "DUP5"}, "3232": {"op": "ADD"}, "3233": {"op": "MLOAD"}, "3234": {"op": "SWAP1"}, "3235": {"op": "SWAP2"}, "3236": {"op": "AND"}, "3237": {"op": "SWAP1"}, "3238": {"op": "DUP3"}, "3239": {"op": "ADD"}, "3240": {"op": "MSTORE"}, "3241": {"op": "PUSH1", "value": "0x40"}, "3243": {"op": "DUP1"}, "3244": {"op": "DUP4"}, "3245": {"op": "ADD"}, "3246": {"op": "MLOAD"}, "3247": {"op": "SWAP1"}, "3248": {"op": "DUP3"}, "3249": {"op": "ADD"}, "3250": {"op": "MSTORE"}, "3251": {"op": "PUSH1", "value": "0x60"}, "3253": {"op": "DUP1"}, "3254": {"op": "DUP4"}, "3255": {"op": "ADD"}, "3256": {"op": "MLOAD"}, "3257": {"op": "SWAP1"}, "3258": {"op": "DUP3"}, "3259": {"op": "ADD"}, "3260": {"op": "MSTORE"}, "3261": {"op": "PUSH1", "value": "0x80"}, "3263": {"op": "DUP1"}, "3264": {"op": "DUP4"}, "3265": {"op": "ADD"}, "3266": {"op": "MLOAD"}, "3267": {"op": "SWAP1"}, "3268": {"op": "DUP3"}, "3269": {"op": "ADD"}, "3270": {"op": "MSTORE"}, "3271": {"op": "PUSH1", "value": "0xA0"}, "3273": {"op": "DUP3"}, "3274": {"op": "DUP2"}, "3275": {"op": "ADD"}, "3276": {"op": "MLOAD"}, "3277": {"op": "SWAP1"}, "3278": {"op": "DUP3"}, "3279": {"op": "ADD"}, "3280": {"op": "MSTORE"}, "3281": {"op": "PUSH1", "value": "0xC0"}, "3283": {"op": "SWAP2"}, "3284": {"op": "DUP3"}, "3285": {"op": "ADD"}, "3286": {"op": "MLOAD"}, "3287": {"op": "SWAP2"}, "3288": {"op": "DUP2"}, "3289": {"op": "ADD"}, "3290": {"op": "SWAP2"}, "3291": {"op": "SWAP1"}, "3292": {"op": "SWAP2"}, "3293": {"op": "MSTORE"}, "3294": {"op": "PUSH1", "value": "0xE0"}, "3296": {"op": "ADD"}, "3297": {"op": "SWAP1"}, "3298": {"jump": "o", "op": "JUMP"}, "3299": {"op": "JUMPDEST"}, "3300": {"op": "PUSH1", "value": "0x0"}, "3302": {"op": "DUP3"}, "3303": {"op": "MLOAD"}, "3304": {"op": "PUSH1", "value": "0x0"}, "3306": {"op": "JUMPDEST"}, "3307": {"op": "DUP2"}, "3308": {"op": "DUP2"}, "3309": {"op": "LT"}, "3310": {"op": "ISZERO"}, "3311": {"op": "PUSH2", "value": "0xD04"}, "3314": {"op": "JUMPI"}, "3315": {"op": "PUSH1", "value": "0x20"}, "3317": {"op": "DUP2"}, "3318": {"op": "DUP7"}, "3319": {"op": "ADD"}, "3320": {"op": "DUP2"}, "3321": {"op": "ADD"}, "3322": {"op": "MLOAD"}, "3323": {"op": "DUP6"}, "3324": {"op": "DUP4"}, "3325": {"op": "ADD"}, "3326": {"op": "MSTORE"}, "3327": {"op": "ADD"}, "3328": {"op": "PUSH2", "value": "0xCEA"}, "3331": {"op": "JUMP"}, "3332": {"op": "JUMPDEST"}, "3333": {"op": "DUP2"}, "3334": {"op": "DUP2"}, "3335": {"op": "GT"}, "3336": {"op": "ISZERO"}, "3337": {"op": "PUSH2", "value": "0xD13"}, "3340": {"op": "JUMPI"}, "3341": {"op": "PUSH1", "value": "0x0"}, "3343": {"op": "DUP3"}, "3344": {"op": "DUP6"}, "3345": {"op": "ADD"}, "3346": {"op": "MSTORE"}, "3347": {"op": "JUMPDEST"}, "3348": {"op": "POP"}, "3349": {"op": "SWAP2"}, "3350": {"op": "SWAP1"}, "3351": {"op": "SWAP2"}, "3352": {"op": "ADD"}, "3353": {"op": "SWAP3"}, "3354": {"op": "SWAP2"}, "3355": {"op": "POP"}, "3356": {"op": "POP"}, "3357": {"jump": "o", "op": "JUMP"}, "3358": {"op": "JUMPDEST"}, "3359": {"op": "PUSH1", "value": "0x0"}, "3361": {"op": "PUSH1", "value": "0x20"}, "3363": {"op": "DUP3"}, "3364": {"op": "DUP5"}, "3365": {"op": "SUB"}, "3366": {"op": "SLT"}, "3367": {"op": "ISZERO"}, "3368": {"op": "PUSH2", "value": "0xD30"}, "3371": {"op": "JUMPI"}, "3372": {"op": "PUSH1", "value": "0x0"}, "3374": {"op": "DUP1"}, "3375": {"op": "REVERT"}, "3376": {"op": "JUMPDEST"}, "3377": {"op": "POP"}, "3378": {"op": "MLOAD"}, "3379": {"op": "SWAP2"}, "3380": {"op": "SWAP1"}, "3381": {"op": "POP"}, "3382": {"jump": "o", "op": "JUMP"}, "3383": {"op": "JUMPDEST"}, "3384": {"op": "PUSH1", "value": "0x0"}, "3386": {"op": "PUSH1", "value": "0x20"}, "3388": {"op": "DUP3"}, "3389": {"op": "DUP5"}, "3390": {"op": "SUB"}, "3391": {"op": "SLT"}, "3392": {"op": "ISZERO"}, "3393": {"op": "PUSH2", "value": "0xD49"}, "3396": {"op": "JUMPI"}, "3397": {"op": "PUSH1", "value": "0x0"}, "3399": {"op": "DUP1"}, "3400": {"op": "REVERT"}, "3401": {"op": "JUMPDEST"}, "3402": {"op": "DUP2"}, "3403": {"op": "MLOAD"}, "3404": {"op": "PUSH2", "value": "0xC6C"}, "3407": {"op": "DUP2"}, "3408": {"op": "PUSH2", "value": "0x911"}, "3411": {"jump": "i", "op": "JUMP"}, "3412": {"op": "JUMPDEST"}, "3413": {"op": "PUSH4", "value": "0x4E487B71"}, "3418": {"op": "PUSH1", "value": "0xE0"}, "3420": {"op": "SHL"}, "3421": {"op": "PUSH1", "value": "0x0"}, "3423": {"op": "MSTORE"}, "3424": {"op": "PUSH1", "value": "0x32"}, "3426": {"op": "PUSH1", "value": "0x4"}, "3428": {"op": "MSTORE"}, "3429": {"op": "PUSH1", "value": "0x24"}, "3431": {"op": "PUSH1", "value": "0x0"}, "3433": {"op": "REVERT"}}, "sha1": "231b03a0f4c32738847e236a0f7a1d496cca5be7", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./deb/ICrossDomainMessenger.sol\";\n\n/// @title SourceDomainSideBridge Contract\n/// @author Sherif Abdelmoatty\n/// @notice This contract is to be deployed in the source rollup\ncontract SourceDomainSideBridge {\n    \n    uint constant public CONTRACT_FEE_BASIS_POINTS = 5;\n    uint constant public TRADE_LIMIT = 0.1 ether;\n    address constant ETHER_ADDRESS = 0x0000000000000000000000000000000000000000;\n\n    struct TransferData {\n        address  tokenAddress; \n        address  destination;\n        uint256  amount;\n        uint256  fee;\n        uint256  startTime;\n        uint256  feeRampup;\n        uint256  nonce;\n    }\n    struct RewardData {\n        bytes32  transferDataHash;\n        address  tokenAddress; \n        address  claimer;\n        uint256  fee;\n    }\n    mapping(bytes32 => bool) public validTransferHashes;\n    mapping(bytes32 => bool) public knownHashOnions;\n    bytes32 processedRewardHashOnion;\n    \n    address ovmL2CrossDomainMessenger;  //ovmL2CrossDomainMessenger contract address(Optimism)\n    address l1DomainSideContractAddress;  //l1DomainSideContract deployed contract address on mainnet\n\n    uint256  currentNonce;\n\n    event Transaction(TransferData transferData);\n    event ClaimPayed(bytes32 transferDataHash, bool success);\n    \n    /// @notice onlyL1Contract modifier\n    /// @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n    /// @notice to call the approveStateRoot function\n    modifier onlyL1Contract() {\n        ICrossDomainMessenger l2cdm = ICrossDomainMessenger(ovmL2CrossDomainMessenger);\n        require(\n            msg.sender == address(ovmL2CrossDomainMessenger)\n            && l2cdm.xDomainMessageSender() == l1DomainSideContractAddress\n        );\n        _;\n    }\n\n    /// @notice Constructior function\n    /// @notice Intialize variables\n    constructor(address _l1DomainSideContractAddress){\n        ovmL2CrossDomainMessenger = 0x4200000000000000000000000000000000000007;\n        l1DomainSideContractAddress = _l1DomainSideContractAddress;\n    }\n\n    /// @notice withdraw function\n    /// @notice withdraws the required funds plus fees to be sent \n    /// @notice to the domain side rollup\n    ///function transfer(TransferData memory _transferData) external payable returns(bytes32){\n    function transfer(address _tokenAddress, address _destination, uint256 _amount,\n         uint256  _feeRampup) external payable returns(bytes32){\n        \n        require(_amount* 1000 <= TRADE_LIMIT, 'Amount higher than trade limit');\n        uint256 fee = _amount * CONTRACT_FEE_BASIS_POINTS;\n        uint256 amountPlusFee = _amount * 1000 + fee;\n        \n        if(_tokenAddress == ETHER_ADDRESS){\n            require(msg.value >= amountPlusFee, \"Error : Non Suffecient funds!!!!!!!!\");\n        }else{\n            ERC20 token = ERC20(_tokenAddress);\n            token.transferFrom(msg.sender, address(this), amountPlusFee);\n        }\n\n        TransferData memory transferData;\n        transferData.tokenAddress = _tokenAddress;\n        transferData.destination = _destination;\n        transferData.amount = _amount;\n        transferData.fee = fee;\n        transferData.startTime = block.number;\n        transferData.feeRampup = _feeRampup;\n        transferData.nonce = currentNonce;\n\n        currentNonce++;\n\n        bytes32 transferDataHash = sha256(abi.encode(transferData));\n        \n        validTransferHashes[transferDataHash] = true;\n\n        emit Transaction(transferData);\n        \n        return transferDataHash;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function processClaims(RewardData[] memory _rewardData, TransferData[] memory _transferData) external payable {\n        bytes32 newProcessedRewardHashOnion = calculateNewProcessedRewardHashOnion(_rewardData);\n        require(knownHashOnions[newProcessedRewardHashOnion], \"Invalide RewardData list.\");\n        processedRewardHashOnion = newProcessedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            if(validTransferHashes[_rewardData[n].transferDataHash]){\n                bool success;\n                if(_rewardData[n].tokenAddress == ETHER_ADDRESS){\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: _rewardData[n].fee}(\"\");\n                    success = suc;\n                }else{\n                    ERC20 token = ERC20(_rewardData[n].tokenAddress);\n                    \n                    success = token.transferFrom(address(this), _rewardData[n].claimer,\n                        _rewardData[n].fee);\n                }\n                emit ClaimPayed(_rewardData[n].transferDataHash, success);\n            }\n        }\n        \n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function calculateNewProcessedRewardHashOnion(RewardData[] memory _rewardData) private returns (bytes32){\n        bytes32 newProcessedRewardHashOnion = processedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            newProcessedRewardHashOnion = \n                sha256(abi.encode(newProcessedRewardHashOnion,_rewardData[n]));\n        }\n        return newProcessedRewardHashOnion;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function addNewKnownHashOnion(bytes32 _newKnownHashOnions) external onlyL1Contract{\n        knownHashOnions[_newKnownHashOnions] = true;\n    }\n   \n}", "sourceMap": "294:5322:4:-:0;;;1970:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:25;:70;;2057:42;-1:-1:-1;;;;;;2029:70:4;;;;;;;2109:27;:58;;;;;-1:-1:-1;;;;;2109:58:4;;;;;;;;;;294:5322;;14:290:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;:::-;294:5322:4;;;;;;", "sourcePath": "contracts/SourceDomainSideBridge.sol", "type": "contract", "deployment": {"address": "0xf630246d5066D9822D758C48995020f01F678753", "chainid": "69", "blockHeight": 2581768}}