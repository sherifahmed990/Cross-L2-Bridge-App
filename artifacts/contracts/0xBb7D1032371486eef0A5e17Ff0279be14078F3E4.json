{"abi": [{"inputs": [{"internalType": "address", "name": "_l1DomainSideContractAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "bool", "name": "success", "type": "bool"}], "name": "ClaimPayed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "newKnownHashOnions", "type": "bytes32"}], "name": "NewKnownHashOnionAdded", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "indexed": false, "internalType": "struct StructLib.TransferData", "name": "transferData", "type": "tuple"}], "name": "Transaction", "type": "event"}, {"inputs": [], "name": "CONTRACT_FEE_BASIS_POINTS", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "FIXED_FEE", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "GetGovernanceBalance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "MAX_TRADE_LIMIT", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_newKnownHashOnions", "type": "bytes32"}], "name": "addNewKnownHashOnion", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "collectGovernanceFixedFees", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "governance", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "knownHashOnions", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "amountPlusFee", "type": "uint256"}], "internalType": "struct StructLib.RewardData[]", "name": "_rewardData", "type": "tuple[]"}], "name": "processClaims", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_tokenAddress", "type": "address"}, {"internalType": "address", "name": "_destination", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "uint256", "name": "_startTime", "type": "uint256"}, {"internalType": "uint256", "name": "_feeRampup", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "validTransferHashes", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"2": "contracts/SourceDomainSideBridge.sol", "3": "contracts/deb/ERC20.sol", "4": "contracts/deb/ICrossDomainMessenger.sol"}, "ast": {"absolutePath": "contracts/SourceDomainSideBridge.sol", "exportedSymbols": {"ERC20": [1018], "ICrossDomainMessenger": [1057], "SourceDomainSideBridge": [949], "StructLib": [1085]}, "id": 950, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 418, "literals": ["solidity", "^", "0.8", ".13"], "nodeType": "PragmaDirective", "src": "31:24:2"}, {"absolutePath": "contracts/deb/ERC20.sol", "file": "./deb/ERC20.sol", "id": 419, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 950, "sourceUnit": 1019, "src": "57:25:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/ICrossDomainMessenger.sol", "file": "./deb/ICrossDomainMessenger.sol", "id": 420, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 950, "sourceUnit": 1058, "src": "83:41:2", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/StructLib.sol", "file": "./deb/StructLib.sol", "id": 421, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 950, "sourceUnit": 1086, "src": "125:29:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "SourceDomainSideBridge", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 422, "nodeType": "StructuredDocumentation", "src": "156:139:2", "text": "@title SourceDomainSideBridge Contract\n @author Sherif Abdelmoatty\n @notice This contract is to be deployed in the source rollup"}, "fullyImplemented": true, "id": 949, "linearizedBaseContracts": [949], "name": "SourceDomainSideBridge", "nameLocation": "304:22:2", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 425, "mutability": "constant", "name": "ETHER_ADDRESS", "nameLocation": "351:13:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "334:75:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 423, "name": "address", "nodeType": "ElementaryTypeName", "src": "334:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030", "id": 424, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "367:42:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x0000000000000000000000000000000000000000"}, "visibility": "internal"}, {"constant": true, "id": 428, "mutability": "constant", "name": "ovmL2CrossDomainMessenger", "nameLocation": "432:25:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "415:87:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 426, "name": "address", "nodeType": "ElementaryTypeName", "src": "415:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303037", "id": 427, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "460:42:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4200000000000000000000000000000000000007"}, "visibility": "internal"}, {"constant": true, "functionSelector": "13457d88", "id": 431, "mutability": "constant", "name": "CONTRACT_FEE_BASIS_POINTS", "nameLocation": "592:25:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "571:50:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 429, "name": "uint", "nodeType": "ElementaryTypeName", "src": "571:4:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "35", "id": 430, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "620:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "visibility": "public"}, {"constant": true, "functionSelector": "23d1b06c", "id": 434, "mutability": "constant", "name": "FIXED_FEE", "nameLocation": "667:9:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "646:42:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 432, "name": "uint", "nodeType": "ElementaryTypeName", "src": "646:4:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "33303032", "id": 433, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "679:9:2", "subdenomination": "gwei", "typeDescriptions": {"typeIdentifier": "t_rational_3002000000000_by_1", "typeString": "int_const 3002000000000"}, "value": "3002"}, "visibility": "public"}, {"constant": true, "functionSelector": "bfd683b3", "id": 437, "mutability": "constant", "name": "MAX_TRADE_LIMIT", "nameLocation": "800:15:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "779:48:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 435, "name": "uint", "nodeType": "ElementaryTypeName", "src": "779:4:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "302e31", "id": 436, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "818:9:2", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000_by_1", "typeString": "int_const 100000000000000000"}, "value": "0.1"}, "visibility": "public"}, {"constant": false, "functionSelector": "040c05b6", "id": 441, "mutability": "mutable", "name": "validTransferHashes", "nameLocation": "906:19:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "874:51:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 440, "keyType": {"id": 438, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "882:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "874:24:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 439, "name": "bool", "nodeType": "ElementaryTypeName", "src": "893:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "5a1294b7", "id": 445, "mutability": "mutable", "name": "knownHashOnions", "nameLocation": "998:15:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "966:47:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 444, "keyType": {"id": 442, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "974:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "966:24:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 443, "name": "bool", "nodeType": "ElementaryTypeName", "src": "985:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "id": 447, "mutability": "mutable", "name": "processedRewardHashOnion", "nameLocation": "1061:24:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "1053:32:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 446, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1053:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 449, "mutability": "mutable", "name": "l1DomainSideContractAddress", "nameLocation": "1131:27:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "1123:35:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 448, "name": "address", "nodeType": "ElementaryTypeName", "src": "1123:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 451, "mutability": "mutable", "name": "currentNonce", "nameLocation": "1234:12:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "1225:21:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 450, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1225:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "5aa6e675", "id": 453, "mutability": "mutable", "name": "governance", "nameLocation": "1315:10:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "1300:25:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 452, "name": "address", "nodeType": "ElementaryTypeName", "src": "1300:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "id": 455, "mutability": "mutable", "name": "governanceBalance", "nameLocation": "1405:17:2", "nodeType": "VariableDeclaration", "scope": 949, "src": "1397:25:2", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 454, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1397:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "d8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f89", "id": 460, "name": "Transaction", "nameLocation": "1467:11:2", "nodeType": "EventDefinition", "parameters": {"id": 459, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 458, "indexed": false, "mutability": "mutable", "name": "transferData", "nameLocation": "1502:12:2", "nodeType": "VariableDeclaration", "scope": 460, "src": "1479:35:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData"}, "typeName": {"id": 457, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 456, "name": "StructLib.TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 1075, "src": "1479:22:2"}, "referencedDeclaration": 1075, "src": "1479:22:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_storage_ptr", "typeString": "struct StructLib.TransferData"}}, "visibility": "internal"}], "src": "1478:37:2"}, "src": "1461:55:2"}, {"anonymous": false, "eventSelector": "6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a", "id": 466, "name": "ClaimPayed", "nameLocation": "1527:10:2", "nodeType": "EventDefinition", "parameters": {"id": 465, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 462, "indexed": false, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1546:16:2", "nodeType": "VariableDeclaration", "scope": 466, "src": "1538:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 461, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1538:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 464, "indexed": false, "mutability": "mutable", "name": "success", "nameLocation": "1569:7:2", "nodeType": "VariableDeclaration", "scope": 466, "src": "1564:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 463, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1564:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1537:40:2"}, "src": "1521:57:2"}, {"anonymous": false, "eventSelector": "f92a8a7980eb38c3c210ad55b80880529bccdbc8206e7cdb24d9f52c6a5171e8", "id": 470, "name": "NewKnownHashOnionAdded", "nameLocation": "1589:22:2", "nodeType": "EventDefinition", "parameters": {"id": 469, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 468, "indexed": false, "mutability": "mutable", "name": "newKnownHashOnions", "nameLocation": "1620:18:2", "nodeType": "VariableDeclaration", "scope": 470, "src": "1612:26:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 467, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1612:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "1611:28:2"}, "src": "1583:57:2"}, {"body": {"id": 497, "nodeType": "Block", "src": "1788:270:2", "statements": [{"assignments": [475], "declarations": [{"constant": false, "id": 475, "mutability": "mutable", "name": "l2cdm", "nameLocation": "1820:5:2", "nodeType": "VariableDeclaration", "scope": 497, "src": "1798:27:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1057", "typeString": "contract ICrossDomainMessenger"}, "typeName": {"id": 474, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 473, "name": "ICrossDomainMessenger", "nodeType": "IdentifierPath", "referencedDeclaration": 1057, "src": "1798:21:2"}, "referencedDeclaration": 1057, "src": "1798:21:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1057", "typeString": "contract ICrossDomainMessenger"}}, "visibility": "internal"}], "id": 479, "initialValue": {"arguments": [{"id": 477, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "1850:25:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 476, "name": "ICrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1057, "src": "1828:21:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$1057_$", "typeString": "type(contract ICrossDomainMessenger)"}}, "id": 478, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1828:48:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1057", "typeString": "contract ICrossDomainMessenger"}}, "nodeType": "VariableDeclarationStatement", "src": "1798:78:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 487, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 481, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1907:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 482, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1907:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 485, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "1929:25:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 484, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1921:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 483, "name": "address", "nodeType": "ElementaryTypeName", "src": "1921:7:2", "typeDescriptions": {}}}, "id": 486, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1921:34:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1907:48:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 488, "name": "l2cdm", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 475, "src": "1971:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1057", "typeString": "contract ICrossDomainMessenger"}}, "id": 489, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "xDomainMessageSender", "nodeType": "MemberAccess", "referencedDeclaration": 1046, "src": "1971:26:2", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 490, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1971:28:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 491, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 449, "src": "2003:27:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1971:59:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1907:123:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 480, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1886:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 494, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1886:154:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 495, "nodeType": "ExpressionStatement", "src": "1886:154:2"}, {"id": 496, "nodeType": "PlaceholderStatement", "src": "2050:1:2"}]}, "documentation": {"id": 471, "nodeType": "StructuredDocumentation", "src": "1650:108:2", "text": "@notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge"}, "id": 498, "name": "onlyL1Contract", "nameLocation": "1772:14:2", "nodeType": "ModifierDefinition", "parameters": {"id": 472, "nodeType": "ParameterList", "parameters": [], "src": "1786:2:2"}, "src": "1763:295:2", "virtual": false, "visibility": "internal"}, {"body": {"id": 510, "nodeType": "Block", "src": "2179:104:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 505, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 502, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2197:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 503, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2197:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 504, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "2211:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2197:24:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "476f7665726e616e63653a20596f7520617265206e6f742074686520476f7665726e6f72212121", "id": 506, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2223:41:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_300c0d2f8768dc2f5059e5cda9a599bc809e73a6a59e433d49c1d574de5907dc", "typeString": "literal_string \"Governance: You are not the Governor!!!\""}, "value": "Governance: You are not the Governor!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_300c0d2f8768dc2f5059e5cda9a599bc809e73a6a59e433d49c1d574de5907dc", "typeString": "literal_string \"Governance: You are not the Governor!!!\""}], "id": 501, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2189:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2189:76:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 508, "nodeType": "ExpressionStatement", "src": "2189:76:2"}, {"id": 509, "nodeType": "PlaceholderStatement", "src": "2275:1:2"}]}, "documentation": {"id": 499, "nodeType": "StructuredDocumentation", "src": "2064:86:2", "text": "@notice onlyGovernance modifier \n @notice allow only the Governor to access"}, "id": 511, "name": "onlyGovernance", "nameLocation": "2164:14:2", "nodeType": "ModifierDefinition", "parameters": {"id": 500, "nodeType": "ParameterList", "parameters": [], "src": "2179:0:2"}, "src": "2155:128:2", "virtual": false, "visibility": "internal"}, {"body": {"id": 526, "nodeType": "Block", "src": "2434:108:2", "statements": [{"expression": {"id": 519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 517, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 449, "src": "2444:27:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 518, "name": "_l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 514, "src": "2474:28:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2444:58:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 520, "nodeType": "ExpressionStatement", "src": "2444:58:2"}, {"expression": {"id": 524, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 521, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "2512:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 522, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2525:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 523, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2525:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2512:23:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 525, "nodeType": "ExpressionStatement", "src": "2512:23:2"}]}, "documentation": {"id": 512, "nodeType": "StructuredDocumentation", "src": "2289:91:2", "text": "@param _l1DomainSideContractAddress is the address of the contract in etherium/kovan L1"}, "id": 527, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 515, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 514, "mutability": "mutable", "name": "_l1DomainSideContractAddress", "nameLocation": "2405:28:2", "nodeType": "VariableDeclaration", "scope": 527, "src": "2397:36:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 513, "name": "address", "nodeType": "ElementaryTypeName", "src": "2397:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2396:38:2"}, "returnParameters": {"id": 516, "nodeType": "ParameterList", "parameters": [], "src": "2434:0:2"}, "scope": 949, "src": "2385:157:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 716, "nodeType": "Block", "src": "3323:1502:2", "statements": [{"assignments": [544], "declarations": [{"constant": false, "id": 544, "mutability": "mutable", "name": "fee", "nameLocation": "3350:3:2", "nodeType": "VariableDeclaration", "scope": 716, "src": "3342:11:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 543, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3342:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 548, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 545, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "3356:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 546, "name": "CONTRACT_FEE_BASIS_POINTS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 431, "src": "3366:25:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3356:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3342:49:2"}, {"assignments": [550], "declarations": [{"constant": false, "id": 550, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "3409:13:2", "nodeType": "VariableDeclaration", "scope": 716, "src": "3401:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 549, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3401:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 556, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 555, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 553, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 551, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "3425:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 552, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3435:4:2", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3425:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 554, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 544, "src": "3442:3:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3425:20:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3401:44:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 564, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 558, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 544, "src": "3472:3:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 559, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 538, "src": "3478:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3472:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 563, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 561, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "3491:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 562, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3501:4:2", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3491:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3472:33:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "66656552616d707570206d6178696d756d20636f73742073686f756c64206265206c657373207468616e2074686520746f74616c20616d6f756e74", "id": 565, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3507:61:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4bc519888d66881083968bfd12d4fec087513ea2bfda5d86f622fedd64a2aa09", "typeString": "literal_string \"feeRampup maximum cost should be less than the total amount\""}, "value": "feeRampup maximum cost should be less than the total amount"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4bc519888d66881083968bfd12d4fec087513ea2bfda5d86f622fedd64a2aa09", "typeString": "literal_string \"feeRampup maximum cost should be less than the total amount\""}], "id": 557, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3464:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3464:105:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 567, "nodeType": "ExpressionStatement", "src": "3464:105:2"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 570, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 568, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 530, "src": "3583:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 569, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 425, "src": "3600:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3583:30:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 618, "nodeType": "Block", "src": "3809:225:2", "statements": [{"assignments": [593], "declarations": [{"constant": false, "id": 593, "mutability": "mutable", "name": "token", "nameLocation": "3829:5:2", "nodeType": "VariableDeclaration", "scope": 618, "src": "3823:11:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}, "typeName": {"id": 592, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 591, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1018, "src": "3823:5:2"}, "referencedDeclaration": 1018, "src": "3823:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 597, "initialValue": {"arguments": [{"id": 595, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 530, "src": "3843:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 594, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1018, "src": "3837:5:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$1018_$", "typeString": "type(contract ERC20)"}}, "id": 596, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3837:20:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "3823:34:2"}, {"expression": {"arguments": [{"expression": {"id": 601, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3890:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 602, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3890:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 605, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3910:4:2", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$949", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$949", "typeString": "contract SourceDomainSideBridge"}], "id": 604, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3902:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 603, "name": "address", "nodeType": "ElementaryTypeName", "src": "3902:7:2", "typeDescriptions": {}}}, "id": 606, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3902:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 607, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 550, "src": "3917:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 598, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 593, "src": "3871:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1001, "src": "3871:18:2", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 608, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3871:60:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 609, "nodeType": "ExpressionStatement", "src": "3871:60:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 611, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3953:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "3953:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 613, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 434, "src": "3966:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3953:22:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2053756666656369656e7420657468657220666f722074686520666978656420657468657220666565", "id": 615, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3977:45:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_64ba999596c4f1bdb4efd3b6724f85fe7965e7c80268be2ebabf9a78cb176819", "typeString": "literal_string \"No Suffecient ether for the fixed ether fee\""}, "value": "No Suffecient ether for the fixed ether fee"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_64ba999596c4f1bdb4efd3b6724f85fe7965e7c80268be2ebabf9a78cb176819", "typeString": "literal_string \"No Suffecient ether for the fixed ether fee\""}], "id": 610, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3945:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 616, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3945:78:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 617, "nodeType": "ExpressionStatement", "src": "3945:78:2"}]}, "id": 619, "nodeType": "IfStatement", "src": "3580:454:2", "trueBody": {"id": 590, "nodeType": "Block", "src": "3614:191:2", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 572, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "3636:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 573, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3645:4:2", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3636:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 575, "name": "MAX_TRADE_LIMIT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 437, "src": "3652:15:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3636:31:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420686967686572207468616e206d6178696d756d207472616465206c696d6974", "id": 577, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3669:40:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_541250fccaebd85b78dfda892f93e70a245432cff15b3fb7fc320458cd1107bf", "typeString": "literal_string \"Amount higher than maximum trade limit\""}, "value": "Amount higher than maximum trade limit"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_541250fccaebd85b78dfda892f93e70a245432cff15b3fb7fc320458cd1107bf", "typeString": "literal_string \"Amount higher than maximum trade limit\""}], "id": 571, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3628:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 578, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3628:82:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 579, "nodeType": "ExpressionStatement", "src": "3628:82:2"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 586, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 581, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3732:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 582, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "3732:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 583, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 550, "src": "3745:13:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 584, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 434, "src": "3761:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3745:25:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3732:38:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2053756666656369656e74206574686572", "id": 587, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3772:21:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9524d3942520ea058e373f61030588302685b586802f82c6be4e5149e46e6fbf", "typeString": "literal_string \"No Suffecient ether\""}, "value": "No Suffecient ether"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9524d3942520ea058e373f61030588302685b586802f82c6be4e5149e46e6fbf", "typeString": "literal_string \"No Suffecient ether\""}], "id": 580, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3724:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 588, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3724:70:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 589, "nodeType": "ExpressionStatement", "src": "3724:70:2"}]}}, {"assignments": [624], "declarations": [{"constant": false, "id": 624, "mutability": "mutable", "name": "transferData", "nameLocation": "4074:12:2", "nodeType": "VariableDeclaration", "scope": 716, "src": "4044:42:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData"}, "typeName": {"id": 623, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 622, "name": "StructLib.TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 1075, "src": "4044:22:2"}, "referencedDeclaration": 1075, "src": "4044:22:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_storage_ptr", "typeString": "struct StructLib.TransferData"}}, "visibility": "internal"}], "id": 625, "nodeType": "VariableDeclarationStatement", "src": "4044:42:2"}, {"expression": {"id": 630, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 626, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4096:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 628, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1062, "src": "4096:25:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 629, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 530, "src": "4124:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4096:41:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 631, "nodeType": "ExpressionStatement", "src": "4096:41:2"}, {"expression": {"id": 636, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 632, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4147:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 634, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 1064, "src": "4147:24:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 635, "name": "_destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 532, "src": "4174:12:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4147:39:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 637, "nodeType": "ExpressionStatement", "src": "4147:39:2"}, {"expression": {"id": 644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 638, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4196:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 640, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 1066, "src": "4196:19:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 641, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 534, "src": "4218:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 642, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4228:4:2", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "4218:14:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4196:36:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 645, "nodeType": "ExpressionStatement", "src": "4196:36:2"}, {"expression": {"id": 650, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 646, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4242:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 648, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 1068, "src": "4242:16:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 649, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 544, "src": "4261:3:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4242:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 651, "nodeType": "ExpressionStatement", "src": "4242:22:2"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 652, "name": "_startTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "4277:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 653, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4290:5:2", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 654, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "4290:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4277:25:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 670, "nodeType": "Block", "src": "4369:60:2", "statements": [{"expression": {"id": 668, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 664, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4383:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 666, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 1070, "src": "4383:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 667, "name": "_startTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 536, "src": "4408:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4383:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 669, "nodeType": "ExpressionStatement", "src": "4383:35:2"}]}, "id": 671, "nodeType": "IfStatement", "src": "4274:155:2", "trueBody": {"id": 663, "nodeType": "Block", "src": "4303:62:2", "statements": [{"expression": {"id": 661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 656, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4317:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 658, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 1070, "src": "4317:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 659, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4342:5:2", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 660, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "4342:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4317:37:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 662, "nodeType": "ExpressionStatement", "src": "4317:37:2"}]}}, {"expression": {"id": 676, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 672, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4438:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 674, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "feeRampup", "nodeType": "MemberAccess", "referencedDeclaration": 1072, "src": "4438:22:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 675, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 538, "src": "4463:10:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4438:35:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 677, "nodeType": "ExpressionStatement", "src": "4438:35:2"}, {"expression": {"id": 682, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 678, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4483:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}, "id": 680, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "nonce", "nodeType": "MemberAccess", "referencedDeclaration": 1074, "src": "4483:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 681, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 451, "src": "4504:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4483:33:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 683, "nodeType": "ExpressionStatement", "src": "4483:33:2"}, {"expression": {"id": 685, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4527:14:2", "subExpression": {"id": 684, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 451, "src": "4527:12:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 686, "nodeType": "ExpressionStatement", "src": "4527:14:2"}, {"expression": {"id": 693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 687, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "4551:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 692, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 688, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "4571:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 691, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"id": 689, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 434, "src": "4591:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 690, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4601:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "4591:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4571:31:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4551:51:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 694, "nodeType": "ExpressionStatement", "src": "4551:51:2"}, {"assignments": [696], "declarations": [{"constant": false, "id": 696, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "4621:16:2", "nodeType": "VariableDeclaration", "scope": 716, "src": "4613:24:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 695, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4613:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 703, "initialValue": {"arguments": [{"arguments": [{"id": 700, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4658:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}], "expression": {"id": 698, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "4647:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 699, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "4647:10:2", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 701, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4647:24:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 697, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "4640:6:2", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 702, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4640:32:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "4613:59:2"}, {"expression": {"id": 708, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 704, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 441, "src": "4691:19:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 706, "indexExpression": {"id": 705, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 696, "src": "4711:16:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4691:37:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 707, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4731:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "4691:44:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 709, "nodeType": "ExpressionStatement", "src": "4691:44:2"}, {"eventCall": {"arguments": [{"id": 711, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 624, "src": "4763:12:2", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$1075_memory_ptr", "typeString": "struct StructLib.TransferData memory"}], "id": 710, "name": "Transaction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 460, "src": "4751:11:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_TransferData_$1075_memory_ptr_$returns$__$", "typeString": "function (struct StructLib.TransferData memory)"}}, "id": 712, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4751:25:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 713, "nodeType": "EmitStatement", "src": "4746:30:2"}, {"expression": {"id": 714, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 696, "src": "4802:16:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 542, "id": 715, "nodeType": "Return", "src": "4795:23:2"}]}, "documentation": {"id": 528, "nodeType": "StructuredDocumentation", "src": "2548:607:2", "text": "@notice transfer the required funds plus fees to be sent to the current contract balance\n @param _tokenAddress at destination rollup\n @param _destination is reciever address at the destination rollup\n @param _amount is amount to be transfered in kwei\n @param _startTime is a blocknumber in the future that this transaction can only be executed after\n @param _feeRampup will be multiplied by the fee ramp up if the LP claimed and sent the transfer by the startTime block, and will decrease by one for each block after that\n @return the hash of the valid transfer"}, "functionSelector": "597645a8", "id": 717, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "3169:8:2", "nodeType": "FunctionDefinition", "parameters": {"id": 539, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 530, "mutability": "mutable", "name": "_tokenAddress", "nameLocation": "3186:13:2", "nodeType": "VariableDeclaration", "scope": 717, "src": "3178:21:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 529, "name": "address", "nodeType": "ElementaryTypeName", "src": "3178:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 532, "mutability": "mutable", "name": "_destination", "nameLocation": "3209:12:2", "nodeType": "VariableDeclaration", "scope": 717, "src": "3201:20:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 531, "name": "address", "nodeType": "ElementaryTypeName", "src": "3201:7:2", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 534, "mutability": "mutable", "name": "_amount", "nameLocation": "3231:7:2", "nodeType": "VariableDeclaration", "scope": 717, "src": "3223:15:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 533, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3223:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 536, "mutability": "mutable", "name": "_startTime", "nameLocation": "3257:10:2", "nodeType": "VariableDeclaration", "scope": 717, "src": "3248:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 535, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3248:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 538, "mutability": "mutable", "name": "_feeRampup", "nameLocation": "3278:10:2", "nodeType": "VariableDeclaration", "scope": 717, "src": "3269:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 537, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3269:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3177:112:2"}, "returnParameters": {"id": 542, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 541, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 717, "src": "3315:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 540, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3315:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "3314:9:2"}, "scope": 949, "src": "3160:1665:2", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 856, "nodeType": "Block", "src": "5134:1103:2", "statements": [{"assignments": [726], "declarations": [{"constant": false, "id": 726, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "5152:27:2", "nodeType": "VariableDeclaration", "scope": 856, "src": "5144:35:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 725, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5144:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 730, "initialValue": {"arguments": [{"id": 728, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5219:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}], "id": 727, "name": "calculateNewProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 948, "src": "5182:36:2", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (struct StructLib.RewardData memory[] memory) view returns (bytes32)"}}, "id": 729, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5182:49:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "5144:87:2"}, {"expression": {"arguments": [{"baseExpression": {"id": 732, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 445, "src": "5249:15:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 734, "indexExpression": {"id": 733, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "5265:27:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5249:44:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964652052657761726444617461206c6973742e", "id": 735, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5295:27:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}, "value": "Invalide RewardData list."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}], "id": 731, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5241:7:2", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5241:82:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 737, "nodeType": "ExpressionStatement", "src": "5241:82:2"}, {"expression": {"id": 740, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 738, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 447, "src": "5333:24:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 739, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 726, "src": "5360:27:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "5333:54:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 741, "nodeType": "ExpressionStatement", "src": "5333:54:2"}, {"body": {"id": 854, "nodeType": "Block", "src": "5442:785:2", "statements": [{"condition": {"baseExpression": {"id": 753, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 441, "src": "5459:19:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 758, "indexExpression": {"expression": {"baseExpression": {"id": 754, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5479:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 756, "indexExpression": {"id": 755, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5491:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5479:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 757, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 1077, "src": "5479:31:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5459:52:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 853, "nodeType": "IfStatement", "src": "5456:761:2", "trueBody": {"id": 852, "nodeType": "Block", "src": "5512:705:2", "statements": [{"assignments": [760], "declarations": [{"constant": false, "id": 760, "mutability": "mutable", "name": "success", "nameLocation": "5535:7:2", "nodeType": "VariableDeclaration", "scope": 852, "src": "5530:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 759, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5530:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 761, "nodeType": "VariableDeclarationStatement", "src": "5530:12:2"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 767, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 762, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5563:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 764, "indexExpression": {"id": 763, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5575:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5563:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 765, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1079, "src": "5563:27:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 766, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 425, "src": "5594:13:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5563:44:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 842, "nodeType": "Block", "src": "5794:334:2", "statements": [{"assignments": [797], "declarations": [{"constant": false, "id": 797, "mutability": "mutable", "name": "token", "nameLocation": "5822:5:2", "nodeType": "VariableDeclaration", "scope": 842, "src": "5816:11:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}, "typeName": {"id": 796, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 795, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1018, "src": "5816:5:2"}, "referencedDeclaration": 1018, "src": "5816:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 804, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 799, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5836:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 801, "indexExpression": {"id": 800, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5848:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5836:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 802, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1079, "src": "5836:27:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 798, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1018, "src": "5830:5:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$1018_$", "typeString": "type(contract ERC20)"}}, "id": 803, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5830:34:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "5816:48:2"}, {"expression": {"id": 817, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 805, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "5886:7:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"baseExpression": {"id": 808, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5911:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 810, "indexExpression": {"id": 809, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5923:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5911:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 811, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 1081, "src": "5911:22:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 812, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5935:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 814, "indexExpression": {"id": 813, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5947:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5935:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 815, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amountPlusFee", "nodeType": "MemberAccess", "referencedDeclaration": 1083, "src": "5935:28:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 806, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 797, "src": "5896:5:2", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1018", "typeString": "contract ERC20"}}, "id": 807, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 981, "src": "5896:14:2", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 816, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5896:68:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5886:78:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 818, "nodeType": "ExpressionStatement", "src": "5886:78:2"}, {"assignments": [820, null], "declarations": [{"constant": false, "id": 820, "mutability": "mutable", "name": "suc", "nameLocation": "5993:3:2", "nodeType": "VariableDeclaration", "scope": 842, "src": "5988:8:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 819, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5988:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 835, "initialValue": {"arguments": [{"hexValue": "", "id": 833, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6059:2:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 823, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "6010:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 825, "indexExpression": {"id": 824, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "6022:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6010:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 826, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 1081, "src": "6010:22:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 822, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6002:8:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 821, "name": "address", "nodeType": "ElementaryTypeName", "src": "6002:8:2", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 827, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6002:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 828, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "6002:36:2", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 832, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 831, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"id": 829, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 434, "src": "6046:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 830, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6056:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "6046:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "6002:56:2", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 834, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6002:60:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5987:75:2"}, {"expression": {"id": 840, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 836, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "6085:7:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 839, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 837, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "6095:7:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"id": 838, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 820, "src": "6106:3:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6095:14:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6085:24:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 841, "nodeType": "ExpressionStatement", "src": "6085:24:2"}]}, "id": 843, "nodeType": "IfStatement", "src": "5560:568:2", "trueBody": {"id": 794, "nodeType": "Block", "src": "5608:182:2", "statements": [{"assignments": [769, null], "declarations": [{"constant": false, "id": 769, "mutability": "mutable", "name": "suc", "nameLocation": "5636:3:2", "nodeType": "VariableDeclaration", "scope": 794, "src": "5631:8:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 768, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5631:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 789, "initialValue": {"arguments": [{"hexValue": "", "id": 787, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5733:2:2", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 772, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5653:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 774, "indexExpression": {"id": 773, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5665:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5653:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 775, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 1081, "src": "5653:22:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 771, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5645:8:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 770, "name": "address", "nodeType": "ElementaryTypeName", "src": "5645:8:2", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 776, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5645:31:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 777, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "5645:36:2", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 786, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 778, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5689:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 780, "indexExpression": {"id": 779, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5701:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5689:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 781, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amountPlusFee", "nodeType": "MemberAccess", "referencedDeclaration": 1083, "src": "5689:28:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 784, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"id": 782, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 434, "src": "5720:9:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 783, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5730:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "5720:11:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5689:42:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "5645:87:2", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 788, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5645:91:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5630:106:2"}, {"expression": {"id": 792, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 790, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "5758:7:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 791, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 769, "src": "5768:3:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5758:13:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 793, "nodeType": "ExpressionStatement", "src": "5758:13:2"}]}}, {"eventCall": {"arguments": [{"expression": {"baseExpression": {"id": 845, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "6161:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 847, "indexExpression": {"id": 846, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "6173:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6161:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}, "id": 848, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 1077, "src": "6161:31:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 849, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 760, "src": "6194:7:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 844, "name": "ClaimPayed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 466, "src": "6150:10:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$", "typeString": "function (bytes32,bool)"}}, "id": 850, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6150:52:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 851, "nodeType": "EmitStatement", "src": "6145:57:2"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 749, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 746, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5413:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 747, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "5417:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 748, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5417:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5413:22:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 855, "initializationExpression": {"assignments": [743], "declarations": [{"constant": false, "id": 743, "mutability": "mutable", "name": "n", "nameLocation": "5406:1:2", "nodeType": "VariableDeclaration", "scope": 855, "src": "5401:6:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 742, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5401:4:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 745, "initialValue": {"hexValue": "30", "id": 744, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5410:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5401:10:2"}, "loopExpression": {"expression": {"id": 751, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5437:3:2", "subExpression": {"id": 750, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 743, "src": "5437:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 752, "nodeType": "ExpressionStatement", "src": "5437:3:2"}, "nodeType": "ForStatement", "src": "5397:830:2"}]}, "documentation": {"id": 718, "nodeType": "StructuredDocumentation", "src": "4831:215:2", "text": "@notice process the processClaims structs to be paid to the liquidity providers\n @param _rewardData is an array of RewardData structs to be paid to liquidity providers(emitted by the destination contract)"}, "functionSelector": "ef4481d1", "id": 857, "implemented": true, "kind": "function", "modifiers": [], "name": "processClaims", "nameLocation": "5060:13:2", "nodeType": "FunctionDefinition", "parameters": {"id": 723, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 722, "mutability": "mutable", "name": "_rewardData", "nameLocation": "5104:11:2", "nodeType": "VariableDeclaration", "scope": 857, "src": "5074:41:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData[]"}, "typeName": {"baseType": {"id": 720, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 719, "name": "StructLib.RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 1084, "src": "5074:20:2"}, "referencedDeclaration": 1084, "src": "5074:20:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_storage_ptr", "typeString": "struct StructLib.RewardData"}}, "id": 721, "nodeType": "ArrayTypeName", "src": "5074:22:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_storage_$dyn_storage_ptr", "typeString": "struct StructLib.RewardData[]"}}, "visibility": "internal"}], "src": "5073:43:2"}, "returnParameters": {"id": 724, "nodeType": "ParameterList", "parameters": [], "src": "5134:0:2"}, "scope": 949, "src": "5051:1186:2", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 875, "nodeType": "Block", "src": "6491:118:2", "statements": [{"expression": {"id": 869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 865, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 445, "src": "6501:15:2", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 867, "indexExpression": {"id": 866, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 860, "src": "6517:19:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6501:36:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 868, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6540:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "6501:43:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 870, "nodeType": "ExpressionStatement", "src": "6501:43:2"}, {"eventCall": {"arguments": [{"id": 872, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 860, "src": "6582:19:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 871, "name": "NewKnownHashOnionAdded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 470, "src": "6559:22:2", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 873, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6559:43:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 874, "nodeType": "EmitStatement", "src": "6554:48:2"}]}, "documentation": {"id": 858, "nodeType": "StructuredDocumentation", "src": "6243:161:2", "text": "@notice this function is only called from the contract at the etherium L1\n @notice through the rollup messenger contract to add a new known hash onion"}, "functionSelector": "a9d72b02", "id": 876, "implemented": true, "kind": "function", "modifiers": [{"id": 863, "kind": "modifierInvocation", "modifierName": {"id": 862, "name": "onlyL1Contract", "nodeType": "IdentifierPath", "referencedDeclaration": 498, "src": "6477:14:2"}, "nodeType": "ModifierInvocation", "src": "6477:14:2"}], "name": "addNewKnownHashOnion", "nameLocation": "6418:20:2", "nodeType": "FunctionDefinition", "parameters": {"id": 861, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 860, "mutability": "mutable", "name": "_newKnownHashOnions", "nameLocation": "6447:19:2", "nodeType": "VariableDeclaration", "scope": 876, "src": "6439:27:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 859, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6439:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "6438:29:2"}, "returnParameters": {"id": 864, "nodeType": "ParameterList", "parameters": [], "src": "6491:0:2"}, "scope": 949, "src": "6409:200:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 886, "nodeType": "Block", "src": "6766:41:2", "statements": [{"expression": {"id": 884, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "6783:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 883, "id": 885, "nodeType": "Return", "src": "6776:24:2"}]}, "documentation": {"id": 877, "nodeType": "StructuredDocumentation", "src": "6615:69:2", "text": "@notice get governance balance\n @return governance balance"}, "functionSelector": "e93aea44", "id": 887, "implemented": true, "kind": "function", "modifiers": [{"id": 880, "kind": "modifierInvocation", "modifierName": {"id": 879, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 511, "src": "6735:14:2"}, "nodeType": "ModifierInvocation", "src": "6735:14:2"}], "name": "GetGovernanceBalance", "nameLocation": "6698:20:2", "nodeType": "FunctionDefinition", "parameters": {"id": 878, "nodeType": "ParameterList", "parameters": [], "src": "6718:2:2"}, "returnParameters": {"id": 883, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 882, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 887, "src": "6758:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 881, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6758:7:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6757:9:2"}, "scope": 949, "src": "6689:118:2", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 905, "nodeType": "Block", "src": "6914:95:2", "statements": [{"expression": {"arguments": [{"id": 898, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "6953:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 895, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 453, "src": "6932:10:2", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 894, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6924:8:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 893, "name": "address", "nodeType": "ElementaryTypeName", "src": "6924:8:2", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 896, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6924:19:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 897, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "6924:28:2", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 899, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6924:47:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 900, "nodeType": "ExpressionStatement", "src": "6924:47:2"}, {"expression": {"id": 903, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 901, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "6981:17:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 902, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7001:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6981:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 904, "nodeType": "ExpressionStatement", "src": "6981:21:2"}]}, "documentation": {"id": 888, "nodeType": "StructuredDocumentation", "src": "6813:35:2", "text": "@notice collect governance fees"}, "functionSelector": "5181353d", "id": 906, "implemented": true, "kind": "function", "modifiers": [{"id": 891, "kind": "modifierInvocation", "modifierName": {"id": 890, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 511, "src": "6900:14:2"}, "nodeType": "ModifierInvocation", "src": "6900:14:2"}], "name": "collectGovernanceFixedFees", "nameLocation": "6862:26:2", "nodeType": "FunctionDefinition", "parameters": {"id": 889, "nodeType": "ParameterList", "parameters": [], "src": "6888:2:2"}, "returnParameters": {"id": 892, "nodeType": "ParameterList", "parameters": [], "src": "6914:0:2"}, "scope": 949, "src": "6853:156:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 947, "nodeType": "Block", "src": "7339:311:2", "statements": [{"assignments": [917], "declarations": [{"constant": false, "id": 917, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "7357:27:2", "nodeType": "VariableDeclaration", "scope": 947, "src": "7349:35:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 916, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7349:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 919, "initialValue": {"id": 918, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 447, "src": "7387:24:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "7349:62:2"}, {"body": {"id": 943, "nodeType": "Block", "src": "7466:134:2", "statements": [{"expression": {"id": 941, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 931, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 917, "src": "7480:27:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 935, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 917, "src": "7545:27:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 936, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 911, "src": "7573:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 938, "indexExpression": {"id": 937, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 921, "src": "7585:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7573:14:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_RewardData_$1084_memory_ptr", "typeString": "struct StructLib.RewardData memory"}], "expression": {"id": 933, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "7534:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 934, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "7534:10:2", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 939, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7534:54:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 932, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "7527:6:2", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 940, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7527:62:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "7480:109:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 942, "nodeType": "ExpressionStatement", "src": "7480:109:2"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 927, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 924, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 921, "src": "7437:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 925, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 911, "src": "7441:11:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData memory[] memory"}}, "id": 926, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "7441:18:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7437:22:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 944, "initializationExpression": {"assignments": [921], "declarations": [{"constant": false, "id": 921, "mutability": "mutable", "name": "n", "nameLocation": "7430:1:2", "nodeType": "VariableDeclaration", "scope": 944, "src": "7425:6:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 920, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7425:4:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 923, "initialValue": {"hexValue": "30", "id": 922, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7434:1:2", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "7425:10:2"}, "loopExpression": {"expression": {"id": 929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "7461:3:2", "subExpression": {"id": 928, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 921, "src": "7461:1:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 930, "nodeType": "ExpressionStatement", "src": "7461:3:2"}, "nodeType": "ForStatement", "src": "7421:179:2"}, {"expression": {"id": 945, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 917, "src": "7616:27:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 915, "id": 946, "nodeType": "Return", "src": "7609:34:2"}]}, "documentation": {"id": 907, "nodeType": "StructuredDocumentation", "src": "7015:200:2", "text": "@notice calculates the new hash onion\n @param _rewardData is an array of RewardData structs to be paid to liquidity providers(emitted by the destination contract)\n @return hash onion"}, "id": 948, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateNewProcessedRewardHashOnion", "nameLocation": "7229:36:2", "nodeType": "FunctionDefinition", "parameters": {"id": 912, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 911, "mutability": "mutable", "name": "_rewardData", "nameLocation": "7296:11:2", "nodeType": "VariableDeclaration", "scope": 948, "src": "7266:41:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_memory_ptr_$dyn_memory_ptr", "typeString": "struct StructLib.RewardData[]"}, "typeName": {"baseType": {"id": 909, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 908, "name": "StructLib.RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 1084, "src": "7266:20:2"}, "referencedDeclaration": 1084, "src": "7266:20:2", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$1084_storage_ptr", "typeString": "struct StructLib.RewardData"}}, "id": 910, "nodeType": "ArrayTypeName", "src": "7266:22:2", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$1084_storage_$dyn_storage_ptr", "typeString": "struct StructLib.RewardData[]"}}, "visibility": "internal"}], "src": "7265:43:2"}, "returnParameters": {"id": 915, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 914, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 948, "src": "7331:7:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 913, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7331:7:2", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "7330:9:2"}, "scope": 949, "src": "7220:430:2", "stateMutability": "view", "virtual": false, "visibility": "private"}], "scope": 950, "src": "295:7357:2", "usedErrors": []}], "src": "31:7621:2"}, "bytecode": "", "bytecodeSha1": "2877a793ee1f3c6cc26ba666e3021af9af15d552", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "SourceDomainSideBridge", "coverageMap": {"branches": {"2": {"SourceDomainSideBridge.addNewKnownHashOnion": {"38": [1907, 1955, false], "39": [1971, 2030, true]}, "SourceDomainSideBridge.processClaims": {"40": [5249, 5293, true], "41": [5459, 5511, false], "42": [5563, 5607, false]}, "SourceDomainSideBridge.transfer": {"32": [3472, 3505, true], "33": [3583, 3613, false], "34": [3636, 3667, true], "35": [3732, 3770, true], "36": [3953, 3975, true], "37": [4277, 4302, false]}}, "3": {}, "4": {}}, "statements": {"2": {"SourceDomainSideBridge.GetGovernanceBalance": {"22": [6776, 6800]}, "SourceDomainSideBridge.addNewKnownHashOnion": {"20": [6501, 6544], "21": [6554, 6602]}, "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion": {"29": [7480, 7589], "30": [7461, 7464], "31": [7609, 7643]}, "SourceDomainSideBridge.collectGovernanceFixedFees": {"0": [6924, 6971], "1": [6981, 7002]}, "SourceDomainSideBridge.processClaims": {"23": [5241, 5323], "24": [5333, 5387], "25": [5886, 5964], "26": [6085, 6109], "27": [6145, 6202], "28": [5437, 5440]}, "SourceDomainSideBridge.transfer": {"2": [3464, 3569], "3": [3628, 3710], "4": [3724, 3794], "5": [3871, 3931], "6": [3945, 4023], "7": [4096, 4137], "8": [4147, 4186], "9": [4196, 4232], "10": [4242, 4264], "11": [4317, 4354], "12": [4383, 4418], "13": [4438, 4473], "14": [4483, 4516], "15": [4527, 4541], "16": [4551, 4602], "17": [4691, 4735], "18": [4746, 4776], "19": [4795, 4818]}}, "3": {}, "4": {}}}, "dependencies": ["ERC20", "ICrossDomainMessenger"], "deployedBytecode": "60806040526004361061009c5760003560e01c80635a1294b7116100645780635a1294b71461014d5780635aa6e6751461017d578063a9d72b02146101b5578063bfd683b3146101d5578063e93aea44146101f1578063ef4481d11461020657600080fd5b8063040c05b6146100a157806313457d88146100e657806323d1b06c146101095780635181353d14610123578063597645a81461013a575b600080fd5b3480156100ad57600080fd5b506100d16100bc366004610c3f565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156100f257600080fd5b506100fb600581565b6040519081526020016100dd565b34801561011557600080fd5b506100fb6502baf524c40081565b34801561012f57600080fd5b50610138610219565b005b6100fb610148366004610c70565b610290565b34801561015957600080fd5b506100d1610168366004610c3f565b60016020526000908152604090205460ff1681565b34801561018957600080fd5b5060055461019d906001600160a01b031681565b6040516001600160a01b0390911681526020016100dd565b3480156101c157600080fd5b506101386101d0366004610c3f565b6106b3565b3480156101e157600080fd5b506100fb67016345785d8a000081565b3480156101fd57600080fd5b506100fb61079b565b610138610214366004610d31565b6107cf565b6005546001600160a01b0316331461024c5760405162461bcd60e51b815260040161024390610e24565b60405180910390fd5b6005546006546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610288573d6000803e3d6000fd5b506000600655565b60008061029e600586610e81565b90506000816102af876103e8610e81565b6102b99190610ea0565b90506102c7866103e8610e81565b6102d18584610e81565b106103445760405162461bcd60e51b815260206004820152603b60248201527f66656552616d707570206d6178696d756d20636f73742073686f756c6420626560448201527f206c657373207468616e2074686520746f74616c20616d6f756e7400000000006064820152608401610243565b6001600160a01b03881661041d5767016345785d8a0000610367876103e8610e81565b106103c35760405162461bcd60e51b815260206004820152602660248201527f416d6f756e7420686967686572207468616e206d6178696d756d207472616465604482015265081b1a5b5a5d60d21b6064820152608401610243565b6103d36502baf524c40082610ea0565b3410156104185760405162461bcd60e51b815260206004820152601360248201527227379029bab33332b1b4b2b73a1032ba3432b960691b6044820152606401610243565b610503565b6040516323b872dd60e01b81523360048201523060248201526044810182905288906001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610472573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104969190610eb8565b506502baf524c4003410156105015760405162461bcd60e51b815260206004820152602b60248201527f4e6f2053756666656369656e7420657468657220666f7220746865206669786560448201526a642065746865722066656560a81b6064820152608401610243565b505b6105556040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808a16825288166020820152610575876103e8610e81565b604082015260608101839052438610156105945743608082015261059c565b608081018690525b60a081018590526004805460c083018190529060006105ba83610ee1565b909155506105d1905060026502baf524c400610efa565b6006546105de9190610ea0565b6006556040516000906002906105f8908490602001610f1c565b60408051601f198184030181529082905261061291610f73565b602060405180830381855afa15801561062f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906106529190610fae565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f899061069e908490610f1c565b60405180910390a19998505050505050505050565b6007602160991b013381148015610740575060035460408051636e296e4560e01b815290516001600160a01b0392831692841691636e296e459160048083019260209291908290030181865afa158015610711573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107359190610fc7565b6001600160a01b0316145b61074957600080fd5b600082815260016020818152604092839020805460ff191690921790915590518381527ff92a8a7980eb38c3c210ad55b80880529bccdbc8206e7cdb24d9f52c6a5171e8910160405180910390a15050565b6005546000906001600160a01b031633146107c85760405162461bcd60e51b815260040161024390610e24565b5060065490565b60006107da82610b5b565b60008181526001602052604090205490915060ff1661083b5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e000000000000006044820152606401610243565b600281905560005b8251811015610b565760008084838151811061086157610861610fe4565b6020908102919091018101515182528101919091526040016000205460ff1615610b44576000806001600160a01b03168483815181106108a3576108a3610fe4565b6020026020010151602001516001600160a01b03160361096e5760008483815181106108d1576108d1610fe4565b6020026020010151604001516001600160a01b031660026502baf524c4006108f99190610efa565b86858151811061090b5761090b610fe4565b6020026020010151606001516109219190610ea0565b604051600081818185875af1925050503d806000811461095d576040519150601f19603f3d011682016040523d82523d6000602084013e610962565b606091505b50909250610ae1915050565b600084838151811061098257610982610fe4565b6020026020010151602001519050806001600160a01b031663a9059cbb8685815181106109b1576109b1610fe4565b6020026020010151604001518786815181106109cf576109cf610fe4565b6020026020010151606001516040518363ffffffff1660e01b8152600401610a0c9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610a2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190610eb8565b91506000858481518110610a6557610a65610fe4565b6020026020010151604001516001600160a01b031660026502baf524c400610a8d9190610efa565b604051600081818185875af1925050503d8060008114610ac9576040519150601f19603f3d011682016040523d82523d6000602084013e610ace565b606091505b50509050828015610adc5750805b925050505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a848381518110610b1457610b14610fe4565b60200260200101516000015182604051610b3a9291909182521515602082015260400190565b60405180910390a1505b80610b4e81610ee1565b915050610843565b505050565b600254600090815b8351811015610c3857600282858381518110610b8157610b81610fe4565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f1981840301815290829052610be491610f73565b602060405180830381855afa158015610c01573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610c249190610fae565b915080610c3081610ee1565b915050610b63565b5092915050565b600060208284031215610c5157600080fd5b5035919050565b6001600160a01b0381168114610c6d57600080fd5b50565b600080600080600060a08688031215610c8857600080fd5b8535610c9381610c58565b94506020860135610ca381610c58565b94979496505050506040830135926060810135926080909101359150565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610cfa57610cfa610cc1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d2957610d29610cc1565b604052919050565b60006020808385031215610d4457600080fd5b823567ffffffffffffffff80821115610d5c57600080fd5b818501915085601f830112610d7057600080fd5b813581811115610d8257610d82610cc1565b610d90848260051b01610d00565b818152848101925060079190911b830184019087821115610db057600080fd5b928401925b81841015610e195760808489031215610dce5760008081fd5b610dd6610cd7565b8435815285850135610de781610c58565b81870152604085810135610dfa81610c58565b9082015260608581013590820152835260809093019291840191610db5565b979650505050505050565b60208082526027908201527f476f7665726e616e63653a20596f7520617265206e6f742074686520476f7665604082015266726e6f7221212160c81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610e9b57610e9b610e6b565b500290565b60008219821115610eb357610eb3610e6b565b500190565b600060208284031215610eca57600080fd5b81518015158114610eda57600080fd5b9392505050565b600060018201610ef357610ef3610e6b565b5060010190565b600082610f1757634e487b7160e01b600052601260045260246000fd5b500490565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610f945760208186018101518583015201610f7a565b81811115610fa3576000828501525b509190910192915050565b600060208284031215610fc057600080fd5b5051919050565b600060208284031215610fd957600080fd5b8151610eda81610c58565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220fd5c249a7efb9e235f8f5256ca2ae9e3bcfb90d13c352d630b211234b16c854064736f6c634300080d0033", "deployedSourceMap": "295:7357:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;874:51;;;;;;;;;;-1:-1:-1;874:51:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;364:14:6;;357:22;339:41;;327:2;312:18;874:51:2;;;;;;;;571:50;;;;;;;;;;;;620:1;571:50;;;;;537:25:6;;;525:2;510:18;571:50:2;391:177:6;646:42:2;;;;;;;;;;;;679:9;646:42;;6853:156;;;;;;;;;;;;;:::i;:::-;;3160:1665;;;;;;:::i;:::-;;:::i;966:47::-;;;;;;;;;;-1:-1:-1;966:47:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;1300:25;;;;;;;;;;-1:-1:-1;1300:25:2;;;;-1:-1:-1;;;;;1300:25:2;;;;;;-1:-1:-1;;;;;1654:32:6;;;1636:51;;1624:2;1609:18;1300:25:2;1490:203:6;6409:200:2;;;;;;;;;;-1:-1:-1;6409:200:2;;;;;:::i;:::-;;:::i;779:48::-;;;;;;;;;;;;818:9;779:48;;6689:118;;;;;;;;;;;;;:::i;5051:1186::-;;;;;;:::i;:::-;;:::i;6853:156::-;2211:10;;-1:-1:-1;;;;;2211:10:2;2197;:24;2189:76;;;;-1:-1:-1;;;2189:76:2;;;;;;;:::i;:::-;;;;;;;;;6932:10:::1;::::0;6953:17:::1;::::0;6924:47:::1;::::0;-1:-1:-1;;;;;6932:10:2;;::::1;::::0;6924:47;::::1;;;::::0;6953:17;6932:10:::1;6924:47:::0;6932:10;6924:47;6953:17;6932:10;6924:47;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;7001:1:2::1;6981:17;:21:::0;6853:156::o;3160:1665::-;3315:7;;3356:35;620:1;3356:7;:35;:::i;:::-;3342:49;-1:-1:-1;3401:21:2;3342:49;3425:14;:7;3435:4;3425:14;:::i;:::-;:20;;;;:::i;:::-;3401:44;-1:-1:-1;3491:14:2;:7;3501:4;3491:14;:::i;:::-;3472:16;3478:10;3472:3;:16;:::i;:::-;:33;3464:105;;;;-1:-1:-1;;;3464:105:2;;4997:2:6;3464:105:2;;;4979:21:6;5036:2;5016:18;;;5009:30;5075:34;5055:18;;;5048:62;5146:29;5126:18;;;5119:57;5193:19;;3464:105:2;4795:423:6;3464:105:2;-1:-1:-1;;;;;3583:30:2;;3580:454;;818:9;3636:13;:7;3645:4;3636:13;:::i;:::-;:31;3628:82;;;;-1:-1:-1;;;3628:82:2;;5425:2:6;3628:82:2;;;5407:21:6;5464:2;5444:18;;;5437:30;5503:34;5483:18;;;5476:62;-1:-1:-1;;;5554:18:6;;;5547:36;5600:19;;3628:82:2;5223:402:6;3628:82:2;3745:25;679:9;3745:13;:25;:::i;:::-;3732:9;:38;;3724:70;;;;-1:-1:-1;;;3724:70:2;;5832:2:6;3724:70:2;;;5814:21:6;5871:2;5851:18;;;5844:30;-1:-1:-1;;;5890:18:6;;;5883:49;5949:18;;3724:70:2;5630:343:6;3724:70:2;3580:454;;;3871:60;;-1:-1:-1;;;3871:60:2;;3890:10;3871:60;;;6218:34:6;3910:4:2;6268:18:6;;;6261:43;6320:18;;;6313:34;;;3843:13:2;;-1:-1:-1;;;;;3871:18:2;;;;;6153::6;;3871:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;679:9;3953;:22;;3945:78;;;;-1:-1:-1;;;3945:78:2;;6842:2:6;3945:78:2;;;6824:21:6;6881:2;6861:18;;;6854:30;6920:34;6900:18;;;6893:62;-1:-1:-1;;;6971:18:6;;;6964:41;7022:19;;3945:78:2;6640:407:6;3945:78:2;3809:225;3580:454;4044:42;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:42:2;-1:-1:-1;;;;;4096:41:2;;;;;4147:39;;:24;;;:39;4218:14;:7;4228:4;4218:14;:::i;:::-;4196:19;;;:36;4242:16;;;:22;;;4290:12;4277:25;;4274:155;;;4342:12;4317:22;;;:37;4274:155;;;4383:22;;;:35;;;4274:155;4438:22;;;:35;;;4504:12;;;4483:18;;;:33;;;4504:12;-1:-1:-1;4527:14:2;4504:12;4527:14;:::i;:::-;;;;-1:-1:-1;4591:11:2;;-1:-1:-1;4601:1:2;679:9;4591:11;:::i;:::-;4571:17;;:31;;;;:::i;:::-;4551:17;:51;4647:24;;4613;;4640:32;;4647:24;;4658:12;;4647:24;;;:::i;:::-;;;;-1:-1:-1;;4647:24:2;;;;;;;;;;4640:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4691:19;:37;;;;;;;;;;;;:44;;-1:-1:-1;;4691:44:2;4731:4;4691:44;;;4751:25;4613:59;;-1:-1:-1;4751:25:2;;;;4763:12;;4751:25;:::i;:::-;;;;;;;;4802:16;3160:1665;-1:-1:-1;;;;;;;;;3160:1665:2:o;6409:200::-;-1:-1:-1;;;;;1907:10:2;:48;;:123;;;;-1:-1:-1;2003:27:2;;1971:28;;;-1:-1:-1;;;1971:28:2;;;;-1:-1:-1;;;;;2003:27:2;;;;1971:26;;;;;:28;;;;;;;;;;;;;;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1971:59:2;;1907:123;1886:154;;;;;;6501:36:::1;::::0;;;6540:4:::1;6501:36;::::0;;;;;;;;:43;;-1:-1:-1;;6501:43:2::1;::::0;;::::1;::::0;;;6559;;537:25:6;;;6559:43:2::1;::::0;510:18:6;6559:43:2::1;;;;;;;1788:270:::0;6409:200;:::o;6689:118::-;2211:10;;6758:7;;-1:-1:-1;;;;;2211:10:2;2197;:24;2189:76;;;;-1:-1:-1;;;2189:76:2;;;;;;;:::i;:::-;-1:-1:-1;6783:17:2::1;::::0;6689:118;:::o;5051:1186::-;5144:35;5182:49;5219:11;5182:36;:49::i;:::-;5249:44;;;;:15;:44;;;;;;5144:87;;-1:-1:-1;5249:44:2;;5241:82;;;;-1:-1:-1;;;5241:82:2;;9176:2:6;5241:82:2;;;9158:21:6;9215:2;9195:18;;;9188:30;9254:27;9234:18;;;9227:55;9299:18;;5241:82:2;8974:349:6;5241:82:2;5333:24;:54;;;5401:6;5397:830;5417:11;:18;5413:1;:22;5397:830;;;5459:19;:52;5479:11;5491:1;5479:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;5459:52;;;;;;;;;;5479:31;5459:52;;;;5456:761;;;5530:12;367:42;-1:-1:-1;;;;;5563:44:2;:11;5575:1;5563:14;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;5563:44:2;;5560:568;;5631:8;5653:11;5665:1;5653:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;5645:36:2;5730:1;679:9;5720:11;;;;:::i;:::-;5689;5701:1;5689:14;;;;;;;;:::i;:::-;;;;;;;:28;;;:42;;;;:::i;:::-;5645:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5630:106:2;;-1:-1:-1;5560:568:2;;-1:-1:-1;;5560:568:2;;5816:11;5836;5848:1;5836:14;;;;;;;;:::i;:::-;;;;;;;:27;;;5816:48;;5896:5;-1:-1:-1;;;;;5896:14:2;;5911:11;5923:1;5911:14;;;;;;;;:::i;:::-;;;;;;;:22;;;5935:11;5947:1;5935:14;;;;;;;;:::i;:::-;;;;;;;:28;;;5896:68;;;;;;;;;;;;;;;-1:-1:-1;;;;;9862:32:6;;;;9844:51;;9926:2;9911:18;;9904:34;9832:2;9817:18;;9670:274;5896:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5886:78;;5988:8;6010:11;6022:1;6010:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;6002:36:2;6056:1;679:9;6046:11;;;;:::i;:::-;6002:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5987:75;;;6095:7;:14;;;;;6106:3;6095:14;6085:24;;5794:334;;5560:568;6150:52;6161:11;6173:1;6161:14;;;;;;;;:::i;:::-;;;;;;;:31;;;6194:7;6150:52;;;;;;10117:25:6;;;10185:14;10178:22;10173:2;10158:18;;10151:50;10105:2;10090:18;;9949:258;6150:52:2;;;;;;;;5512:705;5456:761;5437:3;;;;:::i;:::-;;;;5397:830;;;;5134:1103;5051:1186;:::o;7220:430::-;7387:24;;7331:7;;;7421:179;7441:11;:18;7437:1;:22;7421:179;;;7527:62;7545:27;7573:11;7585:1;7573:14;;;;;;;;:::i;:::-;;;;;;;;;;;;7534:54;;;;;;10443:25:6;;;;10504:13;;10484:18;;;10477:41;10553:15;;;10547:22;-1:-1:-1;;;;;10643:21:6;;;10623:18;;;;10616:49;;;;10711:15;;;10705:22;10701:31;10681:18;;;10674:59;10776:15;10770:22;10749:19;;;10742:51;10415:19;;7534:54:2;;;-1:-1:-1;;7534:54:2;;;;;;;;;;7527:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7480:109;-1:-1:-1;7461:3:2;;;;:::i;:::-;;;;7421:179;;;-1:-1:-1;7616:27:2;7220:430;-1:-1:-1;;7220:430:2:o;14:180:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:6;;14:180;-1:-1:-1;14:180:6:o;573:131::-;-1:-1:-1;;;;;648:31:6;;638:42;;628:70;;694:1;691;684:12;628:70;573:131;:::o;709:594::-;804:6;812;820;828;836;889:3;877:9;868:7;864:23;860:33;857:53;;;906:1;903;896:12;857:53;945:9;932:23;964:31;989:5;964:31;:::i;:::-;1014:5;-1:-1:-1;1071:2:6;1056:18;;1043:32;1084:33;1043:32;1084:33;:::i;:::-;709:594;;1136:7;;-1:-1:-1;;;;1190:2:6;1175:18;;1162:32;;1241:2;1226:18;;1213:32;;1292:3;1277:19;;;1264:33;;-1:-1:-1;709:594:6:o;1698:127::-;1759:10;1754:3;1750:20;1747:1;1740:31;1790:4;1787:1;1780:15;1814:4;1811:1;1804:15;1830:253;1902:2;1896:9;1944:4;1932:17;;1979:18;1964:34;;2000:22;;;1961:62;1958:88;;;2026:18;;:::i;:::-;2062:2;2055:22;1830:253;:::o;2088:275::-;2159:2;2153:9;2224:2;2205:13;;-1:-1:-1;;2201:27:6;2189:40;;2259:18;2244:34;;2280:22;;;2241:62;2238:88;;;2306:18;;:::i;:::-;2342:2;2335:22;2088:275;;-1:-1:-1;2088:275:6:o;2368:1576::-;2480:6;2511:2;2554;2542:9;2533:7;2529:23;2525:32;2522:52;;;2570:1;2567;2560:12;2522:52;2610:9;2597:23;2639:18;2680:2;2672:6;2669:14;2666:34;;;2696:1;2693;2686:12;2666:34;2734:6;2723:9;2719:22;2709:32;;2779:7;2772:4;2768:2;2764:13;2760:27;2750:55;;2801:1;2798;2791:12;2750:55;2837:2;2824:16;2859:2;2855;2852:10;2849:36;;;2865:18;;:::i;:::-;2905:36;2937:2;2932;2929:1;2925:10;2921:19;2905:36;:::i;:::-;2975:15;;;3006:12;;;;-1:-1:-1;3057:1:6;3053:10;;;;3045:19;;3041:28;;;3081:19;;;3078:39;;;3113:1;3110;3103:12;3078:39;3137:11;;;;3157:757;3173:6;3168:3;3165:15;3157:757;;;3255:4;3249:3;3240:7;3236:17;3232:28;3229:118;;;3301:1;3330:2;3326;3319:14;3229:118;3373:22;;:::i;:::-;3435:3;3422:17;3415:5;3408:32;3490:2;3485:3;3481:12;3468:26;3507:33;3532:7;3507:33;:::i;:::-;3560:14;;;3553:31;3607:2;3650:12;;;3637:26;3676:33;3637:26;3676:33;:::i;:::-;3729:14;;;3722:31;3776:2;3827:12;;;3814:26;3798:14;;;3791:50;3854:18;;3199:4;3190:14;;;;3892:12;;;;3157:757;;;3933:5;2368:1576;-1:-1:-1;;;;;;;2368:1576:6:o;3949:403::-;4151:2;4133:21;;;4190:2;4170:18;;;4163:30;4229:34;4224:2;4209:18;;4202:62;-1:-1:-1;;;4295:2:6;4280:18;;4273:37;4342:3;4327:19;;3949:403::o;4357:127::-;4418:10;4413:3;4409:20;4406:1;4399:31;4449:4;4446:1;4439:15;4473:4;4470:1;4463:15;4489:168;4529:7;4595:1;4591;4587:6;4583:14;4580:1;4577:21;4572:1;4565:9;4558:17;4554:45;4551:71;;;4602:18;;:::i;:::-;-1:-1:-1;4642:9:6;;4489:168::o;4662:128::-;4702:3;4733:1;4729:6;4726:1;4723:13;4720:39;;;4739:18;;:::i;:::-;-1:-1:-1;4775:9:6;;4662:128::o;6358:277::-;6425:6;6478:2;6466:9;6457:7;6453:23;6449:32;6446:52;;;6494:1;6491;6484:12;6446:52;6526:9;6520:16;6579:5;6572:13;6565:21;6558:5;6555:32;6545:60;;6601:1;6598;6591:12;6545:60;6624:5;6358:277;-1:-1:-1;;;6358:277:6:o;7052:135::-;7091:3;7112:17;;;7109:43;;7132:18;;:::i;:::-;-1:-1:-1;7179:1:6;7168:13;;7052:135::o;7192:217::-;7232:1;7258;7248:132;;7302:10;7297:3;7293:20;7290:1;7283:31;7337:4;7334:1;7327:15;7365:4;7362:1;7355:15;7248:132;-1:-1:-1;7394:9:6;;7192:217::o;7414:679::-;7681:13;;-1:-1:-1;;;;;7677:22:6;;;7659:41;;7760:4;7748:17;;;7742:24;7738:33;;;7716:20;;;7709:63;7828:4;7816:17;;;7810:24;7788:20;;;7781:54;7891:4;7879:17;;;7873:24;7851:20;;;7844:54;7954:4;7942:17;;;7936:24;7914:20;;;7907:54;7639:3;8005:17;;;7999:24;7977:20;;;7970:54;8080:4;8068:17;;;8062:24;8040:20;;;8033:54;;;;7608:3;7593:19;;7414:679::o;8098:426::-;8227:3;8265:6;8259:13;8290:1;8300:129;8314:6;8311:1;8308:13;8300:129;;;8412:4;8396:14;;;8392:25;;8386:32;8373:11;;;8366:53;8329:12;8300:129;;;8447:6;8444:1;8441:13;8438:48;;;8482:1;8473:6;8468:3;8464:16;8457:27;8438:48;-1:-1:-1;8502:16:6;;;;;8098:426;-1:-1:-1;;8098:426:6:o;8529:184::-;8599:6;8652:2;8640:9;8631:7;8627:23;8623:32;8620:52;;;8668:1;8665;8658:12;8620:52;-1:-1:-1;8691:16:6;;8529:184;-1:-1:-1;8529:184:6:o;8718:251::-;8788:6;8841:2;8829:9;8820:7;8816:23;8812:32;8809:52;;;8857:1;8854;8847:12;8809:52;8889:9;8883:16;8908:31;8933:5;8908:31;:::i;9328:127::-;9389:10;9384:3;9380:20;9377:1;9370:31;9420:4;9417:1;9410:15;9444:4;9441:1;9434:15", "language": "Solidity", "natspec": {"author": "Sherif Abdelmoatty", "kind": "dev", "methods": {"GetGovernanceBalance()": {"notice": "get governance balance", "returns": {"_0": "governance balance"}}, "addNewKnownHashOnion(bytes32)": {"notice": "this function is only called from the contract at the etherium L1through the rollup messenger contract to add a new known hash onion"}, "collectGovernanceFixedFees()": {"notice": "collect governance fees"}, "constructor": {"params": {"_l1DomainSideContractAddress": "is the address of the contract in etherium/kovan L1"}}, "processClaims((bytes32,address,address,uint256)[])": {"notice": "process the processClaims structs to be paid to the liquidity providers", "params": {"_rewardData": "is an array of RewardData structs to be paid to liquidity providers(emitted by the destination contract)"}}, "transfer(address,address,uint256,uint256,uint256)": {"notice": "transfer the required funds plus fees to be sent to the current contract balance", "params": {"_amount": "is amount to be transfered in kwei", "_destination": "is reciever address at the destination rollup", "_feeRampup": "will be multiplied by the fee ramp up if the LP claimed and sent the transfer by the startTime block, and will decrease by one for each block after that", "_startTime": "is a blocknumber in the future that this transaction can only be executed after", "_tokenAddress": "at destination rollup"}, "returns": {"_0": "the hash of the valid transfer"}}}, "notice": "This contract is to be deployed in the source rollup", "title": "SourceDomainSideBridge Contract", "version": 1}, "offset": [295, 7652], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A1294B7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x5A1294B7 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA9D72B02 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xBFD683B3 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE93AEA44 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xEF4481D1 EQ PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C05B6 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x13457D88 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23D1B06C EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x5181353D EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x597645A8 EQ PUSH2 0x13A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH6 0x2BAF524C400 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x19D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH2 0x79B JUMP JUMPDEST PUSH2 0x138 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x243 SWAP1 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x288 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29E PUSH1 0x5 DUP7 PUSH2 0xE81 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x2AF DUP8 PUSH2 0x3E8 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C7 DUP7 PUSH2 0x3E8 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x2D1 DUP6 DUP5 PUSH2 0xE81 JUMP JUMPDEST LT PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66656552616D707570206D6178696D756D20636F73742073686F756C64206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206C657373207468616E2074686520746F74616C20616D6F756E740000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x243 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x41D JUMPI PUSH8 0x16345785D8A0000 PUSH2 0x367 DUP8 PUSH2 0x3E8 PUSH2 0xE81 JUMP JUMPDEST LT PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420686967686572207468616E206D6178696D756D207472616465 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x81B1A5B5A5D PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x243 JUMP JUMPDEST PUSH2 0x3D3 PUSH6 0x2BAF524C400 DUP3 PUSH2 0xEA0 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27379029BAB33332B1B4B2B73A1032BA3432B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x243 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST POP PUSH6 0x2BAF524C400 CALLVALUE LT ISZERO PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2053756666656369656E7420657468657220666F72207468652066697865 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6420657468657220666565 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x243 JUMP JUMPDEST POP JUMPDEST PUSH2 0x555 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP3 MSTORE DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x575 DUP8 PUSH2 0x3E8 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE NUMBER DUP7 LT ISZERO PUSH2 0x594 JUMPI NUMBER PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x59C JUMP JUMPDEST PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH1 0x0 PUSH2 0x5BA DUP4 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5D1 SWAP1 POP PUSH1 0x2 PUSH6 0x2BAF524C400 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x5F8 SWAP1 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x612 SWAP2 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89 SWAP1 PUSH2 0x69E SWAP1 DUP5 SWAP1 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x21 PUSH1 0x99 SHL ADD CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x740 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6E296E45 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP5 AND SWAP2 PUSH4 0x6E296E45 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x711 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x735 SWAP2 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0xF92A8A7980EB38C3C210AD55B80880529BCCDBC8206E7CDB24D9F52C6A5171E8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x243 SWAP1 PUSH2 0xE24 JUMP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DA DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964652052657761726444617461206C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x243 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x861 JUMPI PUSH2 0x861 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8A3 JUMPI PUSH2 0x8A3 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x96E JUMPI PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8D1 JUMPI PUSH2 0x8D1 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH6 0x2BAF524C400 PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0xEFA JUMP JUMPDEST DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x90B JUMPI PUSH2 0x90B PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH2 0x921 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x962 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP PUSH2 0xAE1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x9B1 JUMPI PUSH2 0x9B1 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x9CF JUMPI PUSH2 0x9CF PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0C SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4F SWAP2 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH6 0x2BAF524C400 PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAC9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xACE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xADC JUMPI POP DUP1 JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH32 0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB14 JUMPI PUSH2 0xB14 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xB3A SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST DUP1 PUSH2 0xB4E DUP2 PUSH2 0xEE1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x843 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC38 JUMPI PUSH1 0x2 DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB81 JUMPI PUSH2 0xB81 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 MLOAD DUP5 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP3 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xBE4 SWAP2 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xC30 DUP2 PUSH2 0xEE1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB63 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xC93 DUP2 PUSH2 0xC58 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xCA3 DUP2 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCFA JUMPI PUSH2 0xCFA PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD29 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD82 JUMPI PUSH2 0xD82 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xD90 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xD00 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xE19 JUMPI PUSH1 0x80 DUP5 DUP10 SUB SLT ISZERO PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDD6 PUSH2 0xCD7 JUMP JUMPDEST DUP5 CALLDATALOAD DUP2 MSTORE DUP6 DUP6 ADD CALLDATALOAD PUSH2 0xDE7 DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP6 DUP2 ADD CALLDATALOAD PUSH2 0xDFA DUP2 PUSH2 0xC58 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A20596F7520617265206E6F742074686520476F7665 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x726E6F72212121 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0xE6B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB3 PUSH2 0xE6B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xEF3 JUMPI PUSH2 0xEF3 PUSH2 0xE6B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF17 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF94 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xF7A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xFA3 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xEDA DUP2 PUSH2 0xC58 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0x5C 0x24 SWAP11 PUSH31 0xFB9E235F8F5256CA2AE9E3BCFB90D13C352D630B211234B16C854064736F6C PUSH4 0x4300080D STOP CALLER ", "pcMap": {"0": {"offset": [295, 7652], "op": "PUSH1", "path": "2", "value": "0x80"}, "2": {"fn": null, "offset": [295, 7652], "op": "PUSH1", "path": "2", "value": "0x40"}, "4": {"fn": null, "offset": [295, 7652], "op": "MSTORE", "path": "2"}, "5": {"fn": null, "offset": [295, 7652], "op": "PUSH1", "path": "2", "value": "0x4"}, "7": {"fn": null, "offset": [295, 7652], "op": "CALLDATASIZE", "path": "2"}, "8": {"fn": null, "offset": [295, 7652], "op": "LT", "path": "2"}, "9": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x9C"}, "12": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "13": {"fn": null, "offset": [295, 7652], "op": "PUSH1", "path": "2", "value": "0x0"}, "15": {"fn": null, "offset": [295, 7652], "op": "CALLDATALOAD", "path": "2"}, "16": {"fn": null, "offset": [295, 7652], "op": "PUSH1", "path": "2", "value": "0xE0"}, "18": {"fn": null, "offset": [295, 7652], "op": "SHR", "path": "2"}, "19": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "20": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0x5A1294B7"}, "25": {"fn": null, "offset": [295, 7652], "op": "GT", "path": "2"}, "26": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x64"}, "29": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "30": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "31": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0x5A1294B7"}, "36": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "37": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x14D"}, "40": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "41": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "42": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0x5AA6E675"}, "47": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "48": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x17D"}, "51": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "52": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "53": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0xA9D72B02"}, "58": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "59": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x1B5"}, "62": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "63": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "64": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0xBFD683B3"}, "69": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "70": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x1D5"}, "73": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "74": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "75": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0xE93AEA44"}, "80": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "81": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x1F1"}, "84": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "85": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "86": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0xEF4481D1"}, "91": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "92": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x206"}, "95": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "96": {"fn": null, "offset": [295, 7652], "op": "PUSH1", "path": "2", "value": "0x0"}, "98": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "99": {"fn": null, "offset": [295, 7652], "op": "REVERT", "path": "2"}, "100": {"fn": null, "offset": [295, 7652], "op": "JUMPDEST", "path": "2"}, "101": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "102": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0x40C05B6"}, "107": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "108": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0xA1"}, "111": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "112": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "113": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0x13457D88"}, "118": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "119": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0xE6"}, "122": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "123": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "124": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0x23D1B06C"}, "129": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "130": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x109"}, "133": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "134": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "135": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0x5181353D"}, "140": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "141": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x123"}, "144": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "145": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "146": {"fn": null, "offset": [295, 7652], "op": "PUSH4", "path": "2", "value": "0x597645A8"}, "151": {"fn": null, "offset": [295, 7652], "op": "EQ", "path": "2"}, "152": {"fn": null, "offset": [295, 7652], "op": "PUSH2", "path": "2", "value": "0x13A"}, "155": {"fn": null, "offset": [295, 7652], "op": "JUMPI", "path": "2"}, "156": {"fn": null, "offset": [295, 7652], "op": "JUMPDEST", "path": "2"}, "157": {"fn": null, "offset": [295, 7652], "op": "PUSH1", "path": "2", "value": "0x0"}, "159": {"fn": null, "offset": [295, 7652], "op": "DUP1", "path": "2"}, "160": {"first_revert": true, "fn": null, "offset": [295, 7652], "op": "REVERT", "path": "2"}, "161": {"offset": [874, 925], "op": "JUMPDEST", "path": "2"}, "162": {"fn": null, "offset": [874, 925], "op": "CALLVALUE", "path": "2"}, "163": {"fn": null, "offset": [874, 925], "op": "DUP1", "path": "2"}, "164": {"fn": null, "offset": [874, 925], "op": "ISZERO", "path": "2"}, "165": {"fn": null, "offset": [874, 925], "op": "PUSH2", "path": "2", "value": "0xAD"}, "168": {"fn": null, "offset": [874, 925], "op": "JUMPI", "path": "2"}, "169": {"fn": null, "offset": [874, 925], "op": "PUSH1", "path": "2", "value": "0x0"}, "171": {"fn": null, "offset": [874, 925], "op": "DUP1", "path": "2"}, "172": {"fn": null, "offset": [874, 925], "op": "REVERT", "path": "2"}, "173": {"fn": null, "offset": [874, 925], "op": "JUMPDEST", "path": "2"}, "174": {"op": "POP"}, "175": {"offset": [874, 925], "op": "PUSH2", "path": "2", "value": "0xD1"}, "178": {"fn": null, "offset": [874, 925], "op": "PUSH2", "path": "2", "value": "0xBC"}, "181": {"fn": null, "offset": [874, 925], "op": "CALLDATASIZE", "path": "2"}, "182": {"fn": null, "offset": [874, 925], "op": "PUSH1", "path": "2", "value": "0x4"}, "184": {"fn": null, "offset": [874, 925], "op": "PUSH2", "path": "2", "value": "0xC3F"}, "187": {"fn": null, "jump": "i", "offset": [874, 925], "op": "JUMP", "path": "2"}, "188": {"fn": null, "offset": [874, 925], "op": "JUMPDEST", "path": "2"}, "189": {"fn": null, "offset": [874, 925], "op": "PUSH1", "path": "2", "value": "0x0"}, "191": {"fn": null, "offset": [874, 925], "op": "PUSH1", "path": "2", "value": "0x20"}, "193": {"fn": null, "offset": [874, 925], "op": "DUP2", "path": "2"}, "194": {"fn": null, "offset": [874, 925], "op": "SWAP1", "path": "2"}, "195": {"fn": null, "offset": [874, 925], "op": "MSTORE", "path": "2"}, "196": {"fn": null, "offset": [874, 925], "op": "SWAP1", "path": "2"}, "197": {"fn": null, "offset": [874, 925], "op": "DUP2", "path": "2"}, "198": {"fn": null, "offset": [874, 925], "op": "MSTORE", "path": "2"}, "199": {"fn": null, "offset": [874, 925], "op": "PUSH1", "path": "2", "value": "0x40"}, "201": {"fn": null, "offset": [874, 925], "op": "SWAP1", "path": "2"}, "202": {"fn": null, "offset": [874, 925], "op": "KECCAK256", "path": "2"}, "203": {"fn": null, "offset": [874, 925], "op": "SLOAD", "path": "2"}, "204": {"fn": null, "offset": [874, 925], "op": "PUSH1", "path": "2", "value": "0xFF"}, "206": {"fn": null, "offset": [874, 925], "op": "AND", "path": "2"}, "207": {"fn": null, "offset": [874, 925], "op": "DUP2", "path": "2"}, "208": {"fn": null, "offset": [874, 925], "op": "JUMP", "path": "2"}, "209": {"fn": null, "offset": [874, 925], "op": "JUMPDEST", "path": "2"}, "210": {"fn": null, "offset": [874, 925], "op": "PUSH1", "path": "2", "value": "0x40"}, "212": {"fn": null, "offset": [874, 925], "op": "MLOAD", "path": "2"}, "213": {"op": "SWAP1"}, "214": {"op": "ISZERO"}, "215": {"op": "ISZERO"}, "216": {"op": "DUP2"}, "217": {"op": "MSTORE"}, "218": {"op": "PUSH1", "value": "0x20"}, "220": {"op": "ADD"}, "221": {"offset": [874, 925], "op": "JUMPDEST", "path": "2"}, "222": {"fn": null, "offset": [874, 925], "op": "PUSH1", "path": "2", "value": "0x40"}, "224": {"fn": null, "offset": [874, 925], "op": "MLOAD", "path": "2"}, "225": {"fn": null, "offset": [874, 925], "op": "DUP1", "path": "2"}, "226": {"fn": null, "offset": [874, 925], "op": "SWAP2", "path": "2"}, "227": {"fn": null, "offset": [874, 925], "op": "SUB", "path": "2"}, "228": {"fn": null, "offset": [874, 925], "op": "SWAP1", "path": "2"}, "229": {"fn": null, "offset": [874, 925], "op": "RETURN", "path": "2"}, "230": {"offset": [571, 621], "op": "JUMPDEST", "path": "2"}, "231": {"fn": null, "offset": [571, 621], "op": "CALLVALUE", "path": "2"}, "232": {"fn": null, "offset": [571, 621], "op": "DUP1", "path": "2"}, "233": {"fn": null, "offset": [571, 621], "op": "ISZERO", "path": "2"}, "234": {"fn": null, "offset": [571, 621], "op": "PUSH2", "path": "2", "value": "0xF2"}, "237": {"fn": null, "offset": [571, 621], "op": "JUMPI", "path": "2"}, "238": {"fn": null, "offset": [571, 621], "op": "PUSH1", "path": "2", "value": "0x0"}, "240": {"fn": null, "offset": [571, 621], "op": "DUP1", "path": "2"}, "241": {"fn": null, "offset": [571, 621], "op": "REVERT", "path": "2"}, "242": {"fn": null, "offset": [571, 621], "op": "JUMPDEST", "path": "2"}, "243": {"fn": null, "offset": [571, 621], "op": "POP", "path": "2"}, "244": {"fn": null, "offset": [571, 621], "op": "PUSH2", "path": "2", "value": "0xFB"}, "247": {"offset": [620, 621], "op": "PUSH1", "path": "2", "value": "0x5"}, "249": {"offset": [571, 621], "op": "DUP2", "path": "2"}, "250": {"fn": null, "offset": [571, 621], "op": "JUMP", "path": "2"}, "251": {"fn": null, "offset": [571, 621], "op": "JUMPDEST", "path": "2"}, "252": {"fn": null, "offset": [571, 621], "op": "PUSH1", "path": "2", "value": "0x40"}, "254": {"fn": null, "offset": [571, 621], "op": "MLOAD", "path": "2"}, "255": {"op": "SWAP1"}, "256": {"op": "DUP2"}, "257": {"op": "MSTORE"}, "258": {"op": "PUSH1", "value": "0x20"}, "260": {"op": "ADD"}, "261": {"offset": [571, 621], "op": "PUSH2", "path": "2", "value": "0xDD"}, "264": {"op": "JUMP"}, "265": {"offset": [646, 688], "op": "JUMPDEST", "path": "2"}, "266": {"fn": null, "offset": [646, 688], "op": "CALLVALUE", "path": "2"}, "267": {"fn": null, "offset": [646, 688], "op": "DUP1", "path": "2"}, "268": {"fn": null, "offset": [646, 688], "op": "ISZERO", "path": "2"}, "269": {"fn": null, "offset": [646, 688], "op": "PUSH2", "path": "2", "value": "0x115"}, "272": {"fn": null, "offset": [646, 688], "op": "JUMPI", "path": "2"}, "273": {"fn": null, "offset": [646, 688], "op": "PUSH1", "path": "2", "value": "0x0"}, "275": {"fn": null, "offset": [646, 688], "op": "DUP1", "path": "2"}, "276": {"fn": null, "offset": [646, 688], "op": "REVERT", "path": "2"}, "277": {"fn": null, "offset": [646, 688], "op": "JUMPDEST", "path": "2"}, "278": {"fn": null, "offset": [646, 688], "op": "POP", "path": "2"}, "279": {"fn": null, "offset": [646, 688], "op": "PUSH2", "path": "2", "value": "0xFB"}, "282": {"offset": [679, 688], "op": "PUSH6", "path": "2", "value": "0x2BAF524C400"}, "289": {"offset": [646, 688], "op": "DUP2", "path": "2"}, "290": {"fn": null, "offset": [646, 688], "op": "JUMP", "path": "2"}, "291": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "JUMPDEST", "path": "2"}, "292": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "CALLVALUE", "path": "2"}, "293": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "DUP1", "path": "2"}, "294": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "ISZERO", "path": "2"}, "295": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "PUSH2", "path": "2", "value": "0x12F"}, "298": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "JUMPI", "path": "2"}, "299": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "PUSH1", "path": "2", "value": "0x0"}, "301": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "DUP1", "path": "2"}, "302": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "REVERT", "path": "2"}, "303": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "JUMPDEST", "path": "2"}, "304": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "POP", "path": "2"}, "305": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "PUSH2", "path": "2", "value": "0x138"}, "308": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "PUSH2", "path": "2", "value": "0x219"}, "311": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "i", "offset": [6853, 7009], "op": "JUMP", "path": "2"}, "312": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "JUMPDEST", "path": "2"}, "313": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "STOP", "path": "2"}, "314": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "JUMPDEST", "path": "2"}, "315": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "PUSH2", "path": "2", "value": "0xFB"}, "318": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "PUSH2", "path": "2", "value": "0x148"}, "321": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "CALLDATASIZE", "path": "2"}, "322": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "PUSH1", "path": "2", "value": "0x4"}, "324": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "PUSH2", "path": "2", "value": "0xC70"}, "327": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3160, 4825], "op": "JUMP", "path": "2"}, "328": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "JUMPDEST", "path": "2"}, "329": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "PUSH2", "path": "2", "value": "0x290"}, "332": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3160, 4825], "op": "JUMP", "path": "2"}, "333": {"offset": [966, 1013], "op": "JUMPDEST", "path": "2"}, "334": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "CALLVALUE", "path": "2"}, "335": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "DUP1", "path": "2"}, "336": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "ISZERO", "path": "2"}, "337": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH2", "path": "2", "value": "0x159"}, "340": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "JUMPI", "path": "2"}, "341": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH1", "path": "2", "value": "0x0"}, "343": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "DUP1", "path": "2"}, "344": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "REVERT", "path": "2"}, "345": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "JUMPDEST", "path": "2"}, "346": {"op": "POP"}, "347": {"offset": [966, 1013], "op": "PUSH2", "path": "2", "value": "0xD1"}, "350": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH2", "path": "2", "value": "0x168"}, "353": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "CALLDATASIZE", "path": "2"}, "354": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH1", "path": "2", "value": "0x4"}, "356": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH2", "path": "2", "value": "0xC3F"}, "359": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [966, 1013], "op": "JUMP", "path": "2"}, "360": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "JUMPDEST", "path": "2"}, "361": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH1", "path": "2", "value": "0x1"}, "363": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH1", "path": "2", "value": "0x20"}, "365": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "MSTORE", "path": "2"}, "366": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH1", "path": "2", "value": "0x0"}, "368": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "SWAP1", "path": "2"}, "369": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "DUP2", "path": "2"}, "370": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "MSTORE", "path": "2"}, "371": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH1", "path": "2", "value": "0x40"}, "373": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "SWAP1", "path": "2"}, "374": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "KECCAK256", "path": "2"}, "375": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "SLOAD", "path": "2"}, "376": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "PUSH1", "path": "2", "value": "0xFF"}, "378": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "AND", "path": "2"}, "379": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "DUP2", "path": "2"}, "380": {"fn": "SourceDomainSideBridge.transfer", "offset": [966, 1013], "op": "JUMP", "path": "2"}, "381": {"offset": [1300, 1325], "op": "JUMPDEST", "path": "2"}, "382": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "CALLVALUE", "path": "2"}, "383": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "DUP1", "path": "2"}, "384": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "ISZERO", "path": "2"}, "385": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "PUSH2", "path": "2", "value": "0x189"}, "388": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "JUMPI", "path": "2"}, "389": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "PUSH1", "path": "2", "value": "0x0"}, "391": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "DUP1", "path": "2"}, "392": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "REVERT", "path": "2"}, "393": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "JUMPDEST", "path": "2"}, "394": {"op": "POP"}, "395": {"offset": [1300, 1325], "op": "PUSH1", "path": "2", "value": "0x5"}, "397": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "SLOAD", "path": "2"}, "398": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "PUSH2", "path": "2", "value": "0x19D"}, "401": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "SWAP1", "path": "2"}, "402": {"op": "PUSH1", "value": "0x1"}, "404": {"op": "PUSH1", "value": "0x1"}, "406": {"op": "PUSH1", "value": "0xA0"}, "408": {"op": "SHL"}, "409": {"op": "SUB"}, "410": {"offset": [1300, 1325], "op": "AND", "path": "2"}, "411": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "DUP2", "path": "2"}, "412": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "JUMP", "path": "2"}, "413": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "JUMPDEST", "path": "2"}, "414": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "PUSH1", "path": "2", "value": "0x40"}, "416": {"fn": "SourceDomainSideBridge.transfer", "offset": [1300, 1325], "op": "MLOAD", "path": "2"}, "417": {"op": "PUSH1", "value": "0x1"}, "419": {"op": "PUSH1", "value": "0x1"}, "421": {"op": "PUSH1", "value": "0xA0"}, "423": {"op": "SHL"}, "424": {"op": "SUB"}, "425": {"op": "SWAP1"}, "426": {"op": "SWAP2"}, "427": {"op": "AND"}, "428": {"op": "DUP2"}, "429": {"op": "MSTORE"}, "430": {"op": "PUSH1", "value": "0x20"}, "432": {"op": "ADD"}, "433": {"offset": [1300, 1325], "op": "PUSH2", "path": "2", "value": "0xDD"}, "436": {"op": "JUMP"}, "437": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "JUMPDEST", "path": "2"}, "438": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "CALLVALUE", "path": "2"}, "439": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "DUP1", "path": "2"}, "440": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "ISZERO", "path": "2"}, "441": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "PUSH2", "path": "2", "value": "0x1C1"}, "444": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "JUMPI", "path": "2"}, "445": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "PUSH1", "path": "2", "value": "0x0"}, "447": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "DUP1", "path": "2"}, "448": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "REVERT", "path": "2"}, "449": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "JUMPDEST", "path": "2"}, "450": {"op": "POP"}, "451": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "PUSH2", "path": "2", "value": "0x138"}, "454": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "PUSH2", "path": "2", "value": "0x1D0"}, "457": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "CALLDATASIZE", "path": "2"}, "458": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "PUSH1", "path": "2", "value": "0x4"}, "460": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "PUSH2", "path": "2", "value": "0xC3F"}, "463": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [6409, 6609], "op": "JUMP", "path": "2"}, "464": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "JUMPDEST", "path": "2"}, "465": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "PUSH2", "path": "2", "value": "0x6B3"}, "468": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [6409, 6609], "op": "JUMP", "path": "2"}, "469": {"offset": [779, 827], "op": "JUMPDEST", "path": "2"}, "470": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "CALLVALUE", "path": "2"}, "471": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "DUP1", "path": "2"}, "472": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "ISZERO", "path": "2"}, "473": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "PUSH2", "path": "2", "value": "0x1E1"}, "476": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "JUMPI", "path": "2"}, "477": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "PUSH1", "path": "2", "value": "0x0"}, "479": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "DUP1", "path": "2"}, "480": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "REVERT", "path": "2"}, "481": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "JUMPDEST", "path": "2"}, "482": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "POP", "path": "2"}, "483": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "PUSH2", "path": "2", "value": "0xFB"}, "486": {"offset": [818, 827], "op": "PUSH8", "path": "2", "value": "0x16345785D8A0000"}, "495": {"offset": [779, 827], "op": "DUP2", "path": "2"}, "496": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [779, 827], "op": "JUMP", "path": "2"}, "497": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "JUMPDEST", "path": "2"}, "498": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "CALLVALUE", "path": "2"}, "499": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "DUP1", "path": "2"}, "500": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "ISZERO", "path": "2"}, "501": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "PUSH2", "path": "2", "value": "0x1FD"}, "504": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "JUMPI", "path": "2"}, "505": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "PUSH1", "path": "2", "value": "0x0"}, "507": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "DUP1", "path": "2"}, "508": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "REVERT", "path": "2"}, "509": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "JUMPDEST", "path": "2"}, "510": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "POP", "path": "2"}, "511": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "PUSH2", "path": "2", "value": "0xFB"}, "514": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "PUSH2", "path": "2", "value": "0x79B"}, "517": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "jump": "i", "offset": [6689, 6807], "op": "JUMP", "path": "2"}, "518": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "JUMPDEST", "path": "2"}, "519": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "PUSH2", "path": "2", "value": "0x138"}, "522": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "PUSH2", "path": "2", "value": "0x214"}, "525": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "CALLDATASIZE", "path": "2"}, "526": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "PUSH1", "path": "2", "value": "0x4"}, "528": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "PUSH2", "path": "2", "value": "0xD31"}, "531": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5051, 6237], "op": "JUMP", "path": "2"}, "532": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "JUMPDEST", "path": "2"}, "533": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "PUSH2", "path": "2", "value": "0x7CF"}, "536": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5051, 6237], "op": "JUMP", "path": "2"}, "537": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6853, 7009], "op": "JUMPDEST", "path": "2"}, "538": {"offset": [2211, 2221], "op": "PUSH1", "path": "2", "value": "0x5"}, "540": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2211, 2221], "op": "SLOAD", "path": "2"}, "541": {"op": "PUSH1", "value": "0x1"}, "543": {"op": "PUSH1", "value": "0x1"}, "545": {"op": "PUSH1", "value": "0xA0"}, "547": {"op": "SHL"}, "548": {"op": "SUB"}, "549": {"offset": [2211, 2221], "op": "AND", "path": "2"}, "550": {"offset": [2197, 2207], "op": "CALLER", "path": "2"}, "551": {"offset": [2197, 2221], "op": "EQ", "path": "2"}, "552": {"offset": [2189, 2265], "op": "PUSH2", "path": "2", "value": "0x24C"}, "555": {"offset": [2189, 2265], "op": "JUMPI", "path": "2"}, "556": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "PUSH1", "path": "2", "value": "0x40"}, "558": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "MLOAD", "path": "2"}, "559": {"op": "PUSH3", "value": "0x461BCD"}, "563": {"op": "PUSH1", "value": "0xE5"}, "565": {"op": "SHL"}, "566": {"offset": [2189, 2265], "op": "DUP2", "path": "2"}, "567": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "MSTORE", "path": "2"}, "568": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "PUSH1", "path": "2", "value": "0x4"}, "570": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "ADD", "path": "2"}, "571": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "PUSH2", "path": "2", "value": "0x243"}, "574": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "SWAP1", "path": "2"}, "575": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "PUSH2", "path": "2", "value": "0xE24"}, "578": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "i", "offset": [2189, 2265], "op": "JUMP", "path": "2"}, "579": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "JUMPDEST", "path": "2"}, "580": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "PUSH1", "path": "2", "value": "0x40"}, "582": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "MLOAD", "path": "2"}, "583": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "DUP1", "path": "2"}, "584": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "SWAP2", "path": "2"}, "585": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "SUB", "path": "2"}, "586": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "SWAP1", "path": "2"}, "587": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "REVERT", "optimizer_revert": true, "path": "2"}, "588": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2189, 2265], "op": "JUMPDEST", "path": "2"}, "589": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "PUSH1", "path": "2", "statement": 0, "value": "0x5"}, "591": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "SLOAD", "path": "2"}, "592": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6953, 6970], "op": "PUSH1", "path": "2", "value": "0x6"}, "594": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6953, 6970], "op": "SLOAD", "path": "2"}, "595": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "PUSH1", "path": "2", "value": "0x40"}, "597": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "MLOAD", "path": "2"}, "598": {"op": "PUSH1", "value": "0x1"}, "600": {"op": "PUSH1", "value": "0x1"}, "602": {"op": "PUSH1", "value": "0xA0"}, "604": {"op": "SHL"}, "605": {"op": "SUB"}, "606": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "SWAP1", "path": "2"}, "607": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "SWAP3", "path": "2"}, "608": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "AND", "path": "2"}, "609": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "SWAP2", "path": "2"}, "610": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "DUP2", "path": "2"}, "611": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "ISZERO", "path": "2"}, "612": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "PUSH2", "path": "2", "value": "0x8FC"}, "615": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "MUL", "path": "2"}, "616": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "SWAP2", "path": "2"}, "617": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6953, 6970], "op": "SWAP1", "path": "2"}, "618": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "PUSH1", "path": "2", "value": "0x0"}, "620": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "DUP2", "path": "2"}, "621": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "DUP2", "path": "2"}, "622": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "DUP2", "path": "2"}, "623": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6953, 6970], "op": "DUP6", "path": "2"}, "624": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6932, 6942], "op": "DUP9", "path": "2"}, "625": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "DUP9", "path": "2"}, "626": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "CALL", "path": "2"}, "627": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "SWAP4", "path": "2"}, "628": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "POP", "path": "2"}, "629": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "POP", "path": "2"}, "630": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "POP", "path": "2"}, "631": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "POP", "path": "2"}, "632": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "ISZERO", "path": "2"}, "633": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "DUP1", "path": "2"}, "634": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "ISZERO", "path": "2"}, "635": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "PUSH2", "path": "2", "value": "0x288"}, "638": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "JUMPI", "path": "2"}, "639": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "RETURNDATASIZE", "path": "2"}, "640": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "PUSH1", "path": "2", "value": "0x0"}, "642": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "DUP1", "path": "2"}, "643": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "RETURNDATACOPY", "path": "2"}, "644": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "RETURNDATASIZE", "path": "2"}, "645": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "PUSH1", "path": "2", "value": "0x0"}, "647": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "REVERT", "path": "2"}, "648": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6924, 6971], "op": "JUMPDEST", "path": "2"}, "649": {"op": "POP"}, "650": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [7001, 7002], "op": "PUSH1", "path": "2", "statement": 1, "value": "0x0"}, "652": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6981, 6998], "op": "PUSH1", "path": "2", "value": "0x6"}, "654": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6981, 7002], "op": "SSTORE", "path": "2"}, "655": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "o", "offset": [6853, 7009], "op": "JUMP", "path": "2"}, "656": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "JUMPDEST", "path": "2"}, "657": {"fn": "SourceDomainSideBridge.transfer", "offset": [3315, 3322], "op": "PUSH1", "path": "2", "value": "0x0"}, "659": {"fn": "SourceDomainSideBridge.transfer", "offset": [3315, 3322], "op": "DUP1", "path": "2"}, "660": {"fn": "SourceDomainSideBridge.transfer", "offset": [3356, 3391], "op": "PUSH2", "path": "2", "value": "0x29E"}, "663": {"offset": [620, 621], "op": "PUSH1", "path": "2", "value": "0x5"}, "665": {"fn": "SourceDomainSideBridge.transfer", "offset": [3356, 3363], "op": "DUP7", "path": "2"}, "666": {"fn": "SourceDomainSideBridge.transfer", "offset": [3356, 3391], "op": "PUSH2", "path": "2", "value": "0xE81"}, "669": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3356, 3391], "op": "JUMP", "path": "2"}, "670": {"fn": "SourceDomainSideBridge.transfer", "offset": [3356, 3391], "op": "JUMPDEST", "path": "2"}, "671": {"fn": "SourceDomainSideBridge.transfer", "offset": [3342, 3391], "op": "SWAP1", "path": "2"}, "672": {"op": "POP"}, "673": {"fn": "SourceDomainSideBridge.transfer", "offset": [3401, 3422], "op": "PUSH1", "path": "2", "value": "0x0"}, "675": {"fn": "SourceDomainSideBridge.transfer", "offset": [3342, 3391], "op": "DUP2", "path": "2"}, "676": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3439], "op": "PUSH2", "path": "2", "value": "0x2AF"}, "679": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3432], "op": "DUP8", "path": "2"}, "680": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3439], "op": "PUSH2", "path": "2", "value": "0x3E8"}, "683": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3439], "op": "PUSH2", "path": "2", "value": "0xE81"}, "686": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3425, 3439], "op": "JUMP", "path": "2"}, "687": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3439], "op": "JUMPDEST", "path": "2"}, "688": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3445], "op": "PUSH2", "path": "2", "value": "0x2B9"}, "691": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3445], "op": "SWAP2", "path": "2"}, "692": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3445], "op": "SWAP1", "path": "2"}, "693": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3445], "op": "PUSH2", "path": "2", "value": "0xEA0"}, "696": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3425, 3445], "op": "JUMP", "path": "2"}, "697": {"fn": "SourceDomainSideBridge.transfer", "offset": [3425, 3445], "op": "JUMPDEST", "path": "2"}, "698": {"fn": "SourceDomainSideBridge.transfer", "offset": [3401, 3445], "op": "SWAP1", "path": "2"}, "699": {"op": "POP"}, "700": {"fn": "SourceDomainSideBridge.transfer", "offset": [3491, 3505], "op": "PUSH2", "path": "2", "statement": 2, "value": "0x2C7"}, "703": {"fn": "SourceDomainSideBridge.transfer", "offset": [3491, 3498], "op": "DUP7", "path": "2"}, "704": {"fn": "SourceDomainSideBridge.transfer", "offset": [3501, 3505], "op": "PUSH2", "path": "2", "value": "0x3E8"}, "707": {"fn": "SourceDomainSideBridge.transfer", "offset": [3491, 3505], "op": "PUSH2", "path": "2", "value": "0xE81"}, "710": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3491, 3505], "op": "JUMP", "path": "2"}, "711": {"fn": "SourceDomainSideBridge.transfer", "offset": [3491, 3505], "op": "JUMPDEST", "path": "2"}, "712": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3488], "op": "PUSH2", "path": "2", "value": "0x2D1"}, "715": {"fn": "SourceDomainSideBridge.transfer", "offset": [3478, 3488], "op": "DUP6", "path": "2"}, "716": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3475], "op": "DUP5", "path": "2"}, "717": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3488], "op": "PUSH2", "path": "2", "value": "0xE81"}, "720": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3472, 3488], "op": "JUMP", "path": "2"}, "721": {"fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3488], "op": "JUMPDEST", "path": "2"}, "722": {"branch": 32, "fn": "SourceDomainSideBridge.transfer", "offset": [3472, 3505], "op": "LT", "path": "2"}, "723": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "PUSH2", "path": "2", "value": "0x344"}, "726": {"branch": 32, "fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "JUMPI", "path": "2"}, "727": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "PUSH1", "path": "2", "value": "0x40"}, "729": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "MLOAD", "path": "2"}, "730": {"op": "PUSH3", "value": "0x461BCD"}, "734": {"op": "PUSH1", "value": "0xE5"}, "736": {"op": "SHL"}, "737": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "DUP2", "path": "2"}, "738": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "MSTORE", "path": "2"}, "739": {"op": "PUSH1", "value": "0x20"}, "741": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "PUSH1", "path": "2", "value": "0x4"}, "743": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "DUP3", "path": "2"}, "744": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "ADD", "path": "2"}, "745": {"op": "MSTORE"}, "746": {"op": "PUSH1", "value": "0x3B"}, "748": {"op": "PUSH1", "value": "0x24"}, "750": {"op": "DUP3"}, "751": {"op": "ADD"}, "752": {"op": "MSTORE"}, "753": {"op": "PUSH32", "value": "0x66656552616D707570206D6178696D756D20636F73742073686F756C64206265"}, "786": {"op": "PUSH1", "value": "0x44"}, "788": {"op": "DUP3"}, "789": {"op": "ADD"}, "790": {"op": "MSTORE"}, "791": {"op": "PUSH32", "value": "0x206C657373207468616E2074686520746F74616C20616D6F756E740000000000"}, "824": {"op": "PUSH1", "value": "0x64"}, "826": {"op": "DUP3"}, "827": {"op": "ADD"}, "828": {"op": "MSTORE"}, "829": {"op": "PUSH1", "value": "0x84"}, "831": {"op": "ADD"}, "832": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "PUSH2", "path": "2", "value": "0x243"}, "835": {"op": "JUMP"}, "836": {"fn": "SourceDomainSideBridge.transfer", "offset": [3464, 3569], "op": "JUMPDEST", "path": "2"}, "837": {"op": "PUSH1", "value": "0x1"}, "839": {"op": "PUSH1", "value": "0x1"}, "841": {"op": "PUSH1", "value": "0xA0"}, "843": {"op": "SHL"}, "844": {"op": "SUB"}, "845": {"fn": "SourceDomainSideBridge.transfer", "offset": [3583, 3613], "op": "DUP9", "path": "2"}, "846": {"branch": 33, "fn": "SourceDomainSideBridge.transfer", "offset": [3583, 3613], "op": "AND", "path": "2"}, "847": {"fn": "SourceDomainSideBridge.transfer", "offset": [3580, 4034], "op": "PUSH2", "path": "2", "value": "0x41D"}, "850": {"branch": 33, "fn": "SourceDomainSideBridge.transfer", "offset": [3580, 4034], "op": "JUMPI", "path": "2"}, "851": {"offset": [818, 827], "op": "PUSH8", "path": "2", "value": "0x16345785D8A0000"}, "860": {"fn": "SourceDomainSideBridge.transfer", "offset": [3636, 3649], "op": "PUSH2", "path": "2", "statement": 3, "value": "0x367"}, "863": {"fn": "SourceDomainSideBridge.transfer", "offset": [3636, 3643], "op": "DUP8", "path": "2"}, "864": {"fn": "SourceDomainSideBridge.transfer", "offset": [3645, 3649], "op": "PUSH2", "path": "2", "value": "0x3E8"}, "867": {"fn": "SourceDomainSideBridge.transfer", "offset": [3636, 3649], "op": "PUSH2", "path": "2", "value": "0xE81"}, "870": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3636, 3649], "op": "JUMP", "path": "2"}, "871": {"fn": "SourceDomainSideBridge.transfer", "offset": [3636, 3649], "op": "JUMPDEST", "path": "2"}, "872": {"branch": 34, "fn": "SourceDomainSideBridge.transfer", "offset": [3636, 3667], "op": "LT", "path": "2"}, "873": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "PUSH2", "path": "2", "value": "0x3C3"}, "876": {"branch": 34, "fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "JUMPI", "path": "2"}, "877": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "PUSH1", "path": "2", "value": "0x40"}, "879": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "MLOAD", "path": "2"}, "880": {"op": "PUSH3", "value": "0x461BCD"}, "884": {"op": "PUSH1", "value": "0xE5"}, "886": {"op": "SHL"}, "887": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "DUP2", "path": "2"}, "888": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "MSTORE", "path": "2"}, "889": {"op": "PUSH1", "value": "0x20"}, "891": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "PUSH1", "path": "2", "value": "0x4"}, "893": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "DUP3", "path": "2"}, "894": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "ADD", "path": "2"}, "895": {"op": "MSTORE"}, "896": {"op": "PUSH1", "value": "0x26"}, "898": {"op": "PUSH1", "value": "0x24"}, "900": {"op": "DUP3"}, "901": {"op": "ADD"}, "902": {"op": "MSTORE"}, "903": {"op": "PUSH32", "value": "0x416D6F756E7420686967686572207468616E206D6178696D756D207472616465"}, "936": {"op": "PUSH1", "value": "0x44"}, "938": {"op": "DUP3"}, "939": {"op": "ADD"}, "940": {"op": "MSTORE"}, "941": {"op": "PUSH6", "value": "0x81B1A5B5A5D"}, "948": {"op": "PUSH1", "value": "0xD2"}, "950": {"op": "SHL"}, "951": {"op": "PUSH1", "value": "0x64"}, "953": {"op": "DUP3"}, "954": {"op": "ADD"}, "955": {"op": "MSTORE"}, "956": {"op": "PUSH1", "value": "0x84"}, "958": {"op": "ADD"}, "959": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "PUSH2", "path": "2", "value": "0x243"}, "962": {"op": "JUMP"}, "963": {"fn": "SourceDomainSideBridge.transfer", "offset": [3628, 3710], "op": "JUMPDEST", "path": "2"}, "964": {"fn": "SourceDomainSideBridge.transfer", "offset": [3745, 3770], "op": "PUSH2", "path": "2", "statement": 4, "value": "0x3D3"}, "967": {"offset": [679, 688], "op": "PUSH6", "path": "2", "value": "0x2BAF524C400"}, "974": {"fn": "SourceDomainSideBridge.transfer", "offset": [3745, 3758], "op": "DUP3", "path": "2"}, "975": {"fn": "SourceDomainSideBridge.transfer", "offset": [3745, 3770], "op": "PUSH2", "path": "2", "value": "0xEA0"}, "978": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3745, 3770], "op": "JUMP", "path": "2"}, "979": {"fn": "SourceDomainSideBridge.transfer", "offset": [3745, 3770], "op": "JUMPDEST", "path": "2"}, "980": {"fn": "SourceDomainSideBridge.transfer", "offset": [3732, 3741], "op": "CALLVALUE", "path": "2"}, "981": {"fn": "SourceDomainSideBridge.transfer", "offset": [3732, 3770], "op": "LT", "path": "2"}, "982": {"branch": 35, "fn": "SourceDomainSideBridge.transfer", "offset": [3732, 3770], "op": "ISZERO", "path": "2"}, "983": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "PUSH2", "path": "2", "value": "0x418"}, "986": {"branch": 35, "fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "JUMPI", "path": "2"}, "987": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "PUSH1", "path": "2", "value": "0x40"}, "989": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "MLOAD", "path": "2"}, "990": {"op": "PUSH3", "value": "0x461BCD"}, "994": {"op": "PUSH1", "value": "0xE5"}, "996": {"op": "SHL"}, "997": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "DUP2", "path": "2"}, "998": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "MSTORE", "path": "2"}, "999": {"op": "PUSH1", "value": "0x20"}, "1001": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "PUSH1", "path": "2", "value": "0x4"}, "1003": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "DUP3", "path": "2"}, "1004": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "ADD", "path": "2"}, "1005": {"op": "MSTORE"}, "1006": {"op": "PUSH1", "value": "0x13"}, "1008": {"op": "PUSH1", "value": "0x24"}, "1010": {"op": "DUP3"}, "1011": {"op": "ADD"}, "1012": {"op": "MSTORE"}, "1013": {"op": "PUSH19", "value": "0x27379029BAB33332B1B4B2B73A1032BA3432B9"}, "1033": {"op": "PUSH1", "value": "0x69"}, "1035": {"op": "SHL"}, "1036": {"op": "PUSH1", "value": "0x44"}, "1038": {"op": "DUP3"}, "1039": {"op": "ADD"}, "1040": {"op": "MSTORE"}, "1041": {"op": "PUSH1", "value": "0x64"}, "1043": {"op": "ADD"}, "1044": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "PUSH2", "path": "2", "value": "0x243"}, "1047": {"op": "JUMP"}, "1048": {"fn": "SourceDomainSideBridge.transfer", "offset": [3724, 3794], "op": "JUMPDEST", "path": "2"}, "1049": {"fn": "SourceDomainSideBridge.transfer", "offset": [3580, 4034], "op": "PUSH2", "path": "2", "value": "0x503"}, "1052": {"fn": "SourceDomainSideBridge.transfer", "offset": [3580, 4034], "op": "JUMP", "path": "2"}, "1053": {"fn": "SourceDomainSideBridge.transfer", "offset": [3580, 4034], "op": "JUMPDEST", "path": "2"}, "1054": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "statement": 5, "value": "0x40"}, "1056": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "MLOAD", "path": "2"}, "1057": {"op": "PUSH4", "value": "0x23B872DD"}, "1062": {"op": "PUSH1", "value": "0xE0"}, "1064": {"op": "SHL"}, "1065": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP2", "path": "2"}, "1066": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "MSTORE", "path": "2"}, "1067": {"fn": "SourceDomainSideBridge.transfer", "offset": [3890, 3900], "op": "CALLER", "path": "2"}, "1068": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x4"}, "1070": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP3", "path": "2"}, "1071": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "ADD", "path": "2"}, "1072": {"op": "MSTORE"}, "1073": {"fn": "SourceDomainSideBridge.transfer", "offset": [3910, 3914], "op": "ADDRESS", "path": "2"}, "1074": {"op": "PUSH1", "value": "0x24"}, "1076": {"op": "DUP3"}, "1077": {"op": "ADD"}, "1078": {"op": "MSTORE"}, "1079": {"op": "PUSH1", "value": "0x44"}, "1081": {"op": "DUP2"}, "1082": {"op": "ADD"}, "1083": {"op": "DUP3"}, "1084": {"op": "SWAP1"}, "1085": {"op": "MSTORE"}, "1086": {"fn": "SourceDomainSideBridge.transfer", "offset": [3843, 3856], "op": "DUP9", "path": "2"}, "1087": {"fn": "SourceDomainSideBridge.transfer", "offset": [3843, 3856], "op": "SWAP1", "path": "2"}, "1088": {"op": "PUSH1", "value": "0x1"}, "1090": {"op": "PUSH1", "value": "0x1"}, "1092": {"op": "PUSH1", "value": "0xA0"}, "1094": {"op": "SHL"}, "1095": {"op": "SUB"}, "1096": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3889], "op": "DUP3", "path": "2"}, "1097": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3889], "op": "AND", "path": "2"}, "1098": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3889], "op": "SWAP1", "path": "2"}, "1099": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3889], "op": "PUSH4", "path": "2", "value": "0x23B872DD"}, "1104": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3889], "op": "SWAP1", "path": "2"}, "1105": {"op": "PUSH1", "value": "0x64"}, "1107": {"op": "ADD"}, "1108": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x20"}, "1110": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x40"}, "1112": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "MLOAD", "path": "2"}, "1113": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP1", "path": "2"}, "1114": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP4", "path": "2"}, "1115": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "SUB", "path": "2"}, "1116": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP2", "path": "2"}, "1117": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x0"}, "1119": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP8", "path": "2"}, "1120": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "GAS", "path": "2"}, "1121": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "CALL", "path": "2"}, "1122": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "ISZERO", "path": "2"}, "1123": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP1", "path": "2"}, "1124": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "ISZERO", "path": "2"}, "1125": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH2", "path": "2", "value": "0x472"}, "1128": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "JUMPI", "path": "2"}, "1129": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "RETURNDATASIZE", "path": "2"}, "1130": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x0"}, "1132": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP1", "path": "2"}, "1133": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "RETURNDATACOPY", "path": "2"}, "1134": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "RETURNDATASIZE", "path": "2"}, "1135": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x0"}, "1137": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "REVERT", "path": "2"}, "1138": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "JUMPDEST", "path": "2"}, "1139": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "POP", "path": "2"}, "1140": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "POP", "path": "2"}, "1141": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "POP", "path": "2"}, "1142": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "POP", "path": "2"}, "1143": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x40"}, "1145": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "MLOAD", "path": "2"}, "1146": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "RETURNDATASIZE", "path": "2"}, "1147": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x1F"}, "1149": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "NOT", "path": "2"}, "1150": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x1F"}, "1152": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP3", "path": "2"}, "1153": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "ADD", "path": "2"}, "1154": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "AND", "path": "2"}, "1155": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP3", "path": "2"}, "1156": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "ADD", "path": "2"}, "1157": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP1", "path": "2"}, "1158": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH1", "path": "2", "value": "0x40"}, "1160": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "MSTORE", "path": "2"}, "1161": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "POP", "path": "2"}, "1162": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "DUP2", "path": "2"}, "1163": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "ADD", "path": "2"}, "1164": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "SWAP1", "path": "2"}, "1165": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH2", "path": "2", "value": "0x496"}, "1168": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "SWAP2", "path": "2"}, "1169": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "SWAP1", "path": "2"}, "1170": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "PUSH2", "path": "2", "value": "0xEB8"}, "1173": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3871, 3931], "op": "JUMP", "path": "2"}, "1174": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "JUMPDEST", "path": "2"}, "1175": {"fn": "SourceDomainSideBridge.transfer", "offset": [3871, 3931], "op": "POP", "path": "2"}, "1176": {"offset": [679, 688], "op": "PUSH6", "path": "2", "value": "0x2BAF524C400"}, "1183": {"fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3962], "op": "CALLVALUE", "path": "2", "statement": 6}, "1184": {"fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3975], "op": "LT", "path": "2"}, "1185": {"branch": 36, "fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3975], "op": "ISZERO", "path": "2"}, "1186": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "PUSH2", "path": "2", "value": "0x501"}, "1189": {"branch": 36, "fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "JUMPI", "path": "2"}, "1190": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "PUSH1", "path": "2", "value": "0x40"}, "1192": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "MLOAD", "path": "2"}, "1193": {"op": "PUSH3", "value": "0x461BCD"}, "1197": {"op": "PUSH1", "value": "0xE5"}, "1199": {"op": "SHL"}, "1200": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "DUP2", "path": "2"}, "1201": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "MSTORE", "path": "2"}, "1202": {"op": "PUSH1", "value": "0x20"}, "1204": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "PUSH1", "path": "2", "value": "0x4"}, "1206": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "DUP3", "path": "2"}, "1207": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "ADD", "path": "2"}, "1208": {"op": "MSTORE"}, "1209": {"op": "PUSH1", "value": "0x2B"}, "1211": {"op": "PUSH1", "value": "0x24"}, "1213": {"op": "DUP3"}, "1214": {"op": "ADD"}, "1215": {"op": "MSTORE"}, "1216": {"op": "PUSH32", "value": "0x4E6F2053756666656369656E7420657468657220666F72207468652066697865"}, "1249": {"op": "PUSH1", "value": "0x44"}, "1251": {"op": "DUP3"}, "1252": {"op": "ADD"}, "1253": {"op": "MSTORE"}, "1254": {"op": "PUSH11", "value": "0x6420657468657220666565"}, "1266": {"op": "PUSH1", "value": "0xA8"}, "1268": {"op": "SHL"}, "1269": {"op": "PUSH1", "value": "0x64"}, "1271": {"op": "DUP3"}, "1272": {"op": "ADD"}, "1273": {"op": "MSTORE"}, "1274": {"op": "PUSH1", "value": "0x84"}, "1276": {"op": "ADD"}, "1277": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "PUSH2", "path": "2", "value": "0x243"}, "1280": {"op": "JUMP"}, "1281": {"fn": "SourceDomainSideBridge.transfer", "offset": [3945, 4023], "op": "JUMPDEST", "path": "2"}, "1282": {"fn": "SourceDomainSideBridge.transfer", "offset": [3809, 4034], "op": "POP", "path": "2"}, "1283": {"fn": "SourceDomainSideBridge.transfer", "offset": [3580, 4034], "op": "JUMPDEST", "path": "2"}, "1284": {"fn": "SourceDomainSideBridge.transfer", "offset": [4044, 4086], "op": "PUSH2", "path": "2", "value": "0x555"}, "1287": {"op": "PUSH1", "value": "0x40"}, "1289": {"op": "MLOAD"}, "1290": {"op": "DUP1"}, "1291": {"op": "PUSH1", "value": "0xE0"}, "1293": {"op": "ADD"}, "1294": {"op": "PUSH1", "value": "0x40"}, "1296": {"op": "MSTORE"}, "1297": {"op": "DUP1"}, "1298": {"op": "PUSH1", "value": "0x0"}, "1300": {"op": "PUSH1", "value": "0x1"}, "1302": {"op": "PUSH1", "value": "0x1"}, "1304": {"op": "PUSH1", "value": "0xA0"}, "1306": {"op": "SHL"}, "1307": {"op": "SUB"}, "1308": {"op": "AND"}, "1309": {"op": "DUP2"}, "1310": {"op": "MSTORE"}, "1311": {"op": "PUSH1", "value": "0x20"}, "1313": {"op": "ADD"}, "1314": {"op": "PUSH1", "value": "0x0"}, "1316": {"op": "PUSH1", "value": "0x1"}, "1318": {"op": "PUSH1", "value": "0x1"}, "1320": {"op": "PUSH1", "value": "0xA0"}, "1322": {"op": "SHL"}, "1323": {"op": "SUB"}, "1324": {"op": "AND"}, "1325": {"op": "DUP2"}, "1326": {"op": "MSTORE"}, "1327": {"op": "PUSH1", "value": "0x20"}, "1329": {"op": "ADD"}, "1330": {"op": "PUSH1", "value": "0x0"}, "1332": {"op": "DUP2"}, "1333": {"op": "MSTORE"}, "1334": {"op": "PUSH1", "value": "0x20"}, "1336": {"op": "ADD"}, "1337": {"op": "PUSH1", "value": "0x0"}, "1339": {"op": "DUP2"}, "1340": {"op": "MSTORE"}, "1341": {"op": "PUSH1", "value": "0x20"}, "1343": {"op": "ADD"}, "1344": {"op": "PUSH1", "value": "0x0"}, "1346": {"op": "DUP2"}, "1347": {"op": "MSTORE"}, "1348": {"op": "PUSH1", "value": "0x20"}, "1350": {"op": "ADD"}, "1351": {"op": "PUSH1", "value": "0x0"}, "1353": {"op": "DUP2"}, "1354": {"op": "MSTORE"}, "1355": {"op": "PUSH1", "value": "0x20"}, "1357": {"op": "ADD"}, "1358": {"op": "PUSH1", "value": "0x0"}, "1360": {"op": "DUP2"}, "1361": {"op": "MSTORE"}, "1362": {"op": "POP"}, "1363": {"op": "SWAP1"}, "1364": {"op": "JUMP"}, "1365": {"fn": "SourceDomainSideBridge.transfer", "offset": [4044, 4086], "op": "JUMPDEST", "path": "2"}, "1366": {"op": "PUSH1", "value": "0x1"}, "1368": {"op": "PUSH1", "value": "0x1"}, "1370": {"op": "PUSH1", "value": "0xA0"}, "1372": {"op": "SHL"}, "1373": {"op": "SUB"}, "1374": {"fn": "SourceDomainSideBridge.transfer", "offset": [4096, 4137], "op": "DUP1", "path": "2", "statement": 7}, "1375": {"fn": "SourceDomainSideBridge.transfer", "offset": [4096, 4137], "op": "DUP11", "path": "2"}, "1376": {"fn": "SourceDomainSideBridge.transfer", "offset": [4096, 4137], "op": "AND", "path": "2"}, "1377": {"fn": "SourceDomainSideBridge.transfer", "offset": [4096, 4137], "op": "DUP3", "path": "2"}, "1378": {"fn": "SourceDomainSideBridge.transfer", "offset": [4096, 4137], "op": "MSTORE", "path": "2"}, "1379": {"fn": "SourceDomainSideBridge.transfer", "offset": [4147, 4186], "op": "DUP9", "path": "2", "statement": 8}, "1380": {"fn": "SourceDomainSideBridge.transfer", "offset": [4147, 4186], "op": "AND", "path": "2"}, "1381": {"fn": "SourceDomainSideBridge.transfer", "offset": [4147, 4171], "op": "PUSH1", "path": "2", "value": "0x20"}, "1383": {"fn": "SourceDomainSideBridge.transfer", "offset": [4147, 4171], "op": "DUP3", "path": "2"}, "1384": {"fn": "SourceDomainSideBridge.transfer", "offset": [4147, 4171], "op": "ADD", "path": "2"}, "1385": {"fn": "SourceDomainSideBridge.transfer", "offset": [4147, 4186], "op": "MSTORE", "path": "2"}, "1386": {"fn": "SourceDomainSideBridge.transfer", "offset": [4218, 4232], "op": "PUSH2", "path": "2", "statement": 9, "value": "0x575"}, "1389": {"fn": "SourceDomainSideBridge.transfer", "offset": [4218, 4225], "op": "DUP8", "path": "2"}, "1390": {"fn": "SourceDomainSideBridge.transfer", "offset": [4228, 4232], "op": "PUSH2", "path": "2", "value": "0x3E8"}, "1393": {"fn": "SourceDomainSideBridge.transfer", "offset": [4218, 4232], "op": "PUSH2", "path": "2", "value": "0xE81"}, "1396": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4218, 4232], "op": "JUMP", "path": "2"}, "1397": {"fn": "SourceDomainSideBridge.transfer", "offset": [4218, 4232], "op": "JUMPDEST", "path": "2"}, "1398": {"fn": "SourceDomainSideBridge.transfer", "offset": [4196, 4215], "op": "PUSH1", "path": "2", "value": "0x40"}, "1400": {"fn": "SourceDomainSideBridge.transfer", "offset": [4196, 4215], "op": "DUP3", "path": "2"}, "1401": {"fn": "SourceDomainSideBridge.transfer", "offset": [4196, 4215], "op": "ADD", "path": "2"}, "1402": {"fn": "SourceDomainSideBridge.transfer", "offset": [4196, 4232], "op": "MSTORE", "path": "2"}, "1403": {"fn": "SourceDomainSideBridge.transfer", "offset": [4242, 4258], "op": "PUSH1", "path": "2", "statement": 10, "value": "0x60"}, "1405": {"fn": "SourceDomainSideBridge.transfer", "offset": [4242, 4258], "op": "DUP2", "path": "2"}, "1406": {"fn": "SourceDomainSideBridge.transfer", "offset": [4242, 4258], "op": "ADD", "path": "2"}, "1407": {"fn": "SourceDomainSideBridge.transfer", "offset": [4242, 4264], "op": "DUP4", "path": "2"}, "1408": {"fn": "SourceDomainSideBridge.transfer", "offset": [4242, 4264], "op": "SWAP1", "path": "2"}, "1409": {"fn": "SourceDomainSideBridge.transfer", "offset": [4242, 4264], "op": "MSTORE", "path": "2"}, "1410": {"fn": "SourceDomainSideBridge.transfer", "offset": [4290, 4302], "op": "NUMBER", "path": "2"}, "1411": {"fn": "SourceDomainSideBridge.transfer", "offset": [4277, 4302], "op": "DUP7", "path": "2"}, "1412": {"branch": 37, "fn": "SourceDomainSideBridge.transfer", "offset": [4277, 4302], "op": "LT", "path": "2"}, "1413": {"fn": "SourceDomainSideBridge.transfer", "offset": [4274, 4429], "op": "ISZERO", "path": "2"}, "1414": {"fn": "SourceDomainSideBridge.transfer", "offset": [4274, 4429], "op": "PUSH2", "path": "2", "value": "0x594"}, "1417": {"branch": 37, "fn": "SourceDomainSideBridge.transfer", "offset": [4274, 4429], "op": "JUMPI", "path": "2"}, "1418": {"fn": "SourceDomainSideBridge.transfer", "offset": [4342, 4354], "op": "NUMBER", "path": "2", "statement": 11}, "1419": {"fn": "SourceDomainSideBridge.transfer", "offset": [4317, 4339], "op": "PUSH1", "path": "2", "value": "0x80"}, "1421": {"fn": "SourceDomainSideBridge.transfer", "offset": [4317, 4339], "op": "DUP3", "path": "2"}, "1422": {"fn": "SourceDomainSideBridge.transfer", "offset": [4317, 4339], "op": "ADD", "path": "2"}, "1423": {"fn": "SourceDomainSideBridge.transfer", "offset": [4317, 4354], "op": "MSTORE", "path": "2"}, "1424": {"fn": "SourceDomainSideBridge.transfer", "offset": [4274, 4429], "op": "PUSH2", "path": "2", "value": "0x59C"}, "1427": {"fn": "SourceDomainSideBridge.transfer", "offset": [4274, 4429], "op": "JUMP", "path": "2"}, "1428": {"fn": "SourceDomainSideBridge.transfer", "offset": [4274, 4429], "op": "JUMPDEST", "path": "2"}, "1429": {"fn": "SourceDomainSideBridge.transfer", "offset": [4383, 4405], "op": "PUSH1", "path": "2", "statement": 12, "value": "0x80"}, "1431": {"fn": "SourceDomainSideBridge.transfer", "offset": [4383, 4405], "op": "DUP2", "path": "2"}, "1432": {"fn": "SourceDomainSideBridge.transfer", "offset": [4383, 4405], "op": "ADD", "path": "2"}, "1433": {"fn": "SourceDomainSideBridge.transfer", "offset": [4383, 4418], "op": "DUP7", "path": "2"}, "1434": {"fn": "SourceDomainSideBridge.transfer", "offset": [4383, 4418], "op": "SWAP1", "path": "2"}, "1435": {"fn": "SourceDomainSideBridge.transfer", "offset": [4383, 4418], "op": "MSTORE", "path": "2"}, "1436": {"fn": "SourceDomainSideBridge.transfer", "offset": [4274, 4429], "op": "JUMPDEST", "path": "2"}, "1437": {"fn": "SourceDomainSideBridge.transfer", "offset": [4438, 4460], "op": "PUSH1", "path": "2", "statement": 13, "value": "0xA0"}, "1439": {"fn": "SourceDomainSideBridge.transfer", "offset": [4438, 4460], "op": "DUP2", "path": "2"}, "1440": {"fn": "SourceDomainSideBridge.transfer", "offset": [4438, 4460], "op": "ADD", "path": "2"}, "1441": {"fn": "SourceDomainSideBridge.transfer", "offset": [4438, 4473], "op": "DUP6", "path": "2"}, "1442": {"fn": "SourceDomainSideBridge.transfer", "offset": [4438, 4473], "op": "SWAP1", "path": "2"}, "1443": {"fn": "SourceDomainSideBridge.transfer", "offset": [4438, 4473], "op": "MSTORE", "path": "2"}, "1444": {"fn": "SourceDomainSideBridge.transfer", "offset": [4504, 4516], "op": "PUSH1", "path": "2", "statement": 14, "value": "0x4"}, "1446": {"fn": "SourceDomainSideBridge.transfer", "offset": [4504, 4516], "op": "DUP1", "path": "2"}, "1447": {"fn": "SourceDomainSideBridge.transfer", "offset": [4504, 4516], "op": "SLOAD", "path": "2"}, "1448": {"fn": "SourceDomainSideBridge.transfer", "offset": [4483, 4501], "op": "PUSH1", "path": "2", "value": "0xC0"}, "1450": {"fn": "SourceDomainSideBridge.transfer", "offset": [4483, 4501], "op": "DUP4", "path": "2"}, "1451": {"fn": "SourceDomainSideBridge.transfer", "offset": [4483, 4501], "op": "ADD", "path": "2"}, "1452": {"fn": "SourceDomainSideBridge.transfer", "offset": [4483, 4516], "op": "DUP2", "path": "2"}, "1453": {"fn": "SourceDomainSideBridge.transfer", "offset": [4483, 4516], "op": "SWAP1", "path": "2"}, "1454": {"fn": "SourceDomainSideBridge.transfer", "offset": [4483, 4516], "op": "MSTORE", "path": "2"}, "1455": {"fn": "SourceDomainSideBridge.transfer", "offset": [4504, 4516], "op": "SWAP1", "path": "2"}, "1456": {"op": "PUSH1", "value": "0x0"}, "1458": {"fn": "SourceDomainSideBridge.transfer", "offset": [4527, 4541], "op": "PUSH2", "path": "2", "statement": 15, "value": "0x5BA"}, "1461": {"fn": "SourceDomainSideBridge.transfer", "offset": [4504, 4516], "op": "DUP4", "path": "2"}, "1462": {"fn": "SourceDomainSideBridge.transfer", "offset": [4527, 4541], "op": "PUSH2", "path": "2", "value": "0xEE1"}, "1465": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4527, 4541], "op": "JUMP", "path": "2"}, "1466": {"fn": "SourceDomainSideBridge.transfer", "offset": [4527, 4541], "op": "JUMPDEST", "path": "2"}, "1467": {"fn": "SourceDomainSideBridge.transfer", "offset": [4527, 4541], "op": "SWAP1", "path": "2"}, "1468": {"fn": "SourceDomainSideBridge.transfer", "offset": [4527, 4541], "op": "SWAP2", "path": "2"}, "1469": {"fn": "SourceDomainSideBridge.transfer", "offset": [4527, 4541], "op": "SSTORE", "path": "2"}, "1470": {"op": "POP"}, "1471": {"fn": "SourceDomainSideBridge.transfer", "offset": [4591, 4602], "op": "PUSH2", "path": "2", "statement": 16, "value": "0x5D1"}, "1474": {"fn": "SourceDomainSideBridge.transfer", "offset": [4591, 4602], "op": "SWAP1", "path": "2"}, "1475": {"op": "POP"}, "1476": {"fn": "SourceDomainSideBridge.transfer", "offset": [4601, 4602], "op": "PUSH1", "path": "2", "value": "0x2"}, "1478": {"offset": [679, 688], "op": "PUSH6", "path": "2", "value": "0x2BAF524C400"}, "1485": {"fn": "SourceDomainSideBridge.transfer", "offset": [4591, 4602], "op": "PUSH2", "path": "2", "value": "0xEFA"}, "1488": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4591, 4602], "op": "JUMP", "path": "2"}, "1489": {"fn": "SourceDomainSideBridge.transfer", "offset": [4591, 4602], "op": "JUMPDEST", "path": "2"}, "1490": {"fn": "SourceDomainSideBridge.transfer", "offset": [4571, 4588], "op": "PUSH1", "path": "2", "value": "0x6"}, "1492": {"fn": "SourceDomainSideBridge.transfer", "offset": [4571, 4588], "op": "SLOAD", "path": "2"}, "1493": {"fn": "SourceDomainSideBridge.transfer", "offset": [4571, 4602], "op": "PUSH2", "path": "2", "value": "0x5DE"}, "1496": {"fn": "SourceDomainSideBridge.transfer", "offset": [4571, 4602], "op": "SWAP2", "path": "2"}, "1497": {"fn": "SourceDomainSideBridge.transfer", "offset": [4571, 4602], "op": "SWAP1", "path": "2"}, "1498": {"fn": "SourceDomainSideBridge.transfer", "offset": [4571, 4602], "op": "PUSH2", "path": "2", "value": "0xEA0"}, "1501": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4571, 4602], "op": "JUMP", "path": "2"}, "1502": {"fn": "SourceDomainSideBridge.transfer", "offset": [4571, 4602], "op": "JUMPDEST", "path": "2"}, "1503": {"fn": "SourceDomainSideBridge.transfer", "offset": [4551, 4568], "op": "PUSH1", "path": "2", "value": "0x6"}, "1505": {"fn": "SourceDomainSideBridge.transfer", "offset": [4551, 4602], "op": "SSTORE", "path": "2"}, "1506": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "PUSH1", "path": "2", "value": "0x40"}, "1508": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "MLOAD", "path": "2"}, "1509": {"fn": "SourceDomainSideBridge.transfer", "offset": [4613, 4637], "op": "PUSH1", "path": "2", "value": "0x0"}, "1511": {"fn": "SourceDomainSideBridge.transfer", "offset": [4613, 4637], "op": "SWAP1", "path": "2"}, "1512": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x2"}, "1514": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "SWAP1", "path": "2"}, "1515": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "PUSH2", "path": "2", "value": "0x5F8"}, "1518": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "SWAP1", "path": "2"}, "1519": {"fn": "SourceDomainSideBridge.transfer", "offset": [4658, 4670], "op": "DUP5", "path": "2"}, "1520": {"fn": "SourceDomainSideBridge.transfer", "offset": [4658, 4670], "op": "SWAP1", "path": "2"}, "1521": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "PUSH1", "path": "2", "value": "0x20"}, "1523": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "ADD", "path": "2"}, "1524": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "PUSH2", "path": "2", "value": "0xF1C"}, "1527": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4647, 4671], "op": "JUMP", "path": "2"}, "1528": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "JUMPDEST", "path": "2"}, "1529": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "PUSH1", "path": "2", "value": "0x40"}, "1531": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "DUP1", "path": "2"}, "1532": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "MLOAD", "path": "2"}, "1533": {"op": "PUSH1", "value": "0x1F"}, "1535": {"op": "NOT"}, "1536": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "DUP2", "path": "2"}, "1537": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "DUP5", "path": "2"}, "1538": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "SUB", "path": "2"}, "1539": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "ADD", "path": "2"}, "1540": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "DUP2", "path": "2"}, "1541": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "MSTORE", "path": "2"}, "1542": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "SWAP1", "path": "2"}, "1543": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "DUP3", "path": "2"}, "1544": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "SWAP1", "path": "2"}, "1545": {"fn": "SourceDomainSideBridge.transfer", "offset": [4647, 4671], "op": "MSTORE", "path": "2"}, "1546": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH2", "path": "2", "value": "0x612"}, "1549": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "SWAP2", "path": "2"}, "1550": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH2", "path": "2", "value": "0xF73"}, "1553": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4640, 4672], "op": "JUMP", "path": "2"}, "1554": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "JUMPDEST", "path": "2"}, "1555": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x20"}, "1557": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x40"}, "1559": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "MLOAD", "path": "2"}, "1560": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP1", "path": "2"}, "1561": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP4", "path": "2"}, "1562": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "SUB", "path": "2"}, "1563": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP2", "path": "2"}, "1564": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP6", "path": "2"}, "1565": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "GAS", "path": "2"}, "1566": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "STATICCALL", "path": "2"}, "1567": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "ISZERO", "path": "2"}, "1568": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP1", "path": "2"}, "1569": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "ISZERO", "path": "2"}, "1570": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH2", "path": "2", "value": "0x62F"}, "1573": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "JUMPI", "path": "2"}, "1574": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "RETURNDATASIZE", "path": "2"}, "1575": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x0"}, "1577": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP1", "path": "2"}, "1578": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "RETURNDATACOPY", "path": "2"}, "1579": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "RETURNDATASIZE", "path": "2"}, "1580": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x0"}, "1582": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "REVERT", "path": "2"}, "1583": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "JUMPDEST", "path": "2"}, "1584": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "POP", "path": "2"}, "1585": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "POP", "path": "2"}, "1586": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "POP", "path": "2"}, "1587": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x40"}, "1589": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "MLOAD", "path": "2"}, "1590": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "RETURNDATASIZE", "path": "2"}, "1591": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x1F"}, "1593": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "NOT", "path": "2"}, "1594": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x1F"}, "1596": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP3", "path": "2"}, "1597": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "ADD", "path": "2"}, "1598": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "AND", "path": "2"}, "1599": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP3", "path": "2"}, "1600": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "ADD", "path": "2"}, "1601": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP1", "path": "2"}, "1602": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH1", "path": "2", "value": "0x40"}, "1604": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "MSTORE", "path": "2"}, "1605": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "POP", "path": "2"}, "1606": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "DUP2", "path": "2"}, "1607": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "ADD", "path": "2"}, "1608": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "SWAP1", "path": "2"}, "1609": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH2", "path": "2", "value": "0x652"}, "1612": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "SWAP2", "path": "2"}, "1613": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "SWAP1", "path": "2"}, "1614": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "PUSH2", "path": "2", "value": "0xFAE"}, "1617": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4640, 4672], "op": "JUMP", "path": "2"}, "1618": {"fn": "SourceDomainSideBridge.transfer", "offset": [4640, 4672], "op": "JUMPDEST", "path": "2"}, "1619": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4710], "op": "PUSH1", "path": "2", "statement": 17, "value": "0x0"}, "1621": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "DUP2", "path": "2"}, "1622": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "DUP2", "path": "2"}, "1623": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "MSTORE", "path": "2"}, "1624": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "PUSH1", "path": "2", "value": "0x20"}, "1626": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "DUP2", "path": "2"}, "1627": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "SWAP1", "path": "2"}, "1628": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "MSTORE", "path": "2"}, "1629": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "PUSH1", "path": "2", "value": "0x40"}, "1631": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "SWAP1", "path": "2"}, "1632": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "DUP2", "path": "2"}, "1633": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "SWAP1", "path": "2"}, "1634": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4728], "op": "KECCAK256", "path": "2"}, "1635": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4735], "op": "DUP1", "path": "2"}, "1636": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4735], "op": "SLOAD", "path": "2"}, "1637": {"op": "PUSH1", "value": "0xFF"}, "1639": {"op": "NOT"}, "1640": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4735], "op": "AND", "path": "2"}, "1641": {"fn": "SourceDomainSideBridge.transfer", "offset": [4731, 4735], "op": "PUSH1", "path": "2", "value": "0x1"}, "1643": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4735], "op": "OR", "path": "2"}, "1644": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4735], "op": "SWAP1", "path": "2"}, "1645": {"fn": "SourceDomainSideBridge.transfer", "offset": [4691, 4735], "op": "SSTORE", "path": "2"}, "1646": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "MLOAD", "path": "2", "statement": 18}, "1647": {"fn": "SourceDomainSideBridge.transfer", "offset": [4613, 4672], "op": "SWAP1", "path": "2"}, "1648": {"fn": "SourceDomainSideBridge.transfer", "offset": [4613, 4672], "op": "SWAP2", "path": "2"}, "1649": {"op": "POP"}, "1650": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "PUSH32", "path": "2", "value": "0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89"}, "1683": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "SWAP1", "path": "2"}, "1684": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "PUSH2", "path": "2", "value": "0x69E"}, "1687": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "SWAP1", "path": "2"}, "1688": {"fn": "SourceDomainSideBridge.transfer", "offset": [4763, 4775], "op": "DUP5", "path": "2"}, "1689": {"fn": "SourceDomainSideBridge.transfer", "offset": [4763, 4775], "op": "SWAP1", "path": "2"}, "1690": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "PUSH2", "path": "2", "value": "0xF1C"}, "1693": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4751, 4776], "op": "JUMP", "path": "2"}, "1694": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "JUMPDEST", "path": "2"}, "1695": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "PUSH1", "path": "2", "value": "0x40"}, "1697": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "MLOAD", "path": "2"}, "1698": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "DUP1", "path": "2"}, "1699": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "SWAP2", "path": "2"}, "1700": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "SUB", "path": "2"}, "1701": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "SWAP1", "path": "2"}, "1702": {"fn": "SourceDomainSideBridge.transfer", "offset": [4751, 4776], "op": "LOG1", "path": "2"}, "1703": {"fn": "SourceDomainSideBridge.transfer", "offset": [4802, 4818], "op": "SWAP10", "path": "2", "statement": 19}, "1704": {"fn": "SourceDomainSideBridge.transfer", "offset": [3160, 4825], "op": "SWAP9", "path": "2"}, "1705": {"op": "POP"}, "1706": {"op": "POP"}, "1707": {"op": "POP"}, "1708": {"op": "POP"}, "1709": {"op": "POP"}, "1710": {"op": "POP"}, "1711": {"op": "POP"}, "1712": {"op": "POP"}, "1713": {"op": "POP"}, "1714": {"fn": "SourceDomainSideBridge.transfer", "jump": "o", "offset": [3160, 4825], "op": "JUMP", "path": "2"}, "1715": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "JUMPDEST", "path": "2"}, "1716": {"op": "PUSH1", "value": "0x7"}, "1718": {"op": "PUSH1", "value": "0x21"}, "1720": {"op": "PUSH1", "value": "0x99"}, "1722": {"op": "SHL"}, "1723": {"op": "ADD"}, "1724": {"offset": [1907, 1917], "op": "CALLER", "path": "2"}, "1725": {"offset": [1907, 1955], "op": "DUP2", "path": "2"}, "1726": {"branch": 38, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1907, 1955], "op": "EQ", "path": "2"}, "1727": {"offset": [1907, 2030], "op": "DUP1", "path": "2"}, "1728": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1907, 2030], "op": "ISZERO", "path": "2"}, "1729": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1907, 2030], "op": "PUSH2", "path": "2", "value": "0x740"}, "1732": {"branch": 38, "offset": [1907, 2030], "op": "JUMPI", "path": "2"}, "1733": {"op": "POP"}, "1734": {"offset": [2003, 2030], "op": "PUSH1", "path": "2", "value": "0x3"}, "1736": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2003, 2030], "op": "SLOAD", "path": "2"}, "1737": {"offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x40"}, "1739": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP1", "path": "2"}, "1740": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "MLOAD", "path": "2"}, "1741": {"op": "PUSH4", "value": "0x6E296E45"}, "1746": {"op": "PUSH1", "value": "0xE0"}, "1748": {"op": "SHL"}, "1749": {"offset": [1971, 1999], "op": "DUP2", "path": "2"}, "1750": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "MSTORE", "path": "2"}, "1751": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP1", "path": "2"}, "1752": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "MLOAD", "path": "2"}, "1753": {"op": "PUSH1", "value": "0x1"}, "1755": {"op": "PUSH1", "value": "0x1"}, "1757": {"op": "PUSH1", "value": "0xA0"}, "1759": {"op": "SHL"}, "1760": {"op": "SUB"}, "1761": {"offset": [2003, 2030], "op": "SWAP3", "path": "2"}, "1762": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2003, 2030], "op": "DUP4", "path": "2"}, "1763": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2003, 2030], "op": "AND", "path": "2"}, "1764": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2003, 2030], "op": "SWAP3", "path": "2"}, "1765": {"offset": [1971, 1997], "op": "DUP5", "path": "2"}, "1766": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1997], "op": "AND", "path": "2"}, "1767": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1997], "op": "SWAP2", "path": "2"}, "1768": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1997], "op": "PUSH4", "path": "2", "value": "0x6E296E45"}, "1773": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1997], "op": "SWAP2", "path": "2"}, "1774": {"offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x4"}, "1776": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP1", "path": "2"}, "1777": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP4", "path": "2"}, "1778": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "ADD", "path": "2"}, "1779": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP3", "path": "2"}, "1780": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x20"}, "1782": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP3", "path": "2"}, "1783": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP2", "path": "2"}, "1784": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP1", "path": "2"}, "1785": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP3", "path": "2"}, "1786": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP1", "path": "2"}, "1787": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SUB", "path": "2"}, "1788": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "ADD", "path": "2"}, "1789": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP2", "path": "2"}, "1790": {"offset": [1971, 1997], "op": "DUP7", "path": "2"}, "1791": {"offset": [1971, 1999], "op": "GAS", "path": "2"}, "1792": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "STATICCALL", "path": "2"}, "1793": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "ISZERO", "path": "2"}, "1794": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP1", "path": "2"}, "1795": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "ISZERO", "path": "2"}, "1796": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH2", "path": "2", "value": "0x711"}, "1799": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "JUMPI", "path": "2"}, "1800": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "RETURNDATASIZE", "path": "2"}, "1801": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x0"}, "1803": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP1", "path": "2"}, "1804": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "RETURNDATACOPY", "path": "2"}, "1805": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "RETURNDATASIZE", "path": "2"}, "1806": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x0"}, "1808": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "REVERT", "path": "2"}, "1809": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "JUMPDEST", "path": "2"}, "1810": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "POP", "path": "2"}, "1811": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "POP", "path": "2"}, "1812": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "POP", "path": "2"}, "1813": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "POP", "path": "2"}, "1814": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x40"}, "1816": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "MLOAD", "path": "2"}, "1817": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "RETURNDATASIZE", "path": "2"}, "1818": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x1F"}, "1820": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "NOT", "path": "2"}, "1821": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x1F"}, "1823": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP3", "path": "2"}, "1824": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "ADD", "path": "2"}, "1825": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "AND", "path": "2"}, "1826": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP3", "path": "2"}, "1827": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "ADD", "path": "2"}, "1828": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP1", "path": "2"}, "1829": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH1", "path": "2", "value": "0x40"}, "1831": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "MSTORE", "path": "2"}, "1832": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "POP", "path": "2"}, "1833": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "DUP2", "path": "2"}, "1834": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "ADD", "path": "2"}, "1835": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP1", "path": "2"}, "1836": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH2", "path": "2", "value": "0x735"}, "1839": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP2", "path": "2"}, "1840": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "SWAP1", "path": "2"}, "1841": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "PUSH2", "path": "2", "value": "0xFC7"}, "1844": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [1971, 1999], "op": "JUMP", "path": "2"}, "1845": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 1999], "op": "JUMPDEST", "path": "2"}, "1846": {"op": "PUSH1", "value": "0x1"}, "1848": {"op": "PUSH1", "value": "0x1"}, "1850": {"op": "PUSH1", "value": "0xA0"}, "1852": {"op": "SHL"}, "1853": {"op": "SUB"}, "1854": {"offset": [1971, 2030], "op": "AND", "path": "2"}, "1855": {"branch": 39, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1971, 2030], "op": "EQ", "path": "2"}, "1856": {"offset": [1907, 2030], "op": "JUMPDEST", "path": "2"}, "1857": {"offset": [1886, 2040], "op": "PUSH2", "path": "2", "value": "0x749"}, "1860": {"branch": 39, "offset": [1886, 2040], "op": "JUMPI", "path": "2"}, "1861": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1886, 2040], "op": "PUSH1", "path": "2", "value": "0x0"}, "1863": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1886, 2040], "op": "DUP1", "path": "2"}, "1864": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1886, 2040], "op": "REVERT", "path": "2"}, "1865": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1886, 2040], "op": "JUMPDEST", "path": "2"}, "1866": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "PUSH1", "path": "2", "statement": 20, "value": "0x0"}, "1868": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "DUP3", "path": "2"}, "1869": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "DUP2", "path": "2"}, "1870": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "MSTORE", "path": "2"}, "1871": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6540, 6544], "op": "PUSH1", "path": "2", "value": "0x1"}, "1873": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "PUSH1", "path": "2", "value": "0x20"}, "1875": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "DUP2", "path": "2"}, "1876": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "DUP2", "path": "2"}, "1877": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "MSTORE", "path": "2"}, "1878": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "PUSH1", "path": "2", "value": "0x40"}, "1880": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "SWAP3", "path": "2"}, "1881": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "DUP4", "path": "2"}, "1882": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "SWAP1", "path": "2"}, "1883": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6537], "op": "KECCAK256", "path": "2"}, "1884": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "DUP1", "path": "2"}, "1885": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "SLOAD", "path": "2"}, "1886": {"op": "PUSH1", "value": "0xFF"}, "1888": {"op": "NOT"}, "1889": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "AND", "path": "2"}, "1890": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "SWAP1", "path": "2"}, "1891": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "SWAP3", "path": "2"}, "1892": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "OR", "path": "2"}, "1893": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "SWAP1", "path": "2"}, "1894": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "SWAP2", "path": "2"}, "1895": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6501, 6544], "op": "SSTORE", "path": "2"}, "1896": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "SWAP1", "path": "2", "statement": 21}, "1897": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "MLOAD", "path": "2"}, "1898": {"op": "DUP4"}, "1899": {"op": "DUP2"}, "1900": {"op": "MSTORE"}, "1901": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "PUSH32", "path": "2", "value": "0xF92A8A7980EB38C3C210AD55B80880529BCCDBC8206E7CDB24D9F52C6A5171E8"}, "1934": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "SWAP2", "path": "2"}, "1935": {"op": "ADD"}, "1936": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "PUSH1", "path": "2", "value": "0x40"}, "1938": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "MLOAD", "path": "2"}, "1939": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "DUP1", "path": "2"}, "1940": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "SWAP2", "path": "2"}, "1941": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "SUB", "path": "2"}, "1942": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "SWAP1", "path": "2"}, "1943": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6559, 6602], "op": "LOG1", "path": "2"}, "1944": {"offset": [1788, 2058], "op": "POP", "path": "2"}, "1945": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6409, 6609], "op": "POP", "path": "2"}, "1946": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "o", "offset": [6409, 6609], "op": "JUMP", "path": "2"}, "1947": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "JUMPDEST", "path": "2"}, "1948": {"offset": [2211, 2221], "op": "PUSH1", "path": "2", "value": "0x5"}, "1950": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2211, 2221], "op": "SLOAD", "path": "2"}, "1951": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6758, 6765], "op": "PUSH1", "path": "2", "value": "0x0"}, "1953": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6758, 6765], "op": "SWAP1", "path": "2"}, "1954": {"op": "PUSH1", "value": "0x1"}, "1956": {"op": "PUSH1", "value": "0x1"}, "1958": {"op": "PUSH1", "value": "0xA0"}, "1960": {"op": "SHL"}, "1961": {"op": "SUB"}, "1962": {"offset": [2211, 2221], "op": "AND", "path": "2"}, "1963": {"offset": [2197, 2207], "op": "CALLER", "path": "2"}, "1964": {"offset": [2197, 2221], "op": "EQ", "path": "2"}, "1965": {"offset": [2189, 2265], "op": "PUSH2", "path": "2", "value": "0x7C8"}, "1968": {"offset": [2189, 2265], "op": "JUMPI", "path": "2"}, "1969": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "PUSH1", "path": "2", "value": "0x40"}, "1971": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "MLOAD", "path": "2"}, "1972": {"op": "PUSH3", "value": "0x461BCD"}, "1976": {"op": "PUSH1", "value": "0xE5"}, "1978": {"op": "SHL"}, "1979": {"offset": [2189, 2265], "op": "DUP2", "path": "2"}, "1980": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "MSTORE", "path": "2"}, "1981": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "PUSH1", "path": "2", "value": "0x4"}, "1983": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "ADD", "path": "2"}, "1984": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "PUSH2", "path": "2", "value": "0x243"}, "1987": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "SWAP1", "path": "2"}, "1988": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "PUSH2", "path": "2", "value": "0xE24"}, "1991": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "jump": "i", "offset": [2189, 2265], "op": "JUMP", "path": "2"}, "1992": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2189, 2265], "op": "JUMPDEST", "path": "2"}, "1993": {"op": "POP"}, "1994": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6783, 6800], "op": "PUSH1", "path": "2", "statement": 22, "value": "0x6"}, "1996": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6783, 6800], "op": "SLOAD", "path": "2"}, "1997": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6689, 6807], "op": "SWAP1", "path": "2"}, "1998": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "jump": "o", "offset": [6689, 6807], "op": "JUMP", "path": "2"}, "1999": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "JUMPDEST", "path": "2"}, "2000": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5144, 5179], "op": "PUSH1", "path": "2", "value": "0x0"}, "2002": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5182, 5231], "op": "PUSH2", "path": "2", "value": "0x7DA"}, "2005": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5219, 5230], "op": "DUP3", "path": "2"}, "2006": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5182, 5218], "op": "PUSH2", "path": "2", "value": "0xB5B"}, "2009": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5182, 5231], "op": "JUMP", "path": "2"}, "2010": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5182, 5231], "op": "JUMPDEST", "path": "2"}, "2011": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "PUSH1", "path": "2", "statement": 23, "value": "0x0"}, "2013": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "DUP2", "path": "2"}, "2014": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "DUP2", "path": "2"}, "2015": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "MSTORE", "path": "2"}, "2016": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5264], "op": "PUSH1", "path": "2", "value": "0x1"}, "2018": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "PUSH1", "path": "2", "value": "0x20"}, "2020": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "MSTORE", "path": "2"}, "2021": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "PUSH1", "path": "2", "value": "0x40"}, "2023": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "SWAP1", "path": "2"}, "2024": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "KECCAK256", "path": "2"}, "2025": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "SLOAD", "path": "2"}, "2026": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5144, 5231], "op": "SWAP1", "path": "2"}, "2027": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5144, 5231], "op": "SWAP2", "path": "2"}, "2028": {"op": "POP"}, "2029": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "PUSH1", "path": "2", "value": "0xFF"}, "2031": {"branch": 40, "fn": "SourceDomainSideBridge.processClaims", "offset": [5249, 5293], "op": "AND", "path": "2"}, "2032": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "PUSH2", "path": "2", "value": "0x83B"}, "2035": {"branch": 40, "fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "JUMPI", "path": "2"}, "2036": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "PUSH1", "path": "2", "value": "0x40"}, "2038": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "MLOAD", "path": "2"}, "2039": {"op": "PUSH3", "value": "0x461BCD"}, "2043": {"op": "PUSH1", "value": "0xE5"}, "2045": {"op": "SHL"}, "2046": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "DUP2", "path": "2"}, "2047": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "MSTORE", "path": "2"}, "2048": {"op": "PUSH1", "value": "0x20"}, "2050": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "PUSH1", "path": "2", "value": "0x4"}, "2052": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "DUP3", "path": "2"}, "2053": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "ADD", "path": "2"}, "2054": {"op": "MSTORE"}, "2055": {"op": "PUSH1", "value": "0x19"}, "2057": {"op": "PUSH1", "value": "0x24"}, "2059": {"op": "DUP3"}, "2060": {"op": "ADD"}, "2061": {"op": "MSTORE"}, "2062": {"op": "PUSH32", "value": "0x496E76616C6964652052657761726444617461206C6973742E00000000000000"}, "2095": {"op": "PUSH1", "value": "0x44"}, "2097": {"op": "DUP3"}, "2098": {"op": "ADD"}, "2099": {"op": "MSTORE"}, "2100": {"op": "PUSH1", "value": "0x64"}, "2102": {"op": "ADD"}, "2103": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "PUSH2", "path": "2", "value": "0x243"}, "2106": {"op": "JUMP"}, "2107": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5241, 5323], "op": "JUMPDEST", "path": "2"}, "2108": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5333, 5357], "op": "PUSH1", "path": "2", "statement": 24, "value": "0x2"}, "2110": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5333, 5387], "op": "DUP2", "path": "2"}, "2111": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5333, 5387], "op": "SWAP1", "path": "2"}, "2112": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5333, 5387], "op": "SSTORE", "path": "2"}, "2113": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5401, 5407], "op": "PUSH1", "path": "2", "value": "0x0"}, "2115": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 6227], "op": "JUMPDEST", "path": "2"}, "2116": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5417, 5428], "op": "DUP3", "path": "2"}, "2117": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5417, 5435], "op": "MLOAD", "path": "2"}, "2118": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5413, 5414], "op": "DUP2", "path": "2"}, "2119": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5413, 5435], "op": "LT", "path": "2"}, "2120": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 6227], "op": "ISZERO", "path": "2"}, "2121": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 6227], "op": "PUSH2", "path": "2", "value": "0xB56"}, "2124": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 6227], "op": "JUMPI", "path": "2"}, "2125": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5478], "op": "PUSH1", "path": "2", "value": "0x0"}, "2127": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "DUP1", "path": "2"}, "2128": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5490], "op": "DUP5", "path": "2"}, "2129": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5491, 5492], "op": "DUP4", "path": "2"}, "2130": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "DUP2", "path": "2"}, "2131": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "MLOAD", "path": "2"}, "2132": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "DUP2", "path": "2"}, "2133": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "LT", "path": "2"}, "2134": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "PUSH2", "path": "2", "value": "0x861"}, "2137": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "JUMPI", "path": "2"}, "2138": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "PUSH2", "path": "2", "value": "0x861"}, "2141": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2144": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5479, 5493], "op": "JUMP", "path": "2"}, "2145": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "JUMPDEST", "path": "2"}, "2146": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "PUSH1", "path": "2", "value": "0x20"}, "2148": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "SWAP1", "path": "2"}, "2149": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "DUP2", "path": "2"}, "2150": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "MUL", "path": "2"}, "2151": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "SWAP2", "path": "2"}, "2152": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "SWAP1", "path": "2"}, "2153": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "SWAP2", "path": "2"}, "2154": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "ADD", "path": "2"}, "2155": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "DUP2", "path": "2"}, "2156": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "ADD", "path": "2"}, "2157": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5493], "op": "MLOAD", "path": "2"}, "2158": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5510], "op": "MLOAD", "path": "2"}, "2159": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "DUP3", "path": "2"}, "2160": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "MSTORE", "path": "2"}, "2161": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "DUP2", "path": "2"}, "2162": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "ADD", "path": "2"}, "2163": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "SWAP2", "path": "2"}, "2164": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "SWAP1", "path": "2"}, "2165": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "SWAP2", "path": "2"}, "2166": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "MSTORE", "path": "2"}, "2167": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "PUSH1", "path": "2", "value": "0x40"}, "2169": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "ADD", "path": "2"}, "2170": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5479, 5510], "op": "PUSH1", "path": "2", "value": "0x0"}, "2172": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "KECCAK256", "path": "2"}, "2173": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "SLOAD", "path": "2"}, "2174": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "PUSH1", "path": "2", "value": "0xFF"}, "2176": {"branch": 41, "fn": "SourceDomainSideBridge.processClaims", "offset": [5459, 5511], "op": "AND", "path": "2"}, "2177": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5456, 6217], "op": "ISZERO", "path": "2"}, "2178": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5456, 6217], "op": "PUSH2", "path": "2", "value": "0xB44"}, "2181": {"branch": 41, "fn": "SourceDomainSideBridge.processClaims", "offset": [5456, 6217], "op": "JUMPI", "path": "2"}, "2182": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5530, 5542], "op": "PUSH1", "path": "2", "value": "0x0"}, "2184": {"offset": [367, 409], "op": "DUP1", "path": "2"}, "2185": {"op": "PUSH1", "value": "0x1"}, "2187": {"op": "PUSH1", "value": "0x1"}, "2189": {"op": "PUSH1", "value": "0xA0"}, "2191": {"op": "SHL"}, "2192": {"op": "SUB"}, "2193": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5607], "op": "AND", "path": "2"}, "2194": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5574], "op": "DUP5", "path": "2"}, "2195": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5575, 5576], "op": "DUP4", "path": "2"}, "2196": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "DUP2", "path": "2"}, "2197": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "MLOAD", "path": "2"}, "2198": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "DUP2", "path": "2"}, "2199": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "LT", "path": "2"}, "2200": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "PUSH2", "path": "2", "value": "0x8A3"}, "2203": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "JUMPI", "path": "2"}, "2204": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "PUSH2", "path": "2", "value": "0x8A3"}, "2207": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2210": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5563, 5577], "op": "JUMP", "path": "2"}, "2211": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "JUMPDEST", "path": "2"}, "2212": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "PUSH1", "path": "2", "value": "0x20"}, "2214": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "MUL", "path": "2"}, "2215": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "PUSH1", "path": "2", "value": "0x20"}, "2217": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "ADD", "path": "2"}, "2218": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "ADD", "path": "2"}, "2219": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5577], "op": "MLOAD", "path": "2"}, "2220": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5590], "op": "PUSH1", "path": "2", "value": "0x20"}, "2222": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5590], "op": "ADD", "path": "2"}, "2223": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5590], "op": "MLOAD", "path": "2"}, "2224": {"op": "PUSH1", "value": "0x1"}, "2226": {"op": "PUSH1", "value": "0x1"}, "2228": {"op": "PUSH1", "value": "0xA0"}, "2230": {"op": "SHL"}, "2231": {"op": "SUB"}, "2232": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5607], "op": "AND", "path": "2"}, "2233": {"branch": 42, "fn": "SourceDomainSideBridge.processClaims", "offset": [5563, 5607], "op": "SUB", "path": "2"}, "2234": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5560, 6128], "op": "PUSH2", "path": "2", "value": "0x96E"}, "2237": {"branch": 42, "fn": "SourceDomainSideBridge.processClaims", "offset": [5560, 6128], "op": "JUMPI", "path": "2"}, "2238": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5631, 5639], "op": "PUSH1", "path": "2", "value": "0x0"}, "2240": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5664], "op": "DUP5", "path": "2"}, "2241": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5665, 5666], "op": "DUP4", "path": "2"}, "2242": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "DUP2", "path": "2"}, "2243": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "MLOAD", "path": "2"}, "2244": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "DUP2", "path": "2"}, "2245": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "LT", "path": "2"}, "2246": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "PUSH2", "path": "2", "value": "0x8D1"}, "2249": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "JUMPI", "path": "2"}, "2250": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "PUSH2", "path": "2", "value": "0x8D1"}, "2253": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2256": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5653, 5667], "op": "JUMP", "path": "2"}, "2257": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "JUMPDEST", "path": "2"}, "2258": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "PUSH1", "path": "2", "value": "0x20"}, "2260": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "MUL", "path": "2"}, "2261": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "PUSH1", "path": "2", "value": "0x20"}, "2263": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "ADD", "path": "2"}, "2264": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "ADD", "path": "2"}, "2265": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5667], "op": "MLOAD", "path": "2"}, "2266": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5675], "op": "PUSH1", "path": "2", "value": "0x40"}, "2268": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5675], "op": "ADD", "path": "2"}, "2269": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5653, 5675], "op": "MLOAD", "path": "2"}, "2270": {"op": "PUSH1", "value": "0x1"}, "2272": {"op": "PUSH1", "value": "0x1"}, "2274": {"op": "PUSH1", "value": "0xA0"}, "2276": {"op": "SHL"}, "2277": {"op": "SUB"}, "2278": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5681], "op": "AND", "path": "2"}, "2279": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5730, 5731], "op": "PUSH1", "path": "2", "value": "0x2"}, "2281": {"offset": [679, 688], "op": "PUSH6", "path": "2", "value": "0x2BAF524C400"}, "2288": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5720, 5731], "op": "PUSH2", "path": "2", "value": "0x8F9"}, "2291": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5720, 5731], "op": "SWAP2", "path": "2"}, "2292": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5720, 5731], "op": "SWAP1", "path": "2"}, "2293": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5720, 5731], "op": "PUSH2", "path": "2", "value": "0xEFA"}, "2296": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5720, 5731], "op": "JUMP", "path": "2"}, "2297": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5720, 5731], "op": "JUMPDEST", "path": "2"}, "2298": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5700], "op": "DUP7", "path": "2"}, "2299": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5701, 5702], "op": "DUP6", "path": "2"}, "2300": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "DUP2", "path": "2"}, "2301": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "MLOAD", "path": "2"}, "2302": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "DUP2", "path": "2"}, "2303": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "LT", "path": "2"}, "2304": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "PUSH2", "path": "2", "value": "0x90B"}, "2307": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "JUMPI", "path": "2"}, "2308": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "PUSH2", "path": "2", "value": "0x90B"}, "2311": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2314": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5689, 5703], "op": "JUMP", "path": "2"}, "2315": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "JUMPDEST", "path": "2"}, "2316": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "PUSH1", "path": "2", "value": "0x20"}, "2318": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "MUL", "path": "2"}, "2319": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "PUSH1", "path": "2", "value": "0x20"}, "2321": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "ADD", "path": "2"}, "2322": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "ADD", "path": "2"}, "2323": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5703], "op": "MLOAD", "path": "2"}, "2324": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5717], "op": "PUSH1", "path": "2", "value": "0x60"}, "2326": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5717], "op": "ADD", "path": "2"}, "2327": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5717], "op": "MLOAD", "path": "2"}, "2328": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5731], "op": "PUSH2", "path": "2", "value": "0x921"}, "2331": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5731], "op": "SWAP2", "path": "2"}, "2332": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5731], "op": "SWAP1", "path": "2"}, "2333": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5731], "op": "PUSH2", "path": "2", "value": "0xEA0"}, "2336": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5689, 5731], "op": "JUMP", "path": "2"}, "2337": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5689, 5731], "op": "JUMPDEST", "path": "2"}, "2338": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x40"}, "2340": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "MLOAD", "path": "2"}, "2341": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x0"}, "2343": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP2", "path": "2"}, "2344": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP2", "path": "2"}, "2345": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP2", "path": "2"}, "2346": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP6", "path": "2"}, "2347": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP8", "path": "2"}, "2348": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "GAS", "path": "2"}, "2349": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "CALL", "path": "2"}, "2350": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "SWAP3", "path": "2"}, "2351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "POP", "path": "2"}, "2352": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "POP", "path": "2"}, "2353": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "POP", "path": "2"}, "2354": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "RETURNDATASIZE", "path": "2"}, "2355": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP1", "path": "2"}, "2356": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x0"}, "2358": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP2", "path": "2"}, "2359": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "EQ", "path": "2"}, "2360": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH2", "path": "2", "value": "0x95D"}, "2363": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "JUMPI", "path": "2"}, "2364": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x40"}, "2366": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "MLOAD", "path": "2"}, "2367": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "SWAP2", "path": "2"}, "2368": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "POP", "path": "2"}, "2369": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x1F"}, "2371": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "NOT", "path": "2"}, "2372": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x3F"}, "2374": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "RETURNDATASIZE", "path": "2"}, "2375": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "ADD", "path": "2"}, "2376": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "AND", "path": "2"}, "2377": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP3", "path": "2"}, "2378": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "ADD", "path": "2"}, "2379": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x40"}, "2381": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "MSTORE", "path": "2"}, "2382": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "RETURNDATASIZE", "path": "2"}, "2383": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP3", "path": "2"}, "2384": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "MSTORE", "path": "2"}, "2385": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "RETURNDATASIZE", "path": "2"}, "2386": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x0"}, "2388": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x20"}, "2390": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "DUP5", "path": "2"}, "2391": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "ADD", "path": "2"}, "2392": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "RETURNDATACOPY", "path": "2"}, "2393": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH2", "path": "2", "value": "0x962"}, "2396": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "JUMP", "path": "2"}, "2397": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "JUMPDEST", "path": "2"}, "2398": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "PUSH1", "path": "2", "value": "0x60"}, "2400": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "SWAP2", "path": "2"}, "2401": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "POP", "path": "2"}, "2402": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5645, 5736], "op": "JUMPDEST", "path": "2"}, "2403": {"op": "POP"}, "2404": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5630, 5736], "op": "SWAP1", "path": "2"}, "2405": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5630, 5736], "op": "SWAP3", "path": "2"}, "2406": {"op": "POP"}, "2407": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5560, 6128], "op": "PUSH2", "path": "2", "value": "0xAE1"}, "2410": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5560, 6128], "op": "SWAP2", "path": "2"}, "2411": {"op": "POP"}, "2412": {"op": "POP"}, "2413": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5560, 6128], "op": "JUMP", "path": "2"}, "2414": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5560, 6128], "op": "JUMPDEST", "path": "2"}, "2415": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5816, 5827], "op": "PUSH1", "path": "2", "value": "0x0"}, "2417": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5847], "op": "DUP5", "path": "2"}, "2418": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5848, 5849], "op": "DUP4", "path": "2"}, "2419": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "DUP2", "path": "2"}, "2420": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "MLOAD", "path": "2"}, "2421": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "DUP2", "path": "2"}, "2422": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "LT", "path": "2"}, "2423": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "PUSH2", "path": "2", "value": "0x982"}, "2426": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "JUMPI", "path": "2"}, "2427": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "PUSH2", "path": "2", "value": "0x982"}, "2430": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2433": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5836, 5850], "op": "JUMP", "path": "2"}, "2434": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "JUMPDEST", "path": "2"}, "2435": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "PUSH1", "path": "2", "value": "0x20"}, "2437": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "MUL", "path": "2"}, "2438": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "PUSH1", "path": "2", "value": "0x20"}, "2440": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "ADD", "path": "2"}, "2441": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "ADD", "path": "2"}, "2442": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5850], "op": "MLOAD", "path": "2"}, "2443": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5863], "op": "PUSH1", "path": "2", "value": "0x20"}, "2445": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5863], "op": "ADD", "path": "2"}, "2446": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5836, 5863], "op": "MLOAD", "path": "2"}, "2447": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5816, 5864], "op": "SWAP1", "path": "2"}, "2448": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5816, 5864], "op": "POP", "path": "2"}, "2449": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5901], "op": "DUP1", "path": "2", "statement": 25}, "2450": {"op": "PUSH1", "value": "0x1"}, "2452": {"op": "PUSH1", "value": "0x1"}, "2454": {"op": "PUSH1", "value": "0xA0"}, "2456": {"op": "SHL"}, "2457": {"op": "SUB"}, "2458": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5910], "op": "AND", "path": "2"}, "2459": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5910], "op": "PUSH4", "path": "2", "value": "0xA9059CBB"}, "2464": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5922], "op": "DUP7", "path": "2"}, "2465": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5923, 5924], "op": "DUP6", "path": "2"}, "2466": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "DUP2", "path": "2"}, "2467": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "MLOAD", "path": "2"}, "2468": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "DUP2", "path": "2"}, "2469": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "LT", "path": "2"}, "2470": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "PUSH2", "path": "2", "value": "0x9B1"}, "2473": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "JUMPI", "path": "2"}, "2474": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "PUSH2", "path": "2", "value": "0x9B1"}, "2477": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2480": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5911, 5925], "op": "JUMP", "path": "2"}, "2481": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "JUMPDEST", "path": "2"}, "2482": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "PUSH1", "path": "2", "value": "0x20"}, "2484": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "MUL", "path": "2"}, "2485": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "PUSH1", "path": "2", "value": "0x20"}, "2487": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "ADD", "path": "2"}, "2488": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "ADD", "path": "2"}, "2489": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5925], "op": "MLOAD", "path": "2"}, "2490": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5933], "op": "PUSH1", "path": "2", "value": "0x40"}, "2492": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5933], "op": "ADD", "path": "2"}, "2493": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5911, 5933], "op": "MLOAD", "path": "2"}, "2494": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5946], "op": "DUP8", "path": "2"}, "2495": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5947, 5948], "op": "DUP7", "path": "2"}, "2496": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "DUP2", "path": "2"}, "2497": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "MLOAD", "path": "2"}, "2498": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "DUP2", "path": "2"}, "2499": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "LT", "path": "2"}, "2500": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "PUSH2", "path": "2", "value": "0x9CF"}, "2503": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "JUMPI", "path": "2"}, "2504": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "PUSH2", "path": "2", "value": "0x9CF"}, "2507": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2510": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5935, 5949], "op": "JUMP", "path": "2"}, "2511": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "JUMPDEST", "path": "2"}, "2512": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "PUSH1", "path": "2", "value": "0x20"}, "2514": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "MUL", "path": "2"}, "2515": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "PUSH1", "path": "2", "value": "0x20"}, "2517": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "ADD", "path": "2"}, "2518": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "ADD", "path": "2"}, "2519": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5949], "op": "MLOAD", "path": "2"}, "2520": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5963], "op": "PUSH1", "path": "2", "value": "0x60"}, "2522": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5963], "op": "ADD", "path": "2"}, "2523": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5935, 5963], "op": "MLOAD", "path": "2"}, "2524": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x40"}, "2526": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "MLOAD", "path": "2"}, "2527": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP4", "path": "2"}, "2528": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH4", "path": "2", "value": "0xFFFFFFFF"}, "2533": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "AND", "path": "2"}, "2534": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0xE0"}, "2536": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "SHL", "path": "2"}, "2537": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP2", "path": "2"}, "2538": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "MSTORE", "path": "2"}, "2539": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x4"}, "2541": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "ADD", "path": "2"}, "2542": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH2", "path": "2", "value": "0xA0C"}, "2545": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "SWAP3", "path": "2"}, "2546": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "SWAP2", "path": "2"}, "2547": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "SWAP1", "path": "2"}, "2548": {"op": "PUSH1", "value": "0x1"}, "2550": {"op": "PUSH1", "value": "0x1"}, "2552": {"op": "PUSH1", "value": "0xA0"}, "2554": {"op": "SHL"}, "2555": {"op": "SUB"}, "2556": {"op": "SWAP3"}, "2557": {"op": "SWAP1"}, "2558": {"op": "SWAP3"}, "2559": {"op": "AND"}, "2560": {"op": "DUP3"}, "2561": {"op": "MSTORE"}, "2562": {"op": "PUSH1", "value": "0x20"}, "2564": {"op": "DUP3"}, "2565": {"op": "ADD"}, "2566": {"op": "MSTORE"}, "2567": {"op": "PUSH1", "value": "0x40"}, "2569": {"op": "ADD"}, "2570": {"op": "SWAP1"}, "2571": {"op": "JUMP"}, "2572": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "JUMPDEST", "path": "2"}, "2573": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x20"}, "2575": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x40"}, "2577": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "MLOAD", "path": "2"}, "2578": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP1", "path": "2"}, "2579": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP4", "path": "2"}, "2580": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "SUB", "path": "2"}, "2581": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP2", "path": "2"}, "2582": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x0"}, "2584": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP8", "path": "2"}, "2585": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "GAS", "path": "2"}, "2586": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "CALL", "path": "2"}, "2587": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "ISZERO", "path": "2"}, "2588": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP1", "path": "2"}, "2589": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "ISZERO", "path": "2"}, "2590": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH2", "path": "2", "value": "0xA2B"}, "2593": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "JUMPI", "path": "2"}, "2594": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "RETURNDATASIZE", "path": "2"}, "2595": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x0"}, "2597": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP1", "path": "2"}, "2598": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "RETURNDATACOPY", "path": "2"}, "2599": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "RETURNDATASIZE", "path": "2"}, "2600": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x0"}, "2602": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "REVERT", "path": "2"}, "2603": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "JUMPDEST", "path": "2"}, "2604": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "POP", "path": "2"}, "2605": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "POP", "path": "2"}, "2606": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "POP", "path": "2"}, "2607": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "POP", "path": "2"}, "2608": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x40"}, "2610": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "MLOAD", "path": "2"}, "2611": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "RETURNDATASIZE", "path": "2"}, "2612": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x1F"}, "2614": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "NOT", "path": "2"}, "2615": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x1F"}, "2617": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP3", "path": "2"}, "2618": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "ADD", "path": "2"}, "2619": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "AND", "path": "2"}, "2620": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP3", "path": "2"}, "2621": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "ADD", "path": "2"}, "2622": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP1", "path": "2"}, "2623": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH1", "path": "2", "value": "0x40"}, "2625": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "MSTORE", "path": "2"}, "2626": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "POP", "path": "2"}, "2627": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "DUP2", "path": "2"}, "2628": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "ADD", "path": "2"}, "2629": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "SWAP1", "path": "2"}, "2630": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH2", "path": "2", "value": "0xA4F"}, "2633": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "SWAP2", "path": "2"}, "2634": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "SWAP1", "path": "2"}, "2635": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "PUSH2", "path": "2", "value": "0xEB8"}, "2638": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5896, 5964], "op": "JUMP", "path": "2"}, "2639": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5896, 5964], "op": "JUMPDEST", "path": "2"}, "2640": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5886, 5964], "op": "SWAP2", "path": "2"}, "2641": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5886, 5964], "op": "POP", "path": "2"}, "2642": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5988, 5996], "op": "PUSH1", "path": "2", "value": "0x0"}, "2644": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6021], "op": "DUP6", "path": "2"}, "2645": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6022, 6023], "op": "DUP5", "path": "2"}, "2646": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "DUP2", "path": "2"}, "2647": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "MLOAD", "path": "2"}, "2648": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "DUP2", "path": "2"}, "2649": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "LT", "path": "2"}, "2650": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "PUSH2", "path": "2", "value": "0xA65"}, "2653": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "JUMPI", "path": "2"}, "2654": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "PUSH2", "path": "2", "value": "0xA65"}, "2657": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2660": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [6010, 6024], "op": "JUMP", "path": "2"}, "2661": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "JUMPDEST", "path": "2"}, "2662": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "PUSH1", "path": "2", "value": "0x20"}, "2664": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "MUL", "path": "2"}, "2665": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "PUSH1", "path": "2", "value": "0x20"}, "2667": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "ADD", "path": "2"}, "2668": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "ADD", "path": "2"}, "2669": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6024], "op": "MLOAD", "path": "2"}, "2670": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6032], "op": "PUSH1", "path": "2", "value": "0x40"}, "2672": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6032], "op": "ADD", "path": "2"}, "2673": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6010, 6032], "op": "MLOAD", "path": "2"}, "2674": {"op": "PUSH1", "value": "0x1"}, "2676": {"op": "PUSH1", "value": "0x1"}, "2678": {"op": "PUSH1", "value": "0xA0"}, "2680": {"op": "SHL"}, "2681": {"op": "SUB"}, "2682": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6038], "op": "AND", "path": "2"}, "2683": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6056, 6057], "op": "PUSH1", "path": "2", "value": "0x2"}, "2685": {"offset": [679, 688], "op": "PUSH6", "path": "2", "value": "0x2BAF524C400"}, "2692": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6046, 6057], "op": "PUSH2", "path": "2", "value": "0xA8D"}, "2695": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6046, 6057], "op": "SWAP2", "path": "2"}, "2696": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6046, 6057], "op": "SWAP1", "path": "2"}, "2697": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6046, 6057], "op": "PUSH2", "path": "2", "value": "0xEFA"}, "2700": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [6046, 6057], "op": "JUMP", "path": "2"}, "2701": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6046, 6057], "op": "JUMPDEST", "path": "2"}, "2702": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x40"}, "2704": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "MLOAD", "path": "2"}, "2705": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x0"}, "2707": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP2", "path": "2"}, "2708": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP2", "path": "2"}, "2709": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP2", "path": "2"}, "2710": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP6", "path": "2"}, "2711": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP8", "path": "2"}, "2712": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "GAS", "path": "2"}, "2713": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "CALL", "path": "2"}, "2714": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "SWAP3", "path": "2"}, "2715": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "POP", "path": "2"}, "2716": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "POP", "path": "2"}, "2717": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "POP", "path": "2"}, "2718": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "RETURNDATASIZE", "path": "2"}, "2719": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP1", "path": "2"}, "2720": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x0"}, "2722": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP2", "path": "2"}, "2723": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "EQ", "path": "2"}, "2724": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH2", "path": "2", "value": "0xAC9"}, "2727": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "JUMPI", "path": "2"}, "2728": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x40"}, "2730": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "MLOAD", "path": "2"}, "2731": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "SWAP2", "path": "2"}, "2732": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "POP", "path": "2"}, "2733": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x1F"}, "2735": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "NOT", "path": "2"}, "2736": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x3F"}, "2738": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "RETURNDATASIZE", "path": "2"}, "2739": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "ADD", "path": "2"}, "2740": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "AND", "path": "2"}, "2741": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP3", "path": "2"}, "2742": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "ADD", "path": "2"}, "2743": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x40"}, "2745": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "MSTORE", "path": "2"}, "2746": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "RETURNDATASIZE", "path": "2"}, "2747": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP3", "path": "2"}, "2748": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "MSTORE", "path": "2"}, "2749": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "RETURNDATASIZE", "path": "2"}, "2750": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x0"}, "2752": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x20"}, "2754": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "DUP5", "path": "2"}, "2755": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "ADD", "path": "2"}, "2756": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "RETURNDATACOPY", "path": "2"}, "2757": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH2", "path": "2", "value": "0xACE"}, "2760": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "JUMP", "path": "2"}, "2761": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "JUMPDEST", "path": "2"}, "2762": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "PUSH1", "path": "2", "value": "0x60"}, "2764": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "SWAP2", "path": "2"}, "2765": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "POP", "path": "2"}, "2766": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "JUMPDEST", "path": "2"}, "2767": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6002, 6062], "op": "POP", "path": "2"}, "2768": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5987, 6062], "op": "POP", "path": "2"}, "2769": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5987, 6062], "op": "SWAP1", "path": "2"}, "2770": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5987, 6062], "op": "POP", "path": "2"}, "2771": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6095, 6102], "op": "DUP3", "path": "2", "statement": 26}, "2772": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6095, 6109], "op": "DUP1", "path": "2"}, "2773": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6095, 6109], "op": "ISZERO", "path": "2"}, "2774": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6095, 6109], "op": "PUSH2", "path": "2", "value": "0xADC"}, "2777": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6095, 6109], "op": "JUMPI", "path": "2"}, "2778": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6095, 6109], "op": "POP", "path": "2"}, "2779": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6106, 6109], "op": "DUP1", "path": "2"}, "2780": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6095, 6109], "op": "JUMPDEST", "path": "2"}, "2781": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6085, 6109], "op": "SWAP3", "path": "2"}, "2782": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6085, 6109], "op": "POP", "path": "2"}, "2783": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5794, 6128], "op": "POP", "path": "2"}, "2784": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5794, 6128], "op": "POP", "path": "2"}, "2785": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5560, 6128], "op": "JUMPDEST", "path": "2"}, "2786": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "PUSH32", "path": "2", "statement": 27, "value": "0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A"}, "2819": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6172], "op": "DUP5", "path": "2"}, "2820": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6173, 6174], "op": "DUP4", "path": "2"}, "2821": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "DUP2", "path": "2"}, "2822": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "MLOAD", "path": "2"}, "2823": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "DUP2", "path": "2"}, "2824": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "LT", "path": "2"}, "2825": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "PUSH2", "path": "2", "value": "0xB14"}, "2828": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "JUMPI", "path": "2"}, "2829": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "PUSH2", "path": "2", "value": "0xB14"}, "2832": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2835": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [6161, 6175], "op": "JUMP", "path": "2"}, "2836": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "JUMPDEST", "path": "2"}, "2837": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "PUSH1", "path": "2", "value": "0x20"}, "2839": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "MUL", "path": "2"}, "2840": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "PUSH1", "path": "2", "value": "0x20"}, "2842": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "ADD", "path": "2"}, "2843": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "ADD", "path": "2"}, "2844": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6175], "op": "MLOAD", "path": "2"}, "2845": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6192], "op": "PUSH1", "path": "2", "value": "0x0"}, "2847": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6192], "op": "ADD", "path": "2"}, "2848": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6161, 6192], "op": "MLOAD", "path": "2"}, "2849": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6194, 6201], "op": "DUP3", "path": "2"}, "2850": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "PUSH1", "path": "2", "value": "0x40"}, "2852": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "MLOAD", "path": "2"}, "2853": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "PUSH2", "path": "2", "value": "0xB3A"}, "2856": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "SWAP3", "path": "2"}, "2857": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "SWAP2", "path": "2"}, "2858": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "SWAP1", "path": "2"}, "2859": {"op": "SWAP2"}, "2860": {"op": "DUP3"}, "2861": {"op": "MSTORE"}, "2862": {"op": "ISZERO"}, "2863": {"op": "ISZERO"}, "2864": {"op": "PUSH1", "value": "0x20"}, "2866": {"op": "DUP3"}, "2867": {"op": "ADD"}, "2868": {"op": "MSTORE"}, "2869": {"op": "PUSH1", "value": "0x40"}, "2871": {"op": "ADD"}, "2872": {"op": "SWAP1"}, "2873": {"op": "JUMP"}, "2874": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "JUMPDEST", "path": "2"}, "2875": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "PUSH1", "path": "2", "value": "0x40"}, "2877": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "MLOAD", "path": "2"}, "2878": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "DUP1", "path": "2"}, "2879": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "SWAP2", "path": "2"}, "2880": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "SUB", "path": "2"}, "2881": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "SWAP1", "path": "2"}, "2882": {"fn": "SourceDomainSideBridge.processClaims", "offset": [6150, 6202], "op": "LOG1", "path": "2"}, "2883": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5512, 6217], "op": "POP", "path": "2"}, "2884": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5456, 6217], "op": "JUMPDEST", "path": "2"}, "2885": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5437, 5440], "op": "DUP1", "path": "2", "statement": 28}, "2886": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5437, 5440], "op": "PUSH2", "path": "2", "value": "0xB4E"}, "2889": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5437, 5440], "op": "DUP2", "path": "2"}, "2890": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5437, 5440], "op": "PUSH2", "path": "2", "value": "0xEE1"}, "2893": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5437, 5440], "op": "JUMP", "path": "2"}, "2894": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5437, 5440], "op": "JUMPDEST", "path": "2"}, "2895": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5437, 5440], "op": "SWAP2", "path": "2"}, "2896": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5437, 5440], "op": "POP", "path": "2"}, "2897": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5437, 5440], "op": "POP", "path": "2"}, "2898": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 6227], "op": "PUSH2", "path": "2", "value": "0x843"}, "2901": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 6227], "op": "JUMP", "path": "2"}, "2902": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 6227], "op": "JUMPDEST", "path": "2"}, "2903": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 6227], "op": "POP", "path": "2"}, "2904": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5134, 6237], "op": "POP", "path": "2"}, "2905": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5051, 6237], "op": "POP", "path": "2"}, "2906": {"fn": "SourceDomainSideBridge.processClaims", "jump": "o", "offset": [5051, 6237], "op": "JUMP", "path": "2"}, "2907": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7220, 7650], "op": "JUMPDEST", "path": "2"}, "2908": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7387, 7411], "op": "PUSH1", "path": "2", "value": "0x2"}, "2910": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7387, 7411], "op": "SLOAD", "path": "2"}, "2911": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7331, 7338], "op": "PUSH1", "path": "2", "value": "0x0"}, "2913": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7331, 7338], "op": "SWAP1", "path": "2"}, "2914": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7331, 7338], "op": "DUP2", "path": "2"}, "2915": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7421, 7600], "op": "JUMPDEST", "path": "2"}, "2916": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7441, 7452], "op": "DUP4", "path": "2"}, "2917": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7441, 7459], "op": "MLOAD", "path": "2"}, "2918": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7437, 7438], "op": "DUP2", "path": "2"}, "2919": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7437, 7459], "op": "LT", "path": "2"}, "2920": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7421, 7600], "op": "ISZERO", "path": "2"}, "2921": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7421, 7600], "op": "PUSH2", "path": "2", "value": "0xC38"}, "2924": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7421, 7600], "op": "JUMPI", "path": "2"}, "2925": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "statement": 29, "value": "0x2"}, "2927": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7545, 7572], "op": "DUP3", "path": "2"}, "2928": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7584], "op": "DUP6", "path": "2"}, "2929": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7585, 7586], "op": "DUP4", "path": "2"}, "2930": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "DUP2", "path": "2"}, "2931": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "MLOAD", "path": "2"}, "2932": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "DUP2", "path": "2"}, "2933": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "LT", "path": "2"}, "2934": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "PUSH2", "path": "2", "value": "0xB81"}, "2937": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "JUMPI", "path": "2"}, "2938": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "PUSH2", "path": "2", "value": "0xB81"}, "2941": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "PUSH2", "path": "2", "value": "0xFE4"}, "2944": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [7573, 7587], "op": "JUMP", "path": "2"}, "2945": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "JUMPDEST", "path": "2"}, "2946": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "PUSH1", "path": "2", "value": "0x20"}, "2948": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "SWAP1", "path": "2"}, "2949": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "DUP2", "path": "2"}, "2950": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "MUL", "path": "2"}, "2951": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "SWAP2", "path": "2"}, "2952": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "SWAP1", "path": "2"}, "2953": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "SWAP2", "path": "2"}, "2954": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "ADD", "path": "2"}, "2955": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "DUP2", "path": "2"}, "2956": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "ADD", "path": "2"}, "2957": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7573, 7587], "op": "MLOAD", "path": "2"}, "2958": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "PUSH1", "path": "2", "value": "0x40"}, "2960": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "DUP1", "path": "2"}, "2961": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "MLOAD", "path": "2"}, "2962": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "DUP1", "path": "2"}, "2963": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "DUP5", "path": "2"}, "2964": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "ADD", "path": "2"}, "2965": {"op": "SWAP5"}, "2966": {"op": "SWAP1"}, "2967": {"op": "SWAP5"}, "2968": {"op": "MSTORE"}, "2969": {"op": "DUP2"}, "2970": {"op": "MLOAD"}, "2971": {"op": "DUP5"}, "2972": {"op": "DUP3"}, "2973": {"op": "ADD"}, "2974": {"op": "MSTORE"}, "2975": {"op": "SWAP2"}, "2976": {"op": "DUP2"}, "2977": {"op": "ADD"}, "2978": {"op": "MLOAD"}, "2979": {"op": "PUSH1", "value": "0x1"}, "2981": {"op": "PUSH1", "value": "0x1"}, "2983": {"op": "PUSH1", "value": "0xA0"}, "2985": {"op": "SHL"}, "2986": {"op": "SUB"}, "2987": {"op": "SWAP1"}, "2988": {"op": "DUP2"}, "2989": {"op": "AND"}, "2990": {"op": "PUSH1", "value": "0x60"}, "2992": {"op": "DUP1"}, "2993": {"op": "DUP7"}, "2994": {"op": "ADD"}, "2995": {"op": "SWAP2"}, "2996": {"op": "SWAP1"}, "2997": {"op": "SWAP2"}, "2998": {"op": "MSTORE"}, "2999": {"op": "SWAP3"}, "3000": {"op": "DUP3"}, "3001": {"op": "ADD"}, "3002": {"op": "MLOAD"}, "3003": {"op": "AND"}, "3004": {"op": "PUSH1", "value": "0x80"}, "3006": {"op": "DUP5"}, "3007": {"op": "ADD"}, "3008": {"op": "MSTORE"}, "3009": {"op": "ADD"}, "3010": {"op": "MLOAD"}, "3011": {"op": "PUSH1", "value": "0xA0"}, "3013": {"op": "DUP3"}, "3014": {"op": "ADD"}, "3015": {"op": "MSTORE"}, "3016": {"op": "PUSH1", "value": "0xC0"}, "3018": {"op": "ADD"}, "3019": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "PUSH1", "path": "2", "value": "0x40"}, "3021": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "DUP1", "path": "2"}, "3022": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "MLOAD", "path": "2"}, "3023": {"op": "PUSH1", "value": "0x1F"}, "3025": {"op": "NOT"}, "3026": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "DUP2", "path": "2"}, "3027": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "DUP5", "path": "2"}, "3028": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "SUB", "path": "2"}, "3029": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "ADD", "path": "2"}, "3030": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "DUP2", "path": "2"}, "3031": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "MSTORE", "path": "2"}, "3032": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "SWAP1", "path": "2"}, "3033": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "DUP3", "path": "2"}, "3034": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "SWAP1", "path": "2"}, "3035": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7534, 7588], "op": "MSTORE", "path": "2"}, "3036": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH2", "path": "2", "value": "0xBE4"}, "3039": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "SWAP2", "path": "2"}, "3040": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH2", "path": "2", "value": "0xF73"}, "3043": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [7527, 7589], "op": "JUMP", "path": "2"}, "3044": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "JUMPDEST", "path": "2"}, "3045": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "value": "0x20"}, "3047": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "value": "0x40"}, "3049": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "MLOAD", "path": "2"}, "3050": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP1", "path": "2"}, "3051": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP4", "path": "2"}, "3052": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "SUB", "path": "2"}, "3053": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP2", "path": "2"}, "3054": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP6", "path": "2"}, "3055": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "GAS", "path": "2"}, "3056": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "STATICCALL", "path": "2"}, "3057": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "ISZERO", "path": "2"}, "3058": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP1", "path": "2"}, "3059": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "ISZERO", "path": "2"}, "3060": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH2", "path": "2", "value": "0xC01"}, "3063": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "JUMPI", "path": "2"}, "3064": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "RETURNDATASIZE", "path": "2"}, "3065": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "value": "0x0"}, "3067": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP1", "path": "2"}, "3068": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "RETURNDATACOPY", "path": "2"}, "3069": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "RETURNDATASIZE", "path": "2"}, "3070": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "value": "0x0"}, "3072": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "REVERT", "path": "2"}, "3073": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "JUMPDEST", "path": "2"}, "3074": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "POP", "path": "2"}, "3075": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "POP", "path": "2"}, "3076": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "POP", "path": "2"}, "3077": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "value": "0x40"}, "3079": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "MLOAD", "path": "2"}, "3080": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "RETURNDATASIZE", "path": "2"}, "3081": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "value": "0x1F"}, "3083": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "NOT", "path": "2"}, "3084": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "value": "0x1F"}, "3086": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP3", "path": "2"}, "3087": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "ADD", "path": "2"}, "3088": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "AND", "path": "2"}, "3089": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP3", "path": "2"}, "3090": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "ADD", "path": "2"}, "3091": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP1", "path": "2"}, "3092": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH1", "path": "2", "value": "0x40"}, "3094": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "MSTORE", "path": "2"}, "3095": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "POP", "path": "2"}, "3096": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "DUP2", "path": "2"}, "3097": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "ADD", "path": "2"}, "3098": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "SWAP1", "path": "2"}, "3099": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH2", "path": "2", "value": "0xC24"}, "3102": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "SWAP2", "path": "2"}, "3103": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "SWAP1", "path": "2"}, "3104": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "PUSH2", "path": "2", "value": "0xFAE"}, "3107": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [7527, 7589], "op": "JUMP", "path": "2"}, "3108": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7527, 7589], "op": "JUMPDEST", "path": "2"}, "3109": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7480, 7589], "op": "SWAP2", "path": "2"}, "3110": {"op": "POP"}, "3111": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7461, 7464], "op": "DUP1", "path": "2", "statement": 30}, "3112": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7461, 7464], "op": "PUSH2", "path": "2", "value": "0xC30"}, "3115": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7461, 7464], "op": "DUP2", "path": "2"}, "3116": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7461, 7464], "op": "PUSH2", "path": "2", "value": "0xEE1"}, "3119": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [7461, 7464], "op": "JUMP", "path": "2"}, "3120": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7461, 7464], "op": "JUMPDEST", "path": "2"}, "3121": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7461, 7464], "op": "SWAP2", "path": "2"}, "3122": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7461, 7464], "op": "POP", "path": "2"}, "3123": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7461, 7464], "op": "POP", "path": "2"}, "3124": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7421, 7600], "op": "PUSH2", "path": "2", "value": "0xB63"}, "3127": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7421, 7600], "op": "JUMP", "path": "2"}, "3128": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7421, 7600], "op": "JUMPDEST", "path": "2"}, "3129": {"op": "POP"}, "3130": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7616, 7643], "op": "SWAP3", "path": "2", "statement": 31}, "3131": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [7220, 7650], "op": "SWAP2", "path": "2"}, "3132": {"op": "POP"}, "3133": {"op": "POP"}, "3134": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "o", "offset": [7220, 7650], "op": "JUMP", "path": "2"}, "3135": {"op": "JUMPDEST"}, "3136": {"op": "PUSH1", "value": "0x0"}, "3138": {"op": "PUSH1", "value": "0x20"}, "3140": {"op": "DUP3"}, "3141": {"op": "DUP5"}, "3142": {"op": "SUB"}, "3143": {"op": "SLT"}, "3144": {"op": "ISZERO"}, "3145": {"op": "PUSH2", "value": "0xC51"}, "3148": {"op": "JUMPI"}, "3149": {"op": "PUSH1", "value": "0x0"}, "3151": {"op": "DUP1"}, "3152": {"op": "REVERT"}, "3153": {"op": "JUMPDEST"}, "3154": {"op": "POP"}, "3155": {"op": "CALLDATALOAD"}, "3156": {"op": "SWAP2"}, "3157": {"op": "SWAP1"}, "3158": {"op": "POP"}, "3159": {"jump": "o", "op": "JUMP"}, "3160": {"op": "JUMPDEST"}, "3161": {"op": "PUSH1", "value": "0x1"}, "3163": {"op": "PUSH1", "value": "0x1"}, "3165": {"op": "PUSH1", "value": "0xA0"}, "3167": {"op": "SHL"}, "3168": {"op": "SUB"}, "3169": {"op": "DUP2"}, "3170": {"op": "AND"}, "3171": {"op": "DUP2"}, "3172": {"op": "EQ"}, "3173": {"op": "PUSH2", "value": "0xC6D"}, "3176": {"op": "JUMPI"}, "3177": {"op": "PUSH1", "value": "0x0"}, "3179": {"op": "DUP1"}, "3180": {"op": "REVERT"}, "3181": {"op": "JUMPDEST"}, "3182": {"op": "POP"}, "3183": {"jump": "o", "op": "JUMP"}, "3184": {"op": "JUMPDEST"}, "3185": {"op": "PUSH1", "value": "0x0"}, "3187": {"op": "DUP1"}, "3188": {"op": "PUSH1", "value": "0x0"}, "3190": {"op": "DUP1"}, "3191": {"op": "PUSH1", "value": "0x0"}, "3193": {"op": "PUSH1", "value": "0xA0"}, "3195": {"op": "DUP7"}, "3196": {"op": "DUP9"}, "3197": {"op": "SUB"}, "3198": {"op": "SLT"}, "3199": {"op": "ISZERO"}, "3200": {"op": "PUSH2", "value": "0xC88"}, "3203": {"op": "JUMPI"}, "3204": {"op": "PUSH1", "value": "0x0"}, "3206": {"op": "DUP1"}, "3207": {"op": "REVERT"}, "3208": {"op": "JUMPDEST"}, "3209": {"op": "DUP6"}, "3210": {"op": "CALLDATALOAD"}, "3211": {"op": "PUSH2", "value": "0xC93"}, "3214": {"op": "DUP2"}, "3215": {"op": "PUSH2", "value": "0xC58"}, "3218": {"jump": "i", "op": "JUMP"}, "3219": {"op": "JUMPDEST"}, "3220": {"op": "SWAP5"}, "3221": {"op": "POP"}, "3222": {"op": "PUSH1", "value": "0x20"}, "3224": {"op": "DUP7"}, "3225": {"op": "ADD"}, "3226": {"op": "CALLDATALOAD"}, "3227": {"op": "PUSH2", "value": "0xCA3"}, "3230": {"op": "DUP2"}, "3231": {"op": "PUSH2", "value": "0xC58"}, "3234": {"jump": "i", "op": "JUMP"}, "3235": {"op": "JUMPDEST"}, "3236": {"op": "SWAP5"}, "3237": {"op": "SWAP8"}, "3238": {"op": "SWAP5"}, "3239": {"op": "SWAP7"}, "3240": {"op": "POP"}, "3241": {"op": "POP"}, "3242": {"op": "POP"}, "3243": {"op": "POP"}, "3244": {"op": "PUSH1", "value": "0x40"}, "3246": {"op": "DUP4"}, "3247": {"op": "ADD"}, "3248": {"op": "CALLDATALOAD"}, "3249": {"op": "SWAP3"}, "3250": {"op": "PUSH1", "value": "0x60"}, "3252": {"op": "DUP2"}, "3253": {"op": "ADD"}, "3254": {"op": "CALLDATALOAD"}, "3255": {"op": "SWAP3"}, "3256": {"op": "PUSH1", "value": "0x80"}, "3258": {"op": "SWAP1"}, "3259": {"op": "SWAP2"}, "3260": {"op": "ADD"}, "3261": {"op": "CALLDATALOAD"}, "3262": {"op": "SWAP2"}, "3263": {"op": "POP"}, "3264": {"jump": "o", "op": "JUMP"}, "3265": {"op": "JUMPDEST"}, "3266": {"op": "PUSH4", "value": "0x4E487B71"}, "3271": {"op": "PUSH1", "value": "0xE0"}, "3273": {"op": "SHL"}, "3274": {"op": "PUSH1", "value": "0x0"}, "3276": {"op": "MSTORE"}, "3277": {"op": "PUSH1", "value": "0x41"}, "3279": {"op": "PUSH1", "value": "0x4"}, "3281": {"op": "MSTORE"}, "3282": {"op": "PUSH1", "value": "0x24"}, "3284": {"op": "PUSH1", "value": "0x0"}, "3286": {"op": "REVERT"}, "3287": {"op": "JUMPDEST"}, "3288": {"op": "PUSH1", "value": "0x40"}, "3290": {"op": "MLOAD"}, "3291": {"op": "PUSH1", "value": "0x80"}, "3293": {"op": "DUP2"}, "3294": {"op": "ADD"}, "3295": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3304": {"op": "DUP2"}, "3305": {"op": "GT"}, "3306": {"op": "DUP3"}, "3307": {"op": "DUP3"}, "3308": {"op": "LT"}, "3309": {"op": "OR"}, "3310": {"op": "ISZERO"}, "3311": {"op": "PUSH2", "value": "0xCFA"}, "3314": {"op": "JUMPI"}, "3315": {"op": "PUSH2", "value": "0xCFA"}, "3318": {"op": "PUSH2", "value": "0xCC1"}, "3321": {"jump": "i", "op": "JUMP"}, "3322": {"op": "JUMPDEST"}, "3323": {"op": "PUSH1", "value": "0x40"}, "3325": {"op": "MSTORE"}, "3326": {"op": "SWAP1"}, "3327": {"jump": "o", "op": "JUMP"}, "3328": {"op": "JUMPDEST"}, "3329": {"op": "PUSH1", "value": "0x40"}, "3331": {"op": "MLOAD"}, "3332": {"op": "PUSH1", "value": "0x1F"}, "3334": {"op": "DUP3"}, "3335": {"op": "ADD"}, "3336": {"op": "PUSH1", "value": "0x1F"}, "3338": {"op": "NOT"}, "3339": {"op": "AND"}, "3340": {"op": "DUP2"}, "3341": {"op": "ADD"}, "3342": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3351": {"op": "DUP2"}, "3352": {"op": "GT"}, "3353": {"op": "DUP3"}, "3354": {"op": "DUP3"}, "3355": {"op": "LT"}, "3356": {"op": "OR"}, "3357": {"op": "ISZERO"}, "3358": {"op": "PUSH2", "value": "0xD29"}, "3361": {"op": "JUMPI"}, "3362": {"op": "PUSH2", "value": "0xD29"}, "3365": {"op": "PUSH2", "value": "0xCC1"}, "3368": {"jump": "i", "op": "JUMP"}, "3369": {"op": "JUMPDEST"}, "3370": {"op": "PUSH1", "value": "0x40"}, "3372": {"op": "MSTORE"}, "3373": {"op": "SWAP2"}, "3374": {"op": "SWAP1"}, "3375": {"op": "POP"}, "3376": {"jump": "o", "op": "JUMP"}, "3377": {"op": "JUMPDEST"}, "3378": {"op": "PUSH1", "value": "0x0"}, "3380": {"op": "PUSH1", "value": "0x20"}, "3382": {"op": "DUP1"}, "3383": {"op": "DUP4"}, "3384": {"op": "DUP6"}, "3385": {"op": "SUB"}, "3386": {"op": "SLT"}, "3387": {"op": "ISZERO"}, "3388": {"op": "PUSH2", "value": "0xD44"}, "3391": {"op": "JUMPI"}, "3392": {"op": "PUSH1", "value": "0x0"}, "3394": {"op": "DUP1"}, "3395": {"op": "REVERT"}, "3396": {"op": "JUMPDEST"}, "3397": {"op": "DUP3"}, "3398": {"op": "CALLDATALOAD"}, "3399": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3408": {"op": "DUP1"}, "3409": {"op": "DUP3"}, "3410": {"op": "GT"}, "3411": {"op": "ISZERO"}, "3412": {"op": "PUSH2", "value": "0xD5C"}, "3415": {"op": "JUMPI"}, "3416": {"op": "PUSH1", "value": "0x0"}, "3418": {"op": "DUP1"}, "3419": {"op": "REVERT"}, "3420": {"op": "JUMPDEST"}, "3421": {"op": "DUP2"}, "3422": {"op": "DUP6"}, "3423": {"op": "ADD"}, "3424": {"op": "SWAP2"}, "3425": {"op": "POP"}, "3426": {"op": "DUP6"}, "3427": {"op": "PUSH1", "value": "0x1F"}, "3429": {"op": "DUP4"}, "3430": {"op": "ADD"}, "3431": {"op": "SLT"}, "3432": {"op": "PUSH2", "value": "0xD70"}, "3435": {"op": "JUMPI"}, "3436": {"op": "PUSH1", "value": "0x0"}, "3438": {"op": "DUP1"}, "3439": {"op": "REVERT"}, "3440": {"op": "JUMPDEST"}, "3441": {"op": "DUP2"}, "3442": {"op": "CALLDATALOAD"}, "3443": {"op": "DUP2"}, "3444": {"op": "DUP2"}, "3445": {"op": "GT"}, "3446": {"op": "ISZERO"}, "3447": {"op": "PUSH2", "value": "0xD82"}, "3450": {"op": "JUMPI"}, "3451": {"op": "PUSH2", "value": "0xD82"}, "3454": {"op": "PUSH2", "value": "0xCC1"}, "3457": {"jump": "i", "op": "JUMP"}, "3458": {"op": "JUMPDEST"}, "3459": {"op": "PUSH2", "value": "0xD90"}, "3462": {"op": "DUP5"}, "3463": {"op": "DUP3"}, "3464": {"op": "PUSH1", "value": "0x5"}, "3466": {"op": "SHL"}, "3467": {"op": "ADD"}, "3468": {"op": "PUSH2", "value": "0xD00"}, "3471": {"jump": "i", "op": "JUMP"}, "3472": {"op": "JUMPDEST"}, "3473": {"op": "DUP2"}, "3474": {"op": "DUP2"}, "3475": {"op": "MSTORE"}, "3476": {"op": "DUP5"}, "3477": {"op": "DUP2"}, "3478": {"op": "ADD"}, "3479": {"op": "SWAP3"}, "3480": {"op": "POP"}, "3481": {"op": "PUSH1", "value": "0x7"}, "3483": {"op": "SWAP2"}, "3484": {"op": "SWAP1"}, "3485": {"op": "SWAP2"}, "3486": {"op": "SHL"}, "3487": {"op": "DUP4"}, "3488": {"op": "ADD"}, "3489": {"op": "DUP5"}, "3490": {"op": "ADD"}, "3491": {"op": "SWAP1"}, "3492": {"op": "DUP8"}, "3493": {"op": "DUP3"}, "3494": {"op": "GT"}, "3495": {"op": "ISZERO"}, "3496": {"op": "PUSH2", "value": "0xDB0"}, "3499": {"op": "JUMPI"}, "3500": {"op": "PUSH1", "value": "0x0"}, "3502": {"op": "DUP1"}, "3503": {"op": "REVERT"}, "3504": {"op": "JUMPDEST"}, "3505": {"op": "SWAP3"}, "3506": {"op": "DUP5"}, "3507": {"op": "ADD"}, "3508": {"op": "SWAP3"}, "3509": {"op": "JUMPDEST"}, "3510": {"op": "DUP2"}, "3511": {"op": "DUP5"}, "3512": {"op": "LT"}, "3513": {"op": "ISZERO"}, "3514": {"op": "PUSH2", "value": "0xE19"}, "3517": {"op": "JUMPI"}, "3518": {"op": "PUSH1", "value": "0x80"}, "3520": {"op": "DUP5"}, "3521": {"op": "DUP10"}, "3522": {"op": "SUB"}, "3523": {"op": "SLT"}, "3524": {"op": "ISZERO"}, "3525": {"op": "PUSH2", "value": "0xDCE"}, "3528": {"op": "JUMPI"}, "3529": {"op": "PUSH1", "value": "0x0"}, "3531": {"op": "DUP1"}, "3532": {"op": "DUP2"}, "3533": {"op": "REVERT"}, "3534": {"op": "JUMPDEST"}, "3535": {"op": "PUSH2", "value": "0xDD6"}, "3538": {"op": "PUSH2", "value": "0xCD7"}, "3541": {"jump": "i", "op": "JUMP"}, "3542": {"op": "JUMPDEST"}, "3543": {"op": "DUP5"}, "3544": {"op": "CALLDATALOAD"}, "3545": {"op": "DUP2"}, "3546": {"op": "MSTORE"}, "3547": {"op": "DUP6"}, "3548": {"op": "DUP6"}, "3549": {"op": "ADD"}, "3550": {"op": "CALLDATALOAD"}, "3551": {"op": "PUSH2", "value": "0xDE7"}, "3554": {"op": "DUP2"}, "3555": {"op": "PUSH2", "value": "0xC58"}, "3558": {"jump": "i", "op": "JUMP"}, "3559": {"op": "JUMPDEST"}, "3560": {"op": "DUP2"}, "3561": {"op": "DUP8"}, "3562": {"op": "ADD"}, "3563": {"op": "MSTORE"}, "3564": {"op": "PUSH1", "value": "0x40"}, "3566": {"op": "DUP6"}, "3567": {"op": "DUP2"}, "3568": {"op": "ADD"}, "3569": {"op": "CALLDATALOAD"}, "3570": {"op": "PUSH2", "value": "0xDFA"}, "3573": {"op": "DUP2"}, "3574": {"op": "PUSH2", "value": "0xC58"}, "3577": {"jump": "i", "op": "JUMP"}, "3578": {"op": "JUMPDEST"}, "3579": {"op": "SWAP1"}, "3580": {"op": "DUP3"}, "3581": {"op": "ADD"}, "3582": {"op": "MSTORE"}, "3583": {"op": "PUSH1", "value": "0x60"}, "3585": {"op": "DUP6"}, "3586": {"op": "DUP2"}, "3587": {"op": "ADD"}, "3588": {"op": "CALLDATALOAD"}, "3589": {"op": "SWAP1"}, "3590": {"op": "DUP3"}, "3591": {"op": "ADD"}, "3592": {"op": "MSTORE"}, "3593": {"op": "DUP4"}, "3594": {"op": "MSTORE"}, "3595": {"op": "PUSH1", "value": "0x80"}, "3597": {"op": "SWAP1"}, "3598": {"op": "SWAP4"}, "3599": {"op": "ADD"}, "3600": {"op": "SWAP3"}, "3601": {"op": "SWAP2"}, "3602": {"op": "DUP5"}, "3603": {"op": "ADD"}, "3604": {"op": "SWAP2"}, "3605": {"op": "PUSH2", "value": "0xDB5"}, "3608": {"op": "JUMP"}, "3609": {"op": "JUMPDEST"}, "3610": {"op": "SWAP8"}, "3611": {"op": "SWAP7"}, "3612": {"op": "POP"}, "3613": {"op": "POP"}, "3614": {"op": "POP"}, "3615": {"op": "POP"}, "3616": {"op": "POP"}, "3617": {"op": "POP"}, "3618": {"op": "POP"}, "3619": {"jump": "o", "op": "JUMP"}, "3620": {"op": "JUMPDEST"}, "3621": {"op": "PUSH1", "value": "0x20"}, "3623": {"op": "DUP1"}, "3624": {"op": "DUP3"}, "3625": {"op": "MSTORE"}, "3626": {"op": "PUSH1", "value": "0x27"}, "3628": {"op": "SWAP1"}, "3629": {"op": "DUP3"}, "3630": {"op": "ADD"}, "3631": {"op": "MSTORE"}, "3632": {"op": "PUSH32", "value": "0x476F7665726E616E63653A20596F7520617265206E6F742074686520476F7665"}, "3665": {"op": "PUSH1", "value": "0x40"}, "3667": {"op": "DUP3"}, "3668": {"op": "ADD"}, "3669": {"op": "MSTORE"}, "3670": {"op": "PUSH7", "value": "0x726E6F72212121"}, "3678": {"op": "PUSH1", "value": "0xC8"}, "3680": {"op": "SHL"}, "3681": {"op": "PUSH1", "value": "0x60"}, "3683": {"op": "DUP3"}, "3684": {"op": "ADD"}, "3685": {"op": "MSTORE"}, "3686": {"op": "PUSH1", "value": "0x80"}, "3688": {"op": "ADD"}, "3689": {"op": "SWAP1"}, "3690": {"jump": "o", "op": "JUMP"}, "3691": {"op": "JUMPDEST"}, "3692": {"op": "PUSH4", "value": "0x4E487B71"}, "3697": {"op": "PUSH1", "value": "0xE0"}, "3699": {"op": "SHL"}, "3700": {"op": "PUSH1", "value": "0x0"}, "3702": {"op": "MSTORE"}, "3703": {"op": "PUSH1", "value": "0x11"}, "3705": {"op": "PUSH1", "value": "0x4"}, "3707": {"op": "MSTORE"}, "3708": {"op": "PUSH1", "value": "0x24"}, "3710": {"op": "PUSH1", "value": "0x0"}, "3712": {"op": "REVERT"}, "3713": {"op": "JUMPDEST"}, "3714": {"op": "PUSH1", "value": "0x0"}, "3716": {"op": "DUP2"}, "3717": {"op": "PUSH1", "value": "0x0"}, "3719": {"op": "NOT"}, "3720": {"op": "DIV"}, "3721": {"op": "DUP4"}, "3722": {"op": "GT"}, "3723": {"op": "DUP3"}, "3724": {"op": "ISZERO"}, "3725": {"op": "ISZERO"}, "3726": {"op": "AND"}, "3727": {"op": "ISZERO"}, "3728": {"op": "PUSH2", "value": "0xE9B"}, "3731": {"op": "JUMPI"}, "3732": {"op": "PUSH2", "value": "0xE9B"}, "3735": {"op": "PUSH2", "value": "0xE6B"}, "3738": {"jump": "i", "op": "JUMP"}, "3739": {"op": "JUMPDEST"}, "3740": {"op": "POP"}, "3741": {"op": "MUL"}, "3742": {"op": "SWAP1"}, "3743": {"jump": "o", "op": "JUMP"}, "3744": {"op": "JUMPDEST"}, "3745": {"op": "PUSH1", "value": "0x0"}, "3747": {"op": "DUP3"}, "3748": {"op": "NOT"}, "3749": {"op": "DUP3"}, "3750": {"op": "GT"}, "3751": {"op": "ISZERO"}, "3752": {"op": "PUSH2", "value": "0xEB3"}, "3755": {"op": "JUMPI"}, "3756": {"op": "PUSH2", "value": "0xEB3"}, "3759": {"op": "PUSH2", "value": "0xE6B"}, "3762": {"jump": "i", "op": "JUMP"}, "3763": {"op": "JUMPDEST"}, "3764": {"op": "POP"}, "3765": {"op": "ADD"}, "3766": {"op": "SWAP1"}, "3767": {"jump": "o", "op": "JUMP"}, "3768": {"op": "JUMPDEST"}, "3769": {"op": "PUSH1", "value": "0x0"}, "3771": {"op": "PUSH1", "value": "0x20"}, "3773": {"op": "DUP3"}, "3774": {"op": "DUP5"}, "3775": {"op": "SUB"}, "3776": {"op": "SLT"}, "3777": {"op": "ISZERO"}, "3778": {"op": "PUSH2", "value": "0xECA"}, "3781": {"op": "JUMPI"}, "3782": {"op": "PUSH1", "value": "0x0"}, "3784": {"op": "DUP1"}, "3785": {"op": "REVERT"}, "3786": {"op": "JUMPDEST"}, "3787": {"op": "DUP2"}, "3788": {"op": "MLOAD"}, "3789": {"op": "DUP1"}, "3790": {"op": "ISZERO"}, "3791": {"op": "ISZERO"}, "3792": {"op": "DUP2"}, "3793": {"op": "EQ"}, "3794": {"op": "PUSH2", "value": "0xEDA"}, "3797": {"op": "JUMPI"}, "3798": {"op": "PUSH1", "value": "0x0"}, "3800": {"op": "DUP1"}, "3801": {"op": "REVERT"}, "3802": {"op": "JUMPDEST"}, "3803": {"op": "SWAP4"}, "3804": {"op": "SWAP3"}, "3805": {"op": "POP"}, "3806": {"op": "POP"}, "3807": {"op": "POP"}, "3808": {"jump": "o", "op": "JUMP"}, "3809": {"op": "JUMPDEST"}, "3810": {"op": "PUSH1", "value": "0x0"}, "3812": {"op": "PUSH1", "value": "0x1"}, "3814": {"op": "DUP3"}, "3815": {"op": "ADD"}, "3816": {"op": "PUSH2", "value": "0xEF3"}, "3819": {"op": "JUMPI"}, "3820": {"op": "PUSH2", "value": "0xEF3"}, "3823": {"op": "PUSH2", "value": "0xE6B"}, "3826": {"jump": "i", "op": "JUMP"}, "3827": {"op": "JUMPDEST"}, "3828": {"op": "POP"}, "3829": {"op": "PUSH1", "value": "0x1"}, "3831": {"op": "ADD"}, "3832": {"op": "SWAP1"}, "3833": {"jump": "o", "op": "JUMP"}, "3834": {"op": "JUMPDEST"}, "3835": {"op": "PUSH1", "value": "0x0"}, "3837": {"op": "DUP3"}, "3838": {"op": "PUSH2", "value": "0xF17"}, "3841": {"op": "JUMPI"}, "3842": {"op": "PUSH4", "value": "0x4E487B71"}, "3847": {"op": "PUSH1", "value": "0xE0"}, "3849": {"op": "SHL"}, "3850": {"op": "PUSH1", "value": "0x0"}, "3852": {"op": "MSTORE"}, "3853": {"op": "PUSH1", "value": "0x12"}, "3855": {"op": "PUSH1", "value": "0x4"}, "3857": {"op": "MSTORE"}, "3858": {"op": "PUSH1", "value": "0x24"}, "3860": {"op": "PUSH1", "value": "0x0"}, "3862": {"op": "REVERT"}, "3863": {"op": "JUMPDEST"}, "3864": {"op": "POP"}, "3865": {"op": "DIV"}, "3866": {"op": "SWAP1"}, "3867": {"jump": "o", "op": "JUMP"}, "3868": {"op": "JUMPDEST"}, "3869": {"op": "DUP2"}, "3870": {"op": "MLOAD"}, "3871": {"op": "PUSH1", "value": "0x1"}, "3873": {"op": "PUSH1", "value": "0x1"}, "3875": {"op": "PUSH1", "value": "0xA0"}, "3877": {"op": "SHL"}, "3878": {"op": "SUB"}, "3879": {"op": "SWAP1"}, "3880": {"op": "DUP2"}, "3881": {"op": "AND"}, "3882": {"op": "DUP3"}, "3883": {"op": "MSTORE"}, "3884": {"op": "PUSH1", "value": "0x20"}, "3886": {"op": "DUP1"}, "3887": {"op": "DUP5"}, "3888": {"op": "ADD"}, "3889": {"op": "MLOAD"}, "3890": {"op": "SWAP1"}, "3891": {"op": "SWAP2"}, "3892": {"op": "AND"}, "3893": {"op": "SWAP1"}, "3894": {"op": "DUP3"}, "3895": {"op": "ADD"}, "3896": {"op": "MSTORE"}, "3897": {"op": "PUSH1", "value": "0x40"}, "3899": {"op": "DUP1"}, "3900": {"op": "DUP4"}, "3901": {"op": "ADD"}, "3902": {"op": "MLOAD"}, "3903": {"op": "SWAP1"}, "3904": {"op": "DUP3"}, "3905": {"op": "ADD"}, "3906": {"op": "MSTORE"}, "3907": {"op": "PUSH1", "value": "0x60"}, "3909": {"op": "DUP1"}, "3910": {"op": "DUP4"}, "3911": {"op": "ADD"}, "3912": {"op": "MLOAD"}, "3913": {"op": "SWAP1"}, "3914": {"op": "DUP3"}, "3915": {"op": "ADD"}, "3916": {"op": "MSTORE"}, "3917": {"op": "PUSH1", "value": "0x80"}, "3919": {"op": "DUP1"}, "3920": {"op": "DUP4"}, "3921": {"op": "ADD"}, "3922": {"op": "MLOAD"}, "3923": {"op": "SWAP1"}, "3924": {"op": "DUP3"}, "3925": {"op": "ADD"}, "3926": {"op": "MSTORE"}, "3927": {"op": "PUSH1", "value": "0xA0"}, "3929": {"op": "DUP3"}, "3930": {"op": "DUP2"}, "3931": {"op": "ADD"}, "3932": {"op": "MLOAD"}, "3933": {"op": "SWAP1"}, "3934": {"op": "DUP3"}, "3935": {"op": "ADD"}, "3936": {"op": "MSTORE"}, "3937": {"op": "PUSH1", "value": "0xC0"}, "3939": {"op": "SWAP2"}, "3940": {"op": "DUP3"}, "3941": {"op": "ADD"}, "3942": {"op": "MLOAD"}, "3943": {"op": "SWAP2"}, "3944": {"op": "DUP2"}, "3945": {"op": "ADD"}, "3946": {"op": "SWAP2"}, "3947": {"op": "SWAP1"}, "3948": {"op": "SWAP2"}, "3949": {"op": "MSTORE"}, "3950": {"op": "PUSH1", "value": "0xE0"}, "3952": {"op": "ADD"}, "3953": {"op": "SWAP1"}, "3954": {"jump": "o", "op": "JUMP"}, "3955": {"op": "JUMPDEST"}, "3956": {"op": "PUSH1", "value": "0x0"}, "3958": {"op": "DUP3"}, "3959": {"op": "MLOAD"}, "3960": {"op": "PUSH1", "value": "0x0"}, "3962": {"op": "JUMPDEST"}, "3963": {"op": "DUP2"}, "3964": {"op": "DUP2"}, "3965": {"op": "LT"}, "3966": {"op": "ISZERO"}, "3967": {"op": "PUSH2", "value": "0xF94"}, "3970": {"op": "JUMPI"}, "3971": {"op": "PUSH1", "value": "0x20"}, "3973": {"op": "DUP2"}, "3974": {"op": "DUP7"}, "3975": {"op": "ADD"}, "3976": {"op": "DUP2"}, "3977": {"op": "ADD"}, "3978": {"op": "MLOAD"}, "3979": {"op": "DUP6"}, "3980": {"op": "DUP4"}, "3981": {"op": "ADD"}, "3982": {"op": "MSTORE"}, "3983": {"op": "ADD"}, "3984": {"op": "PUSH2", "value": "0xF7A"}, "3987": {"op": "JUMP"}, "3988": {"op": "JUMPDEST"}, "3989": {"op": "DUP2"}, "3990": {"op": "DUP2"}, "3991": {"op": "GT"}, "3992": {"op": "ISZERO"}, "3993": {"op": "PUSH2", "value": "0xFA3"}, "3996": {"op": "JUMPI"}, "3997": {"op": "PUSH1", "value": "0x0"}, "3999": {"op": "DUP3"}, "4000": {"op": "DUP6"}, "4001": {"op": "ADD"}, "4002": {"op": "MSTORE"}, "4003": {"op": "JUMPDEST"}, "4004": {"op": "POP"}, "4005": {"op": "SWAP2"}, "4006": {"op": "SWAP1"}, "4007": {"op": "SWAP2"}, "4008": {"op": "ADD"}, "4009": {"op": "SWAP3"}, "4010": {"op": "SWAP2"}, "4011": {"op": "POP"}, "4012": {"op": "POP"}, "4013": {"jump": "o", "op": "JUMP"}, "4014": {"op": "JUMPDEST"}, "4015": {"op": "PUSH1", "value": "0x0"}, "4017": {"op": "PUSH1", "value": "0x20"}, "4019": {"op": "DUP3"}, "4020": {"op": "DUP5"}, "4021": {"op": "SUB"}, "4022": {"op": "SLT"}, "4023": {"op": "ISZERO"}, "4024": {"op": "PUSH2", "value": "0xFC0"}, "4027": {"op": "JUMPI"}, "4028": {"op": "PUSH1", "value": "0x0"}, "4030": {"op": "DUP1"}, "4031": {"op": "REVERT"}, "4032": {"op": "JUMPDEST"}, "4033": {"op": "POP"}, "4034": {"op": "MLOAD"}, "4035": {"op": "SWAP2"}, "4036": {"op": "SWAP1"}, "4037": {"op": "POP"}, "4038": {"jump": "o", "op": "JUMP"}, "4039": {"op": "JUMPDEST"}, "4040": {"op": "PUSH1", "value": "0x0"}, "4042": {"op": "PUSH1", "value": "0x20"}, "4044": {"op": "DUP3"}, "4045": {"op": "DUP5"}, "4046": {"op": "SUB"}, "4047": {"op": "SLT"}, "4048": {"op": "ISZERO"}, "4049": {"op": "PUSH2", "value": "0xFD9"}, "4052": {"op": "JUMPI"}, "4053": {"op": "PUSH1", "value": "0x0"}, "4055": {"op": "DUP1"}, "4056": {"op": "REVERT"}, "4057": {"op": "JUMPDEST"}, "4058": {"op": "DUP2"}, "4059": {"op": "MLOAD"}, "4060": {"op": "PUSH2", "value": "0xEDA"}, "4063": {"op": "DUP2"}, "4064": {"op": "PUSH2", "value": "0xC58"}, "4067": {"jump": "i", "op": "JUMP"}, "4068": {"op": "JUMPDEST"}, "4069": {"op": "PUSH4", "value": "0x4E487B71"}, "4074": {"op": "PUSH1", "value": "0xE0"}, "4076": {"op": "SHL"}, "4077": {"op": "PUSH1", "value": "0x0"}, "4079": {"op": "MSTORE"}, "4080": {"op": "PUSH1", "value": "0x32"}, "4082": {"op": "PUSH1", "value": "0x4"}, "4084": {"op": "MSTORE"}, "4085": {"op": "PUSH1", "value": "0x24"}, "4087": {"op": "PUSH1", "value": "0x0"}, "4089": {"op": "REVERT"}}, "sha1": "87b48bb1411dbdf46f10ce50d005f6a69fb904af", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./deb/ERC20.sol\";\nimport \"./deb/ICrossDomainMessenger.sol\";\nimport \"./deb/StructLib.sol\";\n\n/// @title SourceDomainSideBridge Contract\n/// @author Sherif Abdelmoatty\n/// @notice This contract is to be deployed in the source rollup\ncontract SourceDomainSideBridge {\n\n    address constant ETHER_ADDRESS = 0x0000000000000000000000000000000000000000;\n    address constant ovmL2CrossDomainMessenger = 0x4200000000000000000000000000000000000007;  //ovmL2CrossDomainMessenger contract address(Optimism Kovan)\n\n    uint constant public CONTRACT_FEE_BASIS_POINTS = 5; //fee basis points\n    uint constant public FIXED_FEE = 3002 gwei;         //fixed fee - to discourage small transactions, and acts as a governance fee\n    uint constant public MAX_TRADE_LIMIT = 0.1 ether;   //max allowed tokens to be transfered\n\n    mapping(bytes32 => bool) public validTransferHashes; //mapping of valid transfer hashes\n    mapping(bytes32 => bool) public knownHashOnions;    //mapping of known hash onions\n    bytes32 processedRewardHashOnion;     //the last known hash onion\n    address l1DomainSideContractAddress;  //l1DomainSideContract deployed contract address on mainnet\n    uint256  currentNonce;                //the number of transfer created\n    address public governance;            //governance address - only to collect governance fees\n    uint256 governanceBalance;            //governance balance\n\n    event Transaction(StructLib.TransferData transferData);\n    event ClaimPayed(bytes32 transferDataHash, bool success);\n    event NewKnownHashOnionAdded(bytes32 newKnownHashOnions);\n    \n    /// @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n    modifier onlyL1Contract(){\n        ICrossDomainMessenger l2cdm = ICrossDomainMessenger(ovmL2CrossDomainMessenger);\n        require(\n            msg.sender == address(ovmL2CrossDomainMessenger)\n            && l2cdm.xDomainMessageSender() == l1DomainSideContractAddress\n        );\n        _;\n    }\n\n    /// @notice onlyGovernance modifier \n    /// @notice allow only the Governor to access\n    modifier onlyGovernance {\n        require(msg.sender == governance, \"Governance: You are not the Governor!!!\");\n        _;\n    }\n\n    /// @param _l1DomainSideContractAddress is the address of the contract in etherium/kovan L1\n    constructor(address _l1DomainSideContractAddress){\n        l1DomainSideContractAddress = _l1DomainSideContractAddress;\n        governance = msg.sender;\n    }\n\n    /// @notice transfer the required funds plus fees to be sent to the current contract balance\n    /// @param _tokenAddress at destination rollup\n    /// @param _destination is reciever address at the destination rollup\n    /// @param _amount is amount to be transfered in kwei\n    /// @param _startTime is a blocknumber in the future that this transaction can only be executed after\n    /// @param _feeRampup will be multiplied by the fee ramp up if the LP claimed and sent the transfer by the startTime block, and will decrease by one for each block after that\n    /// @return the hash of the valid transfer\n    function transfer(address _tokenAddress, address _destination, uint256 _amount,\n        uint256  _startTime, uint256  _feeRampup) external payable returns(bytes32){\n        \n        uint256 fee = _amount * CONTRACT_FEE_BASIS_POINTS;\n        uint256 amountPlusFee = _amount * 1000 + fee;\n        \n        require(fee * _feeRampup < _amount * 1000, \"feeRampup maximum cost should be less than the total amount\");\n\n        if(_tokenAddress == ETHER_ADDRESS){\n            require(_amount* 1000 < MAX_TRADE_LIMIT, \"Amount higher than maximum trade limit\");\n            require(msg.value >= amountPlusFee + FIXED_FEE, \"No Suffecient ether\");\n        }else{\n            ERC20 token = ERC20(_tokenAddress);\n            token.transferFrom(msg.sender, address(this), amountPlusFee);\n            require(msg.value >= FIXED_FEE, \"No Suffecient ether for the fixed ether fee\");\n        }\n\n        StructLib.TransferData memory transferData;\n        transferData.tokenAddress = _tokenAddress;\n        transferData.destination = _destination;\n        transferData.amount = _amount * 1000;\n        transferData.fee = fee;\n        if(_startTime < block.number){\n            transferData.startTime = block.number;\n        }else{\n            transferData.startTime = _startTime;\n        }\n        transferData.feeRampup = _feeRampup;\n        transferData.nonce = currentNonce;\n\n        currentNonce++;\n        governanceBalance = governanceBalance + FIXED_FEE/2;\n\n        bytes32 transferDataHash = sha256(abi.encode(transferData));\n        \n        validTransferHashes[transferDataHash] = true;\n\n        emit Transaction(transferData);\n        \n        return transferDataHash;\n    }\n\n    /// @notice process the processClaims structs to be paid to the liquidity providers\n    /// @param _rewardData is an array of RewardData structs to be paid to liquidity providers(emitted by the destination contract)\n    function processClaims(StructLib.RewardData[] memory _rewardData) external payable {\n        bytes32 newProcessedRewardHashOnion = calculateNewProcessedRewardHashOnion(_rewardData);\n        require(knownHashOnions[newProcessedRewardHashOnion], \"Invalide RewardData list.\");\n        processedRewardHashOnion = newProcessedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            if(validTransferHashes[_rewardData[n].transferDataHash]){\n                bool success;\n                if(_rewardData[n].tokenAddress == ETHER_ADDRESS){\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: _rewardData[n].amountPlusFee + FIXED_FEE/2}(\"\");\n                    success = suc;\n                }else{\n                    ERC20 token = ERC20(_rewardData[n].tokenAddress);\n                    success = token.transfer(_rewardData[n].claimer, _rewardData[n].amountPlusFee);\n\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: FIXED_FEE/2}(\"\");\n\n                    success = success && suc;\n                }\n                emit ClaimPayed(_rewardData[n].transferDataHash, success);\n            }\n        }    \n    }\n\n    /// @notice this function is only called from the contract at the etherium L1\n    /// @notice through the rollup messenger contract to add a new known hash onion\n    function addNewKnownHashOnion(bytes32 _newKnownHashOnions) external onlyL1Contract{\n        knownHashOnions[_newKnownHashOnions] = true;\n        emit NewKnownHashOnionAdded(_newKnownHashOnions);\n    }\n\n    /// @notice get governance balance\n    /// @return governance balance\n    function GetGovernanceBalance() external view onlyGovernance returns(uint256){\n        return governanceBalance;\n    }\n\n    /// @notice collect governance fees\n    function collectGovernanceFixedFees() external onlyGovernance{\n        payable(governance).transfer(governanceBalance);\n        governanceBalance = 0;\n    }\n\n    /// @notice calculates the new hash onion\n    /// @param _rewardData is an array of RewardData structs to be paid to liquidity providers(emitted by the destination contract)\n    /// @return hash onion\n    function calculateNewProcessedRewardHashOnion(StructLib.RewardData[] memory _rewardData) private view returns (bytes32){\n        bytes32 newProcessedRewardHashOnion = processedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            newProcessedRewardHashOnion = \n                sha256(abi.encode(newProcessedRewardHashOnion,_rewardData[n]));\n        }\n        return newProcessedRewardHashOnion;\n    }\n}", "sourceMap": "295:7357:2:-:0;;;2385:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2444:27;:58;;-1:-1:-1;;;;;2444:58:2;;;-1:-1:-1;;;;;;2444:58:2;;;;;;2512:10;:23;;;;;2525:10;2512:23;;;295:7357;;14:290:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;:::-;295:7357:2;;;;;;", "sourcePath": "contracts/SourceDomainSideBridge.sol", "type": "contract", "deployment": {"address": "0xBb7D1032371486eef0A5e17Ff0279be14078F3E4", "chainid": "69", "blockHeight": 3939210}}