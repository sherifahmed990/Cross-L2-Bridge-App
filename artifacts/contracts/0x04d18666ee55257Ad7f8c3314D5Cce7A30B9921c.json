{"abi": [{"inputs": [{"internalType": "address", "name": "_l1DomainSideContractAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "bool", "name": "success", "type": "bool"}], "name": "ClaimPayed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "newKnownHashOnions", "type": "bytes32"}], "name": "NewKnownHashOnionAdded", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "indexed": false, "internalType": "struct SourceDomainSideBridge.TransferData", "name": "transferData", "type": "tuple"}], "name": "Transaction", "type": "event"}, {"inputs": [], "name": "CONTRACT_FEE_BASIS_POINTS", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "FIXED_FEE", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "MAX_TRADE_LIMIT", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_newKnownHashOnions", "type": "bytes32"}], "name": "addNewKnownHashOnion", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "collectGovernanceFixedFees", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "governance", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "knownHashOnions", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "amountPlusFee", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.RewardData[]", "name": "_rewardData", "type": "tuple[]"}], "name": "processClaims", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_tokenAddress", "type": "address"}, {"internalType": "address", "name": "_destination", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "uint256", "name": "_feeRampup", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "validTransferHashes", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "contracts/SourceDomainSideBridge.sol", "1": "contracts/deb/ERC20.sol", "2": "contracts/deb/ICrossDomainMessenger.sol"}, "ast": {"absolutePath": "contracts/SourceDomainSideBridge.sol", "exportedSymbols": {"ERC20": [589], "ICrossDomainMessenger": [628], "SourceDomainSideBridge": [520]}, "id": 521, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "31:23:0"}, {"absolutePath": "contracts/deb/ERC20.sol", "file": "./deb/ERC20.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 521, "sourceUnit": 590, "src": "56:25:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/ICrossDomainMessenger.sol", "file": "./deb/ICrossDomainMessenger.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 521, "sourceUnit": 629, "src": "82:41:0", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "SourceDomainSideBridge", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 4, "nodeType": "StructuredDocumentation", "src": "125:139:0", "text": "@title SourceDomainSideBridge Contract\n @author Sherif Abdelmoatty\n @notice This contract is to be deployed in the source rollup"}, "fullyImplemented": true, "id": 520, "linearizedBaseContracts": [520], "name": "SourceDomainSideBridge", "nameLocation": "273:22:0", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 7, "mutability": "constant", "name": "ETHER_ADDRESS", "nameLocation": "320:13:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "303:75:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5, "name": "address", "nodeType": "ElementaryTypeName", "src": "303:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030", "id": 6, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "336:42:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x0000000000000000000000000000000000000000"}, "visibility": "internal"}, {"constant": true, "id": 10, "mutability": "constant", "name": "ovmL2CrossDomainMessenger", "nameLocation": "401:25:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "384:87:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 8, "name": "address", "nodeType": "ElementaryTypeName", "src": "384:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303037", "id": 9, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "429:42:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4200000000000000000000000000000000000007"}, "visibility": "internal"}, {"constant": true, "functionSelector": "13457d88", "id": 13, "mutability": "constant", "name": "CONTRACT_FEE_BASIS_POINTS", "nameLocation": "555:25:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "534:50:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11, "name": "uint", "nodeType": "ElementaryTypeName", "src": "534:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "35", "id": 12, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "583:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "visibility": "public"}, {"constant": true, "functionSelector": "23d1b06c", "id": 16, "mutability": "constant", "name": "FIXED_FEE", "nameLocation": "630:9:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "609:42:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 14, "name": "uint", "nodeType": "ElementaryTypeName", "src": "609:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "33303030", "id": 15, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "642:9:0", "subdenomination": "gwei", "typeDescriptions": {"typeIdentifier": "t_rational_3000000000000_by_1", "typeString": "int_const 3000000000000"}, "value": "3000"}, "visibility": "public"}, {"constant": true, "functionSelector": "bfd683b3", "id": 19, "mutability": "constant", "name": "MAX_TRADE_LIMIT", "nameLocation": "813:15:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "792:48:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17, "name": "uint", "nodeType": "ElementaryTypeName", "src": "792:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "302e31", "id": 18, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "831:9:0", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000_by_1", "typeString": "int_const 100000000000000000"}, "value": "0.1"}, "visibility": "public"}, {"canonicalName": "SourceDomainSideBridge.TransferData", "id": 34, "members": [{"constant": false, "id": 21, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "925:12:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "916:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20, "name": "address", "nodeType": "ElementaryTypeName", "src": "916:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 23, "mutability": "mutable", "name": "destination", "nameLocation": "975:11:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "966:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22, "name": "address", "nodeType": "ElementaryTypeName", "src": "966:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 25, "mutability": "mutable", "name": "amount", "nameLocation": "1005:6:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "996:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "996:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 27, "mutability": "mutable", "name": "fee", "nameLocation": "1070:3:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "1061:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 26, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1061:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 29, "mutability": "mutable", "name": "startTime", "nameLocation": "1092:9:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "1083:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 28, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1083:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 31, "mutability": "mutable", "name": "feeRampup", "nameLocation": "1120:9:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "1111:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 30, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1111:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 33, "mutability": "mutable", "name": "nonce", "nameLocation": "1148:5:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "1139:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 32, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1139:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "TransferData", "nameLocation": "893:12:0", "nodeType": "StructDefinition", "scope": 520, "src": "886:274:0", "visibility": "public"}, {"canonicalName": "SourceDomainSideBridge.RewardData", "id": 43, "members": [{"constant": false, "id": 36, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1203:16:0", "nodeType": "VariableDeclaration", "scope": 43, "src": "1194:25:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 35, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1194:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 38, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "1238:12:0", "nodeType": "VariableDeclaration", "scope": 43, "src": "1229:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 37, "name": "address", "nodeType": "ElementaryTypeName", "src": "1229:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 40, "mutability": "mutable", "name": "claimer", "nameLocation": "1270:7:0", "nodeType": "VariableDeclaration", "scope": 43, "src": "1261:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 39, "name": "address", "nodeType": "ElementaryTypeName", "src": "1261:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 42, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "1296:13:0", "nodeType": "VariableDeclaration", "scope": 43, "src": "1287:22:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 41, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1287:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "RewardData", "nameLocation": "1173:10:0", "nodeType": "StructDefinition", "scope": 520, "src": "1166:150:0", "visibility": "public"}, {"constant": false, "functionSelector": "040c05b6", "id": 47, "mutability": "mutable", "name": "validTransferHashes", "nameLocation": "1354:19:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "1322:51:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 46, "keyType": {"id": 44, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1330:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "1322:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 45, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1341:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "5a1294b7", "id": 51, "mutability": "mutable", "name": "knownHashOnions", "nameLocation": "1411:15:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "1379:47:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 50, "keyType": {"id": 48, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1387:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "1379:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 49, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1398:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "id": 53, "mutability": "mutable", "name": "processedRewardHashOnion", "nameLocation": "1440:24:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "1432:32:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 52, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1432:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 55, "mutability": "mutable", "name": "l1DomainSideContractAddress", "nameLocation": "1478:27:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "1470:35:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 54, "name": "address", "nodeType": "ElementaryTypeName", "src": "1470:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 57, "mutability": "mutable", "name": "currentNonce", "nameLocation": "1581:12:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "1572:21:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 56, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1572:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "5aa6e675", "id": 59, "mutability": "mutable", "name": "governance", "nameLocation": "1614:10:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "1599:25:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 58, "name": "address", "nodeType": "ElementaryTypeName", "src": "1599:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "id": 61, "mutability": "mutable", "name": "governanceBalance", "nameLocation": "1638:17:0", "nodeType": "VariableDeclaration", "scope": 520, "src": "1630:25:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 60, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1630:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "d8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f89", "id": 66, "name": "Transaction", "nameLocation": "1668:11:0", "nodeType": "EventDefinition", "parameters": {"id": 65, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 64, "indexed": false, "mutability": "mutable", "name": "transferData", "nameLocation": "1693:12:0", "nodeType": "VariableDeclaration", "scope": 66, "src": "1680:25:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 63, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 62, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 34, "src": "1680:12:0"}, "referencedDeclaration": 34, "src": "1680:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "src": "1679:27:0"}, "src": "1662:45:0"}, {"anonymous": false, "eventSelector": "6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a", "id": 72, "name": "ClaimPayed", "nameLocation": "1718:10:0", "nodeType": "EventDefinition", "parameters": {"id": 71, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 68, "indexed": false, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1737:16:0", "nodeType": "VariableDeclaration", "scope": 72, "src": "1729:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 67, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1729:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 70, "indexed": false, "mutability": "mutable", "name": "success", "nameLocation": "1760:7:0", "nodeType": "VariableDeclaration", "scope": 72, "src": "1755:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 69, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1755:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1728:40:0"}, "src": "1712:57:0"}, {"anonymous": false, "eventSelector": "f92a8a7980eb38c3c210ad55b80880529bccdbc8206e7cdb24d9f52c6a5171e8", "id": 76, "name": "NewKnownHashOnionAdded", "nameLocation": "1780:22:0", "nodeType": "EventDefinition", "parameters": {"id": 75, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 74, "indexed": false, "mutability": "mutable", "name": "newKnownHashOnions", "nameLocation": "1811:18:0", "nodeType": "VariableDeclaration", "scope": 76, "src": "1803:26:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 73, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1803:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "1802:28:0"}, "src": "1774:57:0"}, {"body": {"id": 103, "nodeType": "Block", "src": "1979:270:0", "statements": [{"assignments": [81], "declarations": [{"constant": false, "id": 81, "mutability": "mutable", "name": "l2cdm", "nameLocation": "2011:5:0", "nodeType": "VariableDeclaration", "scope": 103, "src": "1989:27:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$628", "typeString": "contract ICrossDomainMessenger"}, "typeName": {"id": 80, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 79, "name": "ICrossDomainMessenger", "nodeType": "IdentifierPath", "referencedDeclaration": 628, "src": "1989:21:0"}, "referencedDeclaration": 628, "src": "1989:21:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$628", "typeString": "contract ICrossDomainMessenger"}}, "visibility": "internal"}], "id": 85, "initialValue": {"arguments": [{"id": 83, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2041:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 82, "name": "ICrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 628, "src": "2019:21:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$628_$", "typeString": "type(contract ICrossDomainMessenger)"}}, "id": 84, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2019:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$628", "typeString": "contract ICrossDomainMessenger"}}, "nodeType": "VariableDeclarationStatement", "src": "1989:78:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 99, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 87, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2098:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2098:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 91, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2120:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 90, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2112:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 89, "name": "address", "nodeType": "ElementaryTypeName", "src": "2112:7:0", "typeDescriptions": {}}}, "id": 92, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2112:34:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2098:48:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 98, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 94, "name": "l2cdm", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 81, "src": "2162:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$628", "typeString": "contract ICrossDomainMessenger"}}, "id": 95, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "xDomainMessageSender", "nodeType": "MemberAccess", "referencedDeclaration": 617, "src": "2162:26:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 96, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2162:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 97, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55, "src": "2194:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2162:59:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "2098:123:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 86, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2077:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 100, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2077:154:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 101, "nodeType": "ExpressionStatement", "src": "2077:154:0"}, {"id": 102, "nodeType": "PlaceholderStatement", "src": "2241:1:0"}]}, "documentation": {"id": 77, "nodeType": "StructuredDocumentation", "src": "1841:108:0", "text": "@notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge"}, "id": 104, "name": "onlyL1Contract", "nameLocation": "1963:14:0", "nodeType": "ModifierDefinition", "parameters": {"id": 78, "nodeType": "ParameterList", "parameters": [], "src": "1977:2:0"}, "src": "1954:295:0", "virtual": false, "visibility": "internal"}, {"body": {"id": 116, "nodeType": "Block", "src": "2370:104:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 111, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 108, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2388:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 109, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2388:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 110, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2402:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2388:24:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "476f7665726e616e63653a20596f7520617265206e6f742074686520476f7665726e6f72212121", "id": 112, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2414:41:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_300c0d2f8768dc2f5059e5cda9a599bc809e73a6a59e433d49c1d574de5907dc", "typeString": "literal_string \"Governance: You are not the Governor!!!\""}, "value": "Governance: You are not the Governor!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_300c0d2f8768dc2f5059e5cda9a599bc809e73a6a59e433d49c1d574de5907dc", "typeString": "literal_string \"Governance: You are not the Governor!!!\""}], "id": 107, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2380:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2380:76:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 114, "nodeType": "ExpressionStatement", "src": "2380:76:0"}, {"id": 115, "nodeType": "PlaceholderStatement", "src": "2466:1:0"}]}, "documentation": {"id": 105, "nodeType": "StructuredDocumentation", "src": "2255:86:0", "text": "@notice onlyGovernance modifier \n @notice allow only the Governor to access"}, "id": 117, "name": "onlyGovernance", "nameLocation": "2355:14:0", "nodeType": "ModifierDefinition", "parameters": {"id": 106, "nodeType": "ParameterList", "parameters": [], "src": "2370:0:0"}, "src": "2346:128:0", "virtual": false, "visibility": "internal"}, {"body": {"id": 132, "nodeType": "Block", "src": "2619:108:0", "statements": [{"expression": {"id": 125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 123, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55, "src": "2629:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 124, "name": "_l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 120, "src": "2659:28:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2629:58:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 126, "nodeType": "ExpressionStatement", "src": "2629:58:0"}, {"expression": {"id": 130, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 127, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "2697:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 128, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2710:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2710:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2697:23:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 131, "nodeType": "ExpressionStatement", "src": "2697:23:0"}]}, "documentation": {"id": 118, "nodeType": "StructuredDocumentation", "src": "2480:85:0", "text": "@param _l1DomainSideContractAddress is the address of the contract in etherium L1"}, "id": 133, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 121, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 120, "mutability": "mutable", "name": "_l1DomainSideContractAddress", "nameLocation": "2590:28:0", "nodeType": "VariableDeclaration", "scope": 133, "src": "2582:36:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 119, "name": "address", "nodeType": "ElementaryTypeName", "src": "2582:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2581:38:0"}, "returnParameters": {"id": 122, "nodeType": "ParameterList", "parameters": [], "src": "2619:0:0"}, "scope": 520, "src": "2570:157:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 301, "nodeType": "Block", "src": "2973:1366:0", "statements": [{"assignments": [148], "declarations": [{"constant": false, "id": 148, "mutability": "mutable", "name": "fee", "nameLocation": "3000:3:0", "nodeType": "VariableDeclaration", "scope": 301, "src": "2992:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 147, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2992:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 152, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 149, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "3006:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 150, "name": "CONTRACT_FEE_BASIS_POINTS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "3016:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3006:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2992:49:0"}, {"assignments": [154], "declarations": [{"constant": false, "id": 154, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "3059:13:0", "nodeType": "VariableDeclaration", "scope": 301, "src": "3051:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 153, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3051:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 160, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 155, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "3075:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 156, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3085:4:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3075:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 158, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "3092:3:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3075:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3051:44:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 164, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 162, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "3122:3:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 163, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "3128:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3122:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 167, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 165, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "3141:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 166, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3151:4:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3141:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3122:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "66656552616d707570206d6178696d756d20636f73742073686f756c64206265206c657373207468616e2074686520746f74616c20616d6f756e74", "id": 169, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3157:61:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4bc519888d66881083968bfd12d4fec087513ea2bfda5d86f622fedd64a2aa09", "typeString": "literal_string \"feeRampup maximum cost should be less than the total amount\""}, "value": "feeRampup maximum cost should be less than the total amount"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4bc519888d66881083968bfd12d4fec087513ea2bfda5d86f622fedd64a2aa09", "typeString": "literal_string \"feeRampup maximum cost should be less than the total amount\""}], "id": 161, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3114:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 170, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3114:105:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 171, "nodeType": "ExpressionStatement", "src": "3114:105:0"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 172, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "3233:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 173, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7, "src": "3250:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3233:30:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 222, "nodeType": "Block", "src": "3459:225:0", "statements": [{"assignments": [197], "declarations": [{"constant": false, "id": 197, "mutability": "mutable", "name": "token", "nameLocation": "3479:5:0", "nodeType": "VariableDeclaration", "scope": 222, "src": "3473:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$589", "typeString": "contract ERC20"}, "typeName": {"id": 196, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 195, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 589, "src": "3473:5:0"}, "referencedDeclaration": 589, "src": "3473:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$589", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 201, "initialValue": {"arguments": [{"id": 199, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "3493:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 198, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 589, "src": "3487:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$589_$", "typeString": "type(contract ERC20)"}}, "id": 200, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3487:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$589", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "3473:34:0"}, {"expression": {"arguments": [{"expression": {"id": 205, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3540:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 206, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3540:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 209, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3560:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$520", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$520", "typeString": "contract SourceDomainSideBridge"}], "id": 208, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3552:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 207, "name": "address", "nodeType": "ElementaryTypeName", "src": "3552:7:0", "typeDescriptions": {}}}, "id": 210, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3552:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 211, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 154, "src": "3567:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 202, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 197, "src": "3521:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$589", "typeString": "contract ERC20"}}, "id": 204, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 572, "src": "3521:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 212, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3521:60:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 213, "nodeType": "ExpressionStatement", "src": "3521:60:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 218, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 215, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3603:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "3603:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 217, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16, "src": "3616:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3603:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2053756666656369656e7420657468657220666f722074686520666978656420657468657220666565", "id": 219, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3627:45:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_64ba999596c4f1bdb4efd3b6724f85fe7965e7c80268be2ebabf9a78cb176819", "typeString": "literal_string \"No Suffecient ether for the fixed ether fee\""}, "value": "No Suffecient ether for the fixed ether fee"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_64ba999596c4f1bdb4efd3b6724f85fe7965e7c80268be2ebabf9a78cb176819", "typeString": "literal_string \"No Suffecient ether for the fixed ether fee\""}], "id": 214, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3595:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 220, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3595:78:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 221, "nodeType": "ExpressionStatement", "src": "3595:78:0"}]}, "id": 223, "nodeType": "IfStatement", "src": "3230:454:0", "trueBody": {"id": 194, "nodeType": "Block", "src": "3264:191:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 180, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 178, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 176, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "3286:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 177, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3295:4:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3286:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 179, "name": "MAX_TRADE_LIMIT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "3302:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3286:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420686967686572207468616e206d6178696d756d207472616465206c696d6974", "id": 181, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3319:40:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_541250fccaebd85b78dfda892f93e70a245432cff15b3fb7fc320458cd1107bf", "typeString": "literal_string \"Amount higher than maximum trade limit\""}, "value": "Amount higher than maximum trade limit"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_541250fccaebd85b78dfda892f93e70a245432cff15b3fb7fc320458cd1107bf", "typeString": "literal_string \"Amount higher than maximum trade limit\""}], "id": 175, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3278:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 182, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3278:82:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 183, "nodeType": "ExpressionStatement", "src": "3278:82:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 190, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 185, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3382:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "3382:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 187, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 154, "src": "3395:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 188, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16, "src": "3411:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3395:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3382:38:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2053756666656369656e74206574686572", "id": 191, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3422:21:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9524d3942520ea058e373f61030588302685b586802f82c6be4e5149e46e6fbf", "typeString": "literal_string \"No Suffecient ether\""}, "value": "No Suffecient ether"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9524d3942520ea058e373f61030588302685b586802f82c6be4e5149e46e6fbf", "typeString": "literal_string \"No Suffecient ether\""}], "id": 184, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3374:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 192, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3374:70:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 193, "nodeType": "ExpressionStatement", "src": "3374:70:0"}]}}, {"assignments": [226], "declarations": [{"constant": false, "id": 226, "mutability": "mutable", "name": "transferData", "nameLocation": "3714:12:0", "nodeType": "VariableDeclaration", "scope": 301, "src": "3694:32:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 225, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 224, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 34, "src": "3694:12:0"}, "referencedDeclaration": 34, "src": "3694:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "id": 227, "nodeType": "VariableDeclarationStatement", "src": "3694:32:0"}, {"expression": {"id": 232, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 228, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "3736:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 230, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 21, "src": "3736:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 231, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "3764:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3736:41:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 233, "nodeType": "ExpressionStatement", "src": "3736:41:0"}, {"expression": {"id": 238, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 234, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "3787:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 236, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 23, "src": "3787:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 237, "name": "_destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 138, "src": "3814:12:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3787:39:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 239, "nodeType": "ExpressionStatement", "src": "3787:39:0"}, {"expression": {"id": 244, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 240, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "3836:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 242, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 25, "src": "3836:19:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 243, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 140, "src": "3858:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3836:29:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 245, "nodeType": "ExpressionStatement", "src": "3836:29:0"}, {"expression": {"id": 250, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 246, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "3875:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 248, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 27, "src": "3875:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 249, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 148, "src": "3894:3:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3875:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 251, "nodeType": "ExpressionStatement", "src": "3875:22:0"}, {"expression": {"id": 257, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 252, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "3907:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 254, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 29, "src": "3907:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 255, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3932:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "3932:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3907:37:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 258, "nodeType": "ExpressionStatement", "src": "3907:37:0"}, {"expression": {"id": 263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 259, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "3954:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 261, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "feeRampup", "nodeType": "MemberAccess", "referencedDeclaration": 31, "src": "3954:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 262, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "3979:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3954:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 264, "nodeType": "ExpressionStatement", "src": "3954:35:0"}, {"expression": {"id": 269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 265, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "3999:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 267, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "nonce", "nodeType": "MemberAccess", "referencedDeclaration": 33, "src": "3999:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 268, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "4020:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3999:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 270, "nodeType": "ExpressionStatement", "src": "3999:33:0"}, {"expression": {"id": 272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4043:14:0", "subExpression": {"id": 271, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "4043:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 273, "nodeType": "ExpressionStatement", "src": "4043:14:0"}, {"expression": {"id": 278, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 274, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "4067:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 275, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "4087:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 276, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16, "src": "4107:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4087:29:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4067:49:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 279, "nodeType": "ExpressionStatement", "src": "4067:49:0"}, {"assignments": [281], "declarations": [{"constant": false, "id": 281, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "4135:16:0", "nodeType": "VariableDeclaration", "scope": 301, "src": "4127:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 280, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4127:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 288, "initialValue": {"arguments": [{"arguments": [{"id": 285, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "4172:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "expression": {"id": 283, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "4161:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 284, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "4161:10:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 286, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4161:24:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 282, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "4154:6:0", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 287, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4154:32:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "4127:59:0"}, {"expression": {"id": 293, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 289, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "4205:19:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 291, "indexExpression": {"id": 290, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 281, "src": "4225:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4205:37:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 292, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4245:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "4205:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 294, "nodeType": "ExpressionStatement", "src": "4205:44:0"}, {"eventCall": {"arguments": [{"id": 296, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "4277:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$34_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "id": 295, "name": "Transaction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 66, "src": "4265:11:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_TransferData_$34_memory_ptr_$returns$__$", "typeString": "function (struct SourceDomainSideBridge.TransferData memory)"}}, "id": 297, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4265:25:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 298, "nodeType": "EmitStatement", "src": "4260:30:0"}, {"expression": {"id": 299, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 281, "src": "4316:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 146, "id": 300, "nodeType": "Return", "src": "4309:23:0"}]}, "documentation": {"id": 134, "nodeType": "StructuredDocumentation", "src": "2733:92:0", "text": "@notice transfer the required funds plus fees to be sent to the current contract balance"}, "functionSelector": "0411b252", "id": 302, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "2839:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 143, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 136, "mutability": "mutable", "name": "_tokenAddress", "nameLocation": "2856:13:0", "nodeType": "VariableDeclaration", "scope": 302, "src": "2848:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 135, "name": "address", "nodeType": "ElementaryTypeName", "src": "2848:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 138, "mutability": "mutable", "name": "_destination", "nameLocation": "2879:12:0", "nodeType": "VariableDeclaration", "scope": 302, "src": "2871:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 137, "name": "address", "nodeType": "ElementaryTypeName", "src": "2871:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 140, "mutability": "mutable", "name": "_amount", "nameLocation": "2901:7:0", "nodeType": "VariableDeclaration", "scope": 302, "src": "2893:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 139, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2893:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 142, "mutability": "mutable", "name": "_feeRampup", "nameLocation": "2928:10:0", "nodeType": "VariableDeclaration", "scope": 302, "src": "2919:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 141, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2919:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2847:92:0"}, "returnParameters": {"id": 146, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 145, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 302, "src": "2965:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 144, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2965:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2964:9:0"}, "scope": 520, "src": "2830:1509:0", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 439, "nodeType": "Block", "src": "4601:1132:0", "statements": [{"assignments": [311], "declarations": [{"constant": false, "id": 311, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "4619:27:0", "nodeType": "VariableDeclaration", "scope": 439, "src": "4611:35:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 310, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4611:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 315, "initialValue": {"arguments": [{"id": 313, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "4686:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}], "id": 312, "name": "calculateNewProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 519, "src": "4649:36:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (struct SourceDomainSideBridge.RewardData memory[] memory) view returns (bytes32)"}}, "id": 314, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4649:49:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "4611:87:0"}, {"expression": {"arguments": [{"baseExpression": {"id": 317, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "4716:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 319, "indexExpression": {"id": 318, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "4732:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4716:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964652052657761726444617461206c6973742e", "id": 320, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4762:27:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}, "value": "Invalide RewardData list."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}], "id": 316, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4708:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 321, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4708:82:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 322, "nodeType": "ExpressionStatement", "src": "4708:82:0"}, {"expression": {"id": 325, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 323, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "4800:24:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 324, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "4827:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4800:54:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 326, "nodeType": "ExpressionStatement", "src": "4800:54:0"}, {"body": {"id": 437, "nodeType": "Block", "src": "4909:814:0", "statements": [{"condition": {"baseExpression": {"id": 338, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "4926:19:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 343, "indexExpression": {"expression": {"baseExpression": {"id": 339, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "4946:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 341, "indexExpression": {"id": 340, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "4958:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4946:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 342, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 36, "src": "4946:31:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4926:52:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 436, "nodeType": "IfStatement", "src": "4923:790:0", "trueBody": {"id": 435, "nodeType": "Block", "src": "4979:734:0", "statements": [{"assignments": [345], "declarations": [{"constant": false, "id": 345, "mutability": "mutable", "name": "success", "nameLocation": "5002:7:0", "nodeType": "VariableDeclaration", "scope": 435, "src": "4997:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 344, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4997:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 346, "nodeType": "VariableDeclarationStatement", "src": "4997:12:0"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 352, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 347, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "5030:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 349, "indexExpression": {"id": 348, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "5042:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5030:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 350, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 38, "src": "5030:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 351, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7, "src": "5061:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5030:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 425, "nodeType": "Block", "src": "5247:377:0", "statements": [{"assignments": [378], "declarations": [{"constant": false, "id": 378, "mutability": "mutable", "name": "token", "nameLocation": "5275:5:0", "nodeType": "VariableDeclaration", "scope": 425, "src": "5269:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$589", "typeString": "contract ERC20"}, "typeName": {"id": 377, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 376, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 589, "src": "5269:5:0"}, "referencedDeclaration": 589, "src": "5269:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$589", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 385, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 380, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "5289:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 382, "indexExpression": {"id": 381, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "5301:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5289:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 383, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 38, "src": "5289:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 379, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 589, "src": "5283:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$589_$", "typeString": "type(contract ERC20)"}}, "id": 384, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5283:34:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$589", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "5269:48:0"}, {"expression": {"id": 402, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 386, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "5341:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 391, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5378:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$520", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$520", "typeString": "contract SourceDomainSideBridge"}], "id": 390, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5370:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 389, "name": "address", "nodeType": "ElementaryTypeName", "src": "5370:7:0", "typeDescriptions": {}}}, "id": 392, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5370:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 393, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "5385:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 395, "indexExpression": {"id": 394, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "5397:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5385:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 396, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 40, "src": "5385:22:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 397, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "5433:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 399, "indexExpression": {"id": 398, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "5445:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5433:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 400, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amountPlusFee", "nodeType": "MemberAccess", "referencedDeclaration": 42, "src": "5433:28:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 387, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 378, "src": "5351:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$589", "typeString": "contract ERC20"}}, "id": 388, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 572, "src": "5351:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 401, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5351:111:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5341:121:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 403, "nodeType": "ExpressionStatement", "src": "5341:121:0"}, {"assignments": [405, null], "declarations": [{"constant": false, "id": 405, "mutability": "mutable", "name": "suc", "nameLocation": "5491:3:0", "nodeType": "VariableDeclaration", "scope": 425, "src": "5486:8:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 404, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5486:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 418, "initialValue": {"arguments": [{"hexValue": "", "id": 416, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5555:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 408, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "5508:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 410, "indexExpression": {"id": 409, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "5520:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5508:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 411, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 40, "src": "5508:22:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 407, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5500:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 406, "name": "address", "nodeType": "ElementaryTypeName", "src": "5500:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 412, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5500:31:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 413, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "5500:36:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 415, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 414, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16, "src": "5544:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "5500:54:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 417, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5500:58:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5485:73:0"}, {"expression": {"id": 423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 419, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "5581:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 422, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 420, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "5591:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"id": 421, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 405, "src": "5602:3:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5591:14:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5581:24:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 424, "nodeType": "ExpressionStatement", "src": "5581:24:0"}]}, "id": 426, "nodeType": "IfStatement", "src": "5027:597:0", "trueBody": {"id": 375, "nodeType": "Block", "src": "5075:168:0", "statements": [{"assignments": [354, null], "declarations": [{"constant": false, "id": 354, "mutability": "mutable", "name": "suc", "nameLocation": "5103:3:0", "nodeType": "VariableDeclaration", "scope": 375, "src": "5098:8:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 353, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5098:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 370, "initialValue": {"arguments": [{"hexValue": "", "id": 368, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5186:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 357, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "5120:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 359, "indexExpression": {"id": 358, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "5132:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5120:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 360, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 40, "src": "5120:22:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 356, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5112:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 355, "name": "address", "nodeType": "ElementaryTypeName", "src": "5112:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 361, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5112:31:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 362, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "5112:36:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 367, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"expression": {"baseExpression": {"id": 363, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "5156:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 365, "indexExpression": {"id": 364, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "5168:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5156:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 366, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amountPlusFee", "nodeType": "MemberAccess", "referencedDeclaration": 42, "src": "5156:28:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "5112:73:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5112:77:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5097:92:0"}, {"expression": {"id": 373, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 371, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "5211:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 372, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 354, "src": "5221:3:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5211:13:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 374, "nodeType": "ExpressionStatement", "src": "5211:13:0"}]}}, {"eventCall": {"arguments": [{"expression": {"baseExpression": {"id": 428, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "5657:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 430, "indexExpression": {"id": 429, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "5669:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5657:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 431, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 36, "src": "5657:31:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 432, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "5690:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 427, "name": "ClaimPayed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72, "src": "5646:10:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$", "typeString": "function (bytes32,bool)"}}, "id": 433, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5646:52:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 434, "nodeType": "EmitStatement", "src": "5641:57:0"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 334, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 331, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "4880:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 332, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "4884:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 333, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4884:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4880:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 438, "initializationExpression": {"assignments": [328], "declarations": [{"constant": false, "id": 328, "mutability": "mutable", "name": "n", "nameLocation": "4873:1:0", "nodeType": "VariableDeclaration", "scope": 438, "src": "4868:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 327, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4868:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 330, "initialValue": {"hexValue": "30", "id": 329, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4877:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4868:10:0"}, "loopExpression": {"expression": {"id": 336, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4904:3:0", "subExpression": {"id": 335, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 328, "src": "4904:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 337, "nodeType": "ExpressionStatement", "src": "4904:3:0"}, "nodeType": "ForStatement", "src": "4864:859:0"}]}, "documentation": {"id": 303, "nodeType": "StructuredDocumentation", "src": "4345:178:0", "text": "@notice process the processClaims structs to be paid to the liquidity providers\n @param _rewardData is an array of RewardData structs to be paid to liquidity providers"}, "functionSelector": "ef4481d1", "id": 440, "implemented": true, "kind": "function", "modifiers": [], "name": "processClaims", "nameLocation": "4537:13:0", "nodeType": "FunctionDefinition", "parameters": {"id": 308, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 307, "mutability": "mutable", "name": "_rewardData", "nameLocation": "4571:11:0", "nodeType": "VariableDeclaration", "scope": 440, "src": "4551:31:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 305, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 304, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 43, "src": "4551:10:0"}, "referencedDeclaration": 43, "src": "4551:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 306, "nodeType": "ArrayTypeName", "src": "4551:12:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "4550:33:0"}, "returnParameters": {"id": 309, "nodeType": "ParameterList", "parameters": [], "src": "4601:0:0"}, "scope": 520, "src": "4528:1205:0", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 458, "nodeType": "Block", "src": "5987:118:0", "statements": [{"expression": {"id": 452, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 448, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "5997:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 450, "indexExpression": {"id": 449, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 443, "src": "6013:19:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5997:36:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 451, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6036:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5997:43:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 453, "nodeType": "ExpressionStatement", "src": "5997:43:0"}, {"eventCall": {"arguments": [{"id": 455, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 443, "src": "6078:19:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 454, "name": "NewKnownHashOnionAdded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "6055:22:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 456, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6055:43:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 457, "nodeType": "EmitStatement", "src": "6050:48:0"}]}, "documentation": {"id": 441, "nodeType": "StructuredDocumentation", "src": "5739:161:0", "text": "@notice this function is only called from the contract at the etherium L1\n @notice through the rollup messenger contract to add a new known hash onion"}, "functionSelector": "a9d72b02", "id": 459, "implemented": true, "kind": "function", "modifiers": [{"id": 446, "kind": "modifierInvocation", "modifierName": {"id": 445, "name": "onlyL1Contract", "nodeType": "IdentifierPath", "referencedDeclaration": 104, "src": "5973:14:0"}, "nodeType": "ModifierInvocation", "src": "5973:14:0"}], "name": "addNewKnownHashOnion", "nameLocation": "5914:20:0", "nodeType": "FunctionDefinition", "parameters": {"id": 444, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 443, "mutability": "mutable", "name": "_newKnownHashOnions", "nameLocation": "5943:19:0", "nodeType": "VariableDeclaration", "scope": 459, "src": "5935:27:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 442, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5935:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5934:29:0"}, "returnParameters": {"id": 447, "nodeType": "ParameterList", "parameters": [], "src": "5987:0:0"}, "scope": 520, "src": "5905:200:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 476, "nodeType": "Block", "src": "6172:95:0", "statements": [{"expression": {"arguments": [{"id": 469, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "6211:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 466, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "6190:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 465, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6182:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 464, "name": "address", "nodeType": "ElementaryTypeName", "src": "6182:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 467, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6182:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 468, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "6182:28:0", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 470, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6182:47:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 471, "nodeType": "ExpressionStatement", "src": "6182:47:0"}, {"expression": {"id": 474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 472, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "6239:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 473, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6259:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6239:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 475, "nodeType": "ExpressionStatement", "src": "6239:21:0"}]}, "functionSelector": "5181353d", "id": 477, "implemented": true, "kind": "function", "modifiers": [{"id": 462, "kind": "modifierInvocation", "modifierName": {"id": 461, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 117, "src": "6158:14:0"}, "nodeType": "ModifierInvocation", "src": "6158:14:0"}], "name": "collectGovernanceFixedFees", "nameLocation": "6120:26:0", "nodeType": "FunctionDefinition", "parameters": {"id": 460, "nodeType": "ParameterList", "parameters": [], "src": "6146:2:0"}, "returnParameters": {"id": 463, "nodeType": "ParameterList", "parameters": [], "src": "6172:0:0"}, "scope": 520, "src": "6111:156:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 518, "nodeType": "Block", "src": "6428:311:0", "statements": [{"assignments": [488], "declarations": [{"constant": false, "id": 488, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "6446:27:0", "nodeType": "VariableDeclaration", "scope": 518, "src": "6438:35:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 487, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6438:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 490, "initialValue": {"id": 489, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "6476:24:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "6438:62:0"}, {"body": {"id": 514, "nodeType": "Block", "src": "6555:134:0", "statements": [{"expression": {"id": 512, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 502, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "6569:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 506, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "6634:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 507, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 482, "src": "6662:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 509, "indexExpression": {"id": 508, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 492, "src": "6674:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6662:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_RewardData_$43_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}], "expression": {"id": 504, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "6623:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 505, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "6623:10:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 510, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6623:54:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 503, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "6616:6:0", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 511, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6616:62:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "6569:109:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 513, "nodeType": "ExpressionStatement", "src": "6569:109:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 498, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 495, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 492, "src": "6526:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 496, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 482, "src": "6530:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 497, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6530:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6526:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 515, "initializationExpression": {"assignments": [492], "declarations": [{"constant": false, "id": 492, "mutability": "mutable", "name": "n", "nameLocation": "6519:1:0", "nodeType": "VariableDeclaration", "scope": 515, "src": "6514:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 491, "name": "uint", "nodeType": "ElementaryTypeName", "src": "6514:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 494, "initialValue": {"hexValue": "30", "id": 493, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6523:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6514:10:0"}, "loopExpression": {"expression": {"id": 500, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6550:3:0", "subExpression": {"id": 499, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 492, "src": "6550:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 501, "nodeType": "ExpressionStatement", "src": "6550:3:0"}, "nodeType": "ForStatement", "src": "6510:179:0"}, {"expression": {"id": 516, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "6705:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 486, "id": 517, "nodeType": "Return", "src": "6698:34:0"}]}, "documentation": {"id": 478, "nodeType": "StructuredDocumentation", "src": "6273:41:0", "text": "@notice calculates the new hash onion"}, "id": 519, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateNewProcessedRewardHashOnion", "nameLocation": "6328:36:0", "nodeType": "FunctionDefinition", "parameters": {"id": 483, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 482, "mutability": "mutable", "name": "_rewardData", "nameLocation": "6385:11:0", "nodeType": "VariableDeclaration", "scope": 519, "src": "6365:31:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 480, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 479, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 43, "src": "6365:10:0"}, "referencedDeclaration": 43, "src": "6365:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$43_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 481, "nodeType": "ArrayTypeName", "src": "6365:12:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$43_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "6364:33:0"}, "returnParameters": {"id": 486, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 485, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 519, "src": "6420:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 484, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6420:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "6419:9:0"}, "scope": 520, "src": "6319:420:0", "stateMutability": "view", "virtual": false, "visibility": "private"}], "scope": 521, "src": "264:6477:0", "usedErrors": []}], "src": "31:6710:0"}, "bytecode": "", "bytecodeSha1": "bb59edac837b61dd70d9a9888a7418b258e0ca42", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "SourceDomainSideBridge", "coverageMap": {"branches": {"0": {"SourceDomainSideBridge.addNewKnownHashOnion": {"35": [2098, 2146, false], "36": [2162, 2221, true]}, "SourceDomainSideBridge.processClaims": {"37": [4716, 4760, true], "38": [4926, 4978, false], "39": [5030, 5074, false]}, "SourceDomainSideBridge.transfer": {"30": [3122, 3155, true], "31": [3233, 3263, false], "32": [3286, 3317, true], "33": [3382, 3420, true], "34": [3603, 3625, true]}}, "1": {}, "2": {}}, "statements": {"0": {"SourceDomainSideBridge.addNewKnownHashOnion": {"19": [5997, 6040], "20": [6050, 6098]}, "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion": {"27": [6569, 6678], "28": [6550, 6553], "29": [6698, 6732]}, "SourceDomainSideBridge.collectGovernanceFixedFees": {"17": [6182, 6229], "18": [6239, 6260]}, "SourceDomainSideBridge.processClaims": {"21": [4708, 4790], "22": [4800, 4854], "23": [5341, 5462], "24": [5581, 5605], "25": [5641, 5698], "26": [4904, 4907]}, "SourceDomainSideBridge.transfer": {"0": [3114, 3219], "1": [3278, 3360], "2": [3374, 3444], "3": [3521, 3581], "4": [3595, 3673], "5": [3736, 3777], "6": [3787, 3826], "7": [3836, 3865], "8": [3875, 3897], "9": [3907, 3944], "10": [3954, 3989], "11": [3999, 4032], "12": [4043, 4057], "13": [4067, 4116], "14": [4205, 4249], "15": [4260, 4290], "16": [4309, 4332]}}, "1": {}, "2": {}}}, "dependencies": ["ERC20", "ICrossDomainMessenger"], "deployedBytecode": "6080604052600436106100915760003560e01c80635a1294b7116100595780635a1294b7146101425780635aa6e67514610172578063a9d72b02146101aa578063bfd683b3146101ca578063ef4481d1146101e657600080fd5b8063040c05b6146100965780630411b252146100db57806313457d88146100fc57806323d1b06c146101115780635181353d1461012b575b600080fd5b3480156100a257600080fd5b506100c66100b1366004610be3565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100ee6100e9366004610c14565b6101f9565b6040519081526020016100d2565b34801561010857600080fd5b506100ee600581565b34801561011d57600080fd5b506100ee6502ba7def300081565b34801561013757600080fd5b506101406105f6565b005b34801561014e57600080fd5b506100c661015d366004610be3565b60016020526000908152604090205460ff1681565b34801561017e57600080fd5b50600554610192906001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b3480156101b657600080fd5b506101406101c5366004610be3565b6106a4565b3480156101d657600080fd5b506100ee67016345785d8a000081565b6101406101f4366004610cca565b61078c565b600080610207600585610dd3565b9050600081610218866103e8610dd3565b6102229190610df2565b9050610230856103e8610dd3565b61023a8584610dd3565b106102b25760405162461bcd60e51b815260206004820152603b60248201527f66656552616d707570206d6178696d756d20636f73742073686f756c6420626560448201527f206c657373207468616e2074686520746f74616c20616d6f756e74000000000060648201526084015b60405180910390fd5b6001600160a01b03871661038b5767016345785d8a00006102d5866103e8610dd3565b106103315760405162461bcd60e51b815260206004820152602660248201527f416d6f756e7420686967686572207468616e206d6178696d756d207472616465604482015265081b1a5b5a5d60d21b60648201526084016102a9565b6103416502ba7def300082610df2565b3410156103865760405162461bcd60e51b815260206004820152601360248201527227379029bab33332b1b4b2b73a1032ba3432b960691b60448201526064016102a9565b610471565b6040516323b872dd60e01b81523360048201523060248201526044810182905287906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104049190610e0a565b506502ba7def300034101561046f5760405162461bcd60e51b815260206004820152602b60248201527f4e6f2053756666656369656e7420657468657220666f7220746865206669786560448201526a642065746865722066656560a81b60648201526084016102a9565b505b6104c36040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808916825287166020820152604081018690526060810183905243608082015260a081018590526004805460c0830181905290600061050983610e33565b91905055506502ba7def30006006546105229190610df2565b60065560405160009060029061053c908490602001610e4c565b60408051601f198184030181529082905261055691610ea3565b602060405180830381855afa158015610573573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105969190610ede565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f89906105e2908490610e4c565b60405180910390a198975050505050505050565b6005546001600160a01b031633146106605760405162461bcd60e51b815260206004820152602760248201527f476f7665726e616e63653a20596f7520617265206e6f742074686520476f7665604482015266726e6f7221212160c81b60648201526084016102a9565b6005546006546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561069c573d6000803e3d6000fd5b506000600655565b6007602160991b013381148015610731575060035460408051636e296e4560e01b815290516001600160a01b0392831692841691636e296e459160048083019260209291908290030181865afa158015610702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107269190610ef7565b6001600160a01b0316145b61073a57600080fd5b600082815260016020818152604092839020805460ff191690921790915590518381527ff92a8a7980eb38c3c210ad55b80880529bccdbc8206e7cdb24d9f52c6a5171e8910160405180910390a15050565b600061079782610aff565b60008181526001602052604090205490915060ff166107f85760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e0000000000000060448201526064016102a9565b600281905560005b8251811015610afa5760008084838151811061081e5761081e610f14565b6020908102919091018101515182528101919091526040016000205460ff1615610ae8576000806001600160a01b031684838151811061086057610860610f14565b6020026020010151602001516001600160a01b03160361091257600084838151811061088e5761088e610f14565b6020026020010151604001516001600160a01b03168584815181106108b5576108b5610f14565b60200260200101516060015160405160006040518083038185875af1925050503d8060008114610901576040519150601f19603f3d011682016040523d82523d6000602084013e610906565b606091505b50909250610a85915050565b600084838151811061092657610926610f14565b6020026020010151602001519050806001600160a01b03166323b872dd3087868151811061095657610956610f14565b60200260200101516040015188878151811061097457610974610f14565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb9190610e0a565b91506000858481518110610a1157610a11610f14565b6020026020010151604001516001600160a01b03166502ba7def300060405160006040518083038185875af1925050503d8060008114610a6d576040519150601f19603f3d011682016040523d82523d6000602084013e610a72565b606091505b50509050828015610a805750805b925050505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a848381518110610ab857610ab8610f14565b60200260200101516000015182604051610ade9291909182521515602082015260400190565b60405180910390a1505b80610af281610e33565b915050610800565b505050565b600254600090815b8351811015610bdc57600282858381518110610b2557610b25610f14565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f1981840301815290829052610b8891610ea3565b602060405180830381855afa158015610ba5573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610bc89190610ede565b915080610bd481610e33565b915050610b07565b5092915050565b600060208284031215610bf557600080fd5b5035919050565b6001600160a01b0381168114610c1157600080fd5b50565b60008060008060808587031215610c2a57600080fd5b8435610c3581610bfc565b93506020850135610c4581610bfc565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610c9357610c93610c5a565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cc257610cc2610c5a565b604052919050565b60006020808385031215610cdd57600080fd5b823567ffffffffffffffff80821115610cf557600080fd5b818501915085601f830112610d0957600080fd5b813581811115610d1b57610d1b610c5a565b610d29848260051b01610c99565b818152848101925060079190911b830184019087821115610d4957600080fd5b928401925b81841015610db25760808489031215610d675760008081fd5b610d6f610c70565b8435815285850135610d8081610bfc565b81870152604085810135610d9381610bfc565b9082015260608581013590820152835260809093019291840191610d4e565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610ded57610ded610dbd565b500290565b60008219821115610e0557610e05610dbd565b500190565b600060208284031215610e1c57600080fd5b81518015158114610e2c57600080fd5b9392505050565b600060018201610e4557610e45610dbd565b5060010190565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610ec45760208186018101518583015201610eaa565b81811115610ed3576000828501525b509190910192915050565b600060208284031215610ef057600080fd5b5051919050565b600060208284031215610f0957600080fd5b8151610e2c81610bfc565b634e487b7160e01b600052603260045260246000fdfea26469706673582212200e1f726f45e646ef6a840bb7f3781b757e0863b65f1fdf968e3e36c96b47613564736f6c634300080d0033", "deployedSourceMap": "264:6477:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1322:51;;;;;;;;;;-1:-1:-1;1322:51:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;364:14:3;;357:22;339:41;;327:2;312:18;1322:51:0;;;;;;;;2830:1509;;;;;;:::i;:::-;;:::i;:::-;;;1203:25:3;;;1191:2;1176:18;2830:1509:0;1057:177:3;534:50:0;;;;;;;;;;;;583:1;534:50;;609:42;;;;;;;;;;;;642:9;609:42;;6111:156;;;;;;;;;;;;;:::i;:::-;;1379:47;;;;;;;;;;-1:-1:-1;1379:47:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;1599:25;;;;;;;;;;-1:-1:-1;1599:25:0;;;;-1:-1:-1;;;;;1599:25:0;;;;;;-1:-1:-1;;;;;1585:32:3;;;1567:51;;1555:2;1540:18;1599:25:0;1421:203:3;5905:200:0;;;;;;;;;;-1:-1:-1;5905:200:0;;;;;:::i;:::-;;:::i;792:48::-;;;;;;;;;;;;831:9;792:48;;4528:1205;;;;;;:::i;:::-;;:::i;2830:1509::-;2965:7;;3006:35;583:1;3006:7;:35;:::i;:::-;2992:49;-1:-1:-1;3051:21:0;2992:49;3075:14;:7;3085:4;3075:14;:::i;:::-;:20;;;;:::i;:::-;3051:44;-1:-1:-1;3141:14:0;:7;3151:4;3141:14;:::i;:::-;3122:16;3128:10;3122:3;:16;:::i;:::-;:33;3114:105;;;;-1:-1:-1;;;3114:105:0;;4518:2:3;3114:105:0;;;4500:21:3;4557:2;4537:18;;;4530:30;4596:34;4576:18;;;4569:62;4667:29;4647:18;;;4640:57;4714:19;;3114:105:0;;;;;;;;;-1:-1:-1;;;;;3233:30:0;;3230:454;;831:9;3286:13;:7;3295:4;3286:13;:::i;:::-;:31;3278:82;;;;-1:-1:-1;;;3278:82:0;;4946:2:3;3278:82:0;;;4928:21:3;4985:2;4965:18;;;4958:30;5024:34;5004:18;;;4997:62;-1:-1:-1;;;5075:18:3;;;5068:36;5121:19;;3278:82:0;4744:402:3;3278:82:0;3395:25;642:9;3395:13;:25;:::i;:::-;3382:9;:38;;3374:70;;;;-1:-1:-1;;;3374:70:0;;5353:2:3;3374:70:0;;;5335:21:3;5392:2;5372:18;;;5365:30;-1:-1:-1;;;5411:18:3;;;5404:49;5470:18;;3374:70:0;5151:343:3;3374:70:0;3230:454;;;3521:60;;-1:-1:-1;;;3521:60:0;;3540:10;3521:60;;;5739:34:3;3560:4:0;5789:18:3;;;5782:43;5841:18;;;5834:34;;;3493:13:0;;-1:-1:-1;;;;;3521:18:0;;;;;5674::3;;3521:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;642:9;3603;:22;;3595:78;;;;-1:-1:-1;;;3595:78:0;;6363:2:3;3595:78:0;;;6345:21:3;6402:2;6382:18;;;6375:30;6441:34;6421:18;;;6414:62;-1:-1:-1;;;6492:18:3;;;6485:41;6543:19;;3595:78:0;6161:407:3;3595:78:0;3459:225;3230:454;3694:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3694:32:0;-1:-1:-1;;;;;3736:41:0;;;;;3787:39;;:24;;;:39;3836:19;;;:29;;;3875:16;;;:22;;;3932:12;3907:22;;;:37;3954:22;;;:35;;;4020:12;;;3999:18;;;:33;;;4020:12;3736:25;4043:14;4020:12;4043:14;:::i;:::-;;;;;;642:9;4087:17;;:29;;;;:::i;:::-;4067:17;:49;4161:24;;4127;;4154:32;;4161:24;;4172:12;;4161:24;;;:::i;:::-;;;;-1:-1:-1;;4161:24:0;;;;;;;;;;4154:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4205:19;:37;;;;;;;;;;;;:44;;-1:-1:-1;;4205:44:0;4245:4;4205:44;;;4265:25;4127:59;;-1:-1:-1;4265:25:0;;;;4277:12;;4265:25;:::i;:::-;;;;;;;;4316:16;2830:1509;-1:-1:-1;;;;;;;;2830:1509:0:o;6111:156::-;2402:10;;-1:-1:-1;;;;;2402:10:0;2388;:24;2380:76;;;;-1:-1:-1;;;2380:76:0;;8215:2:3;2380:76:0;;;8197:21:3;8254:2;8234:18;;;8227:30;8293:34;8273:18;;;8266:62;-1:-1:-1;;;8344:18:3;;;8337:37;8391:19;;2380:76:0;8013:403:3;2380:76:0;6190:10:::1;::::0;6211:17:::1;::::0;6182:47:::1;::::0;-1:-1:-1;;;;;6190:10:0;;::::1;::::0;6182:47;::::1;;;::::0;6211:17;6190:10:::1;6182:47:::0;6190:10;6182:47;6211:17;6190:10;6182:47;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6259:1:0::1;6239:17;:21:::0;6111:156::o;5905:200::-;-1:-1:-1;;;;;2098:10:0;:48;;:123;;;;-1:-1:-1;2194:27:0;;2162:28;;;-1:-1:-1;;;2162:28:0;;;;-1:-1:-1;;;;;2194:27:0;;;;2162:26;;;;;:28;;;;;;;;;;;;;;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2162:59:0;;2098:123;2077:154;;;;;;5997:36:::1;::::0;;;6036:4:::1;5997:36;::::0;;;;;;;;:43;;-1:-1:-1;;5997:43:0::1;::::0;;::::1;::::0;;;6055;;1203:25:3;;;6055:43:0::1;::::0;1176:18:3;6055:43:0::1;;;;;;;1979:270:::0;5905:200;:::o;4528:1205::-;4611:35;4649:49;4686:11;4649:36;:49::i;:::-;4716:44;;;;:15;:44;;;;;;4611:87;;-1:-1:-1;4716:44:0;;4708:82;;;;-1:-1:-1;;;4708:82:0;;8879:2:3;4708:82:0;;;8861:21:3;8918:2;8898:18;;;8891:30;8957:27;8937:18;;;8930:55;9002:18;;4708:82:0;8677:349:3;4708:82:0;4800:24;:54;;;4868:6;4864:859;4884:11;:18;4880:1;:22;4864:859;;;4926:19;:52;4946:11;4958:1;4946:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;4926:52;;;;;;;;;;4946:31;4926:52;;;;4923:790;;;4997:12;336:42;-1:-1:-1;;;;;5030:44:0;:11;5042:1;5030:14;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;5030:44:0;;5027:597;;5098:8;5120:11;5132:1;5120:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;5112:36:0;5156:11;5168:1;5156:14;;;;;;;;:::i;:::-;;;;;;;:28;;;5112:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5097:92:0;;-1:-1:-1;5027:597:0;;-1:-1:-1;;5027:597:0;;5269:11;5289;5301:1;5289:14;;;;;;;;:::i;:::-;;;;;;;:27;;;5269:48;;5351:5;-1:-1:-1;;;;;5351:18:0;;5378:4;5385:11;5397:1;5385:14;;;;;;;;:::i;:::-;;;;;;;:22;;;5433:11;5445:1;5433:14;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;5351:111;;-1:-1:-1;;;;;;5351:111:0;;;;;;;-1:-1:-1;;;;;5757:15:3;;;5351:111:0;;;5739:34:3;5809:15;;;;5789:18;;;5782:43;5841:18;;;5834:34;5674:18;;5351:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5341:121;;5486:8;5508:11;5520:1;5508:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;5500:36:0;642:9;5500:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5485:73;;;5591:7;:14;;;;;5602:3;5591:14;5581:24;;5247:377;;5027:597;5646:52;5657:11;5669:1;5657:14;;;;;;;;:::i;:::-;;;;;;;:31;;;5690:7;5646:52;;;;;;9541:25:3;;;9609:14;9602:22;9597:2;9582:18;;9575:50;9529:2;9514:18;;9373:258;5646:52:0;;;;;;;;4979:734;4923:790;4904:3;;;;:::i;:::-;;;;4864:859;;;;4601:1132;4528:1205;:::o;6319:420::-;6476:24;;6420:7;;;6510:179;6530:11;:18;6526:1;:22;6510:179;;;6616:62;6634:27;6662:11;6674:1;6662:14;;;;;;;;:::i;:::-;;;;;;;;;;;;6623:54;;;;;;9863:25:3;;;;9924:13;;9904:18;;;9897:41;9973:15;;;9967:22;-1:-1:-1;;;;;10063:21:3;;;10043:18;;;;10036:49;;;;10131:15;;;10125:22;10121:31;10101:18;;;10094:59;10196:15;10190:22;10169:19;;;10162:51;9835:19;;6623:54:0;;;-1:-1:-1;;6623:54:0;;;;;;;;;;6616:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6569:109;-1:-1:-1;6550:3:0;;;;:::i;:::-;;;;6510:179;;;-1:-1:-1;6705:27:0;6319:420;-1:-1:-1;;6319:420:0:o;14:180:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;391:131::-;-1:-1:-1;;;;;466:31:3;;456:42;;446:70;;512:1;509;502:12;446:70;391:131;:::o;527:525::-;613:6;621;629;637;690:3;678:9;669:7;665:23;661:33;658:53;;;707:1;704;697:12;658:53;746:9;733:23;765:31;790:5;765:31;:::i;:::-;815:5;-1:-1:-1;872:2:3;857:18;;844:32;885:33;844:32;885:33;:::i;:::-;527:525;;937:7;;-1:-1:-1;;;;991:2:3;976:18;;963:32;;1042:2;1027:18;1014:32;;527:525::o;1629:127::-;1690:10;1685:3;1681:20;1678:1;1671:31;1721:4;1718:1;1711:15;1745:4;1742:1;1735:15;1761:253;1833:2;1827:9;1875:4;1863:17;;1910:18;1895:34;;1931:22;;;1892:62;1889:88;;;1957:18;;:::i;:::-;1993:2;1986:22;1761:253;:::o;2019:275::-;2090:2;2084:9;2155:2;2136:13;;-1:-1:-1;;2132:27:3;2120:40;;2190:18;2175:34;;2211:22;;;2172:62;2169:88;;;2237:18;;:::i;:::-;2273:2;2266:22;2019:275;;-1:-1:-1;2019:275:3:o;2299:1574::-;2409:6;2440:2;2483;2471:9;2462:7;2458:23;2454:32;2451:52;;;2499:1;2496;2489:12;2451:52;2539:9;2526:23;2568:18;2609:2;2601:6;2598:14;2595:34;;;2625:1;2622;2615:12;2595:34;2663:6;2652:9;2648:22;2638:32;;2708:7;2701:4;2697:2;2693:13;2689:27;2679:55;;2730:1;2727;2720:12;2679:55;2766:2;2753:16;2788:2;2784;2781:10;2778:36;;;2794:18;;:::i;:::-;2834:36;2866:2;2861;2858:1;2854:10;2850:19;2834:36;:::i;:::-;2904:15;;;2935:12;;;;-1:-1:-1;2986:1:3;2982:10;;;;2974:19;;2970:28;;;3010:19;;;3007:39;;;3042:1;3039;3032:12;3007:39;3066:11;;;;3086:757;3102:6;3097:3;3094:15;3086:757;;;3184:4;3178:3;3169:7;3165:17;3161:28;3158:118;;;3230:1;3259:2;3255;3248:14;3158:118;3302:22;;:::i;:::-;3364:3;3351:17;3344:5;3337:32;3419:2;3414:3;3410:12;3397:26;3436:33;3461:7;3436:33;:::i;:::-;3489:14;;;3482:31;3536:2;3579:12;;;3566:26;3605:33;3566:26;3605:33;:::i;:::-;3658:14;;;3651:31;3705:2;3756:12;;;3743:26;3727:14;;;3720:50;3783:18;;3128:4;3119:14;;;;3821:12;;;;3086:757;;;3862:5;2299:1574;-1:-1:-1;;;;;;;2299:1574:3:o;3878:127::-;3939:10;3934:3;3930:20;3927:1;3920:31;3970:4;3967:1;3960:15;3994:4;3991:1;3984:15;4010:168;4050:7;4116:1;4112;4108:6;4104:14;4101:1;4098:21;4093:1;4086:9;4079:17;4075:45;4072:71;;;4123:18;;:::i;:::-;-1:-1:-1;4163:9:3;;4010:168::o;4183:128::-;4223:3;4254:1;4250:6;4247:1;4244:13;4241:39;;;4260:18;;:::i;:::-;-1:-1:-1;4296:9:3;;4183:128::o;5879:277::-;5946:6;5999:2;5987:9;5978:7;5974:23;5970:32;5967:52;;;6015:1;6012;6005:12;5967:52;6047:9;6041:16;6100:5;6093:13;6086:21;6079:5;6076:32;6066:60;;6122:1;6119;6112:12;6066:60;6145:5;5879:277;-1:-1:-1;;;5879:277:3:o;6573:135::-;6612:3;6633:17;;;6630:43;;6653:18;;:::i;:::-;-1:-1:-1;6700:1:3;6689:13;;6573:135::o;6713:675::-;6976:13;;-1:-1:-1;;;;;6972:22:3;;;6954:41;;7055:4;7043:17;;;7037:24;7033:33;;;7011:20;;;7004:63;7123:4;7111:17;;;7105:24;7083:20;;;7076:54;7186:4;7174:17;;;7168:24;7146:20;;;7139:54;7249:4;7237:17;;;7231:24;7209:20;;;7202:54;6934:3;7300:17;;;7294:24;7272:20;;;7265:54;7375:4;7363:17;;;7357:24;7335:20;;;7328:54;;;;6903:3;6888:19;;6713:675::o;7393:426::-;7522:3;7560:6;7554:13;7585:1;7595:129;7609:6;7606:1;7603:13;7595:129;;;7707:4;7691:14;;;7687:25;;7681:32;7668:11;;;7661:53;7624:12;7595:129;;;7742:6;7739:1;7736:13;7733:48;;;7777:1;7768:6;7763:3;7759:16;7752:27;7733:48;-1:-1:-1;7797:16:3;;;;;7393:426;-1:-1:-1;;7393:426:3:o;7824:184::-;7894:6;7947:2;7935:9;7926:7;7922:23;7918:32;7915:52;;;7963:1;7960;7953:12;7915:52;-1:-1:-1;7986:16:3;;7824:184;-1:-1:-1;7824:184:3:o;8421:251::-;8491:6;8544:2;8532:9;8523:7;8519:23;8515:32;8512:52;;;8560:1;8557;8550:12;8512:52;8592:9;8586:16;8611:31;8636:5;8611:31;:::i;9031:127::-;9092:10;9087:3;9083:20;9080:1;9073:31;9123:4;9120:1;9113:15;9147:4;9144:1;9137:15", "language": "Solidity", "natspec": {"author": "Sherif Abdelmoatty", "kind": "dev", "methods": {"addNewKnownHashOnion(bytes32)": {"notice": "this function is only called from the contract at the etherium L1through the rollup messenger contract to add a new known hash onion"}, "constructor": {"params": {"_l1DomainSideContractAddress": "is the address of the contract in etherium L1"}}, "processClaims((bytes32,address,address,uint256)[])": {"notice": "process the processClaims structs to be paid to the liquidity providers", "params": {"_rewardData": "is an array of RewardData structs to be paid to liquidity providers"}}, "transfer(address,address,uint256,uint256)": {"notice": "transfer the required funds plus fees to be sent to the current contract balance"}}, "notice": "This contract is to be deployed in the source rollup", "title": "SourceDomainSideBridge Contract", "version": 1}, "offset": [264, 6741], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A1294B7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x5A1294B7 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA9D72B02 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xBFD683B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xEF4481D1 EQ PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C05B6 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x411B252 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x13457D88 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23D1B06C EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x5181353D EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH6 0x2BA7DEF3000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x5F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x192 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x78C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x207 PUSH1 0x5 DUP6 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x218 DUP7 PUSH2 0x3E8 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x230 DUP6 PUSH2 0x3E8 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x23A DUP6 DUP5 PUSH2 0xDD3 JUMP JUMPDEST LT PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66656552616D707570206D6178696D756D20636F73742073686F756C64206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206C657373207468616E2074686520746F74616C20616D6F756E740000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x38B JUMPI PUSH8 0x16345785D8A0000 PUSH2 0x2D5 DUP7 PUSH2 0x3E8 PUSH2 0xDD3 JUMP JUMPDEST LT PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420686967686572207468616E206D6178696D756D207472616465 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x81B1A5B5A5D PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x341 PUSH6 0x2BA7DEF3000 DUP3 PUSH2 0xDF2 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27379029BAB33332B1B4B2B73A1032BA3432B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST POP PUSH6 0x2BA7DEF3000 CALLVALUE LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2053756666656369656E7420657468657220666F72207468652066697865 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6420657468657220666565 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A9 JUMP JUMPDEST POP JUMPDEST PUSH2 0x4C3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE NUMBER PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH1 0x0 PUSH2 0x509 DUP4 PUSH2 0xE33 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH6 0x2BA7DEF3000 PUSH1 0x6 SLOAD PUSH2 0x522 SWAP2 SWAP1 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x53C SWAP1 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x556 SWAP2 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89 SWAP1 PUSH2 0x5E2 SWAP1 DUP5 SWAP1 PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A20596F7520617265206E6F742074686520476F7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x726E6F72212121 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x69C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x21 PUSH1 0x99 SHL ADD CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x731 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6E296E45 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP5 AND SWAP2 PUSH4 0x6E296E45 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x702 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0xF92A8A7980EB38C3C210AD55B80880529BCCDBC8206E7CDB24D9F52C6A5171E8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x797 DUP3 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964652052657761726444617461206C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x81E JUMPI PUSH2 0x81E PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x860 JUMPI PUSH2 0x860 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x912 JUMPI PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x88E JUMPI PUSH2 0x88E PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8B5 JUMPI PUSH2 0x8B5 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x901 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x906 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP PUSH2 0xA85 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x926 JUMPI PUSH2 0x926 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x956 JUMPI PUSH2 0x956 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x974 JUMPI PUSH2 0x974 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA11 JUMPI PUSH2 0xA11 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH6 0x2BA7DEF3000 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xA80 JUMPI POP DUP1 JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH32 0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAB8 JUMPI PUSH2 0xAB8 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xADE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST DUP1 PUSH2 0xAF2 DUP2 PUSH2 0xE33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x800 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xBDC JUMPI PUSH1 0x2 DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB25 JUMPI PUSH2 0xB25 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 MLOAD DUP5 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP3 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xB88 SWAP2 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0xEDE JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xBD4 DUP2 PUSH2 0xE33 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB07 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xC35 DUP2 PUSH2 0xBFC JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xC45 DUP2 PUSH2 0xBFC JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC93 PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1B PUSH2 0xC5A JUMP JUMPDEST PUSH2 0xD29 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xC99 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x80 DUP5 DUP10 SUB SLT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD6F PUSH2 0xC70 JUMP JUMPDEST DUP5 CALLDATALOAD DUP2 MSTORE DUP6 DUP6 ADD CALLDATALOAD PUSH2 0xD80 DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP6 DUP2 ADD CALLDATALOAD PUSH2 0xD93 DUP2 PUSH2 0xBFC JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xD4E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xDED JUMPI PUSH2 0xDED PUSH2 0xDBD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE05 JUMPI PUSH2 0xE05 PUSH2 0xDBD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0xDBD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEC4 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xEAA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xED3 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE2C DUP2 PUSH2 0xBFC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x1F PUSH19 0x6F45E646EF6A840BB7F3781B757E0863B65F1F 0xDF SWAP7 DUP15 RETURNDATACOPY CALLDATASIZE 0xC9 PUSH12 0x47613564736F6C634300080D STOP CALLER ", "pcMap": {"0": {"offset": [264, 6741], "op": "PUSH1", "path": "0", "value": "0x80"}, "2": {"fn": null, "offset": [264, 6741], "op": "PUSH1", "path": "0", "value": "0x40"}, "4": {"fn": null, "offset": [264, 6741], "op": "MSTORE", "path": "0"}, "5": {"fn": null, "offset": [264, 6741], "op": "PUSH1", "path": "0", "value": "0x4"}, "7": {"fn": null, "offset": [264, 6741], "op": "CALLDATASIZE", "path": "0"}, "8": {"fn": null, "offset": [264, 6741], "op": "LT", "path": "0"}, "9": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x91"}, "12": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "13": {"fn": null, "offset": [264, 6741], "op": "PUSH1", "path": "0", "value": "0x0"}, "15": {"fn": null, "offset": [264, 6741], "op": "CALLDATALOAD", "path": "0"}, "16": {"fn": null, "offset": [264, 6741], "op": "PUSH1", "path": "0", "value": "0xE0"}, "18": {"fn": null, "offset": [264, 6741], "op": "SHR", "path": "0"}, "19": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "20": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0x5A1294B7"}, "25": {"fn": null, "offset": [264, 6741], "op": "GT", "path": "0"}, "26": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x59"}, "29": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "30": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "31": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0x5A1294B7"}, "36": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "37": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x142"}, "40": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "41": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "42": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0x5AA6E675"}, "47": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "48": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x172"}, "51": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "52": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "53": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0xA9D72B02"}, "58": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "59": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x1AA"}, "62": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "63": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "64": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0xBFD683B3"}, "69": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "70": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x1CA"}, "73": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "74": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "75": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0xEF4481D1"}, "80": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "81": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x1E6"}, "84": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "85": {"fn": null, "offset": [264, 6741], "op": "PUSH1", "path": "0", "value": "0x0"}, "87": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "88": {"fn": null, "offset": [264, 6741], "op": "REVERT", "path": "0"}, "89": {"fn": null, "offset": [264, 6741], "op": "JUMPDEST", "path": "0"}, "90": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "91": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0x40C05B6"}, "96": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "97": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x96"}, "100": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "101": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "102": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0x411B252"}, "107": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "108": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0xDB"}, "111": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "112": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "113": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0x13457D88"}, "118": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "119": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0xFC"}, "122": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "123": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "124": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0x23D1B06C"}, "129": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "130": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x111"}, "133": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "134": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "135": {"fn": null, "offset": [264, 6741], "op": "PUSH4", "path": "0", "value": "0x5181353D"}, "140": {"fn": null, "offset": [264, 6741], "op": "EQ", "path": "0"}, "141": {"fn": null, "offset": [264, 6741], "op": "PUSH2", "path": "0", "value": "0x12B"}, "144": {"fn": null, "offset": [264, 6741], "op": "JUMPI", "path": "0"}, "145": {"fn": null, "offset": [264, 6741], "op": "JUMPDEST", "path": "0"}, "146": {"fn": null, "offset": [264, 6741], "op": "PUSH1", "path": "0", "value": "0x0"}, "148": {"fn": null, "offset": [264, 6741], "op": "DUP1", "path": "0"}, "149": {"first_revert": true, "fn": null, "offset": [264, 6741], "op": "REVERT", "path": "0"}, "150": {"offset": [1322, 1373], "op": "JUMPDEST", "path": "0"}, "151": {"fn": null, "offset": [1322, 1373], "op": "CALLVALUE", "path": "0"}, "152": {"fn": null, "offset": [1322, 1373], "op": "DUP1", "path": "0"}, "153": {"fn": null, "offset": [1322, 1373], "op": "ISZERO", "path": "0"}, "154": {"fn": null, "offset": [1322, 1373], "op": "PUSH2", "path": "0", "value": "0xA2"}, "157": {"fn": null, "offset": [1322, 1373], "op": "JUMPI", "path": "0"}, "158": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "0", "value": "0x0"}, "160": {"fn": null, "offset": [1322, 1373], "op": "DUP1", "path": "0"}, "161": {"fn": null, "offset": [1322, 1373], "op": "REVERT", "path": "0"}, "162": {"fn": null, "offset": [1322, 1373], "op": "JUMPDEST", "path": "0"}, "163": {"op": "POP"}, "164": {"offset": [1322, 1373], "op": "PUSH2", "path": "0", "value": "0xC6"}, "167": {"fn": null, "offset": [1322, 1373], "op": "PUSH2", "path": "0", "value": "0xB1"}, "170": {"fn": null, "offset": [1322, 1373], "op": "CALLDATASIZE", "path": "0"}, "171": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "0", "value": "0x4"}, "173": {"fn": null, "offset": [1322, 1373], "op": "PUSH2", "path": "0", "value": "0xBE3"}, "176": {"fn": null, "jump": "i", "offset": [1322, 1373], "op": "JUMP", "path": "0"}, "177": {"fn": null, "offset": [1322, 1373], "op": "JUMPDEST", "path": "0"}, "178": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "0", "value": "0x0"}, "180": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "0", "value": "0x20"}, "182": {"fn": null, "offset": [1322, 1373], "op": "DUP2", "path": "0"}, "183": {"fn": null, "offset": [1322, 1373], "op": "SWAP1", "path": "0"}, "184": {"fn": null, "offset": [1322, 1373], "op": "MSTORE", "path": "0"}, "185": {"fn": null, "offset": [1322, 1373], "op": "SWAP1", "path": "0"}, "186": {"fn": null, "offset": [1322, 1373], "op": "DUP2", "path": "0"}, "187": {"fn": null, "offset": [1322, 1373], "op": "MSTORE", "path": "0"}, "188": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "0", "value": "0x40"}, "190": {"fn": null, "offset": [1322, 1373], "op": "SWAP1", "path": "0"}, "191": {"fn": null, "offset": [1322, 1373], "op": "KECCAK256", "path": "0"}, "192": {"fn": null, "offset": [1322, 1373], "op": "SLOAD", "path": "0"}, "193": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "0", "value": "0xFF"}, "195": {"fn": null, "offset": [1322, 1373], "op": "AND", "path": "0"}, "196": {"fn": null, "offset": [1322, 1373], "op": "DUP2", "path": "0"}, "197": {"fn": null, "offset": [1322, 1373], "op": "JUMP", "path": "0"}, "198": {"fn": null, "offset": [1322, 1373], "op": "JUMPDEST", "path": "0"}, "199": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "0", "value": "0x40"}, "201": {"fn": null, "offset": [1322, 1373], "op": "MLOAD", "path": "0"}, "202": {"op": "SWAP1"}, "203": {"op": "ISZERO"}, "204": {"op": "ISZERO"}, "205": {"op": "DUP2"}, "206": {"op": "MSTORE"}, "207": {"op": "PUSH1", "value": "0x20"}, "209": {"op": "ADD"}, "210": {"offset": [1322, 1373], "op": "JUMPDEST", "path": "0"}, "211": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "0", "value": "0x40"}, "213": {"fn": null, "offset": [1322, 1373], "op": "MLOAD", "path": "0"}, "214": {"fn": null, "offset": [1322, 1373], "op": "DUP1", "path": "0"}, "215": {"fn": null, "offset": [1322, 1373], "op": "SWAP2", "path": "0"}, "216": {"fn": null, "offset": [1322, 1373], "op": "SUB", "path": "0"}, "217": {"fn": null, "offset": [1322, 1373], "op": "SWAP1", "path": "0"}, "218": {"fn": null, "offset": [1322, 1373], "op": "RETURN", "path": "0"}, "219": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "JUMPDEST", "path": "0"}, "220": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "PUSH2", "path": "0", "value": "0xEE"}, "223": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "PUSH2", "path": "0", "value": "0xE9"}, "226": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "CALLDATASIZE", "path": "0"}, "227": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "PUSH1", "path": "0", "value": "0x4"}, "229": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "PUSH2", "path": "0", "value": "0xC14"}, "232": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2830, 4339], "op": "JUMP", "path": "0"}, "233": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "JUMPDEST", "path": "0"}, "234": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "PUSH2", "path": "0", "value": "0x1F9"}, "237": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2830, 4339], "op": "JUMP", "path": "0"}, "238": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "JUMPDEST", "path": "0"}, "239": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "PUSH1", "path": "0", "value": "0x40"}, "241": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "MLOAD", "path": "0"}, "242": {"op": "SWAP1"}, "243": {"op": "DUP2"}, "244": {"op": "MSTORE"}, "245": {"op": "PUSH1", "value": "0x20"}, "247": {"op": "ADD"}, "248": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "PUSH2", "path": "0", "value": "0xD2"}, "251": {"op": "JUMP"}, "252": {"offset": [534, 584], "op": "JUMPDEST", "path": "0"}, "253": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "CALLVALUE", "path": "0"}, "254": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "DUP1", "path": "0"}, "255": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "ISZERO", "path": "0"}, "256": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "PUSH2", "path": "0", "value": "0x108"}, "259": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "JUMPI", "path": "0"}, "260": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "PUSH1", "path": "0", "value": "0x0"}, "262": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "DUP1", "path": "0"}, "263": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "REVERT", "path": "0"}, "264": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "JUMPDEST", "path": "0"}, "265": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "POP", "path": "0"}, "266": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "PUSH2", "path": "0", "value": "0xEE"}, "269": {"offset": [583, 584], "op": "PUSH1", "path": "0", "value": "0x5"}, "271": {"offset": [534, 584], "op": "DUP2", "path": "0"}, "272": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "JUMP", "path": "0"}, "273": {"offset": [609, 651], "op": "JUMPDEST", "path": "0"}, "274": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "CALLVALUE", "path": "0"}, "275": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "DUP1", "path": "0"}, "276": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "ISZERO", "path": "0"}, "277": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "PUSH2", "path": "0", "value": "0x11D"}, "280": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "JUMPI", "path": "0"}, "281": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "PUSH1", "path": "0", "value": "0x0"}, "283": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "DUP1", "path": "0"}, "284": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "REVERT", "path": "0"}, "285": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "JUMPDEST", "path": "0"}, "286": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "POP", "path": "0"}, "287": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "PUSH2", "path": "0", "value": "0xEE"}, "290": {"offset": [642, 651], "op": "PUSH6", "path": "0", "value": "0x2BA7DEF3000"}, "297": {"offset": [609, 651], "op": "DUP2", "path": "0"}, "298": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "JUMP", "path": "0"}, "299": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "JUMPDEST", "path": "0"}, "300": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "CALLVALUE", "path": "0"}, "301": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "DUP1", "path": "0"}, "302": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "ISZERO", "path": "0"}, "303": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "PUSH2", "path": "0", "value": "0x137"}, "306": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "JUMPI", "path": "0"}, "307": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "PUSH1", "path": "0", "value": "0x0"}, "309": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "DUP1", "path": "0"}, "310": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "REVERT", "path": "0"}, "311": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "JUMPDEST", "path": "0"}, "312": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "POP", "path": "0"}, "313": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "PUSH2", "path": "0", "value": "0x140"}, "316": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "PUSH2", "path": "0", "value": "0x5F6"}, "319": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "i", "offset": [6111, 6267], "op": "JUMP", "path": "0"}, "320": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "JUMPDEST", "path": "0"}, "321": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "STOP", "path": "0"}, "322": {"offset": [1379, 1426], "op": "JUMPDEST", "path": "0"}, "323": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "CALLVALUE", "path": "0"}, "324": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "DUP1", "path": "0"}, "325": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "ISZERO", "path": "0"}, "326": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH2", "path": "0", "value": "0x14E"}, "329": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "JUMPI", "path": "0"}, "330": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "0", "value": "0x0"}, "332": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "DUP1", "path": "0"}, "333": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "REVERT", "path": "0"}, "334": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "JUMPDEST", "path": "0"}, "335": {"op": "POP"}, "336": {"offset": [1379, 1426], "op": "PUSH2", "path": "0", "value": "0xC6"}, "339": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH2", "path": "0", "value": "0x15D"}, "342": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "CALLDATASIZE", "path": "0"}, "343": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "0", "value": "0x4"}, "345": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH2", "path": "0", "value": "0xBE3"}, "348": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "i", "offset": [1379, 1426], "op": "JUMP", "path": "0"}, "349": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "JUMPDEST", "path": "0"}, "350": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "0", "value": "0x1"}, "352": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "0", "value": "0x20"}, "354": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "MSTORE", "path": "0"}, "355": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "0", "value": "0x0"}, "357": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "SWAP1", "path": "0"}, "358": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "DUP2", "path": "0"}, "359": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "MSTORE", "path": "0"}, "360": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "0", "value": "0x40"}, "362": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "SWAP1", "path": "0"}, "363": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "KECCAK256", "path": "0"}, "364": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "SLOAD", "path": "0"}, "365": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "0", "value": "0xFF"}, "367": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "AND", "path": "0"}, "368": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "DUP2", "path": "0"}, "369": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "JUMP", "path": "0"}, "370": {"offset": [1599, 1624], "op": "JUMPDEST", "path": "0"}, "371": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "CALLVALUE", "path": "0"}, "372": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "DUP1", "path": "0"}, "373": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "ISZERO", "path": "0"}, "374": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "PUSH2", "path": "0", "value": "0x17E"}, "377": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "JUMPI", "path": "0"}, "378": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "PUSH1", "path": "0", "value": "0x0"}, "380": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "DUP1", "path": "0"}, "381": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "REVERT", "path": "0"}, "382": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "JUMPDEST", "path": "0"}, "383": {"op": "POP"}, "384": {"offset": [1599, 1624], "op": "PUSH1", "path": "0", "value": "0x5"}, "386": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "SLOAD", "path": "0"}, "387": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "PUSH2", "path": "0", "value": "0x192"}, "390": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "SWAP1", "path": "0"}, "391": {"op": "PUSH1", "value": "0x1"}, "393": {"op": "PUSH1", "value": "0x1"}, "395": {"op": "PUSH1", "value": "0xA0"}, "397": {"op": "SHL"}, "398": {"op": "SUB"}, "399": {"offset": [1599, 1624], "op": "AND", "path": "0"}, "400": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "DUP2", "path": "0"}, "401": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "JUMP", "path": "0"}, "402": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "JUMPDEST", "path": "0"}, "403": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "PUSH1", "path": "0", "value": "0x40"}, "405": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "MLOAD", "path": "0"}, "406": {"op": "PUSH1", "value": "0x1"}, "408": {"op": "PUSH1", "value": "0x1"}, "410": {"op": "PUSH1", "value": "0xA0"}, "412": {"op": "SHL"}, "413": {"op": "SUB"}, "414": {"op": "SWAP1"}, "415": {"op": "SWAP2"}, "416": {"op": "AND"}, "417": {"op": "DUP2"}, "418": {"op": "MSTORE"}, "419": {"op": "PUSH1", "value": "0x20"}, "421": {"op": "ADD"}, "422": {"offset": [1599, 1624], "op": "PUSH2", "path": "0", "value": "0xD2"}, "425": {"op": "JUMP"}, "426": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "JUMPDEST", "path": "0"}, "427": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "CALLVALUE", "path": "0"}, "428": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "DUP1", "path": "0"}, "429": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "ISZERO", "path": "0"}, "430": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "PUSH2", "path": "0", "value": "0x1B6"}, "433": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "JUMPI", "path": "0"}, "434": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "PUSH1", "path": "0", "value": "0x0"}, "436": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "DUP1", "path": "0"}, "437": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "REVERT", "path": "0"}, "438": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "JUMPDEST", "path": "0"}, "439": {"op": "POP"}, "440": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "PUSH2", "path": "0", "value": "0x140"}, "443": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "PUSH2", "path": "0", "value": "0x1C5"}, "446": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "CALLDATASIZE", "path": "0"}, "447": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "PUSH1", "path": "0", "value": "0x4"}, "449": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "PUSH2", "path": "0", "value": "0xBE3"}, "452": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5905, 6105], "op": "JUMP", "path": "0"}, "453": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "JUMPDEST", "path": "0"}, "454": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "PUSH2", "path": "0", "value": "0x6A4"}, "457": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5905, 6105], "op": "JUMP", "path": "0"}, "458": {"offset": [792, 840], "op": "JUMPDEST", "path": "0"}, "459": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "CALLVALUE", "path": "0"}, "460": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "DUP1", "path": "0"}, "461": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "ISZERO", "path": "0"}, "462": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "PUSH2", "path": "0", "value": "0x1D6"}, "465": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "JUMPI", "path": "0"}, "466": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "PUSH1", "path": "0", "value": "0x0"}, "468": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "DUP1", "path": "0"}, "469": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "REVERT", "path": "0"}, "470": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "JUMPDEST", "path": "0"}, "471": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "POP", "path": "0"}, "472": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "PUSH2", "path": "0", "value": "0xEE"}, "475": {"offset": [831, 840], "op": "PUSH8", "path": "0", "value": "0x16345785D8A0000"}, "484": {"offset": [792, 840], "op": "DUP2", "path": "0"}, "485": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "JUMP", "path": "0"}, "486": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "JUMPDEST", "path": "0"}, "487": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "PUSH2", "path": "0", "value": "0x140"}, "490": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "PUSH2", "path": "0", "value": "0x1F4"}, "493": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "CALLDATASIZE", "path": "0"}, "494": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "PUSH1", "path": "0", "value": "0x4"}, "496": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "PUSH2", "path": "0", "value": "0xCCA"}, "499": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4528, 5733], "op": "JUMP", "path": "0"}, "500": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "JUMPDEST", "path": "0"}, "501": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "PUSH2", "path": "0", "value": "0x78C"}, "504": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4528, 5733], "op": "JUMP", "path": "0"}, "505": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "JUMPDEST", "path": "0"}, "506": {"fn": "SourceDomainSideBridge.transfer", "offset": [2965, 2972], "op": "PUSH1", "path": "0", "value": "0x0"}, "508": {"fn": "SourceDomainSideBridge.transfer", "offset": [2965, 2972], "op": "DUP1", "path": "0"}, "509": {"fn": "SourceDomainSideBridge.transfer", "offset": [3006, 3041], "op": "PUSH2", "path": "0", "value": "0x207"}, "512": {"offset": [583, 584], "op": "PUSH1", "path": "0", "value": "0x5"}, "514": {"fn": "SourceDomainSideBridge.transfer", "offset": [3006, 3013], "op": "DUP6", "path": "0"}, "515": {"fn": "SourceDomainSideBridge.transfer", "offset": [3006, 3041], "op": "PUSH2", "path": "0", "value": "0xDD3"}, "518": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3006, 3041], "op": "JUMP", "path": "0"}, "519": {"fn": "SourceDomainSideBridge.transfer", "offset": [3006, 3041], "op": "JUMPDEST", "path": "0"}, "520": {"fn": "SourceDomainSideBridge.transfer", "offset": [2992, 3041], "op": "SWAP1", "path": "0"}, "521": {"op": "POP"}, "522": {"fn": "SourceDomainSideBridge.transfer", "offset": [3051, 3072], "op": "PUSH1", "path": "0", "value": "0x0"}, "524": {"fn": "SourceDomainSideBridge.transfer", "offset": [2992, 3041], "op": "DUP2", "path": "0"}, "525": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3089], "op": "PUSH2", "path": "0", "value": "0x218"}, "528": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3082], "op": "DUP7", "path": "0"}, "529": {"fn": "SourceDomainSideBridge.transfer", "offset": [3085, 3089], "op": "PUSH2", "path": "0", "value": "0x3E8"}, "532": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3089], "op": "PUSH2", "path": "0", "value": "0xDD3"}, "535": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3075, 3089], "op": "JUMP", "path": "0"}, "536": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3089], "op": "JUMPDEST", "path": "0"}, "537": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3095], "op": "PUSH2", "path": "0", "value": "0x222"}, "540": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3095], "op": "SWAP2", "path": "0"}, "541": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3095], "op": "SWAP1", "path": "0"}, "542": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3095], "op": "PUSH2", "path": "0", "value": "0xDF2"}, "545": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3075, 3095], "op": "JUMP", "path": "0"}, "546": {"fn": "SourceDomainSideBridge.transfer", "offset": [3075, 3095], "op": "JUMPDEST", "path": "0"}, "547": {"fn": "SourceDomainSideBridge.transfer", "offset": [3051, 3095], "op": "SWAP1", "path": "0"}, "548": {"op": "POP"}, "549": {"fn": "SourceDomainSideBridge.transfer", "offset": [3141, 3155], "op": "PUSH2", "path": "0", "statement": 0, "value": "0x230"}, "552": {"fn": "SourceDomainSideBridge.transfer", "offset": [3141, 3148], "op": "DUP6", "path": "0"}, "553": {"fn": "SourceDomainSideBridge.transfer", "offset": [3151, 3155], "op": "PUSH2", "path": "0", "value": "0x3E8"}, "556": {"fn": "SourceDomainSideBridge.transfer", "offset": [3141, 3155], "op": "PUSH2", "path": "0", "value": "0xDD3"}, "559": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3141, 3155], "op": "JUMP", "path": "0"}, "560": {"fn": "SourceDomainSideBridge.transfer", "offset": [3141, 3155], "op": "JUMPDEST", "path": "0"}, "561": {"fn": "SourceDomainSideBridge.transfer", "offset": [3122, 3138], "op": "PUSH2", "path": "0", "value": "0x23A"}, "564": {"fn": "SourceDomainSideBridge.transfer", "offset": [3128, 3138], "op": "DUP6", "path": "0"}, "565": {"fn": "SourceDomainSideBridge.transfer", "offset": [3122, 3125], "op": "DUP5", "path": "0"}, "566": {"fn": "SourceDomainSideBridge.transfer", "offset": [3122, 3138], "op": "PUSH2", "path": "0", "value": "0xDD3"}, "569": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3122, 3138], "op": "JUMP", "path": "0"}, "570": {"fn": "SourceDomainSideBridge.transfer", "offset": [3122, 3138], "op": "JUMPDEST", "path": "0"}, "571": {"branch": 30, "fn": "SourceDomainSideBridge.transfer", "offset": [3122, 3155], "op": "LT", "path": "0"}, "572": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "PUSH2", "path": "0", "value": "0x2B2"}, "575": {"branch": 30, "fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "JUMPI", "path": "0"}, "576": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "PUSH1", "path": "0", "value": "0x40"}, "578": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "MLOAD", "path": "0"}, "579": {"op": "PUSH3", "value": "0x461BCD"}, "583": {"op": "PUSH1", "value": "0xE5"}, "585": {"op": "SHL"}, "586": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "DUP2", "path": "0"}, "587": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "MSTORE", "path": "0"}, "588": {"op": "PUSH1", "value": "0x20"}, "590": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "PUSH1", "path": "0", "value": "0x4"}, "592": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "DUP3", "path": "0"}, "593": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "ADD", "path": "0"}, "594": {"op": "MSTORE"}, "595": {"op": "PUSH1", "value": "0x3B"}, "597": {"op": "PUSH1", "value": "0x24"}, "599": {"op": "DUP3"}, "600": {"op": "ADD"}, "601": {"op": "MSTORE"}, "602": {"op": "PUSH32", "value": "0x66656552616D707570206D6178696D756D20636F73742073686F756C64206265"}, "635": {"op": "PUSH1", "value": "0x44"}, "637": {"op": "DUP3"}, "638": {"op": "ADD"}, "639": {"op": "MSTORE"}, "640": {"op": "PUSH32", "value": "0x206C657373207468616E2074686520746F74616C20616D6F756E740000000000"}, "673": {"op": "PUSH1", "value": "0x64"}, "675": {"op": "DUP3"}, "676": {"op": "ADD"}, "677": {"op": "MSTORE"}, "678": {"op": "PUSH1", "value": "0x84"}, "680": {"op": "ADD"}, "681": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "JUMPDEST", "path": "0"}, "682": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "PUSH1", "path": "0", "value": "0x40"}, "684": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "MLOAD", "path": "0"}, "685": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "DUP1", "path": "0"}, "686": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "SWAP2", "path": "0"}, "687": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "SUB", "path": "0"}, "688": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "SWAP1", "path": "0"}, "689": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "REVERT", "optimizer_revert": true, "path": "0"}, "690": {"fn": "SourceDomainSideBridge.transfer", "offset": [3114, 3219], "op": "JUMPDEST", "path": "0"}, "691": {"op": "PUSH1", "value": "0x1"}, "693": {"op": "PUSH1", "value": "0x1"}, "695": {"op": "PUSH1", "value": "0xA0"}, "697": {"op": "SHL"}, "698": {"op": "SUB"}, "699": {"fn": "SourceDomainSideBridge.transfer", "offset": [3233, 3263], "op": "DUP8", "path": "0"}, "700": {"branch": 31, "fn": "SourceDomainSideBridge.transfer", "offset": [3233, 3263], "op": "AND", "path": "0"}, "701": {"fn": "SourceDomainSideBridge.transfer", "offset": [3230, 3684], "op": "PUSH2", "path": "0", "value": "0x38B"}, "704": {"branch": 31, "fn": "SourceDomainSideBridge.transfer", "offset": [3230, 3684], "op": "JUMPI", "path": "0"}, "705": {"offset": [831, 840], "op": "PUSH8", "path": "0", "value": "0x16345785D8A0000"}, "714": {"fn": "SourceDomainSideBridge.transfer", "offset": [3286, 3299], "op": "PUSH2", "path": "0", "statement": 1, "value": "0x2D5"}, "717": {"fn": "SourceDomainSideBridge.transfer", "offset": [3286, 3293], "op": "DUP7", "path": "0"}, "718": {"fn": "SourceDomainSideBridge.transfer", "offset": [3295, 3299], "op": "PUSH2", "path": "0", "value": "0x3E8"}, "721": {"fn": "SourceDomainSideBridge.transfer", "offset": [3286, 3299], "op": "PUSH2", "path": "0", "value": "0xDD3"}, "724": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3286, 3299], "op": "JUMP", "path": "0"}, "725": {"fn": "SourceDomainSideBridge.transfer", "offset": [3286, 3299], "op": "JUMPDEST", "path": "0"}, "726": {"branch": 32, "fn": "SourceDomainSideBridge.transfer", "offset": [3286, 3317], "op": "LT", "path": "0"}, "727": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "PUSH2", "path": "0", "value": "0x331"}, "730": {"branch": 32, "fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "JUMPI", "path": "0"}, "731": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "PUSH1", "path": "0", "value": "0x40"}, "733": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "MLOAD", "path": "0"}, "734": {"op": "PUSH3", "value": "0x461BCD"}, "738": {"op": "PUSH1", "value": "0xE5"}, "740": {"op": "SHL"}, "741": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "DUP2", "path": "0"}, "742": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "MSTORE", "path": "0"}, "743": {"op": "PUSH1", "value": "0x20"}, "745": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "PUSH1", "path": "0", "value": "0x4"}, "747": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "DUP3", "path": "0"}, "748": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "ADD", "path": "0"}, "749": {"op": "MSTORE"}, "750": {"op": "PUSH1", "value": "0x26"}, "752": {"op": "PUSH1", "value": "0x24"}, "754": {"op": "DUP3"}, "755": {"op": "ADD"}, "756": {"op": "MSTORE"}, "757": {"op": "PUSH32", "value": "0x416D6F756E7420686967686572207468616E206D6178696D756D207472616465"}, "790": {"op": "PUSH1", "value": "0x44"}, "792": {"op": "DUP3"}, "793": {"op": "ADD"}, "794": {"op": "MSTORE"}, "795": {"op": "PUSH6", "value": "0x81B1A5B5A5D"}, "802": {"op": "PUSH1", "value": "0xD2"}, "804": {"op": "SHL"}, "805": {"op": "PUSH1", "value": "0x64"}, "807": {"op": "DUP3"}, "808": {"op": "ADD"}, "809": {"op": "MSTORE"}, "810": {"op": "PUSH1", "value": "0x84"}, "812": {"op": "ADD"}, "813": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "816": {"op": "JUMP"}, "817": {"fn": "SourceDomainSideBridge.transfer", "offset": [3278, 3360], "op": "JUMPDEST", "path": "0"}, "818": {"fn": "SourceDomainSideBridge.transfer", "offset": [3395, 3420], "op": "PUSH2", "path": "0", "statement": 2, "value": "0x341"}, "821": {"offset": [642, 651], "op": "PUSH6", "path": "0", "value": "0x2BA7DEF3000"}, "828": {"fn": "SourceDomainSideBridge.transfer", "offset": [3395, 3408], "op": "DUP3", "path": "0"}, "829": {"fn": "SourceDomainSideBridge.transfer", "offset": [3395, 3420], "op": "PUSH2", "path": "0", "value": "0xDF2"}, "832": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3395, 3420], "op": "JUMP", "path": "0"}, "833": {"fn": "SourceDomainSideBridge.transfer", "offset": [3395, 3420], "op": "JUMPDEST", "path": "0"}, "834": {"fn": "SourceDomainSideBridge.transfer", "offset": [3382, 3391], "op": "CALLVALUE", "path": "0"}, "835": {"fn": "SourceDomainSideBridge.transfer", "offset": [3382, 3420], "op": "LT", "path": "0"}, "836": {"branch": 33, "fn": "SourceDomainSideBridge.transfer", "offset": [3382, 3420], "op": "ISZERO", "path": "0"}, "837": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "PUSH2", "path": "0", "value": "0x386"}, "840": {"branch": 33, "fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "JUMPI", "path": "0"}, "841": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "PUSH1", "path": "0", "value": "0x40"}, "843": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "MLOAD", "path": "0"}, "844": {"op": "PUSH3", "value": "0x461BCD"}, "848": {"op": "PUSH1", "value": "0xE5"}, "850": {"op": "SHL"}, "851": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "DUP2", "path": "0"}, "852": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "MSTORE", "path": "0"}, "853": {"op": "PUSH1", "value": "0x20"}, "855": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "PUSH1", "path": "0", "value": "0x4"}, "857": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "DUP3", "path": "0"}, "858": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "ADD", "path": "0"}, "859": {"op": "MSTORE"}, "860": {"op": "PUSH1", "value": "0x13"}, "862": {"op": "PUSH1", "value": "0x24"}, "864": {"op": "DUP3"}, "865": {"op": "ADD"}, "866": {"op": "MSTORE"}, "867": {"op": "PUSH19", "value": "0x27379029BAB33332B1B4B2B73A1032BA3432B9"}, "887": {"op": "PUSH1", "value": "0x69"}, "889": {"op": "SHL"}, "890": {"op": "PUSH1", "value": "0x44"}, "892": {"op": "DUP3"}, "893": {"op": "ADD"}, "894": {"op": "MSTORE"}, "895": {"op": "PUSH1", "value": "0x64"}, "897": {"op": "ADD"}, "898": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "901": {"op": "JUMP"}, "902": {"fn": "SourceDomainSideBridge.transfer", "offset": [3374, 3444], "op": "JUMPDEST", "path": "0"}, "903": {"fn": "SourceDomainSideBridge.transfer", "offset": [3230, 3684], "op": "PUSH2", "path": "0", "value": "0x471"}, "906": {"fn": "SourceDomainSideBridge.transfer", "offset": [3230, 3684], "op": "JUMP", "path": "0"}, "907": {"fn": "SourceDomainSideBridge.transfer", "offset": [3230, 3684], "op": "JUMPDEST", "path": "0"}, "908": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "statement": 3, "value": "0x40"}, "910": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "MLOAD", "path": "0"}, "911": {"op": "PUSH4", "value": "0x23B872DD"}, "916": {"op": "PUSH1", "value": "0xE0"}, "918": {"op": "SHL"}, "919": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP2", "path": "0"}, "920": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "MSTORE", "path": "0"}, "921": {"fn": "SourceDomainSideBridge.transfer", "offset": [3540, 3550], "op": "CALLER", "path": "0"}, "922": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x4"}, "924": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP3", "path": "0"}, "925": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "ADD", "path": "0"}, "926": {"op": "MSTORE"}, "927": {"fn": "SourceDomainSideBridge.transfer", "offset": [3560, 3564], "op": "ADDRESS", "path": "0"}, "928": {"op": "PUSH1", "value": "0x24"}, "930": {"op": "DUP3"}, "931": {"op": "ADD"}, "932": {"op": "MSTORE"}, "933": {"op": "PUSH1", "value": "0x44"}, "935": {"op": "DUP2"}, "936": {"op": "ADD"}, "937": {"op": "DUP3"}, "938": {"op": "SWAP1"}, "939": {"op": "MSTORE"}, "940": {"fn": "SourceDomainSideBridge.transfer", "offset": [3493, 3506], "op": "DUP8", "path": "0"}, "941": {"fn": "SourceDomainSideBridge.transfer", "offset": [3493, 3506], "op": "SWAP1", "path": "0"}, "942": {"op": "PUSH1", "value": "0x1"}, "944": {"op": "PUSH1", "value": "0x1"}, "946": {"op": "PUSH1", "value": "0xA0"}, "948": {"op": "SHL"}, "949": {"op": "SUB"}, "950": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3539], "op": "DUP3", "path": "0"}, "951": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3539], "op": "AND", "path": "0"}, "952": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3539], "op": "SWAP1", "path": "0"}, "953": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3539], "op": "PUSH4", "path": "0", "value": "0x23B872DD"}, "958": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3539], "op": "SWAP1", "path": "0"}, "959": {"op": "PUSH1", "value": "0x64"}, "961": {"op": "ADD"}, "962": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x20"}, "964": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x40"}, "966": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "MLOAD", "path": "0"}, "967": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP1", "path": "0"}, "968": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP4", "path": "0"}, "969": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "SUB", "path": "0"}, "970": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP2", "path": "0"}, "971": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x0"}, "973": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP8", "path": "0"}, "974": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "GAS", "path": "0"}, "975": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "CALL", "path": "0"}, "976": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "ISZERO", "path": "0"}, "977": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP1", "path": "0"}, "978": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "ISZERO", "path": "0"}, "979": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH2", "path": "0", "value": "0x3E0"}, "982": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "JUMPI", "path": "0"}, "983": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "RETURNDATASIZE", "path": "0"}, "984": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x0"}, "986": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP1", "path": "0"}, "987": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "RETURNDATACOPY", "path": "0"}, "988": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "RETURNDATASIZE", "path": "0"}, "989": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x0"}, "991": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "REVERT", "path": "0"}, "992": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "JUMPDEST", "path": "0"}, "993": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "POP", "path": "0"}, "994": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "POP", "path": "0"}, "995": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "POP", "path": "0"}, "996": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "POP", "path": "0"}, "997": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x40"}, "999": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "MLOAD", "path": "0"}, "1000": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "RETURNDATASIZE", "path": "0"}, "1001": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1003": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "NOT", "path": "0"}, "1004": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1006": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP3", "path": "0"}, "1007": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "ADD", "path": "0"}, "1008": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "AND", "path": "0"}, "1009": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP3", "path": "0"}, "1010": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "ADD", "path": "0"}, "1011": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP1", "path": "0"}, "1012": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH1", "path": "0", "value": "0x40"}, "1014": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "MSTORE", "path": "0"}, "1015": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "POP", "path": "0"}, "1016": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "DUP2", "path": "0"}, "1017": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "ADD", "path": "0"}, "1018": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "SWAP1", "path": "0"}, "1019": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH2", "path": "0", "value": "0x404"}, "1022": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "SWAP2", "path": "0"}, "1023": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "SWAP1", "path": "0"}, "1024": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "PUSH2", "path": "0", "value": "0xE0A"}, "1027": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3521, 3581], "op": "JUMP", "path": "0"}, "1028": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "JUMPDEST", "path": "0"}, "1029": {"fn": "SourceDomainSideBridge.transfer", "offset": [3521, 3581], "op": "POP", "path": "0"}, "1030": {"offset": [642, 651], "op": "PUSH6", "path": "0", "value": "0x2BA7DEF3000"}, "1037": {"fn": "SourceDomainSideBridge.transfer", "offset": [3603, 3612], "op": "CALLVALUE", "path": "0", "statement": 4}, "1038": {"fn": "SourceDomainSideBridge.transfer", "offset": [3603, 3625], "op": "LT", "path": "0"}, "1039": {"branch": 34, "fn": "SourceDomainSideBridge.transfer", "offset": [3603, 3625], "op": "ISZERO", "path": "0"}, "1040": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "PUSH2", "path": "0", "value": "0x46F"}, "1043": {"branch": 34, "fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "JUMPI", "path": "0"}, "1044": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "PUSH1", "path": "0", "value": "0x40"}, "1046": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "MLOAD", "path": "0"}, "1047": {"op": "PUSH3", "value": "0x461BCD"}, "1051": {"op": "PUSH1", "value": "0xE5"}, "1053": {"op": "SHL"}, "1054": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "DUP2", "path": "0"}, "1055": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "MSTORE", "path": "0"}, "1056": {"op": "PUSH1", "value": "0x20"}, "1058": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "PUSH1", "path": "0", "value": "0x4"}, "1060": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "DUP3", "path": "0"}, "1061": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "ADD", "path": "0"}, "1062": {"op": "MSTORE"}, "1063": {"op": "PUSH1", "value": "0x2B"}, "1065": {"op": "PUSH1", "value": "0x24"}, "1067": {"op": "DUP3"}, "1068": {"op": "ADD"}, "1069": {"op": "MSTORE"}, "1070": {"op": "PUSH32", "value": "0x4E6F2053756666656369656E7420657468657220666F72207468652066697865"}, "1103": {"op": "PUSH1", "value": "0x44"}, "1105": {"op": "DUP3"}, "1106": {"op": "ADD"}, "1107": {"op": "MSTORE"}, "1108": {"op": "PUSH11", "value": "0x6420657468657220666565"}, "1120": {"op": "PUSH1", "value": "0xA8"}, "1122": {"op": "SHL"}, "1123": {"op": "PUSH1", "value": "0x64"}, "1125": {"op": "DUP3"}, "1126": {"op": "ADD"}, "1127": {"op": "MSTORE"}, "1128": {"op": "PUSH1", "value": "0x84"}, "1130": {"op": "ADD"}, "1131": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "1134": {"op": "JUMP"}, "1135": {"fn": "SourceDomainSideBridge.transfer", "offset": [3595, 3673], "op": "JUMPDEST", "path": "0"}, "1136": {"fn": "SourceDomainSideBridge.transfer", "offset": [3459, 3684], "op": "POP", "path": "0"}, "1137": {"fn": "SourceDomainSideBridge.transfer", "offset": [3230, 3684], "op": "JUMPDEST", "path": "0"}, "1138": {"fn": "SourceDomainSideBridge.transfer", "offset": [3694, 3726], "op": "PUSH2", "path": "0", "value": "0x4C3"}, "1141": {"op": "PUSH1", "value": "0x40"}, "1143": {"op": "MLOAD"}, "1144": {"op": "DUP1"}, "1145": {"op": "PUSH1", "value": "0xE0"}, "1147": {"op": "ADD"}, "1148": {"op": "PUSH1", "value": "0x40"}, "1150": {"op": "MSTORE"}, "1151": {"op": "DUP1"}, "1152": {"op": "PUSH1", "value": "0x0"}, "1154": {"op": "PUSH1", "value": "0x1"}, "1156": {"op": "PUSH1", "value": "0x1"}, "1158": {"op": "PUSH1", "value": "0xA0"}, "1160": {"op": "SHL"}, "1161": {"op": "SUB"}, "1162": {"op": "AND"}, "1163": {"op": "DUP2"}, "1164": {"op": "MSTORE"}, "1165": {"op": "PUSH1", "value": "0x20"}, "1167": {"op": "ADD"}, "1168": {"op": "PUSH1", "value": "0x0"}, "1170": {"op": "PUSH1", "value": "0x1"}, "1172": {"op": "PUSH1", "value": "0x1"}, "1174": {"op": "PUSH1", "value": "0xA0"}, "1176": {"op": "SHL"}, "1177": {"op": "SUB"}, "1178": {"op": "AND"}, "1179": {"op": "DUP2"}, "1180": {"op": "MSTORE"}, "1181": {"op": "PUSH1", "value": "0x20"}, "1183": {"op": "ADD"}, "1184": {"op": "PUSH1", "value": "0x0"}, "1186": {"op": "DUP2"}, "1187": {"op": "MSTORE"}, "1188": {"op": "PUSH1", "value": "0x20"}, "1190": {"op": "ADD"}, "1191": {"op": "PUSH1", "value": "0x0"}, "1193": {"op": "DUP2"}, "1194": {"op": "MSTORE"}, "1195": {"op": "PUSH1", "value": "0x20"}, "1197": {"op": "ADD"}, "1198": {"op": "PUSH1", "value": "0x0"}, "1200": {"op": "DUP2"}, "1201": {"op": "MSTORE"}, "1202": {"op": "PUSH1", "value": "0x20"}, "1204": {"op": "ADD"}, "1205": {"op": "PUSH1", "value": "0x0"}, "1207": {"op": "DUP2"}, "1208": {"op": "MSTORE"}, "1209": {"op": "PUSH1", "value": "0x20"}, "1211": {"op": "ADD"}, "1212": {"op": "PUSH1", "value": "0x0"}, "1214": {"op": "DUP2"}, "1215": {"op": "MSTORE"}, "1216": {"op": "POP"}, "1217": {"op": "SWAP1"}, "1218": {"op": "JUMP"}, "1219": {"fn": "SourceDomainSideBridge.transfer", "offset": [3694, 3726], "op": "JUMPDEST", "path": "0"}, "1220": {"op": "PUSH1", "value": "0x1"}, "1222": {"op": "PUSH1", "value": "0x1"}, "1224": {"op": "PUSH1", "value": "0xA0"}, "1226": {"op": "SHL"}, "1227": {"op": "SUB"}, "1228": {"fn": "SourceDomainSideBridge.transfer", "offset": [3736, 3777], "op": "DUP1", "path": "0", "statement": 5}, "1229": {"fn": "SourceDomainSideBridge.transfer", "offset": [3736, 3777], "op": "DUP10", "path": "0"}, "1230": {"fn": "SourceDomainSideBridge.transfer", "offset": [3736, 3777], "op": "AND", "path": "0"}, "1231": {"fn": "SourceDomainSideBridge.transfer", "offset": [3736, 3777], "op": "DUP3", "path": "0"}, "1232": {"fn": "SourceDomainSideBridge.transfer", "offset": [3736, 3777], "op": "MSTORE", "path": "0"}, "1233": {"fn": "SourceDomainSideBridge.transfer", "offset": [3787, 3826], "op": "DUP8", "path": "0", "statement": 6}, "1234": {"fn": "SourceDomainSideBridge.transfer", "offset": [3787, 3826], "op": "AND", "path": "0"}, "1235": {"fn": "SourceDomainSideBridge.transfer", "offset": [3787, 3811], "op": "PUSH1", "path": "0", "value": "0x20"}, "1237": {"fn": "SourceDomainSideBridge.transfer", "offset": [3787, 3811], "op": "DUP3", "path": "0"}, "1238": {"fn": "SourceDomainSideBridge.transfer", "offset": [3787, 3811], "op": "ADD", "path": "0"}, "1239": {"fn": "SourceDomainSideBridge.transfer", "offset": [3787, 3826], "op": "MSTORE", "path": "0"}, "1240": {"fn": "SourceDomainSideBridge.transfer", "offset": [3836, 3855], "op": "PUSH1", "path": "0", "statement": 7, "value": "0x40"}, "1242": {"fn": "SourceDomainSideBridge.transfer", "offset": [3836, 3855], "op": "DUP2", "path": "0"}, "1243": {"fn": "SourceDomainSideBridge.transfer", "offset": [3836, 3855], "op": "ADD", "path": "0"}, "1244": {"fn": "SourceDomainSideBridge.transfer", "offset": [3836, 3865], "op": "DUP7", "path": "0"}, "1245": {"fn": "SourceDomainSideBridge.transfer", "offset": [3836, 3865], "op": "SWAP1", "path": "0"}, "1246": {"fn": "SourceDomainSideBridge.transfer", "offset": [3836, 3865], "op": "MSTORE", "path": "0"}, "1247": {"fn": "SourceDomainSideBridge.transfer", "offset": [3875, 3891], "op": "PUSH1", "path": "0", "statement": 8, "value": "0x60"}, "1249": {"fn": "SourceDomainSideBridge.transfer", "offset": [3875, 3891], "op": "DUP2", "path": "0"}, "1250": {"fn": "SourceDomainSideBridge.transfer", "offset": [3875, 3891], "op": "ADD", "path": "0"}, "1251": {"fn": "SourceDomainSideBridge.transfer", "offset": [3875, 3897], "op": "DUP4", "path": "0"}, "1252": {"fn": "SourceDomainSideBridge.transfer", "offset": [3875, 3897], "op": "SWAP1", "path": "0"}, "1253": {"fn": "SourceDomainSideBridge.transfer", "offset": [3875, 3897], "op": "MSTORE", "path": "0"}, "1254": {"fn": "SourceDomainSideBridge.transfer", "offset": [3932, 3944], "op": "NUMBER", "path": "0", "statement": 9}, "1255": {"fn": "SourceDomainSideBridge.transfer", "offset": [3907, 3929], "op": "PUSH1", "path": "0", "value": "0x80"}, "1257": {"fn": "SourceDomainSideBridge.transfer", "offset": [3907, 3929], "op": "DUP3", "path": "0"}, "1258": {"fn": "SourceDomainSideBridge.transfer", "offset": [3907, 3929], "op": "ADD", "path": "0"}, "1259": {"fn": "SourceDomainSideBridge.transfer", "offset": [3907, 3944], "op": "MSTORE", "path": "0"}, "1260": {"fn": "SourceDomainSideBridge.transfer", "offset": [3954, 3976], "op": "PUSH1", "path": "0", "statement": 10, "value": "0xA0"}, "1262": {"fn": "SourceDomainSideBridge.transfer", "offset": [3954, 3976], "op": "DUP2", "path": "0"}, "1263": {"fn": "SourceDomainSideBridge.transfer", "offset": [3954, 3976], "op": "ADD", "path": "0"}, "1264": {"fn": "SourceDomainSideBridge.transfer", "offset": [3954, 3989], "op": "DUP6", "path": "0"}, "1265": {"fn": "SourceDomainSideBridge.transfer", "offset": [3954, 3989], "op": "SWAP1", "path": "0"}, "1266": {"fn": "SourceDomainSideBridge.transfer", "offset": [3954, 3989], "op": "MSTORE", "path": "0"}, "1267": {"fn": "SourceDomainSideBridge.transfer", "offset": [4020, 4032], "op": "PUSH1", "path": "0", "statement": 11, "value": "0x4"}, "1269": {"fn": "SourceDomainSideBridge.transfer", "offset": [4020, 4032], "op": "DUP1", "path": "0"}, "1270": {"fn": "SourceDomainSideBridge.transfer", "offset": [4020, 4032], "op": "SLOAD", "path": "0"}, "1271": {"fn": "SourceDomainSideBridge.transfer", "offset": [3999, 4017], "op": "PUSH1", "path": "0", "value": "0xC0"}, "1273": {"fn": "SourceDomainSideBridge.transfer", "offset": [3999, 4017], "op": "DUP4", "path": "0"}, "1274": {"fn": "SourceDomainSideBridge.transfer", "offset": [3999, 4017], "op": "ADD", "path": "0"}, "1275": {"fn": "SourceDomainSideBridge.transfer", "offset": [3999, 4032], "op": "DUP2", "path": "0"}, "1276": {"fn": "SourceDomainSideBridge.transfer", "offset": [3999, 4032], "op": "SWAP1", "path": "0"}, "1277": {"fn": "SourceDomainSideBridge.transfer", "offset": [3999, 4032], "op": "MSTORE", "path": "0"}, "1278": {"fn": "SourceDomainSideBridge.transfer", "offset": [4020, 4032], "op": "SWAP1", "path": "0"}, "1279": {"fn": "SourceDomainSideBridge.transfer", "offset": [3736, 3761], "op": "PUSH1", "path": "0", "value": "0x0"}, "1281": {"fn": "SourceDomainSideBridge.transfer", "offset": [4043, 4057], "op": "PUSH2", "path": "0", "statement": 12, "value": "0x509"}, "1284": {"fn": "SourceDomainSideBridge.transfer", "offset": [4020, 4032], "op": "DUP4", "path": "0"}, "1285": {"fn": "SourceDomainSideBridge.transfer", "offset": [4043, 4057], "op": "PUSH2", "path": "0", "value": "0xE33"}, "1288": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4043, 4057], "op": "JUMP", "path": "0"}, "1289": {"fn": "SourceDomainSideBridge.transfer", "offset": [4043, 4057], "op": "JUMPDEST", "path": "0"}, "1290": {"fn": "SourceDomainSideBridge.transfer", "offset": [4043, 4057], "op": "SWAP2", "path": "0"}, "1291": {"fn": "SourceDomainSideBridge.transfer", "offset": [4043, 4057], "op": "SWAP1", "path": "0"}, "1292": {"fn": "SourceDomainSideBridge.transfer", "offset": [4043, 4057], "op": "POP", "path": "0"}, "1293": {"fn": "SourceDomainSideBridge.transfer", "offset": [4043, 4057], "op": "SSTORE", "path": "0"}, "1294": {"fn": "SourceDomainSideBridge.transfer", "offset": [4043, 4057], "op": "POP", "path": "0"}, "1295": {"offset": [642, 651], "op": "PUSH6", "path": "0", "value": "0x2BA7DEF3000"}, "1302": {"fn": "SourceDomainSideBridge.transfer", "offset": [4087, 4104], "op": "PUSH1", "path": "0", "statement": 13, "value": "0x6"}, "1304": {"fn": "SourceDomainSideBridge.transfer", "offset": [4087, 4104], "op": "SLOAD", "path": "0"}, "1305": {"fn": "SourceDomainSideBridge.transfer", "offset": [4087, 4116], "op": "PUSH2", "path": "0", "value": "0x522"}, "1308": {"fn": "SourceDomainSideBridge.transfer", "offset": [4087, 4116], "op": "SWAP2", "path": "0"}, "1309": {"fn": "SourceDomainSideBridge.transfer", "offset": [4087, 4116], "op": "SWAP1", "path": "0"}, "1310": {"fn": "SourceDomainSideBridge.transfer", "offset": [4087, 4116], "op": "PUSH2", "path": "0", "value": "0xDF2"}, "1313": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4087, 4116], "op": "JUMP", "path": "0"}, "1314": {"fn": "SourceDomainSideBridge.transfer", "offset": [4087, 4116], "op": "JUMPDEST", "path": "0"}, "1315": {"fn": "SourceDomainSideBridge.transfer", "offset": [4067, 4084], "op": "PUSH1", "path": "0", "value": "0x6"}, "1317": {"fn": "SourceDomainSideBridge.transfer", "offset": [4067, 4116], "op": "SSTORE", "path": "0"}, "1318": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "PUSH1", "path": "0", "value": "0x40"}, "1320": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "MLOAD", "path": "0"}, "1321": {"fn": "SourceDomainSideBridge.transfer", "offset": [4127, 4151], "op": "PUSH1", "path": "0", "value": "0x0"}, "1323": {"fn": "SourceDomainSideBridge.transfer", "offset": [4127, 4151], "op": "SWAP1", "path": "0"}, "1324": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x2"}, "1326": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "SWAP1", "path": "0"}, "1327": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "PUSH2", "path": "0", "value": "0x53C"}, "1330": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "SWAP1", "path": "0"}, "1331": {"fn": "SourceDomainSideBridge.transfer", "offset": [4172, 4184], "op": "DUP5", "path": "0"}, "1332": {"fn": "SourceDomainSideBridge.transfer", "offset": [4172, 4184], "op": "SWAP1", "path": "0"}, "1333": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "PUSH1", "path": "0", "value": "0x20"}, "1335": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "ADD", "path": "0"}, "1336": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "PUSH2", "path": "0", "value": "0xE4C"}, "1339": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4161, 4185], "op": "JUMP", "path": "0"}, "1340": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "JUMPDEST", "path": "0"}, "1341": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "PUSH1", "path": "0", "value": "0x40"}, "1343": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "DUP1", "path": "0"}, "1344": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "MLOAD", "path": "0"}, "1345": {"op": "PUSH1", "value": "0x1F"}, "1347": {"op": "NOT"}, "1348": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "DUP2", "path": "0"}, "1349": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "DUP5", "path": "0"}, "1350": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "SUB", "path": "0"}, "1351": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "ADD", "path": "0"}, "1352": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "DUP2", "path": "0"}, "1353": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "MSTORE", "path": "0"}, "1354": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "SWAP1", "path": "0"}, "1355": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "DUP3", "path": "0"}, "1356": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "SWAP1", "path": "0"}, "1357": {"fn": "SourceDomainSideBridge.transfer", "offset": [4161, 4185], "op": "MSTORE", "path": "0"}, "1358": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH2", "path": "0", "value": "0x556"}, "1361": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "SWAP2", "path": "0"}, "1362": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH2", "path": "0", "value": "0xEA3"}, "1365": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4154, 4186], "op": "JUMP", "path": "0"}, "1366": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "JUMPDEST", "path": "0"}, "1367": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x20"}, "1369": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x40"}, "1371": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "MLOAD", "path": "0"}, "1372": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP1", "path": "0"}, "1373": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP4", "path": "0"}, "1374": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "SUB", "path": "0"}, "1375": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP2", "path": "0"}, "1376": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP6", "path": "0"}, "1377": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "GAS", "path": "0"}, "1378": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "STATICCALL", "path": "0"}, "1379": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "ISZERO", "path": "0"}, "1380": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP1", "path": "0"}, "1381": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "ISZERO", "path": "0"}, "1382": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH2", "path": "0", "value": "0x573"}, "1385": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "JUMPI", "path": "0"}, "1386": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "RETURNDATASIZE", "path": "0"}, "1387": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x0"}, "1389": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP1", "path": "0"}, "1390": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "RETURNDATACOPY", "path": "0"}, "1391": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "RETURNDATASIZE", "path": "0"}, "1392": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x0"}, "1394": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "REVERT", "path": "0"}, "1395": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "JUMPDEST", "path": "0"}, "1396": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "POP", "path": "0"}, "1397": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "POP", "path": "0"}, "1398": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "POP", "path": "0"}, "1399": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x40"}, "1401": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "MLOAD", "path": "0"}, "1402": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "RETURNDATASIZE", "path": "0"}, "1403": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1405": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "NOT", "path": "0"}, "1406": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1408": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP3", "path": "0"}, "1409": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "ADD", "path": "0"}, "1410": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "AND", "path": "0"}, "1411": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP3", "path": "0"}, "1412": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "ADD", "path": "0"}, "1413": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP1", "path": "0"}, "1414": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH1", "path": "0", "value": "0x40"}, "1416": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "MSTORE", "path": "0"}, "1417": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "POP", "path": "0"}, "1418": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "DUP2", "path": "0"}, "1419": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "ADD", "path": "0"}, "1420": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "SWAP1", "path": "0"}, "1421": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH2", "path": "0", "value": "0x596"}, "1424": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "SWAP2", "path": "0"}, "1425": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "SWAP1", "path": "0"}, "1426": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "PUSH2", "path": "0", "value": "0xEDE"}, "1429": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4154, 4186], "op": "JUMP", "path": "0"}, "1430": {"fn": "SourceDomainSideBridge.transfer", "offset": [4154, 4186], "op": "JUMPDEST", "path": "0"}, "1431": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4224], "op": "PUSH1", "path": "0", "statement": 14, "value": "0x0"}, "1433": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "DUP2", "path": "0"}, "1434": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "DUP2", "path": "0"}, "1435": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "MSTORE", "path": "0"}, "1436": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "PUSH1", "path": "0", "value": "0x20"}, "1438": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "DUP2", "path": "0"}, "1439": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "SWAP1", "path": "0"}, "1440": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "MSTORE", "path": "0"}, "1441": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "PUSH1", "path": "0", "value": "0x40"}, "1443": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "SWAP1", "path": "0"}, "1444": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "DUP2", "path": "0"}, "1445": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "SWAP1", "path": "0"}, "1446": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4242], "op": "KECCAK256", "path": "0"}, "1447": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4249], "op": "DUP1", "path": "0"}, "1448": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4249], "op": "SLOAD", "path": "0"}, "1449": {"op": "PUSH1", "value": "0xFF"}, "1451": {"op": "NOT"}, "1452": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4249], "op": "AND", "path": "0"}, "1453": {"fn": "SourceDomainSideBridge.transfer", "offset": [4245, 4249], "op": "PUSH1", "path": "0", "value": "0x1"}, "1455": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4249], "op": "OR", "path": "0"}, "1456": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4249], "op": "SWAP1", "path": "0"}, "1457": {"fn": "SourceDomainSideBridge.transfer", "offset": [4205, 4249], "op": "SSTORE", "path": "0"}, "1458": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "MLOAD", "path": "0", "statement": 15}, "1459": {"fn": "SourceDomainSideBridge.transfer", "offset": [4127, 4186], "op": "SWAP1", "path": "0"}, "1460": {"fn": "SourceDomainSideBridge.transfer", "offset": [4127, 4186], "op": "SWAP2", "path": "0"}, "1461": {"op": "POP"}, "1462": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "PUSH32", "path": "0", "value": "0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89"}, "1495": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "SWAP1", "path": "0"}, "1496": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "PUSH2", "path": "0", "value": "0x5E2"}, "1499": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "SWAP1", "path": "0"}, "1500": {"fn": "SourceDomainSideBridge.transfer", "offset": [4277, 4289], "op": "DUP5", "path": "0"}, "1501": {"fn": "SourceDomainSideBridge.transfer", "offset": [4277, 4289], "op": "SWAP1", "path": "0"}, "1502": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "PUSH2", "path": "0", "value": "0xE4C"}, "1505": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4265, 4290], "op": "JUMP", "path": "0"}, "1506": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "JUMPDEST", "path": "0"}, "1507": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "PUSH1", "path": "0", "value": "0x40"}, "1509": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "MLOAD", "path": "0"}, "1510": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "DUP1", "path": "0"}, "1511": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "SWAP2", "path": "0"}, "1512": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "SUB", "path": "0"}, "1513": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "SWAP1", "path": "0"}, "1514": {"fn": "SourceDomainSideBridge.transfer", "offset": [4265, 4290], "op": "LOG1", "path": "0"}, "1515": {"fn": "SourceDomainSideBridge.transfer", "offset": [4316, 4332], "op": "SWAP9", "path": "0", "statement": 16}, "1516": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4339], "op": "SWAP8", "path": "0"}, "1517": {"op": "POP"}, "1518": {"op": "POP"}, "1519": {"op": "POP"}, "1520": {"op": "POP"}, "1521": {"op": "POP"}, "1522": {"op": "POP"}, "1523": {"op": "POP"}, "1524": {"op": "POP"}, "1525": {"fn": "SourceDomainSideBridge.transfer", "jump": "o", "offset": [2830, 4339], "op": "JUMP", "path": "0"}, "1526": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6111, 6267], "op": "JUMPDEST", "path": "0"}, "1527": {"offset": [2402, 2412], "op": "PUSH1", "path": "0", "value": "0x5"}, "1529": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2402, 2412], "op": "SLOAD", "path": "0"}, "1530": {"op": "PUSH1", "value": "0x1"}, "1532": {"op": "PUSH1", "value": "0x1"}, "1534": {"op": "PUSH1", "value": "0xA0"}, "1536": {"op": "SHL"}, "1537": {"op": "SUB"}, "1538": {"offset": [2402, 2412], "op": "AND", "path": "0"}, "1539": {"offset": [2388, 2398], "op": "CALLER", "path": "0"}, "1540": {"offset": [2388, 2412], "op": "EQ", "path": "0"}, "1541": {"offset": [2380, 2456], "op": "PUSH2", "path": "0", "value": "0x660"}, "1544": {"offset": [2380, 2456], "op": "JUMPI", "path": "0"}, "1545": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "PUSH1", "path": "0", "value": "0x40"}, "1547": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "MLOAD", "path": "0"}, "1548": {"op": "PUSH3", "value": "0x461BCD"}, "1552": {"op": "PUSH1", "value": "0xE5"}, "1554": {"op": "SHL"}, "1555": {"offset": [2380, 2456], "op": "DUP2", "path": "0"}, "1556": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "MSTORE", "path": "0"}, "1557": {"op": "PUSH1", "value": "0x20"}, "1559": {"offset": [2380, 2456], "op": "PUSH1", "path": "0", "value": "0x4"}, "1561": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "DUP3", "path": "0"}, "1562": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "ADD", "path": "0"}, "1563": {"op": "MSTORE"}, "1564": {"op": "PUSH1", "value": "0x27"}, "1566": {"op": "PUSH1", "value": "0x24"}, "1568": {"op": "DUP3"}, "1569": {"op": "ADD"}, "1570": {"op": "MSTORE"}, "1571": {"op": "PUSH32", "value": "0x476F7665726E616E63653A20596F7520617265206E6F742074686520476F7665"}, "1604": {"op": "PUSH1", "value": "0x44"}, "1606": {"op": "DUP3"}, "1607": {"op": "ADD"}, "1608": {"op": "MSTORE"}, "1609": {"op": "PUSH7", "value": "0x726E6F72212121"}, "1617": {"op": "PUSH1", "value": "0xC8"}, "1619": {"op": "SHL"}, "1620": {"op": "PUSH1", "value": "0x64"}, "1622": {"op": "DUP3"}, "1623": {"op": "ADD"}, "1624": {"op": "MSTORE"}, "1625": {"op": "PUSH1", "value": "0x84"}, "1627": {"op": "ADD"}, "1628": {"offset": [2380, 2456], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "1631": {"op": "JUMP"}, "1632": {"offset": [2380, 2456], "op": "JUMPDEST", "path": "0"}, "1633": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "PUSH1", "path": "0", "statement": 17, "value": "0x5"}, "1635": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "SLOAD", "path": "0"}, "1636": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6211, 6228], "op": "PUSH1", "path": "0", "value": "0x6"}, "1638": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6211, 6228], "op": "SLOAD", "path": "0"}, "1639": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "PUSH1", "path": "0", "value": "0x40"}, "1641": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "MLOAD", "path": "0"}, "1642": {"op": "PUSH1", "value": "0x1"}, "1644": {"op": "PUSH1", "value": "0x1"}, "1646": {"op": "PUSH1", "value": "0xA0"}, "1648": {"op": "SHL"}, "1649": {"op": "SUB"}, "1650": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "SWAP1", "path": "0"}, "1651": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "SWAP3", "path": "0"}, "1652": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "AND", "path": "0"}, "1653": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "SWAP2", "path": "0"}, "1654": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "DUP2", "path": "0"}, "1655": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "ISZERO", "path": "0"}, "1656": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "PUSH2", "path": "0", "value": "0x8FC"}, "1659": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "MUL", "path": "0"}, "1660": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "SWAP2", "path": "0"}, "1661": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6211, 6228], "op": "SWAP1", "path": "0"}, "1662": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "PUSH1", "path": "0", "value": "0x0"}, "1664": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "DUP2", "path": "0"}, "1665": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "DUP2", "path": "0"}, "1666": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "DUP2", "path": "0"}, "1667": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6211, 6228], "op": "DUP6", "path": "0"}, "1668": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6190, 6200], "op": "DUP9", "path": "0"}, "1669": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "DUP9", "path": "0"}, "1670": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "CALL", "path": "0"}, "1671": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "SWAP4", "path": "0"}, "1672": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "POP", "path": "0"}, "1673": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "POP", "path": "0"}, "1674": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "POP", "path": "0"}, "1675": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "POP", "path": "0"}, "1676": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "ISZERO", "path": "0"}, "1677": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "DUP1", "path": "0"}, "1678": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "ISZERO", "path": "0"}, "1679": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "PUSH2", "path": "0", "value": "0x69C"}, "1682": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "JUMPI", "path": "0"}, "1683": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "RETURNDATASIZE", "path": "0"}, "1684": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "PUSH1", "path": "0", "value": "0x0"}, "1686": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "DUP1", "path": "0"}, "1687": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "RETURNDATACOPY", "path": "0"}, "1688": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "RETURNDATASIZE", "path": "0"}, "1689": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "PUSH1", "path": "0", "value": "0x0"}, "1691": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "REVERT", "path": "0"}, "1692": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6182, 6229], "op": "JUMPDEST", "path": "0"}, "1693": {"op": "POP"}, "1694": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6259, 6260], "op": "PUSH1", "path": "0", "statement": 18, "value": "0x0"}, "1696": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6239, 6256], "op": "PUSH1", "path": "0", "value": "0x6"}, "1698": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6239, 6260], "op": "SSTORE", "path": "0"}, "1699": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "o", "offset": [6111, 6267], "op": "JUMP", "path": "0"}, "1700": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "JUMPDEST", "path": "0"}, "1701": {"op": "PUSH1", "value": "0x7"}, "1703": {"op": "PUSH1", "value": "0x21"}, "1705": {"op": "PUSH1", "value": "0x99"}, "1707": {"op": "SHL"}, "1708": {"op": "ADD"}, "1709": {"offset": [2098, 2108], "op": "CALLER", "path": "0"}, "1710": {"offset": [2098, 2146], "op": "DUP2", "path": "0"}, "1711": {"branch": 35, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2098, 2146], "op": "EQ", "path": "0"}, "1712": {"offset": [2098, 2221], "op": "DUP1", "path": "0"}, "1713": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2098, 2221], "op": "ISZERO", "path": "0"}, "1714": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2098, 2221], "op": "PUSH2", "path": "0", "value": "0x731"}, "1717": {"branch": 35, "offset": [2098, 2221], "op": "JUMPI", "path": "0"}, "1718": {"op": "POP"}, "1719": {"offset": [2194, 2221], "op": "PUSH1", "path": "0", "value": "0x3"}, "1721": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2194, 2221], "op": "SLOAD", "path": "0"}, "1722": {"offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x40"}, "1724": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "0"}, "1725": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MLOAD", "path": "0"}, "1726": {"op": "PUSH4", "value": "0x6E296E45"}, "1731": {"op": "PUSH1", "value": "0xE0"}, "1733": {"op": "SHL"}, "1734": {"offset": [2162, 2190], "op": "DUP2", "path": "0"}, "1735": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MSTORE", "path": "0"}, "1736": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "0"}, "1737": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MLOAD", "path": "0"}, "1738": {"op": "PUSH1", "value": "0x1"}, "1740": {"op": "PUSH1", "value": "0x1"}, "1742": {"op": "PUSH1", "value": "0xA0"}, "1744": {"op": "SHL"}, "1745": {"op": "SUB"}, "1746": {"offset": [2194, 2221], "op": "SWAP3", "path": "0"}, "1747": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2194, 2221], "op": "DUP4", "path": "0"}, "1748": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2194, 2221], "op": "AND", "path": "0"}, "1749": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2194, 2221], "op": "SWAP3", "path": "0"}, "1750": {"offset": [2162, 2188], "op": "DUP5", "path": "0"}, "1751": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2188], "op": "AND", "path": "0"}, "1752": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2188], "op": "SWAP2", "path": "0"}, "1753": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2188], "op": "PUSH4", "path": "0", "value": "0x6E296E45"}, "1758": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2188], "op": "SWAP2", "path": "0"}, "1759": {"offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x4"}, "1761": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "0"}, "1762": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP4", "path": "0"}, "1763": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "0"}, "1764": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP3", "path": "0"}, "1765": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x20"}, "1767": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP3", "path": "0"}, "1768": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP2", "path": "0"}, "1769": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "0"}, "1770": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP3", "path": "0"}, "1771": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "0"}, "1772": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SUB", "path": "0"}, "1773": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "0"}, "1774": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP2", "path": "0"}, "1775": {"offset": [2162, 2188], "op": "DUP7", "path": "0"}, "1776": {"offset": [2162, 2190], "op": "GAS", "path": "0"}, "1777": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "STATICCALL", "path": "0"}, "1778": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ISZERO", "path": "0"}, "1779": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "0"}, "1780": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ISZERO", "path": "0"}, "1781": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH2", "path": "0", "value": "0x702"}, "1784": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "JUMPI", "path": "0"}, "1785": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "RETURNDATASIZE", "path": "0"}, "1786": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x0"}, "1788": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "0"}, "1789": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "RETURNDATACOPY", "path": "0"}, "1790": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "RETURNDATASIZE", "path": "0"}, "1791": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x0"}, "1793": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "REVERT", "path": "0"}, "1794": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "JUMPDEST", "path": "0"}, "1795": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "0"}, "1796": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "0"}, "1797": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "0"}, "1798": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "0"}, "1799": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x40"}, "1801": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MLOAD", "path": "0"}, "1802": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "RETURNDATASIZE", "path": "0"}, "1803": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1805": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "NOT", "path": "0"}, "1806": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1808": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP3", "path": "0"}, "1809": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "0"}, "1810": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "AND", "path": "0"}, "1811": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP3", "path": "0"}, "1812": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "0"}, "1813": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "0"}, "1814": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "0", "value": "0x40"}, "1816": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MSTORE", "path": "0"}, "1817": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "0"}, "1818": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP2", "path": "0"}, "1819": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "0"}, "1820": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "0"}, "1821": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH2", "path": "0", "value": "0x726"}, "1824": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP2", "path": "0"}, "1825": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "0"}, "1826": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH2", "path": "0", "value": "0xEF7"}, "1829": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [2162, 2190], "op": "JUMP", "path": "0"}, "1830": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "JUMPDEST", "path": "0"}, "1831": {"op": "PUSH1", "value": "0x1"}, "1833": {"op": "PUSH1", "value": "0x1"}, "1835": {"op": "PUSH1", "value": "0xA0"}, "1837": {"op": "SHL"}, "1838": {"op": "SUB"}, "1839": {"offset": [2162, 2221], "op": "AND", "path": "0"}, "1840": {"branch": 36, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2221], "op": "EQ", "path": "0"}, "1841": {"offset": [2098, 2221], "op": "JUMPDEST", "path": "0"}, "1842": {"offset": [2077, 2231], "op": "PUSH2", "path": "0", "value": "0x73A"}, "1845": {"branch": 36, "offset": [2077, 2231], "op": "JUMPI", "path": "0"}, "1846": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2077, 2231], "op": "PUSH1", "path": "0", "value": "0x0"}, "1848": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2077, 2231], "op": "DUP1", "path": "0"}, "1849": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2077, 2231], "op": "REVERT", "path": "0"}, "1850": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2077, 2231], "op": "JUMPDEST", "path": "0"}, "1851": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "PUSH1", "path": "0", "statement": 19, "value": "0x0"}, "1853": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "DUP3", "path": "0"}, "1854": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "DUP2", "path": "0"}, "1855": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "MSTORE", "path": "0"}, "1856": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6036, 6040], "op": "PUSH1", "path": "0", "value": "0x1"}, "1858": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "PUSH1", "path": "0", "value": "0x20"}, "1860": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "DUP2", "path": "0"}, "1861": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "DUP2", "path": "0"}, "1862": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "MSTORE", "path": "0"}, "1863": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "PUSH1", "path": "0", "value": "0x40"}, "1865": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "SWAP3", "path": "0"}, "1866": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "DUP4", "path": "0"}, "1867": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "SWAP1", "path": "0"}, "1868": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6033], "op": "KECCAK256", "path": "0"}, "1869": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "DUP1", "path": "0"}, "1870": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "SLOAD", "path": "0"}, "1871": {"op": "PUSH1", "value": "0xFF"}, "1873": {"op": "NOT"}, "1874": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "AND", "path": "0"}, "1875": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "SWAP1", "path": "0"}, "1876": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "SWAP3", "path": "0"}, "1877": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "OR", "path": "0"}, "1878": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "SWAP1", "path": "0"}, "1879": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "SWAP2", "path": "0"}, "1880": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5997, 6040], "op": "SSTORE", "path": "0"}, "1881": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "SWAP1", "path": "0", "statement": 20}, "1882": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "MLOAD", "path": "0"}, "1883": {"op": "DUP4"}, "1884": {"op": "DUP2"}, "1885": {"op": "MSTORE"}, "1886": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "PUSH32", "path": "0", "value": "0xF92A8A7980EB38C3C210AD55B80880529BCCDBC8206E7CDB24D9F52C6A5171E8"}, "1919": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "SWAP2", "path": "0"}, "1920": {"op": "ADD"}, "1921": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "PUSH1", "path": "0", "value": "0x40"}, "1923": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "MLOAD", "path": "0"}, "1924": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "DUP1", "path": "0"}, "1925": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "SWAP2", "path": "0"}, "1926": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "SUB", "path": "0"}, "1927": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "SWAP1", "path": "0"}, "1928": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6055, 6098], "op": "LOG1", "path": "0"}, "1929": {"offset": [1979, 2249], "op": "POP", "path": "0"}, "1930": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5905, 6105], "op": "POP", "path": "0"}, "1931": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "o", "offset": [5905, 6105], "op": "JUMP", "path": "0"}, "1932": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "JUMPDEST", "path": "0"}, "1933": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4611, 4646], "op": "PUSH1", "path": "0", "value": "0x0"}, "1935": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4649, 4698], "op": "PUSH2", "path": "0", "value": "0x797"}, "1938": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4686, 4697], "op": "DUP3", "path": "0"}, "1939": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4649, 4685], "op": "PUSH2", "path": "0", "value": "0xAFF"}, "1942": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4649, 4698], "op": "JUMP", "path": "0"}, "1943": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4649, 4698], "op": "JUMPDEST", "path": "0"}, "1944": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "PUSH1", "path": "0", "statement": 21, "value": "0x0"}, "1946": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "DUP2", "path": "0"}, "1947": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "DUP2", "path": "0"}, "1948": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "MSTORE", "path": "0"}, "1949": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4731], "op": "PUSH1", "path": "0", "value": "0x1"}, "1951": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "PUSH1", "path": "0", "value": "0x20"}, "1953": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "MSTORE", "path": "0"}, "1954": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "PUSH1", "path": "0", "value": "0x40"}, "1956": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "SWAP1", "path": "0"}, "1957": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "KECCAK256", "path": "0"}, "1958": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "SLOAD", "path": "0"}, "1959": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4611, 4698], "op": "SWAP1", "path": "0"}, "1960": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4611, 4698], "op": "SWAP2", "path": "0"}, "1961": {"op": "POP"}, "1962": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "PUSH1", "path": "0", "value": "0xFF"}, "1964": {"branch": 37, "fn": "SourceDomainSideBridge.processClaims", "offset": [4716, 4760], "op": "AND", "path": "0"}, "1965": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "PUSH2", "path": "0", "value": "0x7F8"}, "1968": {"branch": 37, "fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "JUMPI", "path": "0"}, "1969": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "PUSH1", "path": "0", "value": "0x40"}, "1971": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "MLOAD", "path": "0"}, "1972": {"op": "PUSH3", "value": "0x461BCD"}, "1976": {"op": "PUSH1", "value": "0xE5"}, "1978": {"op": "SHL"}, "1979": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "DUP2", "path": "0"}, "1980": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "MSTORE", "path": "0"}, "1981": {"op": "PUSH1", "value": "0x20"}, "1983": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "PUSH1", "path": "0", "value": "0x4"}, "1985": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "DUP3", "path": "0"}, "1986": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "ADD", "path": "0"}, "1987": {"op": "MSTORE"}, "1988": {"op": "PUSH1", "value": "0x19"}, "1990": {"op": "PUSH1", "value": "0x24"}, "1992": {"op": "DUP3"}, "1993": {"op": "ADD"}, "1994": {"op": "MSTORE"}, "1995": {"op": "PUSH32", "value": "0x496E76616C6964652052657761726444617461206C6973742E00000000000000"}, "2028": {"op": "PUSH1", "value": "0x44"}, "2030": {"op": "DUP3"}, "2031": {"op": "ADD"}, "2032": {"op": "MSTORE"}, "2033": {"op": "PUSH1", "value": "0x64"}, "2035": {"op": "ADD"}, "2036": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "PUSH2", "path": "0", "value": "0x2A9"}, "2039": {"op": "JUMP"}, "2040": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4708, 4790], "op": "JUMPDEST", "path": "0"}, "2041": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4800, 4824], "op": "PUSH1", "path": "0", "statement": 22, "value": "0x2"}, "2043": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4800, 4854], "op": "DUP2", "path": "0"}, "2044": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4800, 4854], "op": "SWAP1", "path": "0"}, "2045": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4800, 4854], "op": "SSTORE", "path": "0"}, "2046": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4868, 4874], "op": "PUSH1", "path": "0", "value": "0x0"}, "2048": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4864, 5723], "op": "JUMPDEST", "path": "0"}, "2049": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4884, 4895], "op": "DUP3", "path": "0"}, "2050": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4884, 4902], "op": "MLOAD", "path": "0"}, "2051": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4880, 4881], "op": "DUP2", "path": "0"}, "2052": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4880, 4902], "op": "LT", "path": "0"}, "2053": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4864, 5723], "op": "ISZERO", "path": "0"}, "2054": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4864, 5723], "op": "PUSH2", "path": "0", "value": "0xAFA"}, "2057": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4864, 5723], "op": "JUMPI", "path": "0"}, "2058": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4945], "op": "PUSH1", "path": "0", "value": "0x0"}, "2060": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "DUP1", "path": "0"}, "2061": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4957], "op": "DUP5", "path": "0"}, "2062": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4958, 4959], "op": "DUP4", "path": "0"}, "2063": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "DUP2", "path": "0"}, "2064": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "MLOAD", "path": "0"}, "2065": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "DUP2", "path": "0"}, "2066": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "LT", "path": "0"}, "2067": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "PUSH2", "path": "0", "value": "0x81E"}, "2070": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "JUMPI", "path": "0"}, "2071": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "PUSH2", "path": "0", "value": "0x81E"}, "2074": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2077": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4946, 4960], "op": "JUMP", "path": "0"}, "2078": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "JUMPDEST", "path": "0"}, "2079": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "PUSH1", "path": "0", "value": "0x20"}, "2081": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "SWAP1", "path": "0"}, "2082": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "DUP2", "path": "0"}, "2083": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "MUL", "path": "0"}, "2084": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "SWAP2", "path": "0"}, "2085": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "SWAP1", "path": "0"}, "2086": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "SWAP2", "path": "0"}, "2087": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "ADD", "path": "0"}, "2088": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "DUP2", "path": "0"}, "2089": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "ADD", "path": "0"}, "2090": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4960], "op": "MLOAD", "path": "0"}, "2091": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4977], "op": "MLOAD", "path": "0"}, "2092": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "DUP3", "path": "0"}, "2093": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "MSTORE", "path": "0"}, "2094": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "DUP2", "path": "0"}, "2095": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "ADD", "path": "0"}, "2096": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "SWAP2", "path": "0"}, "2097": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "SWAP1", "path": "0"}, "2098": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "SWAP2", "path": "0"}, "2099": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "MSTORE", "path": "0"}, "2100": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "PUSH1", "path": "0", "value": "0x40"}, "2102": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "ADD", "path": "0"}, "2103": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4946, 4977], "op": "PUSH1", "path": "0", "value": "0x0"}, "2105": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "KECCAK256", "path": "0"}, "2106": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "SLOAD", "path": "0"}, "2107": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "PUSH1", "path": "0", "value": "0xFF"}, "2109": {"branch": 38, "fn": "SourceDomainSideBridge.processClaims", "offset": [4926, 4978], "op": "AND", "path": "0"}, "2110": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4923, 5713], "op": "ISZERO", "path": "0"}, "2111": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4923, 5713], "op": "PUSH2", "path": "0", "value": "0xAE8"}, "2114": {"branch": 38, "fn": "SourceDomainSideBridge.processClaims", "offset": [4923, 5713], "op": "JUMPI", "path": "0"}, "2115": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4997, 5009], "op": "PUSH1", "path": "0", "value": "0x0"}, "2117": {"offset": [336, 378], "op": "DUP1", "path": "0"}, "2118": {"op": "PUSH1", "value": "0x1"}, "2120": {"op": "PUSH1", "value": "0x1"}, "2122": {"op": "PUSH1", "value": "0xA0"}, "2124": {"op": "SHL"}, "2125": {"op": "SUB"}, "2126": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5074], "op": "AND", "path": "0"}, "2127": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5041], "op": "DUP5", "path": "0"}, "2128": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5042, 5043], "op": "DUP4", "path": "0"}, "2129": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "DUP2", "path": "0"}, "2130": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "MLOAD", "path": "0"}, "2131": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "DUP2", "path": "0"}, "2132": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "LT", "path": "0"}, "2133": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "PUSH2", "path": "0", "value": "0x860"}, "2136": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "JUMPI", "path": "0"}, "2137": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "PUSH2", "path": "0", "value": "0x860"}, "2140": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2143": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5030, 5044], "op": "JUMP", "path": "0"}, "2144": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "JUMPDEST", "path": "0"}, "2145": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "PUSH1", "path": "0", "value": "0x20"}, "2147": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "MUL", "path": "0"}, "2148": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "PUSH1", "path": "0", "value": "0x20"}, "2150": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "ADD", "path": "0"}, "2151": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "ADD", "path": "0"}, "2152": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5044], "op": "MLOAD", "path": "0"}, "2153": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5057], "op": "PUSH1", "path": "0", "value": "0x20"}, "2155": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5057], "op": "ADD", "path": "0"}, "2156": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5057], "op": "MLOAD", "path": "0"}, "2157": {"op": "PUSH1", "value": "0x1"}, "2159": {"op": "PUSH1", "value": "0x1"}, "2161": {"op": "PUSH1", "value": "0xA0"}, "2163": {"op": "SHL"}, "2164": {"op": "SUB"}, "2165": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5074], "op": "AND", "path": "0"}, "2166": {"branch": 39, "fn": "SourceDomainSideBridge.processClaims", "offset": [5030, 5074], "op": "SUB", "path": "0"}, "2167": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5027, 5624], "op": "PUSH2", "path": "0", "value": "0x912"}, "2170": {"branch": 39, "fn": "SourceDomainSideBridge.processClaims", "offset": [5027, 5624], "op": "JUMPI", "path": "0"}, "2171": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5098, 5106], "op": "PUSH1", "path": "0", "value": "0x0"}, "2173": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5131], "op": "DUP5", "path": "0"}, "2174": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5132, 5133], "op": "DUP4", "path": "0"}, "2175": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "DUP2", "path": "0"}, "2176": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "MLOAD", "path": "0"}, "2177": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "DUP2", "path": "0"}, "2178": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "LT", "path": "0"}, "2179": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "PUSH2", "path": "0", "value": "0x88E"}, "2182": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "JUMPI", "path": "0"}, "2183": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "PUSH2", "path": "0", "value": "0x88E"}, "2186": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2189": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5120, 5134], "op": "JUMP", "path": "0"}, "2190": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "JUMPDEST", "path": "0"}, "2191": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "PUSH1", "path": "0", "value": "0x20"}, "2193": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "MUL", "path": "0"}, "2194": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "PUSH1", "path": "0", "value": "0x20"}, "2196": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "ADD", "path": "0"}, "2197": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "ADD", "path": "0"}, "2198": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5134], "op": "MLOAD", "path": "0"}, "2199": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5142], "op": "PUSH1", "path": "0", "value": "0x40"}, "2201": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5142], "op": "ADD", "path": "0"}, "2202": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5120, 5142], "op": "MLOAD", "path": "0"}, "2203": {"op": "PUSH1", "value": "0x1"}, "2205": {"op": "PUSH1", "value": "0x1"}, "2207": {"op": "PUSH1", "value": "0xA0"}, "2209": {"op": "SHL"}, "2210": {"op": "SUB"}, "2211": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5148], "op": "AND", "path": "0"}, "2212": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5167], "op": "DUP6", "path": "0"}, "2213": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5168, 5169], "op": "DUP5", "path": "0"}, "2214": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "DUP2", "path": "0"}, "2215": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "MLOAD", "path": "0"}, "2216": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "DUP2", "path": "0"}, "2217": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "LT", "path": "0"}, "2218": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "PUSH2", "path": "0", "value": "0x8B5"}, "2221": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "JUMPI", "path": "0"}, "2222": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "PUSH2", "path": "0", "value": "0x8B5"}, "2225": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2228": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5156, 5170], "op": "JUMP", "path": "0"}, "2229": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "JUMPDEST", "path": "0"}, "2230": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "PUSH1", "path": "0", "value": "0x20"}, "2232": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "MUL", "path": "0"}, "2233": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "PUSH1", "path": "0", "value": "0x20"}, "2235": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "ADD", "path": "0"}, "2236": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "ADD", "path": "0"}, "2237": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5170], "op": "MLOAD", "path": "0"}, "2238": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5184], "op": "PUSH1", "path": "0", "value": "0x60"}, "2240": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5184], "op": "ADD", "path": "0"}, "2241": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5156, 5184], "op": "MLOAD", "path": "0"}, "2242": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x40"}, "2244": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "MLOAD", "path": "0"}, "2245": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x0"}, "2247": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x40"}, "2249": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "MLOAD", "path": "0"}, "2250": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP1", "path": "0"}, "2251": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP4", "path": "0"}, "2252": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "SUB", "path": "0"}, "2253": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP2", "path": "0"}, "2254": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP6", "path": "0"}, "2255": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP8", "path": "0"}, "2256": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "GAS", "path": "0"}, "2257": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "CALL", "path": "0"}, "2258": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "SWAP3", "path": "0"}, "2259": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "POP", "path": "0"}, "2260": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "POP", "path": "0"}, "2261": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "POP", "path": "0"}, "2262": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "RETURNDATASIZE", "path": "0"}, "2263": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP1", "path": "0"}, "2264": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x0"}, "2266": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP2", "path": "0"}, "2267": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "EQ", "path": "0"}, "2268": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH2", "path": "0", "value": "0x901"}, "2271": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "JUMPI", "path": "0"}, "2272": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x40"}, "2274": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "MLOAD", "path": "0"}, "2275": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "SWAP2", "path": "0"}, "2276": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "POP", "path": "0"}, "2277": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x1F"}, "2279": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "NOT", "path": "0"}, "2280": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x3F"}, "2282": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "RETURNDATASIZE", "path": "0"}, "2283": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "ADD", "path": "0"}, "2284": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "AND", "path": "0"}, "2285": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP3", "path": "0"}, "2286": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "ADD", "path": "0"}, "2287": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x40"}, "2289": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "MSTORE", "path": "0"}, "2290": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "RETURNDATASIZE", "path": "0"}, "2291": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP3", "path": "0"}, "2292": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "MSTORE", "path": "0"}, "2293": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "RETURNDATASIZE", "path": "0"}, "2294": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x0"}, "2296": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x20"}, "2298": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "DUP5", "path": "0"}, "2299": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "ADD", "path": "0"}, "2300": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "RETURNDATACOPY", "path": "0"}, "2301": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH2", "path": "0", "value": "0x906"}, "2304": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "JUMP", "path": "0"}, "2305": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "JUMPDEST", "path": "0"}, "2306": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "PUSH1", "path": "0", "value": "0x60"}, "2308": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "SWAP2", "path": "0"}, "2309": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "POP", "path": "0"}, "2310": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5112, 5189], "op": "JUMPDEST", "path": "0"}, "2311": {"op": "POP"}, "2312": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5097, 5189], "op": "SWAP1", "path": "0"}, "2313": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5097, 5189], "op": "SWAP3", "path": "0"}, "2314": {"op": "POP"}, "2315": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5027, 5624], "op": "PUSH2", "path": "0", "value": "0xA85"}, "2318": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5027, 5624], "op": "SWAP2", "path": "0"}, "2319": {"op": "POP"}, "2320": {"op": "POP"}, "2321": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5027, 5624], "op": "JUMP", "path": "0"}, "2322": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5027, 5624], "op": "JUMPDEST", "path": "0"}, "2323": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5269, 5280], "op": "PUSH1", "path": "0", "value": "0x0"}, "2325": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5300], "op": "DUP5", "path": "0"}, "2326": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5301, 5302], "op": "DUP4", "path": "0"}, "2327": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "DUP2", "path": "0"}, "2328": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "MLOAD", "path": "0"}, "2329": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "DUP2", "path": "0"}, "2330": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "LT", "path": "0"}, "2331": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "PUSH2", "path": "0", "value": "0x926"}, "2334": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "JUMPI", "path": "0"}, "2335": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "PUSH2", "path": "0", "value": "0x926"}, "2338": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2341": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5289, 5303], "op": "JUMP", "path": "0"}, "2342": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "JUMPDEST", "path": "0"}, "2343": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "PUSH1", "path": "0", "value": "0x20"}, "2345": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "MUL", "path": "0"}, "2346": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "PUSH1", "path": "0", "value": "0x20"}, "2348": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "ADD", "path": "0"}, "2349": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "ADD", "path": "0"}, "2350": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5303], "op": "MLOAD", "path": "0"}, "2351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5316], "op": "PUSH1", "path": "0", "value": "0x20"}, "2353": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5316], "op": "ADD", "path": "0"}, "2354": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5289, 5316], "op": "MLOAD", "path": "0"}, "2355": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5269, 5317], "op": "SWAP1", "path": "0"}, "2356": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5269, 5317], "op": "POP", "path": "0"}, "2357": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5356], "op": "DUP1", "path": "0", "statement": 23}, "2358": {"op": "PUSH1", "value": "0x1"}, "2360": {"op": "PUSH1", "value": "0x1"}, "2362": {"op": "PUSH1", "value": "0xA0"}, "2364": {"op": "SHL"}, "2365": {"op": "SUB"}, "2366": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5369], "op": "AND", "path": "0"}, "2367": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5369], "op": "PUSH4", "path": "0", "value": "0x23B872DD"}, "2372": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5378, 5382], "op": "ADDRESS", "path": "0"}, "2373": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5396], "op": "DUP8", "path": "0"}, "2374": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5397, 5398], "op": "DUP7", "path": "0"}, "2375": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "DUP2", "path": "0"}, "2376": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "MLOAD", "path": "0"}, "2377": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "DUP2", "path": "0"}, "2378": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "LT", "path": "0"}, "2379": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "PUSH2", "path": "0", "value": "0x956"}, "2382": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "JUMPI", "path": "0"}, "2383": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "PUSH2", "path": "0", "value": "0x956"}, "2386": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2389": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5385, 5399], "op": "JUMP", "path": "0"}, "2390": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "JUMPDEST", "path": "0"}, "2391": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "PUSH1", "path": "0", "value": "0x20"}, "2393": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "MUL", "path": "0"}, "2394": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "PUSH1", "path": "0", "value": "0x20"}, "2396": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "ADD", "path": "0"}, "2397": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "ADD", "path": "0"}, "2398": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5399], "op": "MLOAD", "path": "0"}, "2399": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5407], "op": "PUSH1", "path": "0", "value": "0x40"}, "2401": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5407], "op": "ADD", "path": "0"}, "2402": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5385, 5407], "op": "MLOAD", "path": "0"}, "2403": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5444], "op": "DUP9", "path": "0"}, "2404": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5445, 5446], "op": "DUP8", "path": "0"}, "2405": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "DUP2", "path": "0"}, "2406": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "MLOAD", "path": "0"}, "2407": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "DUP2", "path": "0"}, "2408": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "LT", "path": "0"}, "2409": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "PUSH2", "path": "0", "value": "0x974"}, "2412": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "JUMPI", "path": "0"}, "2413": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "PUSH2", "path": "0", "value": "0x974"}, "2416": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2419": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5433, 5447], "op": "JUMP", "path": "0"}, "2420": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "JUMPDEST", "path": "0"}, "2421": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "PUSH1", "path": "0", "value": "0x20"}, "2423": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "SWAP1", "path": "0"}, "2424": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "DUP2", "path": "0"}, "2425": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "MUL", "path": "0"}, "2426": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "SWAP2", "path": "0"}, "2427": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "SWAP1", "path": "0"}, "2428": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "SWAP2", "path": "0"}, "2429": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "ADD", "path": "0"}, "2430": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "ADD", "path": "0"}, "2431": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5447], "op": "MLOAD", "path": "0"}, "2432": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5461], "op": "PUSH1", "path": "0", "value": "0x60"}, "2434": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5461], "op": "ADD", "path": "0"}, "2435": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5433, 5461], "op": "MLOAD", "path": "0"}, "2436": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x40"}, "2438": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "MLOAD", "path": "0"}, "2439": {"op": "PUSH1", "value": "0x1"}, "2441": {"op": "PUSH1", "value": "0x1"}, "2443": {"op": "PUSH1", "value": "0xE0"}, "2445": {"op": "SHL"}, "2446": {"op": "SUB"}, "2447": {"op": "NOT"}, "2448": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0xE0"}, "2450": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP7", "path": "0"}, "2451": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "SWAP1", "path": "0"}, "2452": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "SHL", "path": "0"}, "2453": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "AND", "path": "0"}, "2454": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP2", "path": "0"}, "2455": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "MSTORE", "path": "0"}, "2456": {"op": "PUSH1", "value": "0x1"}, "2458": {"op": "PUSH1", "value": "0x1"}, "2460": {"op": "PUSH1", "value": "0xA0"}, "2462": {"op": "SHL"}, "2463": {"op": "SUB"}, "2464": {"op": "SWAP4"}, "2465": {"op": "DUP5"}, "2466": {"op": "AND"}, "2467": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x4"}, "2469": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP3", "path": "0"}, "2470": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "ADD", "path": "0"}, "2471": {"op": "MSTORE"}, "2472": {"op": "SWAP3"}, "2473": {"op": "SWAP1"}, "2474": {"op": "SWAP2"}, "2475": {"op": "AND"}, "2476": {"op": "PUSH1", "value": "0x24"}, "2478": {"op": "DUP4"}, "2479": {"op": "ADD"}, "2480": {"op": "MSTORE"}, "2481": {"op": "PUSH1", "value": "0x44"}, "2483": {"op": "DUP3"}, "2484": {"op": "ADD"}, "2485": {"op": "MSTORE"}, "2486": {"op": "PUSH1", "value": "0x64"}, "2488": {"op": "ADD"}, "2489": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x20"}, "2491": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x40"}, "2493": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "MLOAD", "path": "0"}, "2494": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP1", "path": "0"}, "2495": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP4", "path": "0"}, "2496": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "SUB", "path": "0"}, "2497": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP2", "path": "0"}, "2498": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x0"}, "2500": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP8", "path": "0"}, "2501": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "GAS", "path": "0"}, "2502": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "CALL", "path": "0"}, "2503": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "ISZERO", "path": "0"}, "2504": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP1", "path": "0"}, "2505": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "ISZERO", "path": "0"}, "2506": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH2", "path": "0", "value": "0x9D7"}, "2509": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "JUMPI", "path": "0"}, "2510": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "RETURNDATASIZE", "path": "0"}, "2511": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x0"}, "2513": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP1", "path": "0"}, "2514": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "RETURNDATACOPY", "path": "0"}, "2515": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "RETURNDATASIZE", "path": "0"}, "2516": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x0"}, "2518": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "REVERT", "path": "0"}, "2519": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "JUMPDEST", "path": "0"}, "2520": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "POP", "path": "0"}, "2521": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "POP", "path": "0"}, "2522": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "POP", "path": "0"}, "2523": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "POP", "path": "0"}, "2524": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x40"}, "2526": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "MLOAD", "path": "0"}, "2527": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "RETURNDATASIZE", "path": "0"}, "2528": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x1F"}, "2530": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "NOT", "path": "0"}, "2531": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x1F"}, "2533": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP3", "path": "0"}, "2534": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "ADD", "path": "0"}, "2535": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "AND", "path": "0"}, "2536": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP3", "path": "0"}, "2537": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "ADD", "path": "0"}, "2538": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP1", "path": "0"}, "2539": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH1", "path": "0", "value": "0x40"}, "2541": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "MSTORE", "path": "0"}, "2542": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "POP", "path": "0"}, "2543": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "DUP2", "path": "0"}, "2544": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "ADD", "path": "0"}, "2545": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "SWAP1", "path": "0"}, "2546": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH2", "path": "0", "value": "0x9FB"}, "2549": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "SWAP2", "path": "0"}, "2550": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "SWAP1", "path": "0"}, "2551": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "PUSH2", "path": "0", "value": "0xE0A"}, "2554": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5351, 5462], "op": "JUMP", "path": "0"}, "2555": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5351, 5462], "op": "JUMPDEST", "path": "0"}, "2556": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5341, 5462], "op": "SWAP2", "path": "0"}, "2557": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5341, 5462], "op": "POP", "path": "0"}, "2558": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5486, 5494], "op": "PUSH1", "path": "0", "value": "0x0"}, "2560": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5519], "op": "DUP6", "path": "0"}, "2561": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5520, 5521], "op": "DUP5", "path": "0"}, "2562": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "DUP2", "path": "0"}, "2563": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "MLOAD", "path": "0"}, "2564": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "DUP2", "path": "0"}, "2565": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "LT", "path": "0"}, "2566": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "PUSH2", "path": "0", "value": "0xA11"}, "2569": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "JUMPI", "path": "0"}, "2570": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "PUSH2", "path": "0", "value": "0xA11"}, "2573": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2576": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5508, 5522], "op": "JUMP", "path": "0"}, "2577": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "JUMPDEST", "path": "0"}, "2578": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "PUSH1", "path": "0", "value": "0x20"}, "2580": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "MUL", "path": "0"}, "2581": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "PUSH1", "path": "0", "value": "0x20"}, "2583": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "ADD", "path": "0"}, "2584": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "ADD", "path": "0"}, "2585": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5522], "op": "MLOAD", "path": "0"}, "2586": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5530], "op": "PUSH1", "path": "0", "value": "0x40"}, "2588": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5530], "op": "ADD", "path": "0"}, "2589": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5508, 5530], "op": "MLOAD", "path": "0"}, "2590": {"op": "PUSH1", "value": "0x1"}, "2592": {"op": "PUSH1", "value": "0x1"}, "2594": {"op": "PUSH1", "value": "0xA0"}, "2596": {"op": "SHL"}, "2597": {"op": "SUB"}, "2598": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5536], "op": "AND", "path": "0"}, "2599": {"offset": [642, 651], "op": "PUSH6", "path": "0", "value": "0x2BA7DEF3000"}, "2606": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x40"}, "2608": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "MLOAD", "path": "0"}, "2609": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x0"}, "2611": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x40"}, "2613": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "MLOAD", "path": "0"}, "2614": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP1", "path": "0"}, "2615": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP4", "path": "0"}, "2616": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "SUB", "path": "0"}, "2617": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP2", "path": "0"}, "2618": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP6", "path": "0"}, "2619": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP8", "path": "0"}, "2620": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "GAS", "path": "0"}, "2621": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "CALL", "path": "0"}, "2622": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "SWAP3", "path": "0"}, "2623": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "POP", "path": "0"}, "2624": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "POP", "path": "0"}, "2625": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "POP", "path": "0"}, "2626": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "RETURNDATASIZE", "path": "0"}, "2627": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP1", "path": "0"}, "2628": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x0"}, "2630": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP2", "path": "0"}, "2631": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "EQ", "path": "0"}, "2632": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH2", "path": "0", "value": "0xA6D"}, "2635": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "JUMPI", "path": "0"}, "2636": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x40"}, "2638": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "MLOAD", "path": "0"}, "2639": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "SWAP2", "path": "0"}, "2640": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "POP", "path": "0"}, "2641": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x1F"}, "2643": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "NOT", "path": "0"}, "2644": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x3F"}, "2646": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "RETURNDATASIZE", "path": "0"}, "2647": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "ADD", "path": "0"}, "2648": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "AND", "path": "0"}, "2649": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP3", "path": "0"}, "2650": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "ADD", "path": "0"}, "2651": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x40"}, "2653": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "MSTORE", "path": "0"}, "2654": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "RETURNDATASIZE", "path": "0"}, "2655": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP3", "path": "0"}, "2656": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "MSTORE", "path": "0"}, "2657": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "RETURNDATASIZE", "path": "0"}, "2658": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x0"}, "2660": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x20"}, "2662": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "DUP5", "path": "0"}, "2663": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "ADD", "path": "0"}, "2664": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "RETURNDATACOPY", "path": "0"}, "2665": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH2", "path": "0", "value": "0xA72"}, "2668": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "JUMP", "path": "0"}, "2669": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "JUMPDEST", "path": "0"}, "2670": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "PUSH1", "path": "0", "value": "0x60"}, "2672": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "SWAP2", "path": "0"}, "2673": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "POP", "path": "0"}, "2674": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "JUMPDEST", "path": "0"}, "2675": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5500, 5558], "op": "POP", "path": "0"}, "2676": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5485, 5558], "op": "POP", "path": "0"}, "2677": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5485, 5558], "op": "SWAP1", "path": "0"}, "2678": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5485, 5558], "op": "POP", "path": "0"}, "2679": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5591, 5598], "op": "DUP3", "path": "0", "statement": 24}, "2680": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5591, 5605], "op": "DUP1", "path": "0"}, "2681": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5591, 5605], "op": "ISZERO", "path": "0"}, "2682": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5591, 5605], "op": "PUSH2", "path": "0", "value": "0xA80"}, "2685": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5591, 5605], "op": "JUMPI", "path": "0"}, "2686": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5591, 5605], "op": "POP", "path": "0"}, "2687": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5602, 5605], "op": "DUP1", "path": "0"}, "2688": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5591, 5605], "op": "JUMPDEST", "path": "0"}, "2689": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5581, 5605], "op": "SWAP3", "path": "0"}, "2690": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5581, 5605], "op": "POP", "path": "0"}, "2691": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5247, 5624], "op": "POP", "path": "0"}, "2692": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5247, 5624], "op": "POP", "path": "0"}, "2693": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5027, 5624], "op": "JUMPDEST", "path": "0"}, "2694": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "PUSH32", "path": "0", "statement": 25, "value": "0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A"}, "2727": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5668], "op": "DUP5", "path": "0"}, "2728": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5669, 5670], "op": "DUP4", "path": "0"}, "2729": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "DUP2", "path": "0"}, "2730": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "MLOAD", "path": "0"}, "2731": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "DUP2", "path": "0"}, "2732": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "LT", "path": "0"}, "2733": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "PUSH2", "path": "0", "value": "0xAB8"}, "2736": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "JUMPI", "path": "0"}, "2737": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "PUSH2", "path": "0", "value": "0xAB8"}, "2740": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2743": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5657, 5671], "op": "JUMP", "path": "0"}, "2744": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "JUMPDEST", "path": "0"}, "2745": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "PUSH1", "path": "0", "value": "0x20"}, "2747": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "MUL", "path": "0"}, "2748": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "PUSH1", "path": "0", "value": "0x20"}, "2750": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "ADD", "path": "0"}, "2751": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "ADD", "path": "0"}, "2752": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5671], "op": "MLOAD", "path": "0"}, "2753": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5688], "op": "PUSH1", "path": "0", "value": "0x0"}, "2755": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5688], "op": "ADD", "path": "0"}, "2756": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5657, 5688], "op": "MLOAD", "path": "0"}, "2757": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5690, 5697], "op": "DUP3", "path": "0"}, "2758": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "PUSH1", "path": "0", "value": "0x40"}, "2760": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "MLOAD", "path": "0"}, "2761": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "PUSH2", "path": "0", "value": "0xADE"}, "2764": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "SWAP3", "path": "0"}, "2765": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "SWAP2", "path": "0"}, "2766": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "SWAP1", "path": "0"}, "2767": {"op": "SWAP2"}, "2768": {"op": "DUP3"}, "2769": {"op": "MSTORE"}, "2770": {"op": "ISZERO"}, "2771": {"op": "ISZERO"}, "2772": {"op": "PUSH1", "value": "0x20"}, "2774": {"op": "DUP3"}, "2775": {"op": "ADD"}, "2776": {"op": "MSTORE"}, "2777": {"op": "PUSH1", "value": "0x40"}, "2779": {"op": "ADD"}, "2780": {"op": "SWAP1"}, "2781": {"op": "JUMP"}, "2782": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "JUMPDEST", "path": "0"}, "2783": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "PUSH1", "path": "0", "value": "0x40"}, "2785": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "MLOAD", "path": "0"}, "2786": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "DUP1", "path": "0"}, "2787": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "SWAP2", "path": "0"}, "2788": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "SUB", "path": "0"}, "2789": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "SWAP1", "path": "0"}, "2790": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5646, 5698], "op": "LOG1", "path": "0"}, "2791": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4979, 5713], "op": "POP", "path": "0"}, "2792": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4923, 5713], "op": "JUMPDEST", "path": "0"}, "2793": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4904, 4907], "op": "DUP1", "path": "0", "statement": 26}, "2794": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4904, 4907], "op": "PUSH2", "path": "0", "value": "0xAF2"}, "2797": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4904, 4907], "op": "DUP2", "path": "0"}, "2798": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4904, 4907], "op": "PUSH2", "path": "0", "value": "0xE33"}, "2801": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4904, 4907], "op": "JUMP", "path": "0"}, "2802": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4904, 4907], "op": "JUMPDEST", "path": "0"}, "2803": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4904, 4907], "op": "SWAP2", "path": "0"}, "2804": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4904, 4907], "op": "POP", "path": "0"}, "2805": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4904, 4907], "op": "POP", "path": "0"}, "2806": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4864, 5723], "op": "PUSH2", "path": "0", "value": "0x800"}, "2809": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4864, 5723], "op": "JUMP", "path": "0"}, "2810": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4864, 5723], "op": "JUMPDEST", "path": "0"}, "2811": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4864, 5723], "op": "POP", "path": "0"}, "2812": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4601, 5733], "op": "POP", "path": "0"}, "2813": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4528, 5733], "op": "POP", "path": "0"}, "2814": {"fn": "SourceDomainSideBridge.processClaims", "jump": "o", "offset": [4528, 5733], "op": "JUMP", "path": "0"}, "2815": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6319, 6739], "op": "JUMPDEST", "path": "0"}, "2816": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6476, 6500], "op": "PUSH1", "path": "0", "value": "0x2"}, "2818": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6476, 6500], "op": "SLOAD", "path": "0"}, "2819": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6420, 6427], "op": "PUSH1", "path": "0", "value": "0x0"}, "2821": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6420, 6427], "op": "SWAP1", "path": "0"}, "2822": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6420, 6427], "op": "DUP2", "path": "0"}, "2823": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6510, 6689], "op": "JUMPDEST", "path": "0"}, "2824": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6530, 6541], "op": "DUP4", "path": "0"}, "2825": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6530, 6548], "op": "MLOAD", "path": "0"}, "2826": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6526, 6527], "op": "DUP2", "path": "0"}, "2827": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6526, 6548], "op": "LT", "path": "0"}, "2828": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6510, 6689], "op": "ISZERO", "path": "0"}, "2829": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6510, 6689], "op": "PUSH2", "path": "0", "value": "0xBDC"}, "2832": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6510, 6689], "op": "JUMPI", "path": "0"}, "2833": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "statement": 27, "value": "0x2"}, "2835": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6634, 6661], "op": "DUP3", "path": "0"}, "2836": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6673], "op": "DUP6", "path": "0"}, "2837": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6674, 6675], "op": "DUP4", "path": "0"}, "2838": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "DUP2", "path": "0"}, "2839": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "MLOAD", "path": "0"}, "2840": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "DUP2", "path": "0"}, "2841": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "LT", "path": "0"}, "2842": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "PUSH2", "path": "0", "value": "0xB25"}, "2845": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "JUMPI", "path": "0"}, "2846": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "PUSH2", "path": "0", "value": "0xB25"}, "2849": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "PUSH2", "path": "0", "value": "0xF14"}, "2852": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [6662, 6676], "op": "JUMP", "path": "0"}, "2853": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "JUMPDEST", "path": "0"}, "2854": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "PUSH1", "path": "0", "value": "0x20"}, "2856": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "SWAP1", "path": "0"}, "2857": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "DUP2", "path": "0"}, "2858": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "MUL", "path": "0"}, "2859": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "SWAP2", "path": "0"}, "2860": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "SWAP1", "path": "0"}, "2861": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "SWAP2", "path": "0"}, "2862": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "ADD", "path": "0"}, "2863": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "DUP2", "path": "0"}, "2864": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "ADD", "path": "0"}, "2865": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6662, 6676], "op": "MLOAD", "path": "0"}, "2866": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "PUSH1", "path": "0", "value": "0x40"}, "2868": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "DUP1", "path": "0"}, "2869": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "MLOAD", "path": "0"}, "2870": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "DUP1", "path": "0"}, "2871": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "DUP5", "path": "0"}, "2872": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "ADD", "path": "0"}, "2873": {"op": "SWAP5"}, "2874": {"op": "SWAP1"}, "2875": {"op": "SWAP5"}, "2876": {"op": "MSTORE"}, "2877": {"op": "DUP2"}, "2878": {"op": "MLOAD"}, "2879": {"op": "DUP5"}, "2880": {"op": "DUP3"}, "2881": {"op": "ADD"}, "2882": {"op": "MSTORE"}, "2883": {"op": "SWAP2"}, "2884": {"op": "DUP2"}, "2885": {"op": "ADD"}, "2886": {"op": "MLOAD"}, "2887": {"op": "PUSH1", "value": "0x1"}, "2889": {"op": "PUSH1", "value": "0x1"}, "2891": {"op": "PUSH1", "value": "0xA0"}, "2893": {"op": "SHL"}, "2894": {"op": "SUB"}, "2895": {"op": "SWAP1"}, "2896": {"op": "DUP2"}, "2897": {"op": "AND"}, "2898": {"op": "PUSH1", "value": "0x60"}, "2900": {"op": "DUP1"}, "2901": {"op": "DUP7"}, "2902": {"op": "ADD"}, "2903": {"op": "SWAP2"}, "2904": {"op": "SWAP1"}, "2905": {"op": "SWAP2"}, "2906": {"op": "MSTORE"}, "2907": {"op": "SWAP3"}, "2908": {"op": "DUP3"}, "2909": {"op": "ADD"}, "2910": {"op": "MLOAD"}, "2911": {"op": "AND"}, "2912": {"op": "PUSH1", "value": "0x80"}, "2914": {"op": "DUP5"}, "2915": {"op": "ADD"}, "2916": {"op": "MSTORE"}, "2917": {"op": "ADD"}, "2918": {"op": "MLOAD"}, "2919": {"op": "PUSH1", "value": "0xA0"}, "2921": {"op": "DUP3"}, "2922": {"op": "ADD"}, "2923": {"op": "MSTORE"}, "2924": {"op": "PUSH1", "value": "0xC0"}, "2926": {"op": "ADD"}, "2927": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "PUSH1", "path": "0", "value": "0x40"}, "2929": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "DUP1", "path": "0"}, "2930": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "MLOAD", "path": "0"}, "2931": {"op": "PUSH1", "value": "0x1F"}, "2933": {"op": "NOT"}, "2934": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "DUP2", "path": "0"}, "2935": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "DUP5", "path": "0"}, "2936": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "SUB", "path": "0"}, "2937": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "ADD", "path": "0"}, "2938": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "DUP2", "path": "0"}, "2939": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "MSTORE", "path": "0"}, "2940": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "SWAP1", "path": "0"}, "2941": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "DUP3", "path": "0"}, "2942": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "SWAP1", "path": "0"}, "2943": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6623, 6677], "op": "MSTORE", "path": "0"}, "2944": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH2", "path": "0", "value": "0xB88"}, "2947": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "SWAP2", "path": "0"}, "2948": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH2", "path": "0", "value": "0xEA3"}, "2951": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [6616, 6678], "op": "JUMP", "path": "0"}, "2952": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "JUMPDEST", "path": "0"}, "2953": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "value": "0x20"}, "2955": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "value": "0x40"}, "2957": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "MLOAD", "path": "0"}, "2958": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP1", "path": "0"}, "2959": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP4", "path": "0"}, "2960": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "SUB", "path": "0"}, "2961": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP2", "path": "0"}, "2962": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP6", "path": "0"}, "2963": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "GAS", "path": "0"}, "2964": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "STATICCALL", "path": "0"}, "2965": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "ISZERO", "path": "0"}, "2966": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP1", "path": "0"}, "2967": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "ISZERO", "path": "0"}, "2968": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH2", "path": "0", "value": "0xBA5"}, "2971": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "JUMPI", "path": "0"}, "2972": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "RETURNDATASIZE", "path": "0"}, "2973": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "value": "0x0"}, "2975": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP1", "path": "0"}, "2976": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "RETURNDATACOPY", "path": "0"}, "2977": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "RETURNDATASIZE", "path": "0"}, "2978": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "value": "0x0"}, "2980": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "REVERT", "path": "0"}, "2981": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "JUMPDEST", "path": "0"}, "2982": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "POP", "path": "0"}, "2983": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "POP", "path": "0"}, "2984": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "POP", "path": "0"}, "2985": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "value": "0x40"}, "2987": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "MLOAD", "path": "0"}, "2988": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "RETURNDATASIZE", "path": "0"}, "2989": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "value": "0x1F"}, "2991": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "NOT", "path": "0"}, "2992": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "value": "0x1F"}, "2994": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP3", "path": "0"}, "2995": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "ADD", "path": "0"}, "2996": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "AND", "path": "0"}, "2997": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP3", "path": "0"}, "2998": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "ADD", "path": "0"}, "2999": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP1", "path": "0"}, "3000": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH1", "path": "0", "value": "0x40"}, "3002": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "MSTORE", "path": "0"}, "3003": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "POP", "path": "0"}, "3004": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "DUP2", "path": "0"}, "3005": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "ADD", "path": "0"}, "3006": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "SWAP1", "path": "0"}, "3007": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH2", "path": "0", "value": "0xBC8"}, "3010": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "SWAP2", "path": "0"}, "3011": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "SWAP1", "path": "0"}, "3012": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "PUSH2", "path": "0", "value": "0xEDE"}, "3015": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [6616, 6678], "op": "JUMP", "path": "0"}, "3016": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6616, 6678], "op": "JUMPDEST", "path": "0"}, "3017": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6569, 6678], "op": "SWAP2", "path": "0"}, "3018": {"op": "POP"}, "3019": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6550, 6553], "op": "DUP1", "path": "0", "statement": 28}, "3020": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6550, 6553], "op": "PUSH2", "path": "0", "value": "0xBD4"}, "3023": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6550, 6553], "op": "DUP2", "path": "0"}, "3024": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6550, 6553], "op": "PUSH2", "path": "0", "value": "0xE33"}, "3027": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [6550, 6553], "op": "JUMP", "path": "0"}, "3028": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6550, 6553], "op": "JUMPDEST", "path": "0"}, "3029": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6550, 6553], "op": "SWAP2", "path": "0"}, "3030": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6550, 6553], "op": "POP", "path": "0"}, "3031": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6550, 6553], "op": "POP", "path": "0"}, "3032": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6510, 6689], "op": "PUSH2", "path": "0", "value": "0xB07"}, "3035": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6510, 6689], "op": "JUMP", "path": "0"}, "3036": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6510, 6689], "op": "JUMPDEST", "path": "0"}, "3037": {"op": "POP"}, "3038": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6705, 6732], "op": "SWAP3", "path": "0", "statement": 29}, "3039": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6319, 6739], "op": "SWAP2", "path": "0"}, "3040": {"op": "POP"}, "3041": {"op": "POP"}, "3042": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "o", "offset": [6319, 6739], "op": "JUMP", "path": "0"}, "3043": {"op": "JUMPDEST"}, "3044": {"op": "PUSH1", "value": "0x0"}, "3046": {"op": "PUSH1", "value": "0x20"}, "3048": {"op": "DUP3"}, "3049": {"op": "DUP5"}, "3050": {"op": "SUB"}, "3051": {"op": "SLT"}, "3052": {"op": "ISZERO"}, "3053": {"op": "PUSH2", "value": "0xBF5"}, "3056": {"op": "JUMPI"}, "3057": {"op": "PUSH1", "value": "0x0"}, "3059": {"op": "DUP1"}, "3060": {"op": "REVERT"}, "3061": {"op": "JUMPDEST"}, "3062": {"op": "POP"}, "3063": {"op": "CALLDATALOAD"}, "3064": {"op": "SWAP2"}, "3065": {"op": "SWAP1"}, "3066": {"op": "POP"}, "3067": {"jump": "o", "op": "JUMP"}, "3068": {"op": "JUMPDEST"}, "3069": {"op": "PUSH1", "value": "0x1"}, "3071": {"op": "PUSH1", "value": "0x1"}, "3073": {"op": "PUSH1", "value": "0xA0"}, "3075": {"op": "SHL"}, "3076": {"op": "SUB"}, "3077": {"op": "DUP2"}, "3078": {"op": "AND"}, "3079": {"op": "DUP2"}, "3080": {"op": "EQ"}, "3081": {"op": "PUSH2", "value": "0xC11"}, "3084": {"op": "JUMPI"}, "3085": {"op": "PUSH1", "value": "0x0"}, "3087": {"op": "DUP1"}, "3088": {"op": "REVERT"}, "3089": {"op": "JUMPDEST"}, "3090": {"op": "POP"}, "3091": {"jump": "o", "op": "JUMP"}, "3092": {"op": "JUMPDEST"}, "3093": {"op": "PUSH1", "value": "0x0"}, "3095": {"op": "DUP1"}, "3096": {"op": "PUSH1", "value": "0x0"}, "3098": {"op": "DUP1"}, "3099": {"op": "PUSH1", "value": "0x80"}, "3101": {"op": "DUP6"}, "3102": {"op": "DUP8"}, "3103": {"op": "SUB"}, "3104": {"op": "SLT"}, "3105": {"op": "ISZERO"}, "3106": {"op": "PUSH2", "value": "0xC2A"}, "3109": {"op": "JUMPI"}, "3110": {"op": "PUSH1", "value": "0x0"}, "3112": {"op": "DUP1"}, "3113": {"op": "REVERT"}, "3114": {"op": "JUMPDEST"}, "3115": {"op": "DUP5"}, "3116": {"op": "CALLDATALOAD"}, "3117": {"op": "PUSH2", "value": "0xC35"}, "3120": {"op": "DUP2"}, "3121": {"op": "PUSH2", "value": "0xBFC"}, "3124": {"jump": "i", "op": "JUMP"}, "3125": {"op": "JUMPDEST"}, "3126": {"op": "SWAP4"}, "3127": {"op": "POP"}, "3128": {"op": "PUSH1", "value": "0x20"}, "3130": {"op": "DUP6"}, "3131": {"op": "ADD"}, "3132": {"op": "CALLDATALOAD"}, "3133": {"op": "PUSH2", "value": "0xC45"}, "3136": {"op": "DUP2"}, "3137": {"op": "PUSH2", "value": "0xBFC"}, "3140": {"jump": "i", "op": "JUMP"}, "3141": {"op": "JUMPDEST"}, "3142": {"op": "SWAP4"}, "3143": {"op": "SWAP7"}, "3144": {"op": "SWAP4"}, "3145": {"op": "SWAP6"}, "3146": {"op": "POP"}, "3147": {"op": "POP"}, "3148": {"op": "POP"}, "3149": {"op": "POP"}, "3150": {"op": "PUSH1", "value": "0x40"}, "3152": {"op": "DUP3"}, "3153": {"op": "ADD"}, "3154": {"op": "CALLDATALOAD"}, "3155": {"op": "SWAP2"}, "3156": {"op": "PUSH1", "value": "0x60"}, "3158": {"op": "ADD"}, "3159": {"op": "CALLDATALOAD"}, "3160": {"op": "SWAP1"}, "3161": {"jump": "o", "op": "JUMP"}, "3162": {"op": "JUMPDEST"}, "3163": {"op": "PUSH4", "value": "0x4E487B71"}, "3168": {"op": "PUSH1", "value": "0xE0"}, "3170": {"op": "SHL"}, "3171": {"op": "PUSH1", "value": "0x0"}, "3173": {"op": "MSTORE"}, "3174": {"op": "PUSH1", "value": "0x41"}, "3176": {"op": "PUSH1", "value": "0x4"}, "3178": {"op": "MSTORE"}, "3179": {"op": "PUSH1", "value": "0x24"}, "3181": {"op": "PUSH1", "value": "0x0"}, "3183": {"op": "REVERT"}, "3184": {"op": "JUMPDEST"}, "3185": {"op": "PUSH1", "value": "0x40"}, "3187": {"op": "MLOAD"}, "3188": {"op": "PUSH1", "value": "0x80"}, "3190": {"op": "DUP2"}, "3191": {"op": "ADD"}, "3192": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3201": {"op": "DUP2"}, "3202": {"op": "GT"}, "3203": {"op": "DUP3"}, "3204": {"op": "DUP3"}, "3205": {"op": "LT"}, "3206": {"op": "OR"}, "3207": {"op": "ISZERO"}, "3208": {"op": "PUSH2", "value": "0xC93"}, "3211": {"op": "JUMPI"}, "3212": {"op": "PUSH2", "value": "0xC93"}, "3215": {"op": "PUSH2", "value": "0xC5A"}, "3218": {"jump": "i", "op": "JUMP"}, "3219": {"op": "JUMPDEST"}, "3220": {"op": "PUSH1", "value": "0x40"}, "3222": {"op": "MSTORE"}, "3223": {"op": "SWAP1"}, "3224": {"jump": "o", "op": "JUMP"}, "3225": {"op": "JUMPDEST"}, "3226": {"op": "PUSH1", "value": "0x40"}, "3228": {"op": "MLOAD"}, "3229": {"op": "PUSH1", "value": "0x1F"}, "3231": {"op": "DUP3"}, "3232": {"op": "ADD"}, "3233": {"op": "PUSH1", "value": "0x1F"}, "3235": {"op": "NOT"}, "3236": {"op": "AND"}, "3237": {"op": "DUP2"}, "3238": {"op": "ADD"}, "3239": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3248": {"op": "DUP2"}, "3249": {"op": "GT"}, "3250": {"op": "DUP3"}, "3251": {"op": "DUP3"}, "3252": {"op": "LT"}, "3253": {"op": "OR"}, "3254": {"op": "ISZERO"}, "3255": {"op": "PUSH2", "value": "0xCC2"}, "3258": {"op": "JUMPI"}, "3259": {"op": "PUSH2", "value": "0xCC2"}, "3262": {"op": "PUSH2", "value": "0xC5A"}, "3265": {"jump": "i", "op": "JUMP"}, "3266": {"op": "JUMPDEST"}, "3267": {"op": "PUSH1", "value": "0x40"}, "3269": {"op": "MSTORE"}, "3270": {"op": "SWAP2"}, "3271": {"op": "SWAP1"}, "3272": {"op": "POP"}, "3273": {"jump": "o", "op": "JUMP"}, "3274": {"op": "JUMPDEST"}, "3275": {"op": "PUSH1", "value": "0x0"}, "3277": {"op": "PUSH1", "value": "0x20"}, "3279": {"op": "DUP1"}, "3280": {"op": "DUP4"}, "3281": {"op": "DUP6"}, "3282": {"op": "SUB"}, "3283": {"op": "SLT"}, "3284": {"op": "ISZERO"}, "3285": {"op": "PUSH2", "value": "0xCDD"}, "3288": {"op": "JUMPI"}, "3289": {"op": "PUSH1", "value": "0x0"}, "3291": {"op": "DUP1"}, "3292": {"op": "REVERT"}, "3293": {"op": "JUMPDEST"}, "3294": {"op": "DUP3"}, "3295": {"op": "CALLDATALOAD"}, "3296": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3305": {"op": "DUP1"}, "3306": {"op": "DUP3"}, "3307": {"op": "GT"}, "3308": {"op": "ISZERO"}, "3309": {"op": "PUSH2", "value": "0xCF5"}, "3312": {"op": "JUMPI"}, "3313": {"op": "PUSH1", "value": "0x0"}, "3315": {"op": "DUP1"}, "3316": {"op": "REVERT"}, "3317": {"op": "JUMPDEST"}, "3318": {"op": "DUP2"}, "3319": {"op": "DUP6"}, "3320": {"op": "ADD"}, "3321": {"op": "SWAP2"}, "3322": {"op": "POP"}, "3323": {"op": "DUP6"}, "3324": {"op": "PUSH1", "value": "0x1F"}, "3326": {"op": "DUP4"}, "3327": {"op": "ADD"}, "3328": {"op": "SLT"}, "3329": {"op": "PUSH2", "value": "0xD09"}, "3332": {"op": "JUMPI"}, "3333": {"op": "PUSH1", "value": "0x0"}, "3335": {"op": "DUP1"}, "3336": {"op": "REVERT"}, "3337": {"op": "JUMPDEST"}, "3338": {"op": "DUP2"}, "3339": {"op": "CALLDATALOAD"}, "3340": {"op": "DUP2"}, "3341": {"op": "DUP2"}, "3342": {"op": "GT"}, "3343": {"op": "ISZERO"}, "3344": {"op": "PUSH2", "value": "0xD1B"}, "3347": {"op": "JUMPI"}, "3348": {"op": "PUSH2", "value": "0xD1B"}, "3351": {"op": "PUSH2", "value": "0xC5A"}, "3354": {"jump": "i", "op": "JUMP"}, "3355": {"op": "JUMPDEST"}, "3356": {"op": "PUSH2", "value": "0xD29"}, "3359": {"op": "DUP5"}, "3360": {"op": "DUP3"}, "3361": {"op": "PUSH1", "value": "0x5"}, "3363": {"op": "SHL"}, "3364": {"op": "ADD"}, "3365": {"op": "PUSH2", "value": "0xC99"}, "3368": {"jump": "i", "op": "JUMP"}, "3369": {"op": "JUMPDEST"}, "3370": {"op": "DUP2"}, "3371": {"op": "DUP2"}, "3372": {"op": "MSTORE"}, "3373": {"op": "DUP5"}, "3374": {"op": "DUP2"}, "3375": {"op": "ADD"}, "3376": {"op": "SWAP3"}, "3377": {"op": "POP"}, "3378": {"op": "PUSH1", "value": "0x7"}, "3380": {"op": "SWAP2"}, "3381": {"op": "SWAP1"}, "3382": {"op": "SWAP2"}, "3383": {"op": "SHL"}, "3384": {"op": "DUP4"}, "3385": {"op": "ADD"}, "3386": {"op": "DUP5"}, "3387": {"op": "ADD"}, "3388": {"op": "SWAP1"}, "3389": {"op": "DUP8"}, "3390": {"op": "DUP3"}, "3391": {"op": "GT"}, "3392": {"op": "ISZERO"}, "3393": {"op": "PUSH2", "value": "0xD49"}, "3396": {"op": "JUMPI"}, "3397": {"op": "PUSH1", "value": "0x0"}, "3399": {"op": "DUP1"}, "3400": {"op": "REVERT"}, "3401": {"op": "JUMPDEST"}, "3402": {"op": "SWAP3"}, "3403": {"op": "DUP5"}, "3404": {"op": "ADD"}, "3405": {"op": "SWAP3"}, "3406": {"op": "JUMPDEST"}, "3407": {"op": "DUP2"}, "3408": {"op": "DUP5"}, "3409": {"op": "LT"}, "3410": {"op": "ISZERO"}, "3411": {"op": "PUSH2", "value": "0xDB2"}, "3414": {"op": "JUMPI"}, "3415": {"op": "PUSH1", "value": "0x80"}, "3417": {"op": "DUP5"}, "3418": {"op": "DUP10"}, "3419": {"op": "SUB"}, "3420": {"op": "SLT"}, "3421": {"op": "ISZERO"}, "3422": {"op": "PUSH2", "value": "0xD67"}, "3425": {"op": "JUMPI"}, "3426": {"op": "PUSH1", "value": "0x0"}, "3428": {"op": "DUP1"}, "3429": {"op": "DUP2"}, "3430": {"op": "REVERT"}, "3431": {"op": "JUMPDEST"}, "3432": {"op": "PUSH2", "value": "0xD6F"}, "3435": {"op": "PUSH2", "value": "0xC70"}, "3438": {"jump": "i", "op": "JUMP"}, "3439": {"op": "JUMPDEST"}, "3440": {"op": "DUP5"}, "3441": {"op": "CALLDATALOAD"}, "3442": {"op": "DUP2"}, "3443": {"op": "MSTORE"}, "3444": {"op": "DUP6"}, "3445": {"op": "DUP6"}, "3446": {"op": "ADD"}, "3447": {"op": "CALLDATALOAD"}, "3448": {"op": "PUSH2", "value": "0xD80"}, "3451": {"op": "DUP2"}, "3452": {"op": "PUSH2", "value": "0xBFC"}, "3455": {"jump": "i", "op": "JUMP"}, "3456": {"op": "JUMPDEST"}, "3457": {"op": "DUP2"}, "3458": {"op": "DUP8"}, "3459": {"op": "ADD"}, "3460": {"op": "MSTORE"}, "3461": {"op": "PUSH1", "value": "0x40"}, "3463": {"op": "DUP6"}, "3464": {"op": "DUP2"}, "3465": {"op": "ADD"}, "3466": {"op": "CALLDATALOAD"}, "3467": {"op": "PUSH2", "value": "0xD93"}, "3470": {"op": "DUP2"}, "3471": {"op": "PUSH2", "value": "0xBFC"}, "3474": {"jump": "i", "op": "JUMP"}, "3475": {"op": "JUMPDEST"}, "3476": {"op": "SWAP1"}, "3477": {"op": "DUP3"}, "3478": {"op": "ADD"}, "3479": {"op": "MSTORE"}, "3480": {"op": "PUSH1", "value": "0x60"}, "3482": {"op": "DUP6"}, "3483": {"op": "DUP2"}, "3484": {"op": "ADD"}, "3485": {"op": "CALLDATALOAD"}, "3486": {"op": "SWAP1"}, "3487": {"op": "DUP3"}, "3488": {"op": "ADD"}, "3489": {"op": "MSTORE"}, "3490": {"op": "DUP4"}, "3491": {"op": "MSTORE"}, "3492": {"op": "PUSH1", "value": "0x80"}, "3494": {"op": "SWAP1"}, "3495": {"op": "SWAP4"}, "3496": {"op": "ADD"}, "3497": {"op": "SWAP3"}, "3498": {"op": "SWAP2"}, "3499": {"op": "DUP5"}, "3500": {"op": "ADD"}, "3501": {"op": "SWAP2"}, "3502": {"op": "PUSH2", "value": "0xD4E"}, "3505": {"op": "JUMP"}, "3506": {"op": "JUMPDEST"}, "3507": {"op": "SWAP8"}, "3508": {"op": "SWAP7"}, "3509": {"op": "POP"}, "3510": {"op": "POP"}, "3511": {"op": "POP"}, "3512": {"op": "POP"}, "3513": {"op": "POP"}, "3514": {"op": "POP"}, "3515": {"op": "POP"}, "3516": {"jump": "o", "op": "JUMP"}, "3517": {"op": "JUMPDEST"}, "3518": {"op": "PUSH4", "value": "0x4E487B71"}, "3523": {"op": "PUSH1", "value": "0xE0"}, "3525": {"op": "SHL"}, "3526": {"op": "PUSH1", "value": "0x0"}, "3528": {"op": "MSTORE"}, "3529": {"op": "PUSH1", "value": "0x11"}, "3531": {"op": "PUSH1", "value": "0x4"}, "3533": {"op": "MSTORE"}, "3534": {"op": "PUSH1", "value": "0x24"}, "3536": {"op": "PUSH1", "value": "0x0"}, "3538": {"op": "REVERT"}, "3539": {"op": "JUMPDEST"}, "3540": {"op": "PUSH1", "value": "0x0"}, "3542": {"op": "DUP2"}, "3543": {"op": "PUSH1", "value": "0x0"}, "3545": {"op": "NOT"}, "3546": {"op": "DIV"}, "3547": {"op": "DUP4"}, "3548": {"op": "GT"}, "3549": {"op": "DUP3"}, "3550": {"op": "ISZERO"}, "3551": {"op": "ISZERO"}, "3552": {"op": "AND"}, "3553": {"op": "ISZERO"}, "3554": {"op": "PUSH2", "value": "0xDED"}, "3557": {"op": "JUMPI"}, "3558": {"op": "PUSH2", "value": "0xDED"}, "3561": {"op": "PUSH2", "value": "0xDBD"}, "3564": {"jump": "i", "op": "JUMP"}, "3565": {"op": "JUMPDEST"}, "3566": {"op": "POP"}, "3567": {"op": "MUL"}, "3568": {"op": "SWAP1"}, "3569": {"jump": "o", "op": "JUMP"}, "3570": {"op": "JUMPDEST"}, "3571": {"op": "PUSH1", "value": "0x0"}, "3573": {"op": "DUP3"}, "3574": {"op": "NOT"}, "3575": {"op": "DUP3"}, "3576": {"op": "GT"}, "3577": {"op": "ISZERO"}, "3578": {"op": "PUSH2", "value": "0xE05"}, "3581": {"op": "JUMPI"}, "3582": {"op": "PUSH2", "value": "0xE05"}, "3585": {"op": "PUSH2", "value": "0xDBD"}, "3588": {"jump": "i", "op": "JUMP"}, "3589": {"op": "JUMPDEST"}, "3590": {"op": "POP"}, "3591": {"op": "ADD"}, "3592": {"op": "SWAP1"}, "3593": {"jump": "o", "op": "JUMP"}, "3594": {"op": "JUMPDEST"}, "3595": {"op": "PUSH1", "value": "0x0"}, "3597": {"op": "PUSH1", "value": "0x20"}, "3599": {"op": "DUP3"}, "3600": {"op": "DUP5"}, "3601": {"op": "SUB"}, "3602": {"op": "SLT"}, "3603": {"op": "ISZERO"}, "3604": {"op": "PUSH2", "value": "0xE1C"}, "3607": {"op": "JUMPI"}, "3608": {"op": "PUSH1", "value": "0x0"}, "3610": {"op": "DUP1"}, "3611": {"op": "REVERT"}, "3612": {"op": "JUMPDEST"}, "3613": {"op": "DUP2"}, "3614": {"op": "MLOAD"}, "3615": {"op": "DUP1"}, "3616": {"op": "ISZERO"}, "3617": {"op": "ISZERO"}, "3618": {"op": "DUP2"}, "3619": {"op": "EQ"}, "3620": {"op": "PUSH2", "value": "0xE2C"}, "3623": {"op": "JUMPI"}, "3624": {"op": "PUSH1", "value": "0x0"}, "3626": {"op": "DUP1"}, "3627": {"op": "REVERT"}, "3628": {"op": "JUMPDEST"}, "3629": {"op": "SWAP4"}, "3630": {"op": "SWAP3"}, "3631": {"op": "POP"}, "3632": {"op": "POP"}, "3633": {"op": "POP"}, "3634": {"jump": "o", "op": "JUMP"}, "3635": {"op": "JUMPDEST"}, "3636": {"op": "PUSH1", "value": "0x0"}, "3638": {"op": "PUSH1", "value": "0x1"}, "3640": {"op": "DUP3"}, "3641": {"op": "ADD"}, "3642": {"op": "PUSH2", "value": "0xE45"}, "3645": {"op": "JUMPI"}, "3646": {"op": "PUSH2", "value": "0xE45"}, "3649": {"op": "PUSH2", "value": "0xDBD"}, "3652": {"jump": "i", "op": "JUMP"}, "3653": {"op": "JUMPDEST"}, "3654": {"op": "POP"}, "3655": {"op": "PUSH1", "value": "0x1"}, "3657": {"op": "ADD"}, "3658": {"op": "SWAP1"}, "3659": {"jump": "o", "op": "JUMP"}, "3660": {"op": "JUMPDEST"}, "3661": {"op": "DUP2"}, "3662": {"op": "MLOAD"}, "3663": {"op": "PUSH1", "value": "0x1"}, "3665": {"op": "PUSH1", "value": "0x1"}, "3667": {"op": "PUSH1", "value": "0xA0"}, "3669": {"op": "SHL"}, "3670": {"op": "SUB"}, "3671": {"op": "SWAP1"}, "3672": {"op": "DUP2"}, "3673": {"op": "AND"}, "3674": {"op": "DUP3"}, "3675": {"op": "MSTORE"}, "3676": {"op": "PUSH1", "value": "0x20"}, "3678": {"op": "DUP1"}, "3679": {"op": "DUP5"}, "3680": {"op": "ADD"}, "3681": {"op": "MLOAD"}, "3682": {"op": "SWAP1"}, "3683": {"op": "SWAP2"}, "3684": {"op": "AND"}, "3685": {"op": "SWAP1"}, "3686": {"op": "DUP3"}, "3687": {"op": "ADD"}, "3688": {"op": "MSTORE"}, "3689": {"op": "PUSH1", "value": "0x40"}, "3691": {"op": "DUP1"}, "3692": {"op": "DUP4"}, "3693": {"op": "ADD"}, "3694": {"op": "MLOAD"}, "3695": {"op": "SWAP1"}, "3696": {"op": "DUP3"}, "3697": {"op": "ADD"}, "3698": {"op": "MSTORE"}, "3699": {"op": "PUSH1", "value": "0x60"}, "3701": {"op": "DUP1"}, "3702": {"op": "DUP4"}, "3703": {"op": "ADD"}, "3704": {"op": "MLOAD"}, "3705": {"op": "SWAP1"}, "3706": {"op": "DUP3"}, "3707": {"op": "ADD"}, "3708": {"op": "MSTORE"}, "3709": {"op": "PUSH1", "value": "0x80"}, "3711": {"op": "DUP1"}, "3712": {"op": "DUP4"}, "3713": {"op": "ADD"}, "3714": {"op": "MLOAD"}, "3715": {"op": "SWAP1"}, "3716": {"op": "DUP3"}, "3717": {"op": "ADD"}, "3718": {"op": "MSTORE"}, "3719": {"op": "PUSH1", "value": "0xA0"}, "3721": {"op": "DUP3"}, "3722": {"op": "DUP2"}, "3723": {"op": "ADD"}, "3724": {"op": "MLOAD"}, "3725": {"op": "SWAP1"}, "3726": {"op": "DUP3"}, "3727": {"op": "ADD"}, "3728": {"op": "MSTORE"}, "3729": {"op": "PUSH1", "value": "0xC0"}, "3731": {"op": "SWAP2"}, "3732": {"op": "DUP3"}, "3733": {"op": "ADD"}, "3734": {"op": "MLOAD"}, "3735": {"op": "SWAP2"}, "3736": {"op": "DUP2"}, "3737": {"op": "ADD"}, "3738": {"op": "SWAP2"}, "3739": {"op": "SWAP1"}, "3740": {"op": "SWAP2"}, "3741": {"op": "MSTORE"}, "3742": {"op": "PUSH1", "value": "0xE0"}, "3744": {"op": "ADD"}, "3745": {"op": "SWAP1"}, "3746": {"jump": "o", "op": "JUMP"}, "3747": {"op": "JUMPDEST"}, "3748": {"op": "PUSH1", "value": "0x0"}, "3750": {"op": "DUP3"}, "3751": {"op": "MLOAD"}, "3752": {"op": "PUSH1", "value": "0x0"}, "3754": {"op": "JUMPDEST"}, "3755": {"op": "DUP2"}, "3756": {"op": "DUP2"}, "3757": {"op": "LT"}, "3758": {"op": "ISZERO"}, "3759": {"op": "PUSH2", "value": "0xEC4"}, "3762": {"op": "JUMPI"}, "3763": {"op": "PUSH1", "value": "0x20"}, "3765": {"op": "DUP2"}, "3766": {"op": "DUP7"}, "3767": {"op": "ADD"}, "3768": {"op": "DUP2"}, "3769": {"op": "ADD"}, "3770": {"op": "MLOAD"}, "3771": {"op": "DUP6"}, "3772": {"op": "DUP4"}, "3773": {"op": "ADD"}, "3774": {"op": "MSTORE"}, "3775": {"op": "ADD"}, "3776": {"op": "PUSH2", "value": "0xEAA"}, "3779": {"op": "JUMP"}, "3780": {"op": "JUMPDEST"}, "3781": {"op": "DUP2"}, "3782": {"op": "DUP2"}, "3783": {"op": "GT"}, "3784": {"op": "ISZERO"}, "3785": {"op": "PUSH2", "value": "0xED3"}, "3788": {"op": "JUMPI"}, "3789": {"op": "PUSH1", "value": "0x0"}, "3791": {"op": "DUP3"}, "3792": {"op": "DUP6"}, "3793": {"op": "ADD"}, "3794": {"op": "MSTORE"}, "3795": {"op": "JUMPDEST"}, "3796": {"op": "POP"}, "3797": {"op": "SWAP2"}, "3798": {"op": "SWAP1"}, "3799": {"op": "SWAP2"}, "3800": {"op": "ADD"}, "3801": {"op": "SWAP3"}, "3802": {"op": "SWAP2"}, "3803": {"op": "POP"}, "3804": {"op": "POP"}, "3805": {"jump": "o", "op": "JUMP"}, "3806": {"op": "JUMPDEST"}, "3807": {"op": "PUSH1", "value": "0x0"}, "3809": {"op": "PUSH1", "value": "0x20"}, "3811": {"op": "DUP3"}, "3812": {"op": "DUP5"}, "3813": {"op": "SUB"}, "3814": {"op": "SLT"}, "3815": {"op": "ISZERO"}, "3816": {"op": "PUSH2", "value": "0xEF0"}, "3819": {"op": "JUMPI"}, "3820": {"op": "PUSH1", "value": "0x0"}, "3822": {"op": "DUP1"}, "3823": {"op": "REVERT"}, "3824": {"op": "JUMPDEST"}, "3825": {"op": "POP"}, "3826": {"op": "MLOAD"}, "3827": {"op": "SWAP2"}, "3828": {"op": "SWAP1"}, "3829": {"op": "POP"}, "3830": {"jump": "o", "op": "JUMP"}, "3831": {"op": "JUMPDEST"}, "3832": {"op": "PUSH1", "value": "0x0"}, "3834": {"op": "PUSH1", "value": "0x20"}, "3836": {"op": "DUP3"}, "3837": {"op": "DUP5"}, "3838": {"op": "SUB"}, "3839": {"op": "SLT"}, "3840": {"op": "ISZERO"}, "3841": {"op": "PUSH2", "value": "0xF09"}, "3844": {"op": "JUMPI"}, "3845": {"op": "PUSH1", "value": "0x0"}, "3847": {"op": "DUP1"}, "3848": {"op": "REVERT"}, "3849": {"op": "JUMPDEST"}, "3850": {"op": "DUP2"}, "3851": {"op": "MLOAD"}, "3852": {"op": "PUSH2", "value": "0xE2C"}, "3855": {"op": "DUP2"}, "3856": {"op": "PUSH2", "value": "0xBFC"}, "3859": {"jump": "i", "op": "JUMP"}, "3860": {"op": "JUMPDEST"}, "3861": {"op": "PUSH4", "value": "0x4E487B71"}, "3866": {"op": "PUSH1", "value": "0xE0"}, "3868": {"op": "SHL"}, "3869": {"op": "PUSH1", "value": "0x0"}, "3871": {"op": "MSTORE"}, "3872": {"op": "PUSH1", "value": "0x32"}, "3874": {"op": "PUSH1", "value": "0x4"}, "3876": {"op": "MSTORE"}, "3877": {"op": "PUSH1", "value": "0x24"}, "3879": {"op": "PUSH1", "value": "0x0"}, "3881": {"op": "REVERT"}}, "sha1": "7ef2e683bb0f520dd6ac4353512d3eede96a8d63", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"./deb/ERC20.sol\";\nimport \"./deb/ICrossDomainMessenger.sol\";\n\n/// @title SourceDomainSideBridge Contract\n/// @author Sherif Abdelmoatty\n/// @notice This contract is to be deployed in the source rollup\ncontract SourceDomainSideBridge {\n\n    address constant ETHER_ADDRESS = 0x0000000000000000000000000000000000000000;\n    address constant ovmL2CrossDomainMessenger = 0x4200000000000000000000000000000000000007;  //ovmL2CrossDomainMessenger contract address(Optimism)\n\n    uint constant public CONTRACT_FEE_BASIS_POINTS = 5; //fee basis points\n    uint constant public FIXED_FEE = 3000 gwei;         //fixed fee - this is added as erc20 tokens value are unknown and to discorage small transactions and acts as a governance fee\n    uint constant public MAX_TRADE_LIMIT = 0.1 ether;   //max allowed ether to be transfered\n\n    struct TransferData {\n        address  tokenAddress; //rollup dependent\n        address  destination;\n        uint256  amount;       //amount to be transfered in kwei\n        uint256  fee;\n        uint256  startTime;\n        uint256  feeRampup;\n        uint256  nonce;\n    }\n\n    struct RewardData {\n        bytes32  transferDataHash;\n        address  tokenAddress; \n        address  claimer;\n        uint256  amountPlusFee;\n    }\n\n    mapping(bytes32 => bool) public validTransferHashes;\n    mapping(bytes32 => bool) public knownHashOnions;\n    bytes32 processedRewardHashOnion;\n    address l1DomainSideContractAddress;  //l1DomainSideContract deployed contract address on mainnet\n    uint256  currentNonce;\n    address public governance;\n    uint256 governanceBalance;\n\n    event Transaction(TransferData transferData);\n    event ClaimPayed(bytes32 transferDataHash, bool success);\n    event NewKnownHashOnionAdded(bytes32 newKnownHashOnions);\n    \n    /// @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n    modifier onlyL1Contract(){\n        ICrossDomainMessenger l2cdm = ICrossDomainMessenger(ovmL2CrossDomainMessenger);\n        require(\n            msg.sender == address(ovmL2CrossDomainMessenger)\n            && l2cdm.xDomainMessageSender() == l1DomainSideContractAddress\n        );\n        _;\n    }\n\n    /// @notice onlyGovernance modifier \n    /// @notice allow only the Governor to access\n    modifier onlyGovernance {\n        require(msg.sender == governance, \"Governance: You are not the Governor!!!\");\n        _;\n    }\n\n    /// @param _l1DomainSideContractAddress is the address of the contract in etherium L1\n    constructor(address _l1DomainSideContractAddress){\n        l1DomainSideContractAddress = _l1DomainSideContractAddress;\n        governance = msg.sender;\n    }\n\n    /// @notice transfer the required funds plus fees to be sent to the current contract balance\n    function transfer(address _tokenAddress, address _destination, uint256 _amount,\n         uint256  _feeRampup) external payable returns(bytes32){\n        \n        uint256 fee = _amount * CONTRACT_FEE_BASIS_POINTS;\n        uint256 amountPlusFee = _amount * 1000 + fee;\n        \n        require(fee * _feeRampup < _amount * 1000, \"feeRampup maximum cost should be less than the total amount\");\n\n        if(_tokenAddress == ETHER_ADDRESS){\n            require(_amount* 1000 < MAX_TRADE_LIMIT, \"Amount higher than maximum trade limit\");\n            require(msg.value >= amountPlusFee + FIXED_FEE, \"No Suffecient ether\");\n        }else{\n            ERC20 token = ERC20(_tokenAddress);\n            token.transferFrom(msg.sender, address(this), amountPlusFee);\n            require(msg.value >= FIXED_FEE, \"No Suffecient ether for the fixed ether fee\");\n        }\n\n        TransferData memory transferData;\n        transferData.tokenAddress = _tokenAddress;\n        transferData.destination = _destination;\n        transferData.amount = _amount;\n        transferData.fee = fee;\n        transferData.startTime = block.number;\n        transferData.feeRampup = _feeRampup;\n        transferData.nonce = currentNonce;\n\n        currentNonce++;\n        governanceBalance = governanceBalance + FIXED_FEE;\n\n        bytes32 transferDataHash = sha256(abi.encode(transferData));\n        \n        validTransferHashes[transferDataHash] = true;\n\n        emit Transaction(transferData);\n        \n        return transferDataHash;\n    }\n\n    /// @notice process the processClaims structs to be paid to the liquidity providers\n    /// @param _rewardData is an array of RewardData structs to be paid to liquidity providers\n    function processClaims(RewardData[] memory _rewardData) external payable {\n        bytes32 newProcessedRewardHashOnion = calculateNewProcessedRewardHashOnion(_rewardData);\n        require(knownHashOnions[newProcessedRewardHashOnion], \"Invalide RewardData list.\");\n        processedRewardHashOnion = newProcessedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            if(validTransferHashes[_rewardData[n].transferDataHash]){\n                bool success;\n                if(_rewardData[n].tokenAddress == ETHER_ADDRESS){\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: _rewardData[n].amountPlusFee}(\"\");\n                    success = suc;\n                }else{\n                    ERC20 token = ERC20(_rewardData[n].tokenAddress);  \n                    success = token.transferFrom(address(this), _rewardData[n].claimer,\n                        _rewardData[n].amountPlusFee);\n\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: FIXED_FEE}(\"\");\n\n                    success = success && suc;\n                }\n                emit ClaimPayed(_rewardData[n].transferDataHash, success);\n            }\n        }    \n    }\n\n    /// @notice this function is only called from the contract at the etherium L1\n    /// @notice through the rollup messenger contract to add a new known hash onion\n    function addNewKnownHashOnion(bytes32 _newKnownHashOnions) external onlyL1Contract{\n        knownHashOnions[_newKnownHashOnions] = true;\n        emit NewKnownHashOnionAdded(_newKnownHashOnions);\n    }\n\n    function collectGovernanceFixedFees() external onlyGovernance{\n        payable(governance).transfer(governanceBalance);\n        governanceBalance = 0;\n    }\n\n    /// @notice calculates the new hash onion\n    function calculateNewProcessedRewardHashOnion(RewardData[] memory _rewardData) private view returns (bytes32){\n        bytes32 newProcessedRewardHashOnion = processedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            newProcessedRewardHashOnion = \n                sha256(abi.encode(newProcessedRewardHashOnion,_rewardData[n]));\n        }\n        return newProcessedRewardHashOnion;\n    }\n}", "sourceMap": "264:6477:0:-:0;;;2570:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2629:27;:58;;-1:-1:-1;;;;;2629:58:0;;;-1:-1:-1;;;;;;2629:58:0;;;;;;2697:10;:23;;;;;2710:10;2697:23;;;264:6477;;14:290:3;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:3;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:3:o;:::-;264:6477:0;;;;;;", "sourcePath": "contracts/SourceDomainSideBridge.sol", "type": "contract", "deployment": {"address": "0x04d18666ee55257Ad7f8c3314D5Cce7A30B9921c", "chainid": "69", "blockHeight": 3224864}}