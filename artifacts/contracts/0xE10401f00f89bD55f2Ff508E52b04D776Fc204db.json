{"abi": [{"inputs": [{"internalType": "address", "name": "_l1DomainSideContractAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "indexed": false, "internalType": "struct SourceDomainSideBridge.TransferData", "name": "transferData", "type": "tuple"}], "name": "Transaction", "type": "event"}, {"inputs": [{"internalType": "bytes32", "name": "_newKnownHashOnions", "type": "bytes32"}], "name": "addNewKnownHashOnion", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.RewardData[]", "name": "_rewardData", "type": "tuple[]"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.TransferData[]", "name": "_transferData", "type": "tuple[]"}], "name": "processClaims", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.TransferData", "name": "_transferData", "type": "tuple"}], "name": "transfer", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "payable", "type": "function"}], "allSourcePaths": {"0": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol", "1": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol", "2": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol", "3": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol", "6": "contracts/SourceDomainSideBridge.sol", "7": "contracts/deb/optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol"}, "ast": {"absolutePath": "contracts/SourceDomainSideBridge.sol", "exportedSymbols": {"Context": [1529], "ERC20": [1365], "ICrossDomainMessenger": [1404], "IERC20": [1482], "IERC20Metadata": [1507], "SourceDomainSideBridge": [777]}, "id": 778, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 421, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "31:23:6"}, {"absolutePath": "/home/sherif/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol", "id": 422, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 778, "sourceUnit": 1366, "src": "56:55:6", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol", "file": "./deb/optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol", "id": 423, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 778, "sourceUnit": 1405, "src": "112:77:6", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "SourceDomainSideBridge", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 424, "nodeType": "StructuredDocumentation", "src": "191:139:6", "text": "@title SourceDomainSideBridge Contract\n @author Sherif Abdelmoatty\n @notice This contract is to be deployed in the source rollup"}, "fullyImplemented": true, "id": 777, "linearizedBaseContracts": [777], "name": "SourceDomainSideBridge", "nameLocation": "339:22:6", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 427, "mutability": "constant", "name": "CONTRACT_FEE_BASIS_POINTS", "nameLocation": "387:25:6", "nodeType": "VariableDeclaration", "scope": 777, "src": "373:43:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 425, "name": "uint", "nodeType": "ElementaryTypeName", "src": "373:4:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "35", "id": 426, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "415:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "visibility": "internal"}, {"constant": true, "id": 430, "mutability": "constant", "name": "ETHER_ADDRESS", "nameLocation": "439:13:6", "nodeType": "VariableDeclaration", "scope": 777, "src": "422:75:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 428, "name": "address", "nodeType": "ElementaryTypeName", "src": "422:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030", "id": 429, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "455:42:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x0000000000000000000000000000000000000000"}, "visibility": "internal"}, {"canonicalName": "SourceDomainSideBridge.TransferData", "id": 445, "members": [{"constant": false, "id": 432, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "543:12:6", "nodeType": "VariableDeclaration", "scope": 445, "src": "534:21:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 431, "name": "address", "nodeType": "ElementaryTypeName", "src": "534:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 434, "mutability": "mutable", "name": "destination", "nameLocation": "575:11:6", "nodeType": "VariableDeclaration", "scope": 445, "src": "566:20:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 433, "name": "address", "nodeType": "ElementaryTypeName", "src": "566:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 436, "mutability": "mutable", "name": "amount", "nameLocation": "605:6:6", "nodeType": "VariableDeclaration", "scope": 445, "src": "596:15:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 435, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "596:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 438, "mutability": "mutable", "name": "fee", "nameLocation": "630:3:6", "nodeType": "VariableDeclaration", "scope": 445, "src": "621:12:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 437, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "621:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 440, "mutability": "mutable", "name": "startTime", "nameLocation": "652:9:6", "nodeType": "VariableDeclaration", "scope": 445, "src": "643:18:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 439, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "643:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 442, "mutability": "mutable", "name": "feeRampup", "nameLocation": "680:9:6", "nodeType": "VariableDeclaration", "scope": 445, "src": "671:18:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 441, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "671:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 444, "mutability": "mutable", "name": "nonce", "nameLocation": "708:5:6", "nodeType": "VariableDeclaration", "scope": 445, "src": "699:14:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 443, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "699:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "TransferData", "nameLocation": "511:12:6", "nodeType": "StructDefinition", "scope": 777, "src": "504:216:6", "visibility": "public"}, {"canonicalName": "SourceDomainSideBridge.RewardData", "id": 454, "members": [{"constant": false, "id": 447, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "762:16:6", "nodeType": "VariableDeclaration", "scope": 454, "src": "753:25:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 446, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "753:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 449, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "797:12:6", "nodeType": "VariableDeclaration", "scope": 454, "src": "788:21:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 448, "name": "address", "nodeType": "ElementaryTypeName", "src": "788:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 451, "mutability": "mutable", "name": "claimer", "nameLocation": "829:7:6", "nodeType": "VariableDeclaration", "scope": 454, "src": "820:16:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 450, "name": "address", "nodeType": "ElementaryTypeName", "src": "820:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 453, "mutability": "mutable", "name": "fee", "nameLocation": "855:3:6", "nodeType": "VariableDeclaration", "scope": 454, "src": "846:12:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 452, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "846:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "RewardData", "nameLocation": "732:10:6", "nodeType": "StructDefinition", "scope": 777, "src": "725:140:6", "visibility": "public"}, {"constant": false, "id": 458, "mutability": "mutable", "name": "validTransferHashes", "nameLocation": "895:19:6", "nodeType": "VariableDeclaration", "scope": 777, "src": "870:44:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 457, "keyType": {"id": 455, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "878:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "870:24:6", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 456, "name": "bool", "nodeType": "ElementaryTypeName", "src": "889:4:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "internal"}, {"constant": false, "id": 462, "mutability": "mutable", "name": "knownHashOnions", "nameLocation": "945:15:6", "nodeType": "VariableDeclaration", "scope": 777, "src": "920:40:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 461, "keyType": {"id": 459, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "928:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "920:24:6", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 460, "name": "bool", "nodeType": "ElementaryTypeName", "src": "939:4:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "internal"}, {"constant": false, "id": 464, "mutability": "mutable", "name": "processedRewardHashOnion", "nameLocation": "974:24:6", "nodeType": "VariableDeclaration", "scope": 777, "src": "966:32:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 463, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "966:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 466, "mutability": "mutable", "name": "ovmL2CrossDomainMessenger", "nameLocation": "1017:25:6", "nodeType": "VariableDeclaration", "scope": 777, "src": "1009:33:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 465, "name": "address", "nodeType": "ElementaryTypeName", "src": "1009:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 468, "mutability": "mutable", "name": "l1DomainSideContractAddress", "nameLocation": "1112:27:6", "nodeType": "VariableDeclaration", "scope": 777, "src": "1104:35:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 467, "name": "address", "nodeType": "ElementaryTypeName", "src": "1104:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "d8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f89", "id": 473, "name": "Transaction", "nameLocation": "1213:11:6", "nodeType": "EventDefinition", "parameters": {"id": 472, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 471, "indexed": false, "mutability": "mutable", "name": "transferData", "nameLocation": "1238:12:6", "nodeType": "VariableDeclaration", "scope": 473, "src": "1225:25:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 470, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 469, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 445, "src": "1225:12:6"}, "referencedDeclaration": 445, "src": "1225:12:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "src": "1224:27:6"}, "src": "1207:45:6"}, {"body": {"id": 500, "nodeType": "Block", "src": "1495:270:6", "statements": [{"assignments": [478], "declarations": [{"constant": false, "id": 478, "mutability": "mutable", "name": "l2cdm", "nameLocation": "1527:5:6", "nodeType": "VariableDeclaration", "scope": 500, "src": "1505:27:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1404", "typeString": "contract ICrossDomainMessenger"}, "typeName": {"id": 477, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 476, "name": "ICrossDomainMessenger", "nodeType": "IdentifierPath", "referencedDeclaration": 1404, "src": "1505:21:6"}, "referencedDeclaration": 1404, "src": "1505:21:6", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1404", "typeString": "contract ICrossDomainMessenger"}}, "visibility": "internal"}], "id": 482, "initialValue": {"arguments": [{"id": 480, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 466, "src": "1557:25:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 479, "name": "ICrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1404, "src": "1535:21:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$1404_$", "typeString": "type(contract ICrossDomainMessenger)"}}, "id": 481, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1535:48:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1404", "typeString": "contract ICrossDomainMessenger"}}, "nodeType": "VariableDeclarationStatement", "src": "1505:78:6"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 496, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 490, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 484, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1614:3:6", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1614:10:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 488, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 466, "src": "1636:25:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 487, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1628:7:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 486, "name": "address", "nodeType": "ElementaryTypeName", "src": "1628:7:6", "typeDescriptions": {}}}, "id": 489, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1628:34:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1614:48:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 495, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 491, "name": "l2cdm", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 478, "src": "1678:5:6", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$1404", "typeString": "contract ICrossDomainMessenger"}}, "id": 492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "xDomainMessageSender", "nodeType": "MemberAccess", "referencedDeclaration": 1393, "src": "1678:26:6", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 493, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1678:28:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 494, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 468, "src": "1710:27:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1678:59:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1614:123:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 483, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1593:7:6", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 497, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1593:154:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 498, "nodeType": "ExpressionStatement", "src": "1593:154:6"}, {"id": 499, "nodeType": "PlaceholderStatement", "src": "1757:1:6"}]}, "documentation": {"id": 474, "nodeType": "StructuredDocumentation", "src": "1262:202:6", "text": "@notice onlyL1Contract modifier\n @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n @notice to call the approveStateRoot function"}, "id": 501, "name": "onlyL1Contract", "nameLocation": "1478:14:6", "nodeType": "ModifierDefinition", "parameters": {"id": 475, "nodeType": "ParameterList", "parameters": [], "src": "1492:2:6"}, "src": "1469:296:6", "virtual": false, "visibility": "internal"}, {"body": {"id": 515, "nodeType": "Block", "src": "1894:155:6", "statements": [{"expression": {"id": 509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 507, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 466, "src": "1904:25:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303037", "id": 508, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1932:42:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4200000000000000000000000000000000000007"}, "src": "1904:70:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 510, "nodeType": "ExpressionStatement", "src": "1904:70:6"}, {"expression": {"id": 513, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 511, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 468, "src": "1984:27:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 512, "name": "_l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 504, "src": "2014:28:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1984:58:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 514, "nodeType": "ExpressionStatement", "src": "1984:58:6"}]}, "documentation": {"id": 502, "nodeType": "StructuredDocumentation", "src": "1771:69:6", "text": "@notice Constructior function\n @notice Intialize variables"}, "id": 516, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 505, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 504, "mutability": "mutable", "name": "_l1DomainSideContractAddress", "nameLocation": "1865:28:6", "nodeType": "VariableDeclaration", "scope": 516, "src": "1857:36:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 503, "name": "address", "nodeType": "ElementaryTypeName", "src": "1857:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1856:38:6"}, "returnParameters": {"id": 506, "nodeType": "ParameterList", "parameters": [], "src": "1894:0:6"}, "scope": 777, "src": "1845:204:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 604, "nodeType": "Block", "src": "2284:874:6", "statements": [{"assignments": [526], "declarations": [{"constant": false, "id": 526, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "2303:13:6", "nodeType": "VariableDeclaration", "scope": 604, "src": "2295:21:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 525, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2295:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 534, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 527, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2319:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 528, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 436, "src": "2319:20:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 531, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "31303030", "id": 529, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2343:4:6", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 530, "name": "CONTRACT_FEE_BASIS_POINTS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 427, "src": "2350:25:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2343:32:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 532, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2342:34:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2319:57:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2295:81:6"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 538, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 535, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2398:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 536, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 432, "src": "2398:26:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 537, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 430, "src": "2428:13:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2398:43:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 568, "nodeType": "Block", "src": "2546:146:6", "statements": [{"assignments": [550], "declarations": [{"constant": false, "id": 550, "mutability": "mutable", "name": "token", "nameLocation": "2566:5:6", "nodeType": "VariableDeclaration", "scope": 568, "src": "2560:11:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1365", "typeString": "contract ERC20"}, "typeName": {"id": 549, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 548, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1365, "src": "2560:5:6"}, "referencedDeclaration": 1365, "src": "2560:5:6", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1365", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 555, "initialValue": {"arguments": [{"expression": {"id": 552, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2580:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 553, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 432, "src": "2580:26:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 551, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1365, "src": "2574:5:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$1365_$", "typeString": "type(contract ERC20)"}}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2574:33:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1365", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "2560:47:6"}, {"expression": {"arguments": [{"expression": {"id": 559, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2640:3:6", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2640:10:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 563, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2660:4:6", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$777", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$777", "typeString": "contract SourceDomainSideBridge"}], "id": 562, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2652:7:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 561, "name": "address", "nodeType": "ElementaryTypeName", "src": "2652:7:6", "typeDescriptions": {}}}, "id": 564, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2652:13:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 565, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 526, "src": "2667:13:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 556, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 550, "src": "2621:5:6", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1365", "typeString": "contract ERC20"}}, "id": 558, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 977, "src": "2621:18:6", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2621:60:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 567, "nodeType": "ExpressionStatement", "src": "2621:60:6"}]}, "id": 569, "nodeType": "IfStatement", "src": "2395:297:6", "trueBody": {"id": 547, "nodeType": "Block", "src": "2442:100:6", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 543, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 540, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2464:3:6", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 541, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "2464:9:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 542, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 526, "src": "2477:13:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2464:26:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4572726f72203a204e6f6e2053756666656369656e742066756e64732121212121212121", "id": 544, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2492:38:6", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}, "value": "Error : Non Suffecient funds!!!!!!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}], "id": 539, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2456:7:6", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 545, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2456:75:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 546, "nodeType": "ExpressionStatement", "src": "2456:75:6"}]}}, {"assignments": [571], "declarations": [{"constant": false, "id": 571, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "2718:16:6", "nodeType": "VariableDeclaration", "scope": 604, "src": "2710:24:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 570, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2710:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 591, "initialValue": {"arguments": [{"arguments": [{"expression": {"id": 575, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2774:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 576, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 432, "src": "2774:26:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 577, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2814:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 578, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 434, "src": "2814:25:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 579, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2853:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 580, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 436, "src": "2853:20:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 581, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2887:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 582, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 438, "src": "2887:17:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 583, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2918:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 584, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 440, "src": "2918:23:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 585, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2955:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 586, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "feeRampup", "nodeType": "MemberAccess", "referencedDeclaration": 442, "src": "2955:23:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 587, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "2992:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 588, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "nonce", "nodeType": "MemberAccess", "referencedDeclaration": 444, "src": "2992:19:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 573, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2744:3:6", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 574, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "2744:16:6", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 589, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2744:268:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 572, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "2737:6:6", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 590, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2737:276:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "2710:303:6"}, {"expression": {"id": 596, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 592, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 458, "src": "3023:19:6", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 594, "indexExpression": {"id": 593, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 571, "src": "3043:16:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3023:37:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 595, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3063:4:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "3023:44:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 597, "nodeType": "ExpressionStatement", "src": "3023:44:6"}, {"eventCall": {"arguments": [{"id": 599, "name": "_transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "3095:13:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "id": 598, "name": "Transaction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 473, "src": "3083:11:6", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_TransferData_$445_memory_ptr_$returns$__$", "typeString": "function (struct SourceDomainSideBridge.TransferData memory)"}}, "id": 600, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3083:26:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 601, "nodeType": "EmitStatement", "src": "3078:31:6"}, {"expression": {"id": 602, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 571, "src": "3135:16:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 524, "id": 603, "nodeType": "Return", "src": "3128:23:6"}]}, "documentation": {"id": 517, "nodeType": "StructuredDocumentation", "src": "2055:138:6", "text": "@notice withdraw function\n @notice withdraws the required funds plus fees to be sent \n @notice to the domain side rollup"}, "functionSelector": "4bf655fc", "id": 605, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "2207:8:6", "nodeType": "FunctionDefinition", "parameters": {"id": 521, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 520, "mutability": "mutable", "name": "_transferData", "nameLocation": "2236:13:6", "nodeType": "VariableDeclaration", "scope": 605, "src": "2216:33:6", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 519, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 518, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 445, "src": "2216:12:6"}, "referencedDeclaration": 445, "src": "2216:12:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "src": "2215:35:6"}, "returnParameters": {"id": 524, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 523, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 605, "src": "2276:7:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 522, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2276:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2275:9:6"}, "scope": 777, "src": "2198:960:6", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 705, "nodeType": "Block", "src": "3368:791:6", "statements": [{"assignments": [618], "declarations": [{"constant": false, "id": 618, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "3386:27:6", "nodeType": "VariableDeclaration", "scope": 705, "src": "3378:35:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 617, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3378:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 622, "initialValue": {"arguments": [{"id": 620, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "3453:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}], "id": 619, "name": "calculateNewProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 761, "src": "3416:36:6", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (struct SourceDomainSideBridge.RewardData memory[] memory) returns (bytes32)"}}, "id": 621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3416:49:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3378:87:6"}, {"expression": {"arguments": [{"baseExpression": {"id": 624, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "3483:15:6", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 626, "indexExpression": {"id": 625, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 618, "src": "3499:27:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3483:44:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964652052657761726444617461206c6973742e", "id": 627, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3529:27:6", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}, "value": "Invalide RewardData list."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}], "id": 623, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3475:7:6", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 628, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3475:82:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 629, "nodeType": "ExpressionStatement", "src": "3475:82:6"}, {"body": {"id": 699, "nodeType": "Block", "src": "3612:477:6", "statements": [{"condition": {"baseExpression": {"id": 641, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 458, "src": "3629:19:6", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 646, "indexExpression": {"expression": {"baseExpression": {"id": 642, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "3649:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 644, "indexExpression": {"id": 643, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "3661:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3649:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 645, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 447, "src": "3649:31:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3629:52:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 698, "nodeType": "IfStatement", "src": "3626:453:6", "trueBody": {"id": 697, "nodeType": "Block", "src": "3682:397:6", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 652, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 647, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "3703:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 649, "indexExpression": {"id": 648, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "3715:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3703:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 650, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 449, "src": "3703:27:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 651, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 430, "src": "3734:13:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3703:44:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 695, "nodeType": "Block", "src": "3853:212:6", "statements": [{"assignments": [670], "declarations": [{"constant": false, "id": 670, "mutability": "mutable", "name": "token", "nameLocation": "3881:5:6", "nodeType": "VariableDeclaration", "scope": 695, "src": "3875:11:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1365", "typeString": "contract ERC20"}, "typeName": {"id": 669, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 668, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1365, "src": "3875:5:6"}, "referencedDeclaration": 1365, "src": "3875:5:6", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1365", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 677, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 672, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "3895:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 674, "indexExpression": {"id": 673, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "3907:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3895:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 675, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 449, "src": "3895:27:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 671, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1365, "src": "3889:5:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$1365_$", "typeString": "type(contract ERC20)"}}, "id": 676, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3889:34:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1365", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "3875:48:6"}, {"expression": {"arguments": [{"arguments": [{"id": 683, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3972:4:6", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$777", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$777", "typeString": "contract SourceDomainSideBridge"}], "id": 682, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3964:7:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 681, "name": "address", "nodeType": "ElementaryTypeName", "src": "3964:7:6", "typeDescriptions": {}}}, "id": 684, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3964:13:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 685, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "3979:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 687, "indexExpression": {"id": 686, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "3991:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3979:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 688, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 451, "src": "3979:22:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 689, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "4027:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 691, "indexExpression": {"id": 690, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "4039:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4027:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 692, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 453, "src": "4027:18:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 678, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 670, "src": "3945:5:6", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$1365", "typeString": "contract ERC20"}}, "id": 680, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 977, "src": "3945:18:6", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 693, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3945:101:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 694, "nodeType": "ExpressionStatement", "src": "3945:101:6"}]}, "id": 696, "nodeType": "IfStatement", "src": "3700:365:6", "trueBody": {"id": 667, "nodeType": "Block", "src": "3748:101:6", "statements": [{"expression": {"arguments": [{"expression": {"baseExpression": {"id": 661, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "3811:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 663, "indexExpression": {"hexValue": "30", "id": 662, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3823:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3811:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 664, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 453, "src": "3811:18:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 655, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "3778:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 657, "indexExpression": {"hexValue": "30", "id": 656, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3790:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3778:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 658, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 451, "src": "3778:22:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 654, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3770:8:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 653, "name": "address", "nodeType": "ElementaryTypeName", "src": "3770:8:6", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 659, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3770:31:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 660, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "3770:40:6", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 665, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3770:60:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 666, "nodeType": "ExpressionStatement", "src": "3770:60:6"}]}}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 637, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 634, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "3583:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 635, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 610, "src": "3587:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 636, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3587:18:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3583:22:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 700, "initializationExpression": {"assignments": [631], "declarations": [{"constant": false, "id": 631, "mutability": "mutable", "name": "n", "nameLocation": "3576:1:6", "nodeType": "VariableDeclaration", "scope": 700, "src": "3571:6:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 630, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3571:4:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 633, "initialValue": {"hexValue": "30", "id": 632, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3580:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3571:10:6"}, "loopExpression": {"expression": {"id": 639, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3607:3:6", "subExpression": {"id": 638, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 631, "src": "3607:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 640, "nodeType": "ExpressionStatement", "src": "3607:3:6"}, "nodeType": "ForStatement", "src": "3567:522:6"}, {"expression": {"id": 703, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 701, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "4098:24:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 702, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 618, "src": "4125:27:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4098:54:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 704, "nodeType": "ExpressionStatement", "src": "4098:54:6"}]}, "documentation": {"id": 606, "nodeType": "StructuredDocumentation", "src": "3164:89:6", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "functionSelector": "edf5a2dc", "id": 706, "implemented": true, "kind": "function", "modifiers": [], "name": "processClaims", "nameLocation": "3267:13:6", "nodeType": "FunctionDefinition", "parameters": {"id": 615, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 610, "mutability": "mutable", "name": "_rewardData", "nameLocation": "3301:11:6", "nodeType": "VariableDeclaration", "scope": 706, "src": "3281:31:6", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 608, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 607, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 454, "src": "3281:10:6"}, "referencedDeclaration": 454, "src": "3281:10:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 609, "nodeType": "ArrayTypeName", "src": "3281:12:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}, {"constant": false, "id": 614, "mutability": "mutable", "name": "_transferData", "nameLocation": "3336:13:6", "nodeType": "VariableDeclaration", "scope": 706, "src": "3314:35:6", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TransferData_$445_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData[]"}, "typeName": {"baseType": {"id": 612, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 611, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 445, "src": "3314:12:6"}, "referencedDeclaration": 445, "src": "3314:12:6", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$445_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "id": 613, "nodeType": "ArrayTypeName", "src": "3314:14:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TransferData_$445_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData[]"}}, "visibility": "internal"}], "src": "3280:70:6"}, "returnParameters": {"id": 616, "nodeType": "ParameterList", "parameters": [], "src": "3368:0:6"}, "scope": 777, "src": "3258:901:6", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 760, "nodeType": "Block", "src": "4363:477:6", "statements": [{"assignments": [717], "declarations": [{"constant": false, "id": 717, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "4381:27:6", "nodeType": "VariableDeclaration", "scope": 760, "src": "4373:35:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 716, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4373:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 719, "initialValue": {"id": 718, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 464, "src": "4411:24:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "4373:62:6"}, {"body": {"id": 756, "nodeType": "Block", "src": "4490:300:6", "statements": [{"expression": {"id": 754, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 731, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 717, "src": "4504:27:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 735, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 717, "src": "4558:27:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"baseExpression": {"id": 736, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "4604:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 738, "indexExpression": {"id": 737, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 721, "src": "4616:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4604:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 739, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 447, "src": "4604:31:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"baseExpression": {"id": 740, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "4654:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 742, "indexExpression": {"id": 741, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 721, "src": "4666:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4654:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 743, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 449, "src": "4654:27:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 744, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "4700:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 746, "indexExpression": {"id": 745, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 721, "src": "4712:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4700:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 747, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 451, "src": "4700:22:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 748, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "4741:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 750, "indexExpression": {"id": 749, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 721, "src": "4753:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4741:14:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 751, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 453, "src": "4741:18:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 733, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "4541:3:6", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 734, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "4541:16:6", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 752, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4541:237:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 732, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "4534:6:6", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 753, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4534:245:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4504:275:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 755, "nodeType": "ExpressionStatement", "src": "4504:275:6"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 727, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 724, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 721, "src": "4461:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 725, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "4465:11:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 726, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4465:18:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4461:22:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 757, "initializationExpression": {"assignments": [721], "declarations": [{"constant": false, "id": 721, "mutability": "mutable", "name": "n", "nameLocation": "4454:1:6", "nodeType": "VariableDeclaration", "scope": 757, "src": "4449:6:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 720, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4449:4:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 723, "initialValue": {"hexValue": "30", "id": 722, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4458:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4449:10:6"}, "loopExpression": {"expression": {"id": 729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4485:3:6", "subExpression": {"id": 728, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 721, "src": "4485:1:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 730, "nodeType": "ExpressionStatement", "src": "4485:3:6"}, "nodeType": "ForStatement", "src": "4445:345:6"}, {"expression": {"id": 758, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 717, "src": "4806:27:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 715, "id": 759, "nodeType": "Return", "src": "4799:34:6"}]}, "documentation": {"id": 707, "nodeType": "StructuredDocumentation", "src": "4165:89:6", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "id": 761, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateNewProcessedRewardHashOnion", "nameLocation": "4268:36:6", "nodeType": "FunctionDefinition", "parameters": {"id": 712, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 711, "mutability": "mutable", "name": "_rewardData", "nameLocation": "4325:11:6", "nodeType": "VariableDeclaration", "scope": 761, "src": "4305:31:6", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 709, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 708, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 454, "src": "4305:10:6"}, "referencedDeclaration": 454, "src": "4305:10:6", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$454_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 710, "nodeType": "ArrayTypeName", "src": "4305:12:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$454_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "4304:33:6"}, "returnParameters": {"id": 715, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 714, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 761, "src": "4355:7:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 713, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4355:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "4354:9:6"}, "scope": 777, "src": "4259:581:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 775, "nodeType": "Block", "src": "5022:60:6", "statements": [{"expression": {"id": 773, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 769, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "5032:15:6", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 771, "indexExpression": {"id": 770, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 764, "src": "5048:19:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5032:36:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 772, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5071:4:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5032:43:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 774, "nodeType": "ExpressionStatement", "src": "5032:43:6"}]}, "documentation": {"id": 762, "nodeType": "StructuredDocumentation", "src": "4846:89:6", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "functionSelector": "a9d72b02", "id": 776, "implemented": true, "kind": "function", "modifiers": [{"id": 767, "kind": "modifierInvocation", "modifierName": {"id": 766, "name": "onlyL1Contract", "nodeType": "IdentifierPath", "referencedDeclaration": 501, "src": "5008:14:6"}, "nodeType": "ModifierInvocation", "src": "5008:14:6"}], "name": "addNewKnownHashOnion", "nameLocation": "4949:20:6", "nodeType": "FunctionDefinition", "parameters": {"id": 765, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 764, "mutability": "mutable", "name": "_newKnownHashOnions", "nameLocation": "4978:19:6", "nodeType": "VariableDeclaration", "scope": 776, "src": "4970:27:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 763, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4970:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "4969:29:6"}, "returnParameters": {"id": 768, "nodeType": "ParameterList", "parameters": [], "src": "5022:0:6"}, "scope": 777, "src": "4940:142:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 778, "src": "330:4758:6", "usedErrors": []}], "src": "31:5057:6"}, "bytecode": "608060405234801561001057600080fd5b50604051610c90380380610c9083398101604081905261002f91610076565b600380547342000000000000000000000000000000000000076001600160a01b031991821617909155600480549091166001600160a01b03929092169190911790556100a6565b60006020828403121561008857600080fd5b81516001600160a01b038116811461009f57600080fd5b9392505050565b610bdb806100b56000396000f3fe6080604052600436106100345760003560e01c80634bf655fc14610039578063a9d72b021461005e578063edf5a2dc14610080575b600080fd5b61004c6100473660046108bd565b610093565b60405190815260200160405180910390f35b34801561006a57600080fd5b5061007e6100793660046108e0565b610323565b005b61007e61008e366004610992565b6103ed565b6000806100a360056103e8610aac565b83604001516100b29190610ac4565b83519091506001600160a01b031661012a57803410156101255760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084015b60405180910390fd5b6101a6565b82516040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a39190610ae3565b50505b60006002846000015185602001518660400151876060015188608001518960a001518a60c001516040516020016102279796959493929190606097881b6bffffffffffffffffffffffff1990811682529690971b9095166014870152602886019390935260488501919091526068840152608883015260a882015260c80190565b60408051601f198184030181529082905261024191610b05565b602060405180830381855afa15801561025e573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906102819190610b40565b60008181526020818152604091829020805460ff19166001179055815187516001600160a01b0390811682528883015116918101919091528682015191810191909152606080870151908201526080808701519082015260a0808701519082015260c080870151908201529091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f899060e00160405180910390a19392505050565b6003546001600160a01b031633811480156103c55750600460009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610b59565b6001600160a01b0316145b6103ce57600080fd5b506000908152600160208190526040909120805460ff19169091179055565b60006103f883610656565b60008181526001602052604090205490915060ff166104595760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e00000000000000604482015260640161011c565b60005b835181101561064e5760008085838151811061047a5761047a610b76565b6020908102919091018101515182528101919091526040016000205460ff161561063c5760006001600160a01b03168482815181106104bb576104bb610b76565b6020026020010151602001516001600160a01b03160361055057836000815181106104e8576104e8610b76565b6020026020010151604001516001600160a01b03166108fc8560008151811061051357610513610b76565b6020026020010151606001519081150290604051600060405180830381858888f1935050505015801561054a573d6000803e3d6000fd5b5061063c565b600084828151811061056457610564610b76565b6020026020010151602001519050806001600160a01b03166323b872dd3087858151811061059457610594610b76565b6020026020010151604001518886815181106105b2576105b2610b76565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190610ae3565b50505b8061064681610b8c565b91505061045c565b506002555050565b600254600090815b83518110156107985760028285838151811061067c5761067c610b76565b60200260200101516000015186848151811061069a5761069a610b76565b6020026020010151602001518785815181106106b8576106b8610b76565b6020026020010151604001518886815181106106d6576106d6610b76565b60200260200101516060015160405160200161072a9594939291909485526020850193909352606091821b6bffffffffffffffffffffffff199081166040860152911b166054830152606882015260880190565b60408051601f198184030181529082905261074491610b05565b602060405180830381855afa158015610761573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107849190610b40565b91508061079081610b8c565b91505061065e565b5092915050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156107d8576107d861079f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108075761080761079f565b604052919050565b6001600160a01b038116811461082457600080fd5b50565b600060e0828403121561083957600080fd5b60405160e0810181811067ffffffffffffffff8211171561085c5761085c61079f565b604052905080823561086d8161080f565b8152602083013561087d8161080f565b8060208301525060408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b600060e082840312156108cf57600080fd5b6108d98383610827565b9392505050565b6000602082840312156108f257600080fd5b5035919050565b600067ffffffffffffffff8211156109135761091361079f565b5060051b60200190565b600082601f83011261092e57600080fd5b8135602061094361093e836108f9565b6107de565b82815260e0928302850182019282820191908785111561096257600080fd5b8387015b85811015610985576109788982610827565b8452928401928101610966565b5090979650505050505050565b60008060408084860312156109a657600080fd5b833567ffffffffffffffff808211156109be57600080fd5b818601915086601f8301126109d257600080fd5b813560206109e261093e836108f9565b82815260079290921b8401810191818101908a841115610a0157600080fd5b948201945b83861015610a68576080868c031215610a1f5760008081fd5b610a276107b5565b8635815283870135610a388161080f565b8185015286880135610a498161080f565b8189015260608781013590820152825260809095019490820190610a06565b97505087013593505080831115610a7e57600080fd5b5050610a8c8582860161091d565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610abf57610abf610a96565b500190565b6000816000190483118215151615610ade57610ade610a96565b500290565b600060208284031215610af557600080fd5b815180151581146108d957600080fd5b6000825160005b81811015610b265760208186018101518583015201610b0c565b81811115610b35576000828501525b509190910192915050565b600060208284031215610b5257600080fd5b5051919050565b600060208284031215610b6b57600080fd5b81516108d98161080f565b634e487b7160e01b600052603260045260246000fd5b600060018201610b9e57610b9e610a96565b506001019056fea2646970667358221220cda992ea4a877863bb6ed7bf5f8fd4b166d4b304e5a2595b2d6de31c902c17f964736f6c634300080d0033", "bytecodeSha1": "4014f8990ca8bb2bffe8bc187111caa1cadc7f19", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "SourceDomainSideBridge", "coverageMap": {"branches": {"0": {}, "1": {}, "2": {}, "3": {}, "6": {"SourceDomainSideBridge.addNewKnownHashOnion": {"16": [1614, 1662, false], "17": [1678, 1737, true]}, "SourceDomainSideBridge.processClaims": {"18": [3483, 3527, true], "19": [3629, 3681, false], "20": [3703, 3747, false]}, "SourceDomainSideBridge.transfer": {"14": [2398, 2441, false], "15": [2464, 2490, true]}}, "7": {}}, "statements": {"0": {}, "1": {}, "2": {}, "3": {}, "6": {"SourceDomainSideBridge.addNewKnownHashOnion": {"5": [5032, 5075]}, "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion": {"11": [4504, 4779], "12": [4485, 4488], "13": [4799, 4833]}, "SourceDomainSideBridge.processClaims": {"6": [3475, 3557], "7": [3770, 3830], "8": [3945, 4046], "9": [3607, 3610], "10": [4098, 4152]}, "SourceDomainSideBridge.transfer": {"0": [2456, 2531], "1": [2621, 2681], "2": [3023, 3067], "3": [3078, 3109], "4": [3128, 3151]}}, "7": {}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.5.0/Context", "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20", "ICrossDomainMessenger", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20", "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata"], "deployedBytecode": "6080604052600436106100345760003560e01c80634bf655fc14610039578063a9d72b021461005e578063edf5a2dc14610080575b600080fd5b61004c6100473660046108bd565b610093565b60405190815260200160405180910390f35b34801561006a57600080fd5b5061007e6100793660046108e0565b610323565b005b61007e61008e366004610992565b6103ed565b6000806100a360056103e8610aac565b83604001516100b29190610ac4565b83519091506001600160a01b031661012a57803410156101255760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084015b60405180910390fd5b6101a6565b82516040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a39190610ae3565b50505b60006002846000015185602001518660400151876060015188608001518960a001518a60c001516040516020016102279796959493929190606097881b6bffffffffffffffffffffffff1990811682529690971b9095166014870152602886019390935260488501919091526068840152608883015260a882015260c80190565b60408051601f198184030181529082905261024191610b05565b602060405180830381855afa15801561025e573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906102819190610b40565b60008181526020818152604091829020805460ff19166001179055815187516001600160a01b0390811682528883015116918101919091528682015191810191909152606080870151908201526080808701519082015260a0808701519082015260c080870151908201529091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f899060e00160405180910390a19392505050565b6003546001600160a01b031633811480156103c55750600460009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610b59565b6001600160a01b0316145b6103ce57600080fd5b506000908152600160208190526040909120805460ff19169091179055565b60006103f883610656565b60008181526001602052604090205490915060ff166104595760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e00000000000000604482015260640161011c565b60005b835181101561064e5760008085838151811061047a5761047a610b76565b6020908102919091018101515182528101919091526040016000205460ff161561063c5760006001600160a01b03168482815181106104bb576104bb610b76565b6020026020010151602001516001600160a01b03160361055057836000815181106104e8576104e8610b76565b6020026020010151604001516001600160a01b03166108fc8560008151811061051357610513610b76565b6020026020010151606001519081150290604051600060405180830381858888f1935050505015801561054a573d6000803e3d6000fd5b5061063c565b600084828151811061056457610564610b76565b6020026020010151602001519050806001600160a01b03166323b872dd3087858151811061059457610594610b76565b6020026020010151604001518886815181106105b2576105b2610b76565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190610ae3565b50505b8061064681610b8c565b91505061045c565b506002555050565b600254600090815b83518110156107985760028285838151811061067c5761067c610b76565b60200260200101516000015186848151811061069a5761069a610b76565b6020026020010151602001518785815181106106b8576106b8610b76565b6020026020010151604001518886815181106106d6576106d6610b76565b60200260200101516060015160405160200161072a9594939291909485526020850193909352606091821b6bffffffffffffffffffffffff199081166040860152911b166054830152606882015260880190565b60408051601f198184030181529082905261074491610b05565b602060405180830381855afa158015610761573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107849190610b40565b91508061079081610b8c565b91505061065e565b5092915050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156107d8576107d861079f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108075761080761079f565b604052919050565b6001600160a01b038116811461082457600080fd5b50565b600060e0828403121561083957600080fd5b60405160e0810181811067ffffffffffffffff8211171561085c5761085c61079f565b604052905080823561086d8161080f565b8152602083013561087d8161080f565b8060208301525060408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b600060e082840312156108cf57600080fd5b6108d98383610827565b9392505050565b6000602082840312156108f257600080fd5b5035919050565b600067ffffffffffffffff8211156109135761091361079f565b5060051b60200190565b600082601f83011261092e57600080fd5b8135602061094361093e836108f9565b6107de565b82815260e0928302850182019282820191908785111561096257600080fd5b8387015b85811015610985576109788982610827565b8452928401928101610966565b5090979650505050505050565b60008060408084860312156109a657600080fd5b833567ffffffffffffffff808211156109be57600080fd5b818601915086601f8301126109d257600080fd5b813560206109e261093e836108f9565b82815260079290921b8401810191818101908a841115610a0157600080fd5b948201945b83861015610a68576080868c031215610a1f5760008081fd5b610a276107b5565b8635815283870135610a388161080f565b8185015286880135610a498161080f565b8189015260608781013590820152825260809095019490820190610a06565b97505087013593505080831115610a7e57600080fd5b5050610a8c8582860161091d565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610abf57610abf610a96565b500190565b6000816000190483118215151615610ade57610ade610a96565b500290565b600060208284031215610af557600080fd5b815180151581146108d957600080fd5b6000825160005b81811015610b265760208186018101518583015201610b0c565b81811115610b35576000828501525b509190910192915050565b600060208284031215610b5257600080fd5b5051919050565b600060208284031215610b6b57600080fd5b81516108d98161080f565b634e487b7160e01b600052603260045260246000fd5b600060018201610b9e57610b9e610a96565b506001019056fea2646970667358221220cda992ea4a877863bb6ed7bf5f8fd4b166d4b304e5a2595b2d6de31c902c17f964736f6c634300080d0033", "deployedSourceMap": "330:4758:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2198:960;;;;;;:::i;:::-;;:::i;:::-;;;2172:25:8;;;2160:2;2145:18;2198:960:6;;;;;;;4940:142;;;;;;;;;;-1:-1:-1;4940:142:6;;;;;:::i;:::-;;:::i;:::-;;3258:901;;;;;;:::i;:::-;;:::i;2198:960::-;2276:7;;2343:32;415:1;2343:4;:32;:::i;:::-;2319:13;:20;;;:57;;;;:::i;:::-;2398:26;;2295:81;;-1:-1:-1;;;;;;2398:43:6;2395:297;;2477:13;2464:9;:26;;2456:75;;;;-1:-1:-1;;;2456:75:6;;5801:2:8;2456:75:6;;;5783:21:8;5840:2;5820:18;;;5813:30;5879:34;5859:18;;;5852:62;-1:-1:-1;;;5930:18:8;;;5923:34;5974:19;;2456:75:6;;;;;;;;;2395:297;;;2580:26;;2621:60;;-1:-1:-1;;;2621:60:6;;2640:10;2621:60;;;6244:34:8;2660:4:6;6294:18:8;;;6287:43;6346:18;;;6339:34;;;-1:-1:-1;;;;;2621:18:6;;;;;6179::8;;2621:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2546:146;2395:297;2710:24;2737:276;2774:13;:26;;;2814:13;:25;;;2853:13;:20;;;2887:13;:17;;;2918:13;:23;;;2955:13;:23;;;2992:13;:19;;;2744:268;;;;;;;;;;;;;7033:2:8;7029:15;;;-1:-1:-1;;7025:24:8;;;7013:37;;7084:15;;;;7080:24;;;7075:2;7066:12;;7059:46;7130:2;7121:12;;7114:28;;;;7167:2;7158:12;;7151:28;;;;7204:3;7195:13;;7188:29;7242:3;7233:13;;7226:29;7280:3;7271:13;;7264:29;7318:3;7309:13;;6666:662;2744:268:6;;;;-1:-1:-1;;2744:268:6;;;;;;;;;;2737:276;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3023:19;:37;;;;;;;;;;;;:44;;-1:-1:-1;;3023:44:6;3063:4;3023:44;;;3083:26;;8218:13:8;;-1:-1:-1;;;;;8214:22:8;;;8196:41;;8285:17;;;8279:24;8275:33;8253:20;;;8246:63;;;;8353:17;;;8347:24;8325:20;;;8318:54;;;;8428:4;8416:17;;;8410:24;8388:20;;;8381:54;8491:4;8479:17;;;8473:24;8451:20;;;8444:54;8176:3;8542:17;;;8536:24;8514:20;;;8507:54;8617:4;8605:17;;;8599:24;8577:20;;;8570:54;3023:37:6;;-1:-1:-1;3083:26:6;;8145:3:8;8130:19;3083:26:6;;;;;;;3135:16;2198:960;-1:-1:-1;;;2198:960:6:o;4940:142::-;1557:25;;-1:-1:-1;;;;;1557:25:6;1614:10;:48;;:123;;;;;1710:27;;;;;;;;;-1:-1:-1;;;;;1710:27:6;-1:-1:-1;;;;;1678:59:6;:5;-1:-1:-1;;;;;1678:26:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1678:59:6;;1614:123;1593:154;;;;;;-1:-1:-1;5032:36:6::1;::::0;;;5071:4:::1;5032:36;::::0;;;;;;;:43;;-1:-1:-1;;5032:43:6::1;::::0;;::::1;::::0;;4940:142::o;3258:901::-;3378:35;3416:49;3453:11;3416:36;:49::i;:::-;3483:44;;;;:15;:44;;;;;;3378:87;;-1:-1:-1;3483:44:6;;3475:82;;;;-1:-1:-1;;;3475:82:6;;9093:2:8;3475:82:6;;;9075:21:8;9132:2;9112:18;;;9105:30;9171:27;9151:18;;;9144:55;9216:18;;3475:82:6;8891:349:8;3475:82:6;3571:6;3567:522;3587:11;:18;3583:1;:22;3567:522;;;3629:19;:52;3649:11;3661:1;3649:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;3629:52;;;;;;;;;;3649:31;3629:52;;;;3626:453;;;455:42;-1:-1:-1;;;;;3703:44:6;:11;3715:1;3703:14;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;3703:44:6;;3700:365;;3778:11;3790:1;3778:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;3770:40:6;:60;3811:11;3823:1;3811:14;;;;;;;;:::i;:::-;;;;;;;:18;;;3770:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3700:365;;;3875:11;3895;3907:1;3895:14;;;;;;;;:::i;:::-;;;;;;;:27;;;3875:48;;3945:5;-1:-1:-1;;;;;3945:18:6;;3972:4;3979:11;3991:1;3979:14;;;;;;;;:::i;:::-;;;;;;;:22;;;4027:11;4039:1;4027:14;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;3945:101;;-1:-1:-1;;;;;;3945:101:6;;;;;;;-1:-1:-1;;;;;6262:15:8;;;3945:101:6;;;6244:34:8;6314:15;;;;6294:18;;;6287:43;6346:18;;;6339:34;6179:18;;3945:101:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3853:212;3700:365;3607:3;;;;:::i;:::-;;;;3567:522;;;-1:-1:-1;4098:24:6;:54;-1:-1:-1;;3258:901:6:o;4259:581::-;4411:24;;4355:7;;;4445:345;4465:11;:18;4461:1;:22;4445:345;;;4534:245;4558:27;4604:11;4616:1;4604:14;;;;;;;;:::i;:::-;;;;;;;:31;;;4654:11;4666:1;4654:14;;;;;;;;:::i;:::-;;;;;;;:27;;;4700:11;4712:1;4700:14;;;;;;;;:::i;:::-;;;;;;;:22;;;4741:11;4753:1;4741:14;;;;;;;;:::i;:::-;;;;;;;:18;;;4541:237;;;;;;;;;;;9758:19:8;;;9802:2;9793:12;;9786:28;;;;9902:2;9898:15;;;-1:-1:-1;;9894:24:8;;;9889:2;9880:12;;9873:46;9953:15;;9949:24;9944:2;9935:12;;9928:46;9999:3;9990:13;;9983:29;10037:3;10028:13;;9517:530;4541:237:6;;;;-1:-1:-1;;4541:237:6;;;;;;;;;;4534:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4504:275;-1:-1:-1;4485:3:6;;;;:::i;:::-;;;;4445:345;;;-1:-1:-1;4806:27:6;4259:581;-1:-1:-1;;4259:581:6:o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;295:18;280:34;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:8;505:40;;575:18;560:34;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:8:o;684:131::-;-1:-1:-1;;;;;759:31:8;;749:42;;739:70;;805:1;802;795:12;739:70;684:131;:::o;820:959::-;879:5;927:4;915:9;910:3;906:19;902:30;899:50;;;945:1;942;935:12;899:50;978:2;972:9;1020:4;1012:6;1008:17;1091:6;1079:10;1076:22;1055:18;1043:10;1040:34;1037:62;1034:88;;;1102:18;;:::i;:::-;1138:2;1131:22;1171:6;-1:-1:-1;1171:6:8;1201:23;;1233:33;1201:23;1233:33;:::i;:::-;1275:23;;1350:2;1335:18;;1322:32;1363:33;1322:32;1363:33;:::i;:::-;1429:7;1424:2;1416:6;1412:15;1405:32;;1498:2;1487:9;1483:18;1470:32;1465:2;1457:6;1453:15;1446:57;1564:2;1553:9;1549:18;1536:32;1531:2;1523:6;1519:15;1512:57;1631:3;1620:9;1616:19;1603:33;1597:3;1589:6;1585:16;1578:59;1699:3;1688:9;1684:19;1671:33;1665:3;1657:6;1653:16;1646:59;1767:3;1756:9;1752:19;1739:33;1733:3;1725:6;1721:16;1714:59;;820:959;;;;:::o;1784:237::-;1872:6;1925:3;1913:9;1904:7;1900:23;1896:33;1893:53;;;1942:1;1939;1932:12;1893:53;1965:50;2007:7;1996:9;1965:50;:::i;:::-;1955:60;1784:237;-1:-1:-1;;;1784:237:8:o;2208:180::-;2267:6;2320:2;2308:9;2299:7;2295:23;2291:32;2288:52;;;2336:1;2333;2326:12;2288:52;-1:-1:-1;2359:23:8;;2208:180;-1:-1:-1;2208:180:8:o;2393:193::-;2463:4;2496:18;2488:6;2485:30;2482:56;;;2518:18;;:::i;:::-;-1:-1:-1;2563:1:8;2559:14;2575:4;2555:25;;2393:193::o;2591:731::-;2657:5;2710:3;2703:4;2695:6;2691:17;2687:27;2677:55;;2728:1;2725;2718:12;2677:55;2764:6;2751:20;2790:4;2814:70;2830:53;2880:2;2830:53;:::i;:::-;2814:70;:::i;:::-;2918:15;;;2980:4;3023:11;;;3011:24;;3007:33;;;2949:12;;;;2906:3;3052:15;;;3049:35;;;3080:1;3077;3070:12;3049:35;3116:2;3108:6;3104:15;3128:165;3144:6;3139:3;3136:15;3128:165;;;3210:40;3246:3;3241;3210:40;:::i;:::-;3198:53;;3271:12;;;;3161;;3128:165;;;-1:-1:-1;3311:5:8;;2591:731;-1:-1:-1;;;;;;;2591:731:8:o;3327:1829::-;3501:6;3509;3540:2;3583;3571:9;3562:7;3558:23;3554:32;3551:52;;;3599:1;3596;3589:12;3551:52;3639:9;3626:23;3668:18;3709:2;3701:6;3698:14;3695:34;;;3725:1;3722;3715:12;3695:34;3763:6;3752:9;3748:22;3738:32;;3808:7;3801:4;3797:2;3793:13;3789:27;3779:55;;3830:1;3827;3820:12;3779:55;3866:2;3853:16;3888:4;3912:70;3928:53;3978:2;3928:53;:::i;3912:70::-;4016:15;;;4098:1;4094:10;;;;4086:19;;4082:28;;;4047:12;;;;4122:19;;;4119:39;;;4154:1;4151;4144:12;4119:39;4178:11;;;;4198:732;4214:6;4209:3;4206:15;4198:732;;;4296:4;4290:3;4281:7;4277:17;4273:28;4270:118;;;4342:1;4371:2;4367;4360:14;4270:118;4414:22;;:::i;:::-;4476:3;4463:17;4456:5;4449:32;4531:2;4526:3;4522:12;4509:26;4548:33;4573:7;4548:33;:::i;:::-;4601:14;;;4594:31;4666:12;;;4653:26;4692:33;4653:26;4692:33;:::i;:::-;4745:14;;;4738:31;4792:2;4843:12;;;4830:26;4814:14;;;4807:50;4870:18;;4240:4;4231:14;;;;4908:12;;;;4198:732;;;4949:5;-1:-1:-1;;4992:18:8;;4979:32;;-1:-1:-1;;5023:16:8;;;5020:36;;;5052:1;5049;5042:12;5020:36;;;5075:75;5142:7;5131:8;5120:9;5116:24;5075:75;:::i;:::-;5065:85;;;3327:1829;;;;;:::o;5161:127::-;5222:10;5217:3;5213:20;5210:1;5203:31;5253:4;5250:1;5243:15;5277:4;5274:1;5267:15;5293:128;5333:3;5364:1;5360:6;5357:1;5354:13;5351:39;;;5370:18;;:::i;:::-;-1:-1:-1;5406:9:8;;5293:128::o;5426:168::-;5466:7;5532:1;5528;5524:6;5520:14;5517:1;5514:21;5509:1;5502:9;5495:17;5491:45;5488:71;;;5539:18;;:::i;:::-;-1:-1:-1;5579:9:8;;5426:168::o;6384:277::-;6451:6;6504:2;6492:9;6483:7;6479:23;6475:32;6472:52;;;6520:1;6517;6510:12;6472:52;6552:9;6546:16;6605:5;6598:13;6591:21;6584:5;6581:32;6571:60;;6627:1;6624;6617:12;7333:426;7462:3;7500:6;7494:13;7525:1;7535:129;7549:6;7546:1;7543:13;7535:129;;;7647:4;7631:14;;;7627:25;;7621:32;7608:11;;;7601:53;7564:12;7535:129;;;7682:6;7679:1;7676:13;7673:48;;;7717:1;7708:6;7703:3;7699:16;7692:27;7673:48;-1:-1:-1;7737:16:8;;;;;7333:426;-1:-1:-1;;7333:426:8:o;7764:184::-;7834:6;7887:2;7875:9;7866:7;7862:23;7858:32;7855:52;;;7903:1;7900;7893:12;7855:52;-1:-1:-1;7926:16:8;;7764:184;-1:-1:-1;7764:184:8:o;8635:251::-;8705:6;8758:2;8746:9;8737:7;8733:23;8729:32;8726:52;;;8774:1;8771;8764:12;8726:52;8806:9;8800:16;8825:31;8850:5;8825:31;:::i;9245:127::-;9306:10;9301:3;9297:20;9294:1;9287:31;9337:4;9334:1;9327:15;9361:4;9358:1;9351:15;9377:135;9416:3;9437:17;;;9434:43;;9457:18;;:::i;:::-;-1:-1:-1;9504:1:8;9493:13;;9377:135::o", "language": "Solidity", "natspec": {"author": "Sherif Abdelmoatty", "kind": "dev", "methods": {"addNewKnownHashOnion(bytes32)": {"notice": "processClaims functioncalculates the liquidity provider fee."}, "constructor": {"notice": "Constructior functionIntialize variables"}, "processClaims((bytes32,address,address,uint256)[],(address,address,uint256,uint256,uint256,uint256,uint256)[])": {"notice": "processClaims functioncalculates the liquidity provider fee."}, "transfer((address,address,uint256,uint256,uint256,uint256,uint256))": {"notice": "withdraw functionwithdraws the required funds plus fees to be sent to the domain side rollup"}}, "notice": "This contract is to be deployed in the source rollup", "title": "SourceDomainSideBridge Contract", "version": 1}, "offset": [330, 5088], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BF655FC EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xA9D72B02 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0xEDF5A2DC EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C PUSH2 0x47 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x8E CALLDATASIZE PUSH1 0x4 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3 PUSH1 0x5 PUSH2 0x3E8 PUSH2 0xAAC JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST DUP4 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12A JUMPI DUP1 CALLVALUE LT ISZERO PUSH2 0x125 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x21212121 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xAE3 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xC0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x227 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x60 SWAP8 DUP9 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 MSTORE SWAP7 SWAP1 SWAP8 SHL SWAP1 SWAP6 AND PUSH1 0x14 DUP8 ADD MSTORE PUSH1 0x28 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x48 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x68 DUP5 ADD MSTORE PUSH1 0x88 DUP4 ADD MSTORE PUSH1 0xA8 DUP3 ADD MSTORE PUSH1 0xC8 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x241 SWAP2 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE DUP9 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP8 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP8 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP8 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH32 0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89 SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x3C5 JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8 DUP4 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x459 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964652052657761726444617461206C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x11C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x47A JUMPI PUSH2 0x47A PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4BB JUMPI PUSH2 0x4BB PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x550 JUMPI DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4E8 JUMPI PUSH2 0x4E8 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x513 JUMPI PUSH2 0x513 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x54A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x63C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x564 JUMPI PUSH2 0x564 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x594 JUMPI PUSH2 0x594 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x5B2 JUMPI PUSH2 0x5B2 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x639 SWAP2 SWAP1 PUSH2 0xAE3 JUMP JUMPDEST POP POP JUMPDEST DUP1 PUSH2 0x646 DUP2 PUSH2 0xB8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x45C JUMP JUMPDEST POP PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x798 JUMPI PUSH1 0x2 DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x67C JUMPI PUSH2 0x67C PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x69A JUMPI PUSH2 0x69A PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x6B8 JUMPI PUSH2 0x6B8 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x6D6 JUMPI PUSH2 0x6D6 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 SWAP2 DUP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x40 DUP7 ADD MSTORE SWAP2 SHL AND PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x68 DUP3 ADD MSTORE PUSH1 0x88 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x744 SWAP2 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x784 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x790 DUP2 PUSH2 0xB8C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x65E JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7D8 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x807 JUMPI PUSH2 0x807 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x85C JUMPI PUSH2 0x85C PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 CALLDATALOAD PUSH2 0x86D DUP2 PUSH2 0x80F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x87D DUP2 PUSH2 0x80F JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D9 DUP4 DUP4 PUSH2 0x827 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x913 JUMPI PUSH2 0x913 PUSH2 0x79F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x943 PUSH2 0x93E DUP4 PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0xE0 SWAP3 DUP4 MUL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP3 ADD SWAP2 SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x985 JUMPI PUSH2 0x978 DUP10 DUP3 PUSH2 0x827 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0x966 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP1 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x9E2 PUSH2 0x93E DUP4 PUSH2 0x8F9 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x7 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xA68 JUMPI PUSH1 0x80 DUP7 DUP13 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA27 PUSH2 0x7B5 JUMP JUMPDEST DUP7 CALLDATALOAD DUP2 MSTORE DUP4 DUP8 ADD CALLDATALOAD PUSH2 0xA38 DUP2 PUSH2 0x80F JUMP JUMPDEST DUP2 DUP6 ADD MSTORE DUP7 DUP9 ADD CALLDATALOAD PUSH2 0xA49 DUP2 PUSH2 0x80F JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0x60 DUP8 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xA06 JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP4 POP POP DUP1 DUP4 GT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0xA8C DUP6 DUP3 DUP7 ADD PUSH2 0x91D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xABF JUMPI PUSH2 0xABF PUSH2 0xA96 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xADE JUMPI PUSH2 0xADE PUSH2 0xA96 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB26 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xB0C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB35 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8D9 DUP2 PUSH2 0x80F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB9E JUMPI PUSH2 0xB9E PUSH2 0xA96 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xA9 SWAP3 0xEA 0x4A DUP8 PUSH25 0x63BB6ED7BF5F8FD4B166D4B304E5A2595B2D6DE31C902C17F9 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ", "pcMap": {"0": {"offset": [330, 5088], "op": "PUSH1", "path": "6", "value": "0x80"}, "2": {"fn": null, "offset": [330, 5088], "op": "PUSH1", "path": "6", "value": "0x40"}, "4": {"fn": null, "offset": [330, 5088], "op": "MSTORE", "path": "6"}, "5": {"fn": null, "offset": [330, 5088], "op": "PUSH1", "path": "6", "value": "0x4"}, "7": {"fn": null, "offset": [330, 5088], "op": "CALLDATASIZE", "path": "6"}, "8": {"fn": null, "offset": [330, 5088], "op": "LT", "path": "6"}, "9": {"fn": null, "offset": [330, 5088], "op": "PUSH2", "path": "6", "value": "0x34"}, "12": {"fn": null, "offset": [330, 5088], "op": "JUMPI", "path": "6"}, "13": {"fn": null, "offset": [330, 5088], "op": "PUSH1", "path": "6", "value": "0x0"}, "15": {"fn": null, "offset": [330, 5088], "op": "CALLDATALOAD", "path": "6"}, "16": {"fn": null, "offset": [330, 5088], "op": "PUSH1", "path": "6", "value": "0xE0"}, "18": {"fn": null, "offset": [330, 5088], "op": "SHR", "path": "6"}, "19": {"fn": null, "offset": [330, 5088], "op": "DUP1", "path": "6"}, "20": {"fn": null, "offset": [330, 5088], "op": "PUSH4", "path": "6", "value": "0x4BF655FC"}, "25": {"fn": null, "offset": [330, 5088], "op": "EQ", "path": "6"}, "26": {"fn": null, "offset": [330, 5088], "op": "PUSH2", "path": "6", "value": "0x39"}, "29": {"fn": null, "offset": [330, 5088], "op": "JUMPI", "path": "6"}, "30": {"fn": null, "offset": [330, 5088], "op": "DUP1", "path": "6"}, "31": {"fn": null, "offset": [330, 5088], "op": "PUSH4", "path": "6", "value": "0xA9D72B02"}, "36": {"fn": null, "offset": [330, 5088], "op": "EQ", "path": "6"}, "37": {"fn": null, "offset": [330, 5088], "op": "PUSH2", "path": "6", "value": "0x5E"}, "40": {"fn": null, "offset": [330, 5088], "op": "JUMPI", "path": "6"}, "41": {"fn": null, "offset": [330, 5088], "op": "DUP1", "path": "6"}, "42": {"fn": null, "offset": [330, 5088], "op": "PUSH4", "path": "6", "value": "0xEDF5A2DC"}, "47": {"fn": null, "offset": [330, 5088], "op": "EQ", "path": "6"}, "48": {"fn": null, "offset": [330, 5088], "op": "PUSH2", "path": "6", "value": "0x80"}, "51": {"fn": null, "offset": [330, 5088], "op": "JUMPI", "path": "6"}, "52": {"fn": null, "offset": [330, 5088], "op": "JUMPDEST", "path": "6"}, "53": {"fn": null, "offset": [330, 5088], "op": "PUSH1", "path": "6", "value": "0x0"}, "55": {"fn": null, "offset": [330, 5088], "op": "DUP1", "path": "6"}, "56": {"first_revert": true, "fn": null, "offset": [330, 5088], "op": "REVERT", "path": "6"}, "57": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "JUMPDEST", "path": "6"}, "58": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "PUSH2", "path": "6", "value": "0x4C"}, "61": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "PUSH2", "path": "6", "value": "0x47"}, "64": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "CALLDATASIZE", "path": "6"}, "65": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "PUSH1", "path": "6", "value": "0x4"}, "67": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "PUSH2", "path": "6", "value": "0x8BD"}, "70": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2198, 3158], "op": "JUMP", "path": "6"}, "71": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "JUMPDEST", "path": "6"}, "72": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "PUSH2", "path": "6", "value": "0x93"}, "75": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2198, 3158], "op": "JUMP", "path": "6"}, "76": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "JUMPDEST", "path": "6"}, "77": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "PUSH1", "path": "6", "value": "0x40"}, "79": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "MLOAD", "path": "6"}, "80": {"op": "SWAP1"}, "81": {"op": "DUP2"}, "82": {"op": "MSTORE"}, "83": {"op": "PUSH1", "value": "0x20"}, "85": {"op": "ADD"}, "86": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "PUSH1", "path": "6", "value": "0x40"}, "88": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "MLOAD", "path": "6"}, "89": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "DUP1", "path": "6"}, "90": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "SWAP2", "path": "6"}, "91": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "SUB", "path": "6"}, "92": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "SWAP1", "path": "6"}, "93": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "RETURN", "path": "6"}, "94": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "JUMPDEST", "path": "6"}, "95": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "CALLVALUE", "path": "6"}, "96": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "DUP1", "path": "6"}, "97": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "ISZERO", "path": "6"}, "98": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "PUSH2", "path": "6", "value": "0x6A"}, "101": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "JUMPI", "path": "6"}, "102": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "PUSH1", "path": "6", "value": "0x0"}, "104": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "DUP1", "path": "6"}, "105": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "REVERT", "path": "6"}, "106": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "JUMPDEST", "path": "6"}, "107": {"op": "POP"}, "108": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "PUSH2", "path": "6", "value": "0x7E"}, "111": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "PUSH2", "path": "6", "value": "0x79"}, "114": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "CALLDATASIZE", "path": "6"}, "115": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "PUSH1", "path": "6", "value": "0x4"}, "117": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "PUSH2", "path": "6", "value": "0x8E0"}, "120": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [4940, 5082], "op": "JUMP", "path": "6"}, "121": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "JUMPDEST", "path": "6"}, "122": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "PUSH2", "path": "6", "value": "0x323"}, "125": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [4940, 5082], "op": "JUMP", "path": "6"}, "126": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "JUMPDEST", "path": "6"}, "127": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "STOP", "path": "6"}, "128": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "JUMPDEST", "path": "6"}, "129": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "PUSH2", "path": "6", "value": "0x7E"}, "132": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "PUSH2", "path": "6", "value": "0x8E"}, "135": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "CALLDATASIZE", "path": "6"}, "136": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "PUSH1", "path": "6", "value": "0x4"}, "138": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "PUSH2", "path": "6", "value": "0x992"}, "141": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3258, 4159], "op": "JUMP", "path": "6"}, "142": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "JUMPDEST", "path": "6"}, "143": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "PUSH2", "path": "6", "value": "0x3ED"}, "146": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3258, 4159], "op": "JUMP", "path": "6"}, "147": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "JUMPDEST", "path": "6"}, "148": {"fn": "SourceDomainSideBridge.transfer", "offset": [2276, 2283], "op": "PUSH1", "path": "6", "value": "0x0"}, "150": {"fn": "SourceDomainSideBridge.transfer", "offset": [2276, 2283], "op": "DUP1", "path": "6"}, "151": {"fn": "SourceDomainSideBridge.transfer", "offset": [2343, 2375], "op": "PUSH2", "path": "6", "value": "0xA3"}, "154": {"offset": [415, 416], "op": "PUSH1", "path": "6", "value": "0x5"}, "156": {"fn": "SourceDomainSideBridge.transfer", "offset": [2343, 2347], "op": "PUSH2", "path": "6", "value": "0x3E8"}, "159": {"fn": "SourceDomainSideBridge.transfer", "offset": [2343, 2375], "op": "PUSH2", "path": "6", "value": "0xAAC"}, "162": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2343, 2375], "op": "JUMP", "path": "6"}, "163": {"fn": "SourceDomainSideBridge.transfer", "offset": [2343, 2375], "op": "JUMPDEST", "path": "6"}, "164": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2332], "op": "DUP4", "path": "6"}, "165": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2339], "op": "PUSH1", "path": "6", "value": "0x40"}, "167": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2339], "op": "ADD", "path": "6"}, "168": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2339], "op": "MLOAD", "path": "6"}, "169": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2376], "op": "PUSH2", "path": "6", "value": "0xB2"}, "172": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2376], "op": "SWAP2", "path": "6"}, "173": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2376], "op": "SWAP1", "path": "6"}, "174": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2376], "op": "PUSH2", "path": "6", "value": "0xAC4"}, "177": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2319, 2376], "op": "JUMP", "path": "6"}, "178": {"fn": "SourceDomainSideBridge.transfer", "offset": [2319, 2376], "op": "JUMPDEST", "path": "6"}, "179": {"fn": "SourceDomainSideBridge.transfer", "offset": [2398, 2424], "op": "DUP4", "path": "6"}, "180": {"fn": "SourceDomainSideBridge.transfer", "offset": [2398, 2424], "op": "MLOAD", "path": "6"}, "181": {"fn": "SourceDomainSideBridge.transfer", "offset": [2295, 2376], "op": "SWAP1", "path": "6"}, "182": {"fn": "SourceDomainSideBridge.transfer", "offset": [2295, 2376], "op": "SWAP2", "path": "6"}, "183": {"op": "POP"}, "184": {"op": "PUSH1", "value": "0x1"}, "186": {"op": "PUSH1", "value": "0x1"}, "188": {"op": "PUSH1", "value": "0xA0"}, "190": {"op": "SHL"}, "191": {"op": "SUB"}, "192": {"branch": 14, "fn": "SourceDomainSideBridge.transfer", "offset": [2398, 2441], "op": "AND", "path": "6"}, "193": {"fn": "SourceDomainSideBridge.transfer", "offset": [2395, 2692], "op": "PUSH2", "path": "6", "value": "0x12A"}, "196": {"branch": 14, "fn": "SourceDomainSideBridge.transfer", "offset": [2395, 2692], "op": "JUMPI", "path": "6"}, "197": {"fn": "SourceDomainSideBridge.transfer", "offset": [2477, 2490], "op": "DUP1", "path": "6", "statement": 0}, "198": {"fn": "SourceDomainSideBridge.transfer", "offset": [2464, 2473], "op": "CALLVALUE", "path": "6"}, "199": {"fn": "SourceDomainSideBridge.transfer", "offset": [2464, 2490], "op": "LT", "path": "6"}, "200": {"branch": 15, "fn": "SourceDomainSideBridge.transfer", "offset": [2464, 2490], "op": "ISZERO", "path": "6"}, "201": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "PUSH2", "path": "6", "value": "0x125"}, "204": {"branch": 15, "fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "JUMPI", "path": "6"}, "205": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "PUSH1", "path": "6", "value": "0x40"}, "207": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "MLOAD", "path": "6"}, "208": {"op": "PUSH3", "value": "0x461BCD"}, "212": {"op": "PUSH1", "value": "0xE5"}, "214": {"op": "SHL"}, "215": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "DUP2", "path": "6"}, "216": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "MSTORE", "path": "6"}, "217": {"op": "PUSH1", "value": "0x20"}, "219": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "PUSH1", "path": "6", "value": "0x4"}, "221": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "DUP3", "path": "6"}, "222": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "ADD", "path": "6"}, "223": {"op": "MSTORE"}, "224": {"op": "PUSH1", "value": "0x24"}, "226": {"op": "DUP1"}, "227": {"op": "DUP3"}, "228": {"op": "ADD"}, "229": {"op": "MSTORE"}, "230": {"op": "PUSH32", "value": "0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121"}, "263": {"op": "PUSH1", "value": "0x44"}, "265": {"op": "DUP3"}, "266": {"op": "ADD"}, "267": {"op": "MSTORE"}, "268": {"op": "PUSH4", "value": "0x21212121"}, "273": {"op": "PUSH1", "value": "0xE0"}, "275": {"op": "SHL"}, "276": {"op": "PUSH1", "value": "0x64"}, "278": {"op": "DUP3"}, "279": {"op": "ADD"}, "280": {"op": "MSTORE"}, "281": {"op": "PUSH1", "value": "0x84"}, "283": {"op": "ADD"}, "284": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "JUMPDEST", "path": "6"}, "285": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "PUSH1", "path": "6", "value": "0x40"}, "287": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "MLOAD", "path": "6"}, "288": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "DUP1", "path": "6"}, "289": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "SWAP2", "path": "6"}, "290": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "SUB", "path": "6"}, "291": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "SWAP1", "path": "6"}, "292": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "REVERT", "optimizer_revert": true, "path": "6"}, "293": {"fn": "SourceDomainSideBridge.transfer", "offset": [2456, 2531], "op": "JUMPDEST", "path": "6"}, "294": {"fn": "SourceDomainSideBridge.transfer", "offset": [2395, 2692], "op": "PUSH2", "path": "6", "value": "0x1A6"}, "297": {"fn": "SourceDomainSideBridge.transfer", "offset": [2395, 2692], "op": "JUMP", "path": "6"}, "298": {"fn": "SourceDomainSideBridge.transfer", "offset": [2395, 2692], "op": "JUMPDEST", "path": "6"}, "299": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2606], "op": "DUP3", "path": "6"}, "300": {"fn": "SourceDomainSideBridge.transfer", "offset": [2580, 2606], "op": "MLOAD", "path": "6"}, "301": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "statement": 1, "value": "0x40"}, "303": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "MLOAD", "path": "6"}, "304": {"op": "PUSH4", "value": "0x23B872DD"}, "309": {"op": "PUSH1", "value": "0xE0"}, "311": {"op": "SHL"}, "312": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP2", "path": "6"}, "313": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "MSTORE", "path": "6"}, "314": {"fn": "SourceDomainSideBridge.transfer", "offset": [2640, 2650], "op": "CALLER", "path": "6"}, "315": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x4"}, "317": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP3", "path": "6"}, "318": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "ADD", "path": "6"}, "319": {"op": "MSTORE"}, "320": {"fn": "SourceDomainSideBridge.transfer", "offset": [2660, 2664], "op": "ADDRESS", "path": "6"}, "321": {"op": "PUSH1", "value": "0x24"}, "323": {"op": "DUP3"}, "324": {"op": "ADD"}, "325": {"op": "MSTORE"}, "326": {"op": "PUSH1", "value": "0x44"}, "328": {"op": "DUP2"}, "329": {"op": "ADD"}, "330": {"op": "DUP4"}, "331": {"op": "SWAP1"}, "332": {"op": "MSTORE"}, "333": {"op": "PUSH1", "value": "0x1"}, "335": {"op": "PUSH1", "value": "0x1"}, "337": {"op": "PUSH1", "value": "0xA0"}, "339": {"op": "SHL"}, "340": {"op": "SUB"}, "341": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2639], "op": "DUP3", "path": "6"}, "342": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2639], "op": "AND", "path": "6"}, "343": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2639], "op": "SWAP1", "path": "6"}, "344": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2639], "op": "PUSH4", "path": "6", "value": "0x23B872DD"}, "349": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2639], "op": "SWAP1", "path": "6"}, "350": {"op": "PUSH1", "value": "0x64"}, "352": {"op": "ADD"}, "353": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x20"}, "355": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x40"}, "357": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "MLOAD", "path": "6"}, "358": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP1", "path": "6"}, "359": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP4", "path": "6"}, "360": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "SUB", "path": "6"}, "361": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP2", "path": "6"}, "362": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x0"}, "364": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP8", "path": "6"}, "365": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "GAS", "path": "6"}, "366": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "CALL", "path": "6"}, "367": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "ISZERO", "path": "6"}, "368": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP1", "path": "6"}, "369": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "ISZERO", "path": "6"}, "370": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH2", "path": "6", "value": "0x17F"}, "373": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "JUMPI", "path": "6"}, "374": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "RETURNDATASIZE", "path": "6"}, "375": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x0"}, "377": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP1", "path": "6"}, "378": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "RETURNDATACOPY", "path": "6"}, "379": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "RETURNDATASIZE", "path": "6"}, "380": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x0"}, "382": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "REVERT", "path": "6"}, "383": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "JUMPDEST", "path": "6"}, "384": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "POP", "path": "6"}, "385": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "POP", "path": "6"}, "386": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "POP", "path": "6"}, "387": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "POP", "path": "6"}, "388": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x40"}, "390": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "MLOAD", "path": "6"}, "391": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "RETURNDATASIZE", "path": "6"}, "392": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x1F"}, "394": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "NOT", "path": "6"}, "395": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x1F"}, "397": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP3", "path": "6"}, "398": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "ADD", "path": "6"}, "399": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "AND", "path": "6"}, "400": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP3", "path": "6"}, "401": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "ADD", "path": "6"}, "402": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP1", "path": "6"}, "403": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH1", "path": "6", "value": "0x40"}, "405": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "MSTORE", "path": "6"}, "406": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "POP", "path": "6"}, "407": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "DUP2", "path": "6"}, "408": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "ADD", "path": "6"}, "409": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "SWAP1", "path": "6"}, "410": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH2", "path": "6", "value": "0x1A3"}, "413": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "SWAP2", "path": "6"}, "414": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "SWAP1", "path": "6"}, "415": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "PUSH2", "path": "6", "value": "0xAE3"}, "418": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2621, 2681], "op": "JUMP", "path": "6"}, "419": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "JUMPDEST", "path": "6"}, "420": {"fn": "SourceDomainSideBridge.transfer", "offset": [2621, 2681], "op": "POP", "path": "6"}, "421": {"fn": "SourceDomainSideBridge.transfer", "offset": [2546, 2692], "op": "POP", "path": "6"}, "422": {"fn": "SourceDomainSideBridge.transfer", "offset": [2395, 2692], "op": "JUMPDEST", "path": "6"}, "423": {"fn": "SourceDomainSideBridge.transfer", "offset": [2710, 2734], "op": "PUSH1", "path": "6", "value": "0x0"}, "425": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x2"}, "427": {"fn": "SourceDomainSideBridge.transfer", "offset": [2774, 2787], "op": "DUP5", "path": "6"}, "428": {"fn": "SourceDomainSideBridge.transfer", "offset": [2774, 2800], "op": "PUSH1", "path": "6", "value": "0x0"}, "430": {"fn": "SourceDomainSideBridge.transfer", "offset": [2774, 2800], "op": "ADD", "path": "6"}, "431": {"fn": "SourceDomainSideBridge.transfer", "offset": [2774, 2800], "op": "MLOAD", "path": "6"}, "432": {"fn": "SourceDomainSideBridge.transfer", "offset": [2814, 2827], "op": "DUP6", "path": "6"}, "433": {"fn": "SourceDomainSideBridge.transfer", "offset": [2814, 2839], "op": "PUSH1", "path": "6", "value": "0x20"}, "435": {"fn": "SourceDomainSideBridge.transfer", "offset": [2814, 2839], "op": "ADD", "path": "6"}, "436": {"fn": "SourceDomainSideBridge.transfer", "offset": [2814, 2839], "op": "MLOAD", "path": "6"}, "437": {"fn": "SourceDomainSideBridge.transfer", "offset": [2853, 2866], "op": "DUP7", "path": "6"}, "438": {"fn": "SourceDomainSideBridge.transfer", "offset": [2853, 2873], "op": "PUSH1", "path": "6", "value": "0x40"}, "440": {"fn": "SourceDomainSideBridge.transfer", "offset": [2853, 2873], "op": "ADD", "path": "6"}, "441": {"fn": "SourceDomainSideBridge.transfer", "offset": [2853, 2873], "op": "MLOAD", "path": "6"}, "442": {"fn": "SourceDomainSideBridge.transfer", "offset": [2887, 2900], "op": "DUP8", "path": "6"}, "443": {"fn": "SourceDomainSideBridge.transfer", "offset": [2887, 2904], "op": "PUSH1", "path": "6", "value": "0x60"}, "445": {"fn": "SourceDomainSideBridge.transfer", "offset": [2887, 2904], "op": "ADD", "path": "6"}, "446": {"fn": "SourceDomainSideBridge.transfer", "offset": [2887, 2904], "op": "MLOAD", "path": "6"}, "447": {"fn": "SourceDomainSideBridge.transfer", "offset": [2918, 2931], "op": "DUP9", "path": "6"}, "448": {"fn": "SourceDomainSideBridge.transfer", "offset": [2918, 2941], "op": "PUSH1", "path": "6", "value": "0x80"}, "450": {"fn": "SourceDomainSideBridge.transfer", "offset": [2918, 2941], "op": "ADD", "path": "6"}, "451": {"fn": "SourceDomainSideBridge.transfer", "offset": [2918, 2941], "op": "MLOAD", "path": "6"}, "452": {"fn": "SourceDomainSideBridge.transfer", "offset": [2955, 2968], "op": "DUP10", "path": "6"}, "453": {"fn": "SourceDomainSideBridge.transfer", "offset": [2955, 2978], "op": "PUSH1", "path": "6", "value": "0xA0"}, "455": {"fn": "SourceDomainSideBridge.transfer", "offset": [2955, 2978], "op": "ADD", "path": "6"}, "456": {"fn": "SourceDomainSideBridge.transfer", "offset": [2955, 2978], "op": "MLOAD", "path": "6"}, "457": {"fn": "SourceDomainSideBridge.transfer", "offset": [2992, 3005], "op": "DUP11", "path": "6"}, "458": {"fn": "SourceDomainSideBridge.transfer", "offset": [2992, 3011], "op": "PUSH1", "path": "6", "value": "0xC0"}, "460": {"fn": "SourceDomainSideBridge.transfer", "offset": [2992, 3011], "op": "ADD", "path": "6"}, "461": {"fn": "SourceDomainSideBridge.transfer", "offset": [2992, 3011], "op": "MLOAD", "path": "6"}, "462": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "PUSH1", "path": "6", "value": "0x40"}, "464": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "MLOAD", "path": "6"}, "465": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "PUSH1", "path": "6", "value": "0x20"}, "467": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "ADD", "path": "6"}, "468": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "PUSH2", "path": "6", "value": "0x227"}, "471": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP8", "path": "6"}, "472": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP7", "path": "6"}, "473": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP6", "path": "6"}, "474": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP5", "path": "6"}, "475": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP4", "path": "6"}, "476": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP3", "path": "6"}, "477": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP2", "path": "6"}, "478": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP1", "path": "6"}, "479": {"op": "PUSH1", "value": "0x60"}, "481": {"op": "SWAP8"}, "482": {"op": "DUP9"}, "483": {"op": "SHL"}, "484": {"op": "PUSH12", "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"}, "497": {"op": "NOT"}, "498": {"op": "SWAP1"}, "499": {"op": "DUP2"}, "500": {"op": "AND"}, "501": {"op": "DUP3"}, "502": {"op": "MSTORE"}, "503": {"op": "SWAP7"}, "504": {"op": "SWAP1"}, "505": {"op": "SWAP8"}, "506": {"op": "SHL"}, "507": {"op": "SWAP1"}, "508": {"op": "SWAP6"}, "509": {"op": "AND"}, "510": {"op": "PUSH1", "value": "0x14"}, "512": {"op": "DUP8"}, "513": {"op": "ADD"}, "514": {"op": "MSTORE"}, "515": {"op": "PUSH1", "value": "0x28"}, "517": {"op": "DUP7"}, "518": {"op": "ADD"}, "519": {"op": "SWAP4"}, "520": {"op": "SWAP1"}, "521": {"op": "SWAP4"}, "522": {"op": "MSTORE"}, "523": {"op": "PUSH1", "value": "0x48"}, "525": {"op": "DUP6"}, "526": {"op": "ADD"}, "527": {"op": "SWAP2"}, "528": {"op": "SWAP1"}, "529": {"op": "SWAP2"}, "530": {"op": "MSTORE"}, "531": {"op": "PUSH1", "value": "0x68"}, "533": {"op": "DUP5"}, "534": {"op": "ADD"}, "535": {"op": "MSTORE"}, "536": {"op": "PUSH1", "value": "0x88"}, "538": {"op": "DUP4"}, "539": {"op": "ADD"}, "540": {"op": "MSTORE"}, "541": {"op": "PUSH1", "value": "0xA8"}, "543": {"op": "DUP3"}, "544": {"op": "ADD"}, "545": {"op": "MSTORE"}, "546": {"op": "PUSH1", "value": "0xC8"}, "548": {"op": "ADD"}, "549": {"op": "SWAP1"}, "550": {"op": "JUMP"}, "551": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "JUMPDEST", "path": "6"}, "552": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "PUSH1", "path": "6", "value": "0x40"}, "554": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "DUP1", "path": "6"}, "555": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "MLOAD", "path": "6"}, "556": {"op": "PUSH1", "value": "0x1F"}, "558": {"op": "NOT"}, "559": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "DUP2", "path": "6"}, "560": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "DUP5", "path": "6"}, "561": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SUB", "path": "6"}, "562": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "ADD", "path": "6"}, "563": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "DUP2", "path": "6"}, "564": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "MSTORE", "path": "6"}, "565": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP1", "path": "6"}, "566": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "DUP3", "path": "6"}, "567": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "SWAP1", "path": "6"}, "568": {"fn": "SourceDomainSideBridge.transfer", "offset": [2744, 3012], "op": "MSTORE", "path": "6"}, "569": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH2", "path": "6", "value": "0x241"}, "572": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "SWAP2", "path": "6"}, "573": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH2", "path": "6", "value": "0xB05"}, "576": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2737, 3013], "op": "JUMP", "path": "6"}, "577": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "JUMPDEST", "path": "6"}, "578": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x20"}, "580": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x40"}, "582": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "MLOAD", "path": "6"}, "583": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP1", "path": "6"}, "584": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP4", "path": "6"}, "585": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "SUB", "path": "6"}, "586": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP2", "path": "6"}, "587": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP6", "path": "6"}, "588": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "GAS", "path": "6"}, "589": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "STATICCALL", "path": "6"}, "590": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "ISZERO", "path": "6"}, "591": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP1", "path": "6"}, "592": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "ISZERO", "path": "6"}, "593": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH2", "path": "6", "value": "0x25E"}, "596": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "JUMPI", "path": "6"}, "597": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "RETURNDATASIZE", "path": "6"}, "598": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x0"}, "600": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP1", "path": "6"}, "601": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "RETURNDATACOPY", "path": "6"}, "602": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "RETURNDATASIZE", "path": "6"}, "603": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x0"}, "605": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "REVERT", "path": "6"}, "606": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "JUMPDEST", "path": "6"}, "607": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "POP", "path": "6"}, "608": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "POP", "path": "6"}, "609": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "POP", "path": "6"}, "610": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x40"}, "612": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "MLOAD", "path": "6"}, "613": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "RETURNDATASIZE", "path": "6"}, "614": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x1F"}, "616": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "NOT", "path": "6"}, "617": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x1F"}, "619": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP3", "path": "6"}, "620": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "ADD", "path": "6"}, "621": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "AND", "path": "6"}, "622": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP3", "path": "6"}, "623": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "ADD", "path": "6"}, "624": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP1", "path": "6"}, "625": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH1", "path": "6", "value": "0x40"}, "627": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "MSTORE", "path": "6"}, "628": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "POP", "path": "6"}, "629": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "DUP2", "path": "6"}, "630": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "ADD", "path": "6"}, "631": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "SWAP1", "path": "6"}, "632": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH2", "path": "6", "value": "0x281"}, "635": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "SWAP2", "path": "6"}, "636": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "SWAP1", "path": "6"}, "637": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "PUSH2", "path": "6", "value": "0xB40"}, "640": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2737, 3013], "op": "JUMP", "path": "6"}, "641": {"fn": "SourceDomainSideBridge.transfer", "offset": [2737, 3013], "op": "JUMPDEST", "path": "6"}, "642": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3042], "op": "PUSH1", "path": "6", "statement": 2, "value": "0x0"}, "644": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "DUP2", "path": "6"}, "645": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "DUP2", "path": "6"}, "646": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "MSTORE", "path": "6"}, "647": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "PUSH1", "path": "6", "value": "0x20"}, "649": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "DUP2", "path": "6"}, "650": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "DUP2", "path": "6"}, "651": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "MSTORE", "path": "6"}, "652": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "PUSH1", "path": "6", "value": "0x40"}, "654": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "SWAP2", "path": "6"}, "655": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "DUP3", "path": "6"}, "656": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "SWAP1", "path": "6"}, "657": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "KECCAK256", "path": "6"}, "658": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3067], "op": "DUP1", "path": "6"}, "659": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3067], "op": "SLOAD", "path": "6"}, "660": {"op": "PUSH1", "value": "0xFF"}, "662": {"op": "NOT"}, "663": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3067], "op": "AND", "path": "6"}, "664": {"fn": "SourceDomainSideBridge.transfer", "offset": [3063, 3067], "op": "PUSH1", "path": "6", "value": "0x1"}, "666": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3067], "op": "OR", "path": "6"}, "667": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3067], "op": "SWAP1", "path": "6"}, "668": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3067], "op": "SSTORE", "path": "6"}, "669": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "DUP2", "path": "6", "statement": 3}, "670": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "MLOAD", "path": "6"}, "671": {"op": "DUP8"}, "672": {"op": "MLOAD"}, "673": {"op": "PUSH1", "value": "0x1"}, "675": {"op": "PUSH1", "value": "0x1"}, "677": {"op": "PUSH1", "value": "0xA0"}, "679": {"op": "SHL"}, "680": {"op": "SUB"}, "681": {"op": "SWAP1"}, "682": {"op": "DUP2"}, "683": {"op": "AND"}, "684": {"op": "DUP3"}, "685": {"op": "MSTORE"}, "686": {"op": "DUP9"}, "687": {"op": "DUP4"}, "688": {"op": "ADD"}, "689": {"op": "MLOAD"}, "690": {"op": "AND"}, "691": {"op": "SWAP2"}, "692": {"op": "DUP2"}, "693": {"op": "ADD"}, "694": {"op": "SWAP2"}, "695": {"op": "SWAP1"}, "696": {"op": "SWAP2"}, "697": {"op": "MSTORE"}, "698": {"op": "DUP7"}, "699": {"op": "DUP3"}, "700": {"op": "ADD"}, "701": {"op": "MLOAD"}, "702": {"op": "SWAP2"}, "703": {"op": "DUP2"}, "704": {"op": "ADD"}, "705": {"op": "SWAP2"}, "706": {"op": "SWAP1"}, "707": {"op": "SWAP2"}, "708": {"op": "MSTORE"}, "709": {"op": "PUSH1", "value": "0x60"}, "711": {"op": "DUP1"}, "712": {"op": "DUP8"}, "713": {"op": "ADD"}, "714": {"op": "MLOAD"}, "715": {"op": "SWAP1"}, "716": {"op": "DUP3"}, "717": {"op": "ADD"}, "718": {"op": "MSTORE"}, "719": {"op": "PUSH1", "value": "0x80"}, "721": {"op": "DUP1"}, "722": {"op": "DUP8"}, "723": {"op": "ADD"}, "724": {"op": "MLOAD"}, "725": {"op": "SWAP1"}, "726": {"op": "DUP3"}, "727": {"op": "ADD"}, "728": {"op": "MSTORE"}, "729": {"op": "PUSH1", "value": "0xA0"}, "731": {"op": "DUP1"}, "732": {"op": "DUP8"}, "733": {"op": "ADD"}, "734": {"op": "MLOAD"}, "735": {"op": "SWAP1"}, "736": {"op": "DUP3"}, "737": {"op": "ADD"}, "738": {"op": "MSTORE"}, "739": {"op": "PUSH1", "value": "0xC0"}, "741": {"op": "DUP1"}, "742": {"op": "DUP8"}, "743": {"op": "ADD"}, "744": {"op": "MLOAD"}, "745": {"op": "SWAP1"}, "746": {"op": "DUP3"}, "747": {"op": "ADD"}, "748": {"op": "MSTORE"}, "749": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "SWAP1", "path": "6"}, "750": {"fn": "SourceDomainSideBridge.transfer", "offset": [3023, 3060], "op": "SWAP2", "path": "6"}, "751": {"op": "POP"}, "752": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "PUSH32", "path": "6", "value": "0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89"}, "785": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "SWAP1", "path": "6"}, "786": {"op": "PUSH1", "value": "0xE0"}, "788": {"op": "ADD"}, "789": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "PUSH1", "path": "6", "value": "0x40"}, "791": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "MLOAD", "path": "6"}, "792": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "DUP1", "path": "6"}, "793": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "SWAP2", "path": "6"}, "794": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "SUB", "path": "6"}, "795": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "SWAP1", "path": "6"}, "796": {"fn": "SourceDomainSideBridge.transfer", "offset": [3083, 3109], "op": "LOG1", "path": "6"}, "797": {"fn": "SourceDomainSideBridge.transfer", "offset": [3135, 3151], "op": "SWAP4", "path": "6", "statement": 4}, "798": {"fn": "SourceDomainSideBridge.transfer", "offset": [2198, 3158], "op": "SWAP3", "path": "6"}, "799": {"op": "POP"}, "800": {"op": "POP"}, "801": {"op": "POP"}, "802": {"fn": "SourceDomainSideBridge.transfer", "jump": "o", "offset": [2198, 3158], "op": "JUMP", "path": "6"}, "803": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [4940, 5082], "op": "JUMPDEST", "path": "6"}, "804": {"offset": [1557, 1582], "op": "PUSH1", "path": "6", "value": "0x3"}, "806": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1557, 1582], "op": "SLOAD", "path": "6"}, "807": {"op": "PUSH1", "value": "0x1"}, "809": {"op": "PUSH1", "value": "0x1"}, "811": {"op": "PUSH1", "value": "0xA0"}, "813": {"op": "SHL"}, "814": {"op": "SUB"}, "815": {"offset": [1557, 1582], "op": "AND", "path": "6"}, "816": {"offset": [1614, 1624], "op": "CALLER", "path": "6"}, "817": {"offset": [1614, 1662], "op": "DUP2", "path": "6"}, "818": {"branch": 16, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1614, 1662], "op": "EQ", "path": "6"}, "819": {"offset": [1614, 1737], "op": "DUP1", "path": "6"}, "820": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1614, 1737], "op": "ISZERO", "path": "6"}, "821": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1614, 1737], "op": "PUSH2", "path": "6", "value": "0x3C5"}, "824": {"branch": 16, "offset": [1614, 1737], "op": "JUMPI", "path": "6"}, "825": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1614, 1737], "op": "POP", "path": "6"}, "826": {"offset": [1710, 1737], "op": "PUSH1", "path": "6", "value": "0x4"}, "828": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1710, 1737], "op": "PUSH1", "path": "6", "value": "0x0"}, "830": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1710, 1737], "op": "SWAP1", "path": "6"}, "831": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1710, 1737], "op": "SLOAD", "path": "6"}, "832": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1710, 1737], "op": "SWAP1", "path": "6"}, "833": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1710, 1737], "op": "PUSH2", "path": "6", "value": "0x100"}, "836": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1710, 1737], "op": "EXP", "path": "6"}, "837": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1710, 1737], "op": "SWAP1", "path": "6"}, "838": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1710, 1737], "op": "DIV", "path": "6"}, "839": {"op": "PUSH1", "value": "0x1"}, "841": {"op": "PUSH1", "value": "0x1"}, "843": {"op": "PUSH1", "value": "0xA0"}, "845": {"op": "SHL"}, "846": {"op": "SUB"}, "847": {"offset": [1710, 1737], "op": "AND", "path": "6"}, "848": {"op": "PUSH1", "value": "0x1"}, "850": {"op": "PUSH1", "value": "0x1"}, "852": {"op": "PUSH1", "value": "0xA0"}, "854": {"op": "SHL"}, "855": {"op": "SUB"}, "856": {"offset": [1678, 1737], "op": "AND", "path": "6"}, "857": {"offset": [1678, 1683], "op": "DUP2", "path": "6"}, "858": {"op": "PUSH1", "value": "0x1"}, "860": {"op": "PUSH1", "value": "0x1"}, "862": {"op": "PUSH1", "value": "0xA0"}, "864": {"op": "SHL"}, "865": {"op": "SUB"}, "866": {"offset": [1678, 1704], "op": "AND", "path": "6"}, "867": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1704], "op": "PUSH4", "path": "6", "value": "0x6E296E45"}, "872": {"offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x40"}, "874": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "MLOAD", "path": "6"}, "875": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP2", "path": "6"}, "876": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH4", "path": "6", "value": "0xFFFFFFFF"}, "881": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "AND", "path": "6"}, "882": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0xE0"}, "884": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "SHL", "path": "6"}, "885": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP2", "path": "6"}, "886": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "MSTORE", "path": "6"}, "887": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x4"}, "889": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "ADD", "path": "6"}, "890": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x20"}, "892": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x40"}, "894": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "MLOAD", "path": "6"}, "895": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP1", "path": "6"}, "896": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP4", "path": "6"}, "897": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "SUB", "path": "6"}, "898": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP2", "path": "6"}, "899": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP7", "path": "6"}, "900": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "GAS", "path": "6"}, "901": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "STATICCALL", "path": "6"}, "902": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "ISZERO", "path": "6"}, "903": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP1", "path": "6"}, "904": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "ISZERO", "path": "6"}, "905": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH2", "path": "6", "value": "0x396"}, "908": {"offset": [1678, 1706], "op": "JUMPI", "path": "6"}, "909": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "RETURNDATASIZE", "path": "6"}, "910": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x0"}, "912": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP1", "path": "6"}, "913": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "RETURNDATACOPY", "path": "6"}, "914": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "RETURNDATASIZE", "path": "6"}, "915": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x0"}, "917": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "REVERT", "path": "6"}, "918": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "JUMPDEST", "path": "6"}, "919": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "POP", "path": "6"}, "920": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "POP", "path": "6"}, "921": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "POP", "path": "6"}, "922": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "POP", "path": "6"}, "923": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x40"}, "925": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "MLOAD", "path": "6"}, "926": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "RETURNDATASIZE", "path": "6"}, "927": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x1F"}, "929": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "NOT", "path": "6"}, "930": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x1F"}, "932": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP3", "path": "6"}, "933": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "ADD", "path": "6"}, "934": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "AND", "path": "6"}, "935": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP3", "path": "6"}, "936": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "ADD", "path": "6"}, "937": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP1", "path": "6"}, "938": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH1", "path": "6", "value": "0x40"}, "940": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "MSTORE", "path": "6"}, "941": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "POP", "path": "6"}, "942": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "DUP2", "path": "6"}, "943": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "ADD", "path": "6"}, "944": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "SWAP1", "path": "6"}, "945": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH2", "path": "6", "value": "0x3BA"}, "948": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "SWAP2", "path": "6"}, "949": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "SWAP1", "path": "6"}, "950": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "PUSH2", "path": "6", "value": "0xB59"}, "953": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [1678, 1706], "op": "JUMP", "path": "6"}, "954": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1706], "op": "JUMPDEST", "path": "6"}, "955": {"op": "PUSH1", "value": "0x1"}, "957": {"op": "PUSH1", "value": "0x1"}, "959": {"op": "PUSH1", "value": "0xA0"}, "961": {"op": "SHL"}, "962": {"op": "SUB"}, "963": {"offset": [1678, 1737], "op": "AND", "path": "6"}, "964": {"branch": 17, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1678, 1737], "op": "EQ", "path": "6"}, "965": {"offset": [1614, 1737], "op": "JUMPDEST", "path": "6"}, "966": {"offset": [1593, 1747], "op": "PUSH2", "path": "6", "value": "0x3CE"}, "969": {"branch": 17, "offset": [1593, 1747], "op": "JUMPI", "path": "6"}, "970": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1593, 1747], "op": "PUSH1", "path": "6", "value": "0x0"}, "972": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1593, 1747], "op": "DUP1", "path": "6"}, "973": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1593, 1747], "op": "REVERT", "path": "6"}, "974": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1593, 1747], "op": "JUMPDEST", "path": "6"}, "975": {"op": "POP"}, "976": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "PUSH1", "path": "6", "statement": 5, "value": "0x0"}, "978": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "SWAP1", "path": "6"}, "979": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "DUP2", "path": "6"}, "980": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "MSTORE", "path": "6"}, "981": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5071, 5075], "op": "PUSH1", "path": "6", "value": "0x1"}, "983": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "PUSH1", "path": "6", "value": "0x20"}, "985": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "DUP2", "path": "6"}, "986": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "SWAP1", "path": "6"}, "987": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "MSTORE", "path": "6"}, "988": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "PUSH1", "path": "6", "value": "0x40"}, "990": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "SWAP1", "path": "6"}, "991": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "SWAP2", "path": "6"}, "992": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5068], "op": "KECCAK256", "path": "6"}, "993": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5075], "op": "DUP1", "path": "6"}, "994": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5075], "op": "SLOAD", "path": "6"}, "995": {"op": "PUSH1", "value": "0xFF"}, "997": {"op": "NOT"}, "998": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5075], "op": "AND", "path": "6"}, "999": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5075], "op": "SWAP1", "path": "6"}, "1000": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5075], "op": "SWAP2", "path": "6"}, "1001": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5075], "op": "OR", "path": "6"}, "1002": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5075], "op": "SWAP1", "path": "6"}, "1003": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5032, 5075], "op": "SSTORE", "path": "6"}, "1004": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "o", "offset": [4940, 5082], "op": "JUMP", "path": "6"}, "1005": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3258, 4159], "op": "JUMPDEST", "path": "6"}, "1006": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3378, 3413], "op": "PUSH1", "path": "6", "value": "0x0"}, "1008": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3416, 3465], "op": "PUSH2", "path": "6", "value": "0x3F8"}, "1011": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3453, 3464], "op": "DUP4", "path": "6"}, "1012": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3416, 3452], "op": "PUSH2", "path": "6", "value": "0x656"}, "1015": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3416, 3465], "op": "JUMP", "path": "6"}, "1016": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3416, 3465], "op": "JUMPDEST", "path": "6"}, "1017": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "PUSH1", "path": "6", "statement": 6, "value": "0x0"}, "1019": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "DUP2", "path": "6"}, "1020": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "DUP2", "path": "6"}, "1021": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "MSTORE", "path": "6"}, "1022": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3498], "op": "PUSH1", "path": "6", "value": "0x1"}, "1024": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "PUSH1", "path": "6", "value": "0x20"}, "1026": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "MSTORE", "path": "6"}, "1027": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "PUSH1", "path": "6", "value": "0x40"}, "1029": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "SWAP1", "path": "6"}, "1030": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "KECCAK256", "path": "6"}, "1031": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "SLOAD", "path": "6"}, "1032": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3378, 3465], "op": "SWAP1", "path": "6"}, "1033": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3378, 3465], "op": "SWAP2", "path": "6"}, "1034": {"op": "POP"}, "1035": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "PUSH1", "path": "6", "value": "0xFF"}, "1037": {"branch": 18, "fn": "SourceDomainSideBridge.processClaims", "offset": [3483, 3527], "op": "AND", "path": "6"}, "1038": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "PUSH2", "path": "6", "value": "0x459"}, "1041": {"branch": 18, "fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "JUMPI", "path": "6"}, "1042": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "PUSH1", "path": "6", "value": "0x40"}, "1044": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "MLOAD", "path": "6"}, "1045": {"op": "PUSH3", "value": "0x461BCD"}, "1049": {"op": "PUSH1", "value": "0xE5"}, "1051": {"op": "SHL"}, "1052": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "DUP2", "path": "6"}, "1053": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "MSTORE", "path": "6"}, "1054": {"op": "PUSH1", "value": "0x20"}, "1056": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "PUSH1", "path": "6", "value": "0x4"}, "1058": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "DUP3", "path": "6"}, "1059": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "ADD", "path": "6"}, "1060": {"op": "MSTORE"}, "1061": {"op": "PUSH1", "value": "0x19"}, "1063": {"op": "PUSH1", "value": "0x24"}, "1065": {"op": "DUP3"}, "1066": {"op": "ADD"}, "1067": {"op": "MSTORE"}, "1068": {"op": "PUSH32", "value": "0x496E76616C6964652052657761726444617461206C6973742E00000000000000"}, "1101": {"op": "PUSH1", "value": "0x44"}, "1103": {"op": "DUP3"}, "1104": {"op": "ADD"}, "1105": {"op": "MSTORE"}, "1106": {"op": "PUSH1", "value": "0x64"}, "1108": {"op": "ADD"}, "1109": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "PUSH2", "path": "6", "value": "0x11C"}, "1112": {"op": "JUMP"}, "1113": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3475, 3557], "op": "JUMPDEST", "path": "6"}, "1114": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3571, 3577], "op": "PUSH1", "path": "6", "value": "0x0"}, "1116": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3567, 4089], "op": "JUMPDEST", "path": "6"}, "1117": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3587, 3598], "op": "DUP4", "path": "6"}, "1118": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3587, 3605], "op": "MLOAD", "path": "6"}, "1119": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3583, 3584], "op": "DUP2", "path": "6"}, "1120": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3583, 3605], "op": "LT", "path": "6"}, "1121": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3567, 4089], "op": "ISZERO", "path": "6"}, "1122": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3567, 4089], "op": "PUSH2", "path": "6", "value": "0x64E"}, "1125": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3567, 4089], "op": "JUMPI", "path": "6"}, "1126": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3648], "op": "PUSH1", "path": "6", "value": "0x0"}, "1128": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "DUP1", "path": "6"}, "1129": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3660], "op": "DUP6", "path": "6"}, "1130": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3661, 3662], "op": "DUP4", "path": "6"}, "1131": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "DUP2", "path": "6"}, "1132": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "MLOAD", "path": "6"}, "1133": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "DUP2", "path": "6"}, "1134": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "LT", "path": "6"}, "1135": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "PUSH2", "path": "6", "value": "0x47A"}, "1138": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "JUMPI", "path": "6"}, "1139": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "PUSH2", "path": "6", "value": "0x47A"}, "1142": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1145": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3649, 3663], "op": "JUMP", "path": "6"}, "1146": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "JUMPDEST", "path": "6"}, "1147": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "PUSH1", "path": "6", "value": "0x20"}, "1149": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "SWAP1", "path": "6"}, "1150": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "DUP2", "path": "6"}, "1151": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "MUL", "path": "6"}, "1152": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "SWAP2", "path": "6"}, "1153": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "SWAP1", "path": "6"}, "1154": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "SWAP2", "path": "6"}, "1155": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "ADD", "path": "6"}, "1156": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "DUP2", "path": "6"}, "1157": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "ADD", "path": "6"}, "1158": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3663], "op": "MLOAD", "path": "6"}, "1159": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3680], "op": "MLOAD", "path": "6"}, "1160": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "DUP3", "path": "6"}, "1161": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "MSTORE", "path": "6"}, "1162": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "DUP2", "path": "6"}, "1163": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "ADD", "path": "6"}, "1164": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "SWAP2", "path": "6"}, "1165": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "SWAP1", "path": "6"}, "1166": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "SWAP2", "path": "6"}, "1167": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "MSTORE", "path": "6"}, "1168": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "PUSH1", "path": "6", "value": "0x40"}, "1170": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "ADD", "path": "6"}, "1171": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3649, 3680], "op": "PUSH1", "path": "6", "value": "0x0"}, "1173": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "KECCAK256", "path": "6"}, "1174": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "SLOAD", "path": "6"}, "1175": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "PUSH1", "path": "6", "value": "0xFF"}, "1177": {"branch": 19, "fn": "SourceDomainSideBridge.processClaims", "offset": [3629, 3681], "op": "AND", "path": "6"}, "1178": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3626, 4079], "op": "ISZERO", "path": "6"}, "1179": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3626, 4079], "op": "PUSH2", "path": "6", "value": "0x63C"}, "1182": {"branch": 19, "fn": "SourceDomainSideBridge.processClaims", "offset": [3626, 4079], "op": "JUMPI", "path": "6"}, "1183": {"offset": [455, 497], "op": "PUSH1", "path": "6", "value": "0x0"}, "1185": {"op": "PUSH1", "value": "0x1"}, "1187": {"op": "PUSH1", "value": "0x1"}, "1189": {"op": "PUSH1", "value": "0xA0"}, "1191": {"op": "SHL"}, "1192": {"op": "SUB"}, "1193": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3747], "op": "AND", "path": "6"}, "1194": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3714], "op": "DUP5", "path": "6"}, "1195": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3715, 3716], "op": "DUP3", "path": "6"}, "1196": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "DUP2", "path": "6"}, "1197": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "MLOAD", "path": "6"}, "1198": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "DUP2", "path": "6"}, "1199": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "LT", "path": "6"}, "1200": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "PUSH2", "path": "6", "value": "0x4BB"}, "1203": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "JUMPI", "path": "6"}, "1204": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "PUSH2", "path": "6", "value": "0x4BB"}, "1207": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1210": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3703, 3717], "op": "JUMP", "path": "6"}, "1211": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "JUMPDEST", "path": "6"}, "1212": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "PUSH1", "path": "6", "value": "0x20"}, "1214": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "MUL", "path": "6"}, "1215": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "PUSH1", "path": "6", "value": "0x20"}, "1217": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "ADD", "path": "6"}, "1218": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "ADD", "path": "6"}, "1219": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3717], "op": "MLOAD", "path": "6"}, "1220": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3730], "op": "PUSH1", "path": "6", "value": "0x20"}, "1222": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3730], "op": "ADD", "path": "6"}, "1223": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3730], "op": "MLOAD", "path": "6"}, "1224": {"op": "PUSH1", "value": "0x1"}, "1226": {"op": "PUSH1", "value": "0x1"}, "1228": {"op": "PUSH1", "value": "0xA0"}, "1230": {"op": "SHL"}, "1231": {"op": "SUB"}, "1232": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3747], "op": "AND", "path": "6"}, "1233": {"branch": 20, "fn": "SourceDomainSideBridge.processClaims", "offset": [3703, 3747], "op": "SUB", "path": "6"}, "1234": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3700, 4065], "op": "PUSH2", "path": "6", "value": "0x550"}, "1237": {"branch": 20, "fn": "SourceDomainSideBridge.processClaims", "offset": [3700, 4065], "op": "JUMPI", "path": "6"}, "1238": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3789], "op": "DUP4", "path": "6", "statement": 7}, "1239": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3790, 3791], "op": "PUSH1", "path": "6", "value": "0x0"}, "1241": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "DUP2", "path": "6"}, "1242": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "MLOAD", "path": "6"}, "1243": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "DUP2", "path": "6"}, "1244": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "LT", "path": "6"}, "1245": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "PUSH2", "path": "6", "value": "0x4E8"}, "1248": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "JUMPI", "path": "6"}, "1249": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "PUSH2", "path": "6", "value": "0x4E8"}, "1252": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1255": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3778, 3792], "op": "JUMP", "path": "6"}, "1256": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "JUMPDEST", "path": "6"}, "1257": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "PUSH1", "path": "6", "value": "0x20"}, "1259": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "MUL", "path": "6"}, "1260": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "PUSH1", "path": "6", "value": "0x20"}, "1262": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "ADD", "path": "6"}, "1263": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "ADD", "path": "6"}, "1264": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3792], "op": "MLOAD", "path": "6"}, "1265": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3800], "op": "PUSH1", "path": "6", "value": "0x40"}, "1267": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3800], "op": "ADD", "path": "6"}, "1268": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3778, 3800], "op": "MLOAD", "path": "6"}, "1269": {"op": "PUSH1", "value": "0x1"}, "1271": {"op": "PUSH1", "value": "0x1"}, "1273": {"op": "PUSH1", "value": "0xA0"}, "1275": {"op": "SHL"}, "1276": {"op": "SUB"}, "1277": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3810], "op": "AND", "path": "6"}, "1278": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "PUSH2", "path": "6", "value": "0x8FC"}, "1281": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3822], "op": "DUP6", "path": "6"}, "1282": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3823, 3824], "op": "PUSH1", "path": "6", "value": "0x0"}, "1284": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "DUP2", "path": "6"}, "1285": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "MLOAD", "path": "6"}, "1286": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "DUP2", "path": "6"}, "1287": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "LT", "path": "6"}, "1288": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "PUSH2", "path": "6", "value": "0x513"}, "1291": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "JUMPI", "path": "6"}, "1292": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "PUSH2", "path": "6", "value": "0x513"}, "1295": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1298": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3811, 3825], "op": "JUMP", "path": "6"}, "1299": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "JUMPDEST", "path": "6"}, "1300": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "PUSH1", "path": "6", "value": "0x20"}, "1302": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "MUL", "path": "6"}, "1303": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "PUSH1", "path": "6", "value": "0x20"}, "1305": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "ADD", "path": "6"}, "1306": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "ADD", "path": "6"}, "1307": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3825], "op": "MLOAD", "path": "6"}, "1308": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3829], "op": "PUSH1", "path": "6", "value": "0x60"}, "1310": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3829], "op": "ADD", "path": "6"}, "1311": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3811, 3829], "op": "MLOAD", "path": "6"}, "1312": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "SWAP1", "path": "6"}, "1313": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP2", "path": "6"}, "1314": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "ISZERO", "path": "6"}, "1315": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "MUL", "path": "6"}, "1316": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "SWAP1", "path": "6"}, "1317": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "PUSH1", "path": "6", "value": "0x40"}, "1319": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "MLOAD", "path": "6"}, "1320": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "PUSH1", "path": "6", "value": "0x0"}, "1322": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "PUSH1", "path": "6", "value": "0x40"}, "1324": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "MLOAD", "path": "6"}, "1325": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP1", "path": "6"}, "1326": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP4", "path": "6"}, "1327": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "SUB", "path": "6"}, "1328": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP2", "path": "6"}, "1329": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP6", "path": "6"}, "1330": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP9", "path": "6"}, "1331": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP9", "path": "6"}, "1332": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "CALL", "path": "6"}, "1333": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "SWAP4", "path": "6"}, "1334": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "POP", "path": "6"}, "1335": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "POP", "path": "6"}, "1336": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "POP", "path": "6"}, "1337": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "POP", "path": "6"}, "1338": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "ISZERO", "path": "6"}, "1339": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP1", "path": "6"}, "1340": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "ISZERO", "path": "6"}, "1341": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "PUSH2", "path": "6", "value": "0x54A"}, "1344": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "JUMPI", "path": "6"}, "1345": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "RETURNDATASIZE", "path": "6"}, "1346": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "PUSH1", "path": "6", "value": "0x0"}, "1348": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "DUP1", "path": "6"}, "1349": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "RETURNDATACOPY", "path": "6"}, "1350": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "RETURNDATASIZE", "path": "6"}, "1351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "PUSH1", "path": "6", "value": "0x0"}, "1353": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "REVERT", "path": "6"}, "1354": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "JUMPDEST", "path": "6"}, "1355": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3770, 3830], "op": "POP", "path": "6"}, "1356": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3700, 4065], "op": "PUSH2", "path": "6", "value": "0x63C"}, "1359": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3700, 4065], "op": "JUMP", "path": "6"}, "1360": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3700, 4065], "op": "JUMPDEST", "path": "6"}, "1361": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3875, 3886], "op": "PUSH1", "path": "6", "value": "0x0"}, "1363": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3906], "op": "DUP5", "path": "6"}, "1364": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3907, 3908], "op": "DUP3", "path": "6"}, "1365": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "DUP2", "path": "6"}, "1366": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "MLOAD", "path": "6"}, "1367": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "DUP2", "path": "6"}, "1368": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "LT", "path": "6"}, "1369": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "PUSH2", "path": "6", "value": "0x564"}, "1372": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "JUMPI", "path": "6"}, "1373": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "PUSH2", "path": "6", "value": "0x564"}, "1376": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1379": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3895, 3909], "op": "JUMP", "path": "6"}, "1380": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "JUMPDEST", "path": "6"}, "1381": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "PUSH1", "path": "6", "value": "0x20"}, "1383": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "MUL", "path": "6"}, "1384": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "PUSH1", "path": "6", "value": "0x20"}, "1386": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "ADD", "path": "6"}, "1387": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "ADD", "path": "6"}, "1388": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3909], "op": "MLOAD", "path": "6"}, "1389": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3922], "op": "PUSH1", "path": "6", "value": "0x20"}, "1391": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3922], "op": "ADD", "path": "6"}, "1392": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3895, 3922], "op": "MLOAD", "path": "6"}, "1393": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3875, 3923], "op": "SWAP1", "path": "6"}, "1394": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3875, 3923], "op": "POP", "path": "6"}, "1395": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3950], "op": "DUP1", "path": "6", "statement": 8}, "1396": {"op": "PUSH1", "value": "0x1"}, "1398": {"op": "PUSH1", "value": "0x1"}, "1400": {"op": "PUSH1", "value": "0xA0"}, "1402": {"op": "SHL"}, "1403": {"op": "SUB"}, "1404": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3963], "op": "AND", "path": "6"}, "1405": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 3963], "op": "PUSH4", "path": "6", "value": "0x23B872DD"}, "1410": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3972, 3976], "op": "ADDRESS", "path": "6"}, "1411": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3990], "op": "DUP8", "path": "6"}, "1412": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3991, 3992], "op": "DUP6", "path": "6"}, "1413": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "DUP2", "path": "6"}, "1414": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "MLOAD", "path": "6"}, "1415": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "DUP2", "path": "6"}, "1416": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "LT", "path": "6"}, "1417": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "PUSH2", "path": "6", "value": "0x594"}, "1420": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "JUMPI", "path": "6"}, "1421": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "PUSH2", "path": "6", "value": "0x594"}, "1424": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1427": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3979, 3993], "op": "JUMP", "path": "6"}, "1428": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "JUMPDEST", "path": "6"}, "1429": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "PUSH1", "path": "6", "value": "0x20"}, "1431": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "MUL", "path": "6"}, "1432": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "PUSH1", "path": "6", "value": "0x20"}, "1434": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "ADD", "path": "6"}, "1435": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "ADD", "path": "6"}, "1436": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 3993], "op": "MLOAD", "path": "6"}, "1437": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 4001], "op": "PUSH1", "path": "6", "value": "0x40"}, "1439": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 4001], "op": "ADD", "path": "6"}, "1440": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3979, 4001], "op": "MLOAD", "path": "6"}, "1441": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4038], "op": "DUP9", "path": "6"}, "1442": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4039, 4040], "op": "DUP7", "path": "6"}, "1443": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "DUP2", "path": "6"}, "1444": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "MLOAD", "path": "6"}, "1445": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "DUP2", "path": "6"}, "1446": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "LT", "path": "6"}, "1447": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "PUSH2", "path": "6", "value": "0x5B2"}, "1450": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "JUMPI", "path": "6"}, "1451": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "PUSH2", "path": "6", "value": "0x5B2"}, "1454": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1457": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4027, 4041], "op": "JUMP", "path": "6"}, "1458": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "JUMPDEST", "path": "6"}, "1459": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "PUSH1", "path": "6", "value": "0x20"}, "1461": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "SWAP1", "path": "6"}, "1462": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "DUP2", "path": "6"}, "1463": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "MUL", "path": "6"}, "1464": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "SWAP2", "path": "6"}, "1465": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "SWAP1", "path": "6"}, "1466": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "SWAP2", "path": "6"}, "1467": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "ADD", "path": "6"}, "1468": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "ADD", "path": "6"}, "1469": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4041], "op": "MLOAD", "path": "6"}, "1470": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4045], "op": "PUSH1", "path": "6", "value": "0x60"}, "1472": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4045], "op": "ADD", "path": "6"}, "1473": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4027, 4045], "op": "MLOAD", "path": "6"}, "1474": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x40"}, "1476": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "MLOAD", "path": "6"}, "1477": {"op": "PUSH1", "value": "0x1"}, "1479": {"op": "PUSH1", "value": "0x1"}, "1481": {"op": "PUSH1", "value": "0xE0"}, "1483": {"op": "SHL"}, "1484": {"op": "SUB"}, "1485": {"op": "NOT"}, "1486": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0xE0"}, "1488": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP7", "path": "6"}, "1489": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "SWAP1", "path": "6"}, "1490": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "SHL", "path": "6"}, "1491": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "AND", "path": "6"}, "1492": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP2", "path": "6"}, "1493": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "MSTORE", "path": "6"}, "1494": {"op": "PUSH1", "value": "0x1"}, "1496": {"op": "PUSH1", "value": "0x1"}, "1498": {"op": "PUSH1", "value": "0xA0"}, "1500": {"op": "SHL"}, "1501": {"op": "SUB"}, "1502": {"op": "SWAP4"}, "1503": {"op": "DUP5"}, "1504": {"op": "AND"}, "1505": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x4"}, "1507": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP3", "path": "6"}, "1508": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "ADD", "path": "6"}, "1509": {"op": "MSTORE"}, "1510": {"op": "SWAP3"}, "1511": {"op": "SWAP1"}, "1512": {"op": "SWAP2"}, "1513": {"op": "AND"}, "1514": {"op": "PUSH1", "value": "0x24"}, "1516": {"op": "DUP4"}, "1517": {"op": "ADD"}, "1518": {"op": "MSTORE"}, "1519": {"op": "PUSH1", "value": "0x44"}, "1521": {"op": "DUP3"}, "1522": {"op": "ADD"}, "1523": {"op": "MSTORE"}, "1524": {"op": "PUSH1", "value": "0x64"}, "1526": {"op": "ADD"}, "1527": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x20"}, "1529": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x40"}, "1531": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "MLOAD", "path": "6"}, "1532": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP1", "path": "6"}, "1533": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP4", "path": "6"}, "1534": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "SUB", "path": "6"}, "1535": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP2", "path": "6"}, "1536": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x0"}, "1538": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP8", "path": "6"}, "1539": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "GAS", "path": "6"}, "1540": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "CALL", "path": "6"}, "1541": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "ISZERO", "path": "6"}, "1542": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP1", "path": "6"}, "1543": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "ISZERO", "path": "6"}, "1544": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH2", "path": "6", "value": "0x615"}, "1547": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "JUMPI", "path": "6"}, "1548": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "RETURNDATASIZE", "path": "6"}, "1549": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x0"}, "1551": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP1", "path": "6"}, "1552": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "RETURNDATACOPY", "path": "6"}, "1553": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "RETURNDATASIZE", "path": "6"}, "1554": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x0"}, "1556": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "REVERT", "path": "6"}, "1557": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "JUMPDEST", "path": "6"}, "1558": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "POP", "path": "6"}, "1559": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "POP", "path": "6"}, "1560": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "POP", "path": "6"}, "1561": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "POP", "path": "6"}, "1562": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x40"}, "1564": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "MLOAD", "path": "6"}, "1565": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "RETURNDATASIZE", "path": "6"}, "1566": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x1F"}, "1568": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "NOT", "path": "6"}, "1569": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x1F"}, "1571": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP3", "path": "6"}, "1572": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "ADD", "path": "6"}, "1573": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "AND", "path": "6"}, "1574": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP3", "path": "6"}, "1575": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "ADD", "path": "6"}, "1576": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP1", "path": "6"}, "1577": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH1", "path": "6", "value": "0x40"}, "1579": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "MSTORE", "path": "6"}, "1580": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "POP", "path": "6"}, "1581": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "DUP2", "path": "6"}, "1582": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "ADD", "path": "6"}, "1583": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "SWAP1", "path": "6"}, "1584": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH2", "path": "6", "value": "0x639"}, "1587": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "SWAP2", "path": "6"}, "1588": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "SWAP1", "path": "6"}, "1589": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "PUSH2", "path": "6", "value": "0xAE3"}, "1592": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3945, 4046], "op": "JUMP", "path": "6"}, "1593": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "JUMPDEST", "path": "6"}, "1594": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3945, 4046], "op": "POP", "path": "6"}, "1595": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3853, 4065], "op": "POP", "path": "6"}, "1596": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3700, 4065], "op": "JUMPDEST", "path": "6"}, "1597": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3607, 3610], "op": "DUP1", "path": "6", "statement": 9}, "1598": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3607, 3610], "op": "PUSH2", "path": "6", "value": "0x646"}, "1601": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3607, 3610], "op": "DUP2", "path": "6"}, "1602": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3607, 3610], "op": "PUSH2", "path": "6", "value": "0xB8C"}, "1605": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3607, 3610], "op": "JUMP", "path": "6"}, "1606": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3607, 3610], "op": "JUMPDEST", "path": "6"}, "1607": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3607, 3610], "op": "SWAP2", "path": "6"}, "1608": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3607, 3610], "op": "POP", "path": "6"}, "1609": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3607, 3610], "op": "POP", "path": "6"}, "1610": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3567, 4089], "op": "PUSH2", "path": "6", "value": "0x45C"}, "1613": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3567, 4089], "op": "JUMP", "path": "6"}, "1614": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3567, 4089], "op": "JUMPDEST", "path": "6"}, "1615": {"op": "POP"}, "1616": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4098, 4122], "op": "PUSH1", "path": "6", "statement": 10, "value": "0x2"}, "1618": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4098, 4152], "op": "SSTORE", "path": "6"}, "1619": {"op": "POP"}, "1620": {"op": "POP"}, "1621": {"fn": "SourceDomainSideBridge.processClaims", "jump": "o", "offset": [3258, 4159], "op": "JUMP", "path": "6"}, "1622": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4259, 4840], "op": "JUMPDEST", "path": "6"}, "1623": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4411, 4435], "op": "PUSH1", "path": "6", "value": "0x2"}, "1625": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4411, 4435], "op": "SLOAD", "path": "6"}, "1626": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4355, 4362], "op": "PUSH1", "path": "6", "value": "0x0"}, "1628": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4355, 4362], "op": "SWAP1", "path": "6"}, "1629": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4355, 4362], "op": "DUP2", "path": "6"}, "1630": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4445, 4790], "op": "JUMPDEST", "path": "6"}, "1631": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4465, 4476], "op": "DUP4", "path": "6"}, "1632": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4465, 4483], "op": "MLOAD", "path": "6"}, "1633": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4461, 4462], "op": "DUP2", "path": "6"}, "1634": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4461, 4483], "op": "LT", "path": "6"}, "1635": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4445, 4790], "op": "ISZERO", "path": "6"}, "1636": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4445, 4790], "op": "PUSH2", "path": "6", "value": "0x798"}, "1639": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4445, 4790], "op": "JUMPI", "path": "6"}, "1640": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "statement": 11, "value": "0x2"}, "1642": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4558, 4585], "op": "DUP3", "path": "6"}, "1643": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4615], "op": "DUP6", "path": "6"}, "1644": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4616, 4617], "op": "DUP4", "path": "6"}, "1645": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "DUP2", "path": "6"}, "1646": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "MLOAD", "path": "6"}, "1647": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "DUP2", "path": "6"}, "1648": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "LT", "path": "6"}, "1649": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "PUSH2", "path": "6", "value": "0x67C"}, "1652": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "JUMPI", "path": "6"}, "1653": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "PUSH2", "path": "6", "value": "0x67C"}, "1656": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1659": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [4604, 4618], "op": "JUMP", "path": "6"}, "1660": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "JUMPDEST", "path": "6"}, "1661": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "PUSH1", "path": "6", "value": "0x20"}, "1663": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "MUL", "path": "6"}, "1664": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "PUSH1", "path": "6", "value": "0x20"}, "1666": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "ADD", "path": "6"}, "1667": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "ADD", "path": "6"}, "1668": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4618], "op": "MLOAD", "path": "6"}, "1669": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4635], "op": "PUSH1", "path": "6", "value": "0x0"}, "1671": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4635], "op": "ADD", "path": "6"}, "1672": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4604, 4635], "op": "MLOAD", "path": "6"}, "1673": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4665], "op": "DUP7", "path": "6"}, "1674": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4666, 4667], "op": "DUP5", "path": "6"}, "1675": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "DUP2", "path": "6"}, "1676": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "MLOAD", "path": "6"}, "1677": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "DUP2", "path": "6"}, "1678": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "LT", "path": "6"}, "1679": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "PUSH2", "path": "6", "value": "0x69A"}, "1682": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "JUMPI", "path": "6"}, "1683": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "PUSH2", "path": "6", "value": "0x69A"}, "1686": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1689": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [4654, 4668], "op": "JUMP", "path": "6"}, "1690": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "JUMPDEST", "path": "6"}, "1691": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "PUSH1", "path": "6", "value": "0x20"}, "1693": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "MUL", "path": "6"}, "1694": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "PUSH1", "path": "6", "value": "0x20"}, "1696": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "ADD", "path": "6"}, "1697": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "ADD", "path": "6"}, "1698": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4668], "op": "MLOAD", "path": "6"}, "1699": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4681], "op": "PUSH1", "path": "6", "value": "0x20"}, "1701": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4681], "op": "ADD", "path": "6"}, "1702": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4654, 4681], "op": "MLOAD", "path": "6"}, "1703": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4711], "op": "DUP8", "path": "6"}, "1704": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4712, 4713], "op": "DUP6", "path": "6"}, "1705": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "DUP2", "path": "6"}, "1706": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "MLOAD", "path": "6"}, "1707": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "DUP2", "path": "6"}, "1708": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "LT", "path": "6"}, "1709": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "PUSH2", "path": "6", "value": "0x6B8"}, "1712": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "JUMPI", "path": "6"}, "1713": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "PUSH2", "path": "6", "value": "0x6B8"}, "1716": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1719": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [4700, 4714], "op": "JUMP", "path": "6"}, "1720": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "JUMPDEST", "path": "6"}, "1721": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "PUSH1", "path": "6", "value": "0x20"}, "1723": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "MUL", "path": "6"}, "1724": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "PUSH1", "path": "6", "value": "0x20"}, "1726": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "ADD", "path": "6"}, "1727": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "ADD", "path": "6"}, "1728": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4714], "op": "MLOAD", "path": "6"}, "1729": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4722], "op": "PUSH1", "path": "6", "value": "0x40"}, "1731": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4722], "op": "ADD", "path": "6"}, "1732": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4700, 4722], "op": "MLOAD", "path": "6"}, "1733": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4752], "op": "DUP9", "path": "6"}, "1734": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4753, 4754], "op": "DUP7", "path": "6"}, "1735": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "DUP2", "path": "6"}, "1736": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "MLOAD", "path": "6"}, "1737": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "DUP2", "path": "6"}, "1738": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "LT", "path": "6"}, "1739": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "PUSH2", "path": "6", "value": "0x6D6"}, "1742": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "JUMPI", "path": "6"}, "1743": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "PUSH2", "path": "6", "value": "0x6D6"}, "1746": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "PUSH2", "path": "6", "value": "0xB76"}, "1749": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [4741, 4755], "op": "JUMP", "path": "6"}, "1750": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "JUMPDEST", "path": "6"}, "1751": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "PUSH1", "path": "6", "value": "0x20"}, "1753": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "MUL", "path": "6"}, "1754": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "PUSH1", "path": "6", "value": "0x20"}, "1756": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "ADD", "path": "6"}, "1757": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "ADD", "path": "6"}, "1758": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4755], "op": "MLOAD", "path": "6"}, "1759": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4759], "op": "PUSH1", "path": "6", "value": "0x60"}, "1761": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4759], "op": "ADD", "path": "6"}, "1762": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4741, 4759], "op": "MLOAD", "path": "6"}, "1763": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "PUSH1", "path": "6", "value": "0x40"}, "1765": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "MLOAD", "path": "6"}, "1766": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "PUSH1", "path": "6", "value": "0x20"}, "1768": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "ADD", "path": "6"}, "1769": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "PUSH2", "path": "6", "value": "0x72A"}, "1772": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SWAP6", "path": "6"}, "1773": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SWAP5", "path": "6"}, "1774": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SWAP4", "path": "6"}, "1775": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SWAP3", "path": "6"}, "1776": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SWAP2", "path": "6"}, "1777": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SWAP1", "path": "6"}, "1778": {"op": "SWAP5"}, "1779": {"op": "DUP6"}, "1780": {"op": "MSTORE"}, "1781": {"op": "PUSH1", "value": "0x20"}, "1783": {"op": "DUP6"}, "1784": {"op": "ADD"}, "1785": {"op": "SWAP4"}, "1786": {"op": "SWAP1"}, "1787": {"op": "SWAP4"}, "1788": {"op": "MSTORE"}, "1789": {"op": "PUSH1", "value": "0x60"}, "1791": {"op": "SWAP2"}, "1792": {"op": "DUP3"}, "1793": {"op": "SHL"}, "1794": {"op": "PUSH12", "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"}, "1807": {"op": "NOT"}, "1808": {"op": "SWAP1"}, "1809": {"op": "DUP2"}, "1810": {"op": "AND"}, "1811": {"op": "PUSH1", "value": "0x40"}, "1813": {"op": "DUP7"}, "1814": {"op": "ADD"}, "1815": {"op": "MSTORE"}, "1816": {"op": "SWAP2"}, "1817": {"op": "SHL"}, "1818": {"op": "AND"}, "1819": {"op": "PUSH1", "value": "0x54"}, "1821": {"op": "DUP4"}, "1822": {"op": "ADD"}, "1823": {"op": "MSTORE"}, "1824": {"op": "PUSH1", "value": "0x68"}, "1826": {"op": "DUP3"}, "1827": {"op": "ADD"}, "1828": {"op": "MSTORE"}, "1829": {"op": "PUSH1", "value": "0x88"}, "1831": {"op": "ADD"}, "1832": {"op": "SWAP1"}, "1833": {"op": "JUMP"}, "1834": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "JUMPDEST", "path": "6"}, "1835": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "PUSH1", "path": "6", "value": "0x40"}, "1837": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "DUP1", "path": "6"}, "1838": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "MLOAD", "path": "6"}, "1839": {"op": "PUSH1", "value": "0x1F"}, "1841": {"op": "NOT"}, "1842": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "DUP2", "path": "6"}, "1843": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "DUP5", "path": "6"}, "1844": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SUB", "path": "6"}, "1845": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "ADD", "path": "6"}, "1846": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "DUP2", "path": "6"}, "1847": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "MSTORE", "path": "6"}, "1848": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SWAP1", "path": "6"}, "1849": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "DUP3", "path": "6"}, "1850": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "SWAP1", "path": "6"}, "1851": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4541, 4778], "op": "MSTORE", "path": "6"}, "1852": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH2", "path": "6", "value": "0x744"}, "1855": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "SWAP2", "path": "6"}, "1856": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH2", "path": "6", "value": "0xB05"}, "1859": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [4534, 4779], "op": "JUMP", "path": "6"}, "1860": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "JUMPDEST", "path": "6"}, "1861": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "value": "0x20"}, "1863": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "value": "0x40"}, "1865": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "MLOAD", "path": "6"}, "1866": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP1", "path": "6"}, "1867": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP4", "path": "6"}, "1868": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "SUB", "path": "6"}, "1869": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP2", "path": "6"}, "1870": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP6", "path": "6"}, "1871": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "GAS", "path": "6"}, "1872": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "STATICCALL", "path": "6"}, "1873": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "ISZERO", "path": "6"}, "1874": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP1", "path": "6"}, "1875": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "ISZERO", "path": "6"}, "1876": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH2", "path": "6", "value": "0x761"}, "1879": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "JUMPI", "path": "6"}, "1880": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "RETURNDATASIZE", "path": "6"}, "1881": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "value": "0x0"}, "1883": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP1", "path": "6"}, "1884": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "RETURNDATACOPY", "path": "6"}, "1885": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "RETURNDATASIZE", "path": "6"}, "1886": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "value": "0x0"}, "1888": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "REVERT", "path": "6"}, "1889": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "JUMPDEST", "path": "6"}, "1890": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "POP", "path": "6"}, "1891": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "POP", "path": "6"}, "1892": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "POP", "path": "6"}, "1893": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "value": "0x40"}, "1895": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "MLOAD", "path": "6"}, "1896": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "RETURNDATASIZE", "path": "6"}, "1897": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "value": "0x1F"}, "1899": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "NOT", "path": "6"}, "1900": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "value": "0x1F"}, "1902": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP3", "path": "6"}, "1903": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "ADD", "path": "6"}, "1904": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "AND", "path": "6"}, "1905": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP3", "path": "6"}, "1906": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "ADD", "path": "6"}, "1907": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP1", "path": "6"}, "1908": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH1", "path": "6", "value": "0x40"}, "1910": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "MSTORE", "path": "6"}, "1911": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "POP", "path": "6"}, "1912": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "DUP2", "path": "6"}, "1913": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "ADD", "path": "6"}, "1914": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "SWAP1", "path": "6"}, "1915": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH2", "path": "6", "value": "0x784"}, "1918": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "SWAP2", "path": "6"}, "1919": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "SWAP1", "path": "6"}, "1920": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "PUSH2", "path": "6", "value": "0xB40"}, "1923": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [4534, 4779], "op": "JUMP", "path": "6"}, "1924": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4534, 4779], "op": "JUMPDEST", "path": "6"}, "1925": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4504, 4779], "op": "SWAP2", "path": "6"}, "1926": {"op": "POP"}, "1927": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4485, 4488], "op": "DUP1", "path": "6", "statement": 12}, "1928": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4485, 4488], "op": "PUSH2", "path": "6", "value": "0x790"}, "1931": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4485, 4488], "op": "DUP2", "path": "6"}, "1932": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4485, 4488], "op": "PUSH2", "path": "6", "value": "0xB8C"}, "1935": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [4485, 4488], "op": "JUMP", "path": "6"}, "1936": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4485, 4488], "op": "JUMPDEST", "path": "6"}, "1937": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4485, 4488], "op": "SWAP2", "path": "6"}, "1938": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4485, 4488], "op": "POP", "path": "6"}, "1939": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4485, 4488], "op": "POP", "path": "6"}, "1940": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4445, 4790], "op": "PUSH2", "path": "6", "value": "0x65E"}, "1943": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4445, 4790], "op": "JUMP", "path": "6"}, "1944": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4445, 4790], "op": "JUMPDEST", "path": "6"}, "1945": {"op": "POP"}, "1946": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4806, 4833], "op": "SWAP3", "path": "6", "statement": 13}, "1947": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4259, 4840], "op": "SWAP2", "path": "6"}, "1948": {"op": "POP"}, "1949": {"op": "POP"}, "1950": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "o", "offset": [4259, 4840], "op": "JUMP", "path": "6"}, "1951": {"op": "JUMPDEST"}, "1952": {"op": "PUSH4", "value": "0x4E487B71"}, "1957": {"op": "PUSH1", "value": "0xE0"}, "1959": {"op": "SHL"}, "1960": {"op": "PUSH1", "value": "0x0"}, "1962": {"op": "MSTORE"}, "1963": {"op": "PUSH1", "value": "0x41"}, "1965": {"op": "PUSH1", "value": "0x4"}, "1967": {"op": "MSTORE"}, "1968": {"op": "PUSH1", "value": "0x24"}, "1970": {"op": "PUSH1", "value": "0x0"}, "1972": {"op": "REVERT"}, "1973": {"op": "JUMPDEST"}, "1974": {"op": "PUSH1", "value": "0x40"}, "1976": {"op": "MLOAD"}, "1977": {"op": "PUSH1", "value": "0x80"}, "1979": {"op": "DUP2"}, "1980": {"op": "ADD"}, "1981": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "1990": {"op": "DUP2"}, "1991": {"op": "GT"}, "1992": {"op": "DUP3"}, "1993": {"op": "DUP3"}, "1994": {"op": "LT"}, "1995": {"op": "OR"}, "1996": {"op": "ISZERO"}, "1997": {"op": "PUSH2", "value": "0x7D8"}, "2000": {"op": "JUMPI"}, "2001": {"op": "PUSH2", "value": "0x7D8"}, "2004": {"op": "PUSH2", "value": "0x79F"}, "2007": {"jump": "i", "op": "JUMP"}, "2008": {"op": "JUMPDEST"}, "2009": {"op": "PUSH1", "value": "0x40"}, "2011": {"op": "MSTORE"}, "2012": {"op": "SWAP1"}, "2013": {"jump": "o", "op": "JUMP"}, "2014": {"op": "JUMPDEST"}, "2015": {"op": "PUSH1", "value": "0x40"}, "2017": {"op": "MLOAD"}, "2018": {"op": "PUSH1", "value": "0x1F"}, "2020": {"op": "DUP3"}, "2021": {"op": "ADD"}, "2022": {"op": "PUSH1", "value": "0x1F"}, "2024": {"op": "NOT"}, "2025": {"op": "AND"}, "2026": {"op": "DUP2"}, "2027": {"op": "ADD"}, "2028": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2037": {"op": "DUP2"}, "2038": {"op": "GT"}, "2039": {"op": "DUP3"}, "2040": {"op": "DUP3"}, "2041": {"op": "LT"}, "2042": {"op": "OR"}, "2043": {"op": "ISZERO"}, "2044": {"op": "PUSH2", "value": "0x807"}, "2047": {"op": "JUMPI"}, "2048": {"op": "PUSH2", "value": "0x807"}, "2051": {"op": "PUSH2", "value": "0x79F"}, "2054": {"jump": "i", "op": "JUMP"}, "2055": {"op": "JUMPDEST"}, "2056": {"op": "PUSH1", "value": "0x40"}, "2058": {"op": "MSTORE"}, "2059": {"op": "SWAP2"}, "2060": {"op": "SWAP1"}, "2061": {"op": "POP"}, "2062": {"jump": "o", "op": "JUMP"}, "2063": {"op": "JUMPDEST"}, "2064": {"op": "PUSH1", "value": "0x1"}, "2066": {"op": "PUSH1", "value": "0x1"}, "2068": {"op": "PUSH1", "value": "0xA0"}, "2070": {"op": "SHL"}, "2071": {"op": "SUB"}, "2072": {"op": "DUP2"}, "2073": {"op": "AND"}, "2074": {"op": "DUP2"}, "2075": {"op": "EQ"}, "2076": {"op": "PUSH2", "value": "0x824"}, "2079": {"op": "JUMPI"}, "2080": {"op": "PUSH1", "value": "0x0"}, "2082": {"op": "DUP1"}, "2083": {"op": "REVERT"}, "2084": {"op": "JUMPDEST"}, "2085": {"op": "POP"}, "2086": {"jump": "o", "op": "JUMP"}, "2087": {"op": "JUMPDEST"}, "2088": {"op": "PUSH1", "value": "0x0"}, "2090": {"op": "PUSH1", "value": "0xE0"}, "2092": {"op": "DUP3"}, "2093": {"op": "DUP5"}, "2094": {"op": "SUB"}, "2095": {"op": "SLT"}, "2096": {"op": "ISZERO"}, "2097": {"op": "PUSH2", "value": "0x839"}, "2100": {"op": "JUMPI"}, "2101": {"op": "PUSH1", "value": "0x0"}, "2103": {"op": "DUP1"}, "2104": {"op": "REVERT"}, "2105": {"op": "JUMPDEST"}, "2106": {"op": "PUSH1", "value": "0x40"}, "2108": {"op": "MLOAD"}, "2109": {"op": "PUSH1", "value": "0xE0"}, "2111": {"op": "DUP2"}, "2112": {"op": "ADD"}, "2113": {"op": "DUP2"}, "2114": {"op": "DUP2"}, "2115": {"op": "LT"}, "2116": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2125": {"op": "DUP3"}, "2126": {"op": "GT"}, "2127": {"op": "OR"}, "2128": {"op": "ISZERO"}, "2129": {"op": "PUSH2", "value": "0x85C"}, "2132": {"op": "JUMPI"}, "2133": {"op": "PUSH2", "value": "0x85C"}, "2136": {"op": "PUSH2", "value": "0x79F"}, "2139": {"jump": "i", "op": "JUMP"}, "2140": {"op": "JUMPDEST"}, "2141": {"op": "PUSH1", "value": "0x40"}, "2143": {"op": "MSTORE"}, "2144": {"op": "SWAP1"}, "2145": {"op": "POP"}, "2146": {"op": "DUP1"}, "2147": {"op": "DUP3"}, "2148": {"op": "CALLDATALOAD"}, "2149": {"op": "PUSH2", "value": "0x86D"}, "2152": {"op": "DUP2"}, "2153": {"op": "PUSH2", "value": "0x80F"}, "2156": {"jump": "i", "op": "JUMP"}, "2157": {"op": "JUMPDEST"}, "2158": {"op": "DUP2"}, "2159": {"op": "MSTORE"}, "2160": {"op": "PUSH1", "value": "0x20"}, "2162": {"op": "DUP4"}, "2163": {"op": "ADD"}, "2164": {"op": "CALLDATALOAD"}, "2165": {"op": "PUSH2", "value": "0x87D"}, "2168": {"op": "DUP2"}, "2169": {"op": "PUSH2", "value": "0x80F"}, "2172": {"jump": "i", "op": "JUMP"}, "2173": {"op": "JUMPDEST"}, "2174": {"op": "DUP1"}, "2175": {"op": "PUSH1", "value": "0x20"}, "2177": {"op": "DUP4"}, "2178": {"op": "ADD"}, "2179": {"op": "MSTORE"}, "2180": {"op": "POP"}, "2181": {"op": "PUSH1", "value": "0x40"}, "2183": {"op": "DUP4"}, "2184": {"op": "ADD"}, "2185": {"op": "CALLDATALOAD"}, "2186": {"op": "PUSH1", "value": "0x40"}, "2188": {"op": "DUP3"}, "2189": {"op": "ADD"}, "2190": {"op": "MSTORE"}, "2191": {"op": "PUSH1", "value": "0x60"}, "2193": {"op": "DUP4"}, "2194": {"op": "ADD"}, "2195": {"op": "CALLDATALOAD"}, "2196": {"op": "PUSH1", "value": "0x60"}, "2198": {"op": "DUP3"}, "2199": {"op": "ADD"}, "2200": {"op": "MSTORE"}, "2201": {"op": "PUSH1", "value": "0x80"}, "2203": {"op": "DUP4"}, "2204": {"op": "ADD"}, "2205": {"op": "CALLDATALOAD"}, "2206": {"op": "PUSH1", "value": "0x80"}, "2208": {"op": "DUP3"}, "2209": {"op": "ADD"}, "2210": {"op": "MSTORE"}, "2211": {"op": "PUSH1", "value": "0xA0"}, "2213": {"op": "DUP4"}, "2214": {"op": "ADD"}, "2215": {"op": "CALLDATALOAD"}, "2216": {"op": "PUSH1", "value": "0xA0"}, "2218": {"op": "DUP3"}, "2219": {"op": "ADD"}, "2220": {"op": "MSTORE"}, "2221": {"op": "PUSH1", "value": "0xC0"}, "2223": {"op": "DUP4"}, "2224": {"op": "ADD"}, "2225": {"op": "CALLDATALOAD"}, "2226": {"op": "PUSH1", "value": "0xC0"}, "2228": {"op": "DUP3"}, "2229": {"op": "ADD"}, "2230": {"op": "MSTORE"}, "2231": {"op": "POP"}, "2232": {"op": "SWAP3"}, "2233": {"op": "SWAP2"}, "2234": {"op": "POP"}, "2235": {"op": "POP"}, "2236": {"jump": "o", "op": "JUMP"}, "2237": {"op": "JUMPDEST"}, "2238": {"op": "PUSH1", "value": "0x0"}, "2240": {"op": "PUSH1", "value": "0xE0"}, "2242": {"op": "DUP3"}, "2243": {"op": "DUP5"}, "2244": {"op": "SUB"}, "2245": {"op": "SLT"}, "2246": {"op": "ISZERO"}, "2247": {"op": "PUSH2", "value": "0x8CF"}, "2250": {"op": "JUMPI"}, "2251": {"op": "PUSH1", "value": "0x0"}, "2253": {"op": "DUP1"}, "2254": {"op": "REVERT"}, "2255": {"op": "JUMPDEST"}, "2256": {"op": "PUSH2", "value": "0x8D9"}, "2259": {"op": "DUP4"}, "2260": {"op": "DUP4"}, "2261": {"op": "PUSH2", "value": "0x827"}, "2264": {"jump": "i", "op": "JUMP"}, "2265": {"op": "JUMPDEST"}, "2266": {"op": "SWAP4"}, "2267": {"op": "SWAP3"}, "2268": {"op": "POP"}, "2269": {"op": "POP"}, "2270": {"op": "POP"}, "2271": {"jump": "o", "op": "JUMP"}, "2272": {"op": "JUMPDEST"}, "2273": {"op": "PUSH1", "value": "0x0"}, "2275": {"op": "PUSH1", "value": "0x20"}, "2277": {"op": "DUP3"}, "2278": {"op": "DUP5"}, "2279": {"op": "SUB"}, "2280": {"op": "SLT"}, "2281": {"op": "ISZERO"}, "2282": {"op": "PUSH2", "value": "0x8F2"}, "2285": {"op": "JUMPI"}, "2286": {"op": "PUSH1", "value": "0x0"}, "2288": {"op": "DUP1"}, "2289": {"op": "REVERT"}, "2290": {"op": "JUMPDEST"}, "2291": {"op": "POP"}, "2292": {"op": "CALLDATALOAD"}, "2293": {"op": "SWAP2"}, "2294": {"op": "SWAP1"}, "2295": {"op": "POP"}, "2296": {"jump": "o", "op": "JUMP"}, "2297": {"op": "JUMPDEST"}, "2298": {"op": "PUSH1", "value": "0x0"}, "2300": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2309": {"op": "DUP3"}, "2310": {"op": "GT"}, "2311": {"op": "ISZERO"}, "2312": {"op": "PUSH2", "value": "0x913"}, "2315": {"op": "JUMPI"}, "2316": {"op": "PUSH2", "value": "0x913"}, "2319": {"op": "PUSH2", "value": "0x79F"}, "2322": {"jump": "i", "op": "JUMP"}, "2323": {"op": "JUMPDEST"}, "2324": {"op": "POP"}, "2325": {"op": "PUSH1", "value": "0x5"}, "2327": {"op": "SHL"}, "2328": {"op": "PUSH1", "value": "0x20"}, "2330": {"op": "ADD"}, "2331": {"op": "SWAP1"}, "2332": {"jump": "o", "op": "JUMP"}, "2333": {"op": "JUMPDEST"}, "2334": {"op": "PUSH1", "value": "0x0"}, "2336": {"op": "DUP3"}, "2337": {"op": "PUSH1", "value": "0x1F"}, "2339": {"op": "DUP4"}, "2340": {"op": "ADD"}, "2341": {"op": "SLT"}, "2342": {"op": "PUSH2", "value": "0x92E"}, "2345": {"op": "JUMPI"}, "2346": {"op": "PUSH1", "value": "0x0"}, "2348": {"op": "DUP1"}, "2349": {"op": "REVERT"}, "2350": {"op": "JUMPDEST"}, "2351": {"op": "DUP2"}, "2352": {"op": "CALLDATALOAD"}, "2353": {"op": "PUSH1", "value": "0x20"}, "2355": {"op": "PUSH2", "value": "0x943"}, "2358": {"op": "PUSH2", "value": "0x93E"}, "2361": {"op": "DUP4"}, "2362": {"op": "PUSH2", "value": "0x8F9"}, "2365": {"jump": "i", "op": "JUMP"}, "2366": {"op": "JUMPDEST"}, "2367": {"op": "PUSH2", "value": "0x7DE"}, "2370": {"jump": "i", "op": "JUMP"}, "2371": {"op": "JUMPDEST"}, "2372": {"op": "DUP3"}, "2373": {"op": "DUP2"}, "2374": {"op": "MSTORE"}, "2375": {"op": "PUSH1", "value": "0xE0"}, "2377": {"op": "SWAP3"}, "2378": {"op": "DUP4"}, "2379": {"op": "MUL"}, "2380": {"op": "DUP6"}, "2381": {"op": "ADD"}, "2382": {"op": "DUP3"}, "2383": {"op": "ADD"}, "2384": {"op": "SWAP3"}, "2385": {"op": "DUP3"}, "2386": {"op": "DUP3"}, "2387": {"op": "ADD"}, "2388": {"op": "SWAP2"}, "2389": {"op": "SWAP1"}, "2390": {"op": "DUP8"}, "2391": {"op": "DUP6"}, "2392": {"op": "GT"}, "2393": {"op": "ISZERO"}, "2394": {"op": "PUSH2", "value": "0x962"}, "2397": {"op": "JUMPI"}, "2398": {"op": "PUSH1", "value": "0x0"}, "2400": {"op": "DUP1"}, "2401": {"op": "REVERT"}, "2402": {"op": "JUMPDEST"}, "2403": {"op": "DUP4"}, "2404": {"op": "DUP8"}, "2405": {"op": "ADD"}, "2406": {"op": "JUMPDEST"}, "2407": {"op": "DUP6"}, "2408": {"op": "DUP2"}, "2409": {"op": "LT"}, "2410": {"op": "ISZERO"}, "2411": {"op": "PUSH2", "value": "0x985"}, "2414": {"op": "JUMPI"}, "2415": {"op": "PUSH2", "value": "0x978"}, "2418": {"op": "DUP10"}, "2419": {"op": "DUP3"}, "2420": {"op": "PUSH2", "value": "0x827"}, "2423": {"jump": "i", "op": "JUMP"}, "2424": {"op": "JUMPDEST"}, "2425": {"op": "DUP5"}, "2426": {"op": "MSTORE"}, "2427": {"op": "SWAP3"}, "2428": {"op": "DUP5"}, "2429": {"op": "ADD"}, "2430": {"op": "SWAP3"}, "2431": {"op": "DUP2"}, "2432": {"op": "ADD"}, "2433": {"op": "PUSH2", "value": "0x966"}, "2436": {"op": "JUMP"}, "2437": {"op": "JUMPDEST"}, "2438": {"op": "POP"}, "2439": {"op": "SWAP1"}, "2440": {"op": "SWAP8"}, "2441": {"op": "SWAP7"}, "2442": {"op": "POP"}, "2443": {"op": "POP"}, "2444": {"op": "POP"}, "2445": {"op": "POP"}, "2446": {"op": "POP"}, "2447": {"op": "POP"}, "2448": {"op": "POP"}, "2449": {"jump": "o", "op": "JUMP"}, "2450": {"op": "JUMPDEST"}, "2451": {"op": "PUSH1", "value": "0x0"}, "2453": {"op": "DUP1"}, "2454": {"op": "PUSH1", "value": "0x40"}, "2456": {"op": "DUP1"}, "2457": {"op": "DUP5"}, "2458": {"op": "DUP7"}, "2459": {"op": "SUB"}, "2460": {"op": "SLT"}, "2461": {"op": "ISZERO"}, "2462": {"op": "PUSH2", "value": "0x9A6"}, "2465": {"op": "JUMPI"}, "2466": {"op": "PUSH1", "value": "0x0"}, "2468": {"op": "DUP1"}, "2469": {"op": "REVERT"}, "2470": {"op": "JUMPDEST"}, "2471": {"op": "DUP4"}, "2472": {"op": "CALLDATALOAD"}, "2473": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2482": {"op": "DUP1"}, "2483": {"op": "DUP3"}, "2484": {"op": "GT"}, "2485": {"op": "ISZERO"}, "2486": {"op": "PUSH2", "value": "0x9BE"}, "2489": {"op": "JUMPI"}, "2490": {"op": "PUSH1", "value": "0x0"}, "2492": {"op": "DUP1"}, "2493": {"op": "REVERT"}, "2494": {"op": "JUMPDEST"}, "2495": {"op": "DUP2"}, "2496": {"op": "DUP7"}, "2497": {"op": "ADD"}, "2498": {"op": "SWAP2"}, "2499": {"op": "POP"}, "2500": {"op": "DUP7"}, "2501": {"op": "PUSH1", "value": "0x1F"}, "2503": {"op": "DUP4"}, "2504": {"op": "ADD"}, "2505": {"op": "SLT"}, "2506": {"op": "PUSH2", "value": "0x9D2"}, "2509": {"op": "JUMPI"}, "2510": {"op": "PUSH1", "value": "0x0"}, "2512": {"op": "DUP1"}, "2513": {"op": "REVERT"}, "2514": {"op": "JUMPDEST"}, "2515": {"op": "DUP2"}, "2516": {"op": "CALLDATALOAD"}, "2517": {"op": "PUSH1", "value": "0x20"}, "2519": {"op": "PUSH2", "value": "0x9E2"}, "2522": {"op": "PUSH2", "value": "0x93E"}, "2525": {"op": "DUP4"}, "2526": {"op": "PUSH2", "value": "0x8F9"}, "2529": {"jump": "i", "op": "JUMP"}, "2530": {"op": "JUMPDEST"}, "2531": {"op": "DUP3"}, "2532": {"op": "DUP2"}, "2533": {"op": "MSTORE"}, "2534": {"op": "PUSH1", "value": "0x7"}, "2536": {"op": "SWAP3"}, "2537": {"op": "SWAP1"}, "2538": {"op": "SWAP3"}, "2539": {"op": "SHL"}, "2540": {"op": "DUP5"}, "2541": {"op": "ADD"}, "2542": {"op": "DUP2"}, "2543": {"op": "ADD"}, "2544": {"op": "SWAP2"}, "2545": {"op": "DUP2"}, "2546": {"op": "DUP2"}, "2547": {"op": "ADD"}, "2548": {"op": "SWAP1"}, "2549": {"op": "DUP11"}, "2550": {"op": "DUP5"}, "2551": {"op": "GT"}, "2552": {"op": "ISZERO"}, "2553": {"op": "PUSH2", "value": "0xA01"}, "2556": {"op": "JUMPI"}, "2557": {"op": "PUSH1", "value": "0x0"}, "2559": {"op": "DUP1"}, "2560": {"op": "REVERT"}, "2561": {"op": "JUMPDEST"}, "2562": {"op": "SWAP5"}, "2563": {"op": "DUP3"}, "2564": {"op": "ADD"}, "2565": {"op": "SWAP5"}, "2566": {"op": "JUMPDEST"}, "2567": {"op": "DUP4"}, "2568": {"op": "DUP7"}, "2569": {"op": "LT"}, "2570": {"op": "ISZERO"}, "2571": {"op": "PUSH2", "value": "0xA68"}, "2574": {"op": "JUMPI"}, "2575": {"op": "PUSH1", "value": "0x80"}, "2577": {"op": "DUP7"}, "2578": {"op": "DUP13"}, "2579": {"op": "SUB"}, "2580": {"op": "SLT"}, "2581": {"op": "ISZERO"}, "2582": {"op": "PUSH2", "value": "0xA1F"}, "2585": {"op": "JUMPI"}, "2586": {"op": "PUSH1", "value": "0x0"}, "2588": {"op": "DUP1"}, "2589": {"op": "DUP2"}, "2590": {"op": "REVERT"}, "2591": {"op": "JUMPDEST"}, "2592": {"op": "PUSH2", "value": "0xA27"}, "2595": {"op": "PUSH2", "value": "0x7B5"}, "2598": {"jump": "i", "op": "JUMP"}, "2599": {"op": "JUMPDEST"}, "2600": {"op": "DUP7"}, "2601": {"op": "CALLDATALOAD"}, "2602": {"op": "DUP2"}, "2603": {"op": "MSTORE"}, "2604": {"op": "DUP4"}, "2605": {"op": "DUP8"}, "2606": {"op": "ADD"}, "2607": {"op": "CALLDATALOAD"}, "2608": {"op": "PUSH2", "value": "0xA38"}, "2611": {"op": "DUP2"}, "2612": {"op": "PUSH2", "value": "0x80F"}, "2615": {"jump": "i", "op": "JUMP"}, "2616": {"op": "JUMPDEST"}, "2617": {"op": "DUP2"}, "2618": {"op": "DUP6"}, "2619": {"op": "ADD"}, "2620": {"op": "MSTORE"}, "2621": {"op": "DUP7"}, "2622": {"op": "DUP9"}, "2623": {"op": "ADD"}, "2624": {"op": "CALLDATALOAD"}, "2625": {"op": "PUSH2", "value": "0xA49"}, "2628": {"op": "DUP2"}, "2629": {"op": "PUSH2", "value": "0x80F"}, "2632": {"jump": "i", "op": "JUMP"}, "2633": {"op": "JUMPDEST"}, "2634": {"op": "DUP2"}, "2635": {"op": "DUP10"}, "2636": {"op": "ADD"}, "2637": {"op": "MSTORE"}, "2638": {"op": "PUSH1", "value": "0x60"}, "2640": {"op": "DUP8"}, "2641": {"op": "DUP2"}, "2642": {"op": "ADD"}, "2643": {"op": "CALLDATALOAD"}, "2644": {"op": "SWAP1"}, "2645": {"op": "DUP3"}, "2646": {"op": "ADD"}, "2647": {"op": "MSTORE"}, "2648": {"op": "DUP3"}, "2649": {"op": "MSTORE"}, "2650": {"op": "PUSH1", "value": "0x80"}, "2652": {"op": "SWAP1"}, "2653": {"op": "SWAP6"}, "2654": {"op": "ADD"}, "2655": {"op": "SWAP5"}, "2656": {"op": "SWAP1"}, "2657": {"op": "DUP3"}, "2658": {"op": "ADD"}, "2659": {"op": "SWAP1"}, "2660": {"op": "PUSH2", "value": "0xA06"}, "2663": {"op": "JUMP"}, "2664": {"op": "JUMPDEST"}, "2665": {"op": "SWAP8"}, "2666": {"op": "POP"}, "2667": {"op": "POP"}, "2668": {"op": "DUP8"}, "2669": {"op": "ADD"}, "2670": {"op": "CALLDATALOAD"}, "2671": {"op": "SWAP4"}, "2672": {"op": "POP"}, "2673": {"op": "POP"}, "2674": {"op": "DUP1"}, "2675": {"op": "DUP4"}, "2676": {"op": "GT"}, "2677": {"op": "ISZERO"}, "2678": {"op": "PUSH2", "value": "0xA7E"}, "2681": {"op": "JUMPI"}, "2682": {"op": "PUSH1", "value": "0x0"}, "2684": {"op": "DUP1"}, "2685": {"op": "REVERT"}, "2686": {"op": "JUMPDEST"}, "2687": {"op": "POP"}, "2688": {"op": "POP"}, "2689": {"op": "PUSH2", "value": "0xA8C"}, "2692": {"op": "DUP6"}, "2693": {"op": "DUP3"}, "2694": {"op": "DUP7"}, "2695": {"op": "ADD"}, "2696": {"op": "PUSH2", "value": "0x91D"}, "2699": {"jump": "i", "op": "JUMP"}, "2700": {"op": "JUMPDEST"}, "2701": {"op": "SWAP2"}, "2702": {"op": "POP"}, "2703": {"op": "POP"}, "2704": {"op": "SWAP3"}, "2705": {"op": "POP"}, "2706": {"op": "SWAP3"}, "2707": {"op": "SWAP1"}, "2708": {"op": "POP"}, "2709": {"jump": "o", "op": "JUMP"}, "2710": {"op": "JUMPDEST"}, "2711": {"op": "PUSH4", "value": "0x4E487B71"}, "2716": {"op": "PUSH1", "value": "0xE0"}, "2718": {"op": "SHL"}, "2719": {"op": "PUSH1", "value": "0x0"}, "2721": {"op": "MSTORE"}, "2722": {"op": "PUSH1", "value": "0x11"}, "2724": {"op": "PUSH1", "value": "0x4"}, "2726": {"op": "MSTORE"}, "2727": {"op": "PUSH1", "value": "0x24"}, "2729": {"op": "PUSH1", "value": "0x0"}, "2731": {"op": "REVERT"}, "2732": {"op": "JUMPDEST"}, "2733": {"op": "PUSH1", "value": "0x0"}, "2735": {"op": "DUP3"}, "2736": {"op": "NOT"}, "2737": {"op": "DUP3"}, "2738": {"op": "GT"}, "2739": {"op": "ISZERO"}, "2740": {"op": "PUSH2", "value": "0xABF"}, "2743": {"op": "JUMPI"}, "2744": {"op": "PUSH2", "value": "0xABF"}, "2747": {"op": "PUSH2", "value": "0xA96"}, "2750": {"jump": "i", "op": "JUMP"}, "2751": {"op": "JUMPDEST"}, "2752": {"op": "POP"}, "2753": {"op": "ADD"}, "2754": {"op": "SWAP1"}, "2755": {"jump": "o", "op": "JUMP"}, "2756": {"op": "JUMPDEST"}, "2757": {"op": "PUSH1", "value": "0x0"}, "2759": {"op": "DUP2"}, "2760": {"op": "PUSH1", "value": "0x0"}, "2762": {"op": "NOT"}, "2763": {"op": "DIV"}, "2764": {"op": "DUP4"}, "2765": {"op": "GT"}, "2766": {"op": "DUP3"}, "2767": {"op": "ISZERO"}, "2768": {"op": "ISZERO"}, "2769": {"op": "AND"}, "2770": {"op": "ISZERO"}, "2771": {"op": "PUSH2", "value": "0xADE"}, "2774": {"op": "JUMPI"}, "2775": {"op": "PUSH2", "value": "0xADE"}, "2778": {"op": "PUSH2", "value": "0xA96"}, "2781": {"jump": "i", "op": "JUMP"}, "2782": {"op": "JUMPDEST"}, "2783": {"op": "POP"}, "2784": {"op": "MUL"}, "2785": {"op": "SWAP1"}, "2786": {"jump": "o", "op": "JUMP"}, "2787": {"op": "JUMPDEST"}, "2788": {"op": "PUSH1", "value": "0x0"}, "2790": {"op": "PUSH1", "value": "0x20"}, "2792": {"op": "DUP3"}, "2793": {"op": "DUP5"}, "2794": {"op": "SUB"}, "2795": {"op": "SLT"}, "2796": {"op": "ISZERO"}, "2797": {"op": "PUSH2", "value": "0xAF5"}, "2800": {"op": "JUMPI"}, "2801": {"op": "PUSH1", "value": "0x0"}, "2803": {"op": "DUP1"}, "2804": {"op": "REVERT"}, "2805": {"op": "JUMPDEST"}, "2806": {"op": "DUP2"}, "2807": {"op": "MLOAD"}, "2808": {"op": "DUP1"}, "2809": {"op": "ISZERO"}, "2810": {"op": "ISZERO"}, "2811": {"op": "DUP2"}, "2812": {"op": "EQ"}, "2813": {"op": "PUSH2", "value": "0x8D9"}, "2816": {"op": "JUMPI"}, "2817": {"op": "PUSH1", "value": "0x0"}, "2819": {"op": "DUP1"}, "2820": {"op": "REVERT"}, "2821": {"op": "JUMPDEST"}, "2822": {"op": "PUSH1", "value": "0x0"}, "2824": {"op": "DUP3"}, "2825": {"op": "MLOAD"}, "2826": {"op": "PUSH1", "value": "0x0"}, "2828": {"op": "JUMPDEST"}, "2829": {"op": "DUP2"}, "2830": {"op": "DUP2"}, "2831": {"op": "LT"}, "2832": {"op": "ISZERO"}, "2833": {"op": "PUSH2", "value": "0xB26"}, "2836": {"op": "JUMPI"}, "2837": {"op": "PUSH1", "value": "0x20"}, "2839": {"op": "DUP2"}, "2840": {"op": "DUP7"}, "2841": {"op": "ADD"}, "2842": {"op": "DUP2"}, "2843": {"op": "ADD"}, "2844": {"op": "MLOAD"}, "2845": {"op": "DUP6"}, "2846": {"op": "DUP4"}, "2847": {"op": "ADD"}, "2848": {"op": "MSTORE"}, "2849": {"op": "ADD"}, "2850": {"op": "PUSH2", "value": "0xB0C"}, "2853": {"op": "JUMP"}, "2854": {"op": "JUMPDEST"}, "2855": {"op": "DUP2"}, "2856": {"op": "DUP2"}, "2857": {"op": "GT"}, "2858": {"op": "ISZERO"}, "2859": {"op": "PUSH2", "value": "0xB35"}, "2862": {"op": "JUMPI"}, "2863": {"op": "PUSH1", "value": "0x0"}, "2865": {"op": "DUP3"}, "2866": {"op": "DUP6"}, "2867": {"op": "ADD"}, "2868": {"op": "MSTORE"}, "2869": {"op": "JUMPDEST"}, "2870": {"op": "POP"}, "2871": {"op": "SWAP2"}, "2872": {"op": "SWAP1"}, "2873": {"op": "SWAP2"}, "2874": {"op": "ADD"}, "2875": {"op": "SWAP3"}, "2876": {"op": "SWAP2"}, "2877": {"op": "POP"}, "2878": {"op": "POP"}, "2879": {"jump": "o", "op": "JUMP"}, "2880": {"op": "JUMPDEST"}, "2881": {"op": "PUSH1", "value": "0x0"}, "2883": {"op": "PUSH1", "value": "0x20"}, "2885": {"op": "DUP3"}, "2886": {"op": "DUP5"}, "2887": {"op": "SUB"}, "2888": {"op": "SLT"}, "2889": {"op": "ISZERO"}, "2890": {"op": "PUSH2", "value": "0xB52"}, "2893": {"op": "JUMPI"}, "2894": {"op": "PUSH1", "value": "0x0"}, "2896": {"op": "DUP1"}, "2897": {"op": "REVERT"}, "2898": {"op": "JUMPDEST"}, "2899": {"op": "POP"}, "2900": {"op": "MLOAD"}, "2901": {"op": "SWAP2"}, "2902": {"op": "SWAP1"}, "2903": {"op": "POP"}, "2904": {"jump": "o", "op": "JUMP"}, "2905": {"op": "JUMPDEST"}, "2906": {"op": "PUSH1", "value": "0x0"}, "2908": {"op": "PUSH1", "value": "0x20"}, "2910": {"op": "DUP3"}, "2911": {"op": "DUP5"}, "2912": {"op": "SUB"}, "2913": {"op": "SLT"}, "2914": {"op": "ISZERO"}, "2915": {"op": "PUSH2", "value": "0xB6B"}, "2918": {"op": "JUMPI"}, "2919": {"op": "PUSH1", "value": "0x0"}, "2921": {"op": "DUP1"}, "2922": {"op": "REVERT"}, "2923": {"op": "JUMPDEST"}, "2924": {"op": "DUP2"}, "2925": {"op": "MLOAD"}, "2926": {"op": "PUSH2", "value": "0x8D9"}, "2929": {"op": "DUP2"}, "2930": {"op": "PUSH2", "value": "0x80F"}, "2933": {"jump": "i", "op": "JUMP"}, "2934": {"op": "JUMPDEST"}, "2935": {"op": "PUSH4", "value": "0x4E487B71"}, "2940": {"op": "PUSH1", "value": "0xE0"}, "2942": {"op": "SHL"}, "2943": {"op": "PUSH1", "value": "0x0"}, "2945": {"op": "MSTORE"}, "2946": {"op": "PUSH1", "value": "0x32"}, "2948": {"op": "PUSH1", "value": "0x4"}, "2950": {"op": "MSTORE"}, "2951": {"op": "PUSH1", "value": "0x24"}, "2953": {"op": "PUSH1", "value": "0x0"}, "2955": {"op": "REVERT"}, "2956": {"op": "JUMPDEST"}, "2957": {"op": "PUSH1", "value": "0x0"}, "2959": {"op": "PUSH1", "value": "0x1"}, "2961": {"op": "DUP3"}, "2962": {"op": "ADD"}, "2963": {"op": "PUSH2", "value": "0xB9E"}, "2966": {"op": "JUMPI"}, "2967": {"op": "PUSH2", "value": "0xB9E"}, "2970": {"op": "PUSH2", "value": "0xA96"}, "2973": {"jump": "i", "op": "JUMP"}, "2974": {"op": "JUMPDEST"}, "2975": {"op": "POP"}, "2976": {"op": "PUSH1", "value": "0x1"}, "2978": {"op": "ADD"}, "2979": {"op": "SWAP1"}, "2980": {"jump": "o", "op": "JUMP"}}, "sha1": "d6bf763c3f8bd46f917b3cb97aca62cbd10505ca", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./deb/optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol\";\n\n/// @title SourceDomainSideBridge Contract\n/// @author Sherif Abdelmoatty\n/// @notice This contract is to be deployed in the source rollup\ncontract SourceDomainSideBridge {\n    \n    uint constant CONTRACT_FEE_BASIS_POINTS = 5;\n    address constant ETHER_ADDRESS = 0x0000000000000000000000000000000000000000;\n\n    struct TransferData {\n        address  tokenAddress; \n        address  destination;\n        uint256  amount;\n        uint256  fee;\n        uint256  startTime;\n        uint256  feeRampup;\n        uint256  nonce;\n    }\n    struct RewardData {\n        bytes32  transferDataHash;\n        address  tokenAddress; \n        address  claimer;\n        uint256  fee;\n    }\n    mapping(bytes32 => bool) validTransferHashes;\n    mapping(bytes32 => bool) knownHashOnions;\n    bytes32 processedRewardHashOnion;\n    \n    address ovmL2CrossDomainMessenger;  //ovmL2CrossDomainMessenger contract address(Optimism)\n    address l1DomainSideContractAddress;  //l1DomainSideContract deployed contract address on mainnet\n\n    event Transaction(TransferData transferData);\n    \n    /// @notice onlyL1Contract modifier\n    /// @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n    /// @notice to call the approveStateRoot function\n    modifier onlyL1Contract() {\n        ICrossDomainMessenger l2cdm = ICrossDomainMessenger(ovmL2CrossDomainMessenger);\n        require(\n            msg.sender == address(ovmL2CrossDomainMessenger)\n            && l2cdm.xDomainMessageSender() == l1DomainSideContractAddress\n        );\n        _;\n    }\n\n    /// @notice Constructior function\n    /// @notice Intialize variables\n    constructor(address _l1DomainSideContractAddress){\n        ovmL2CrossDomainMessenger = 0x4200000000000000000000000000000000000007;\n        l1DomainSideContractAddress = _l1DomainSideContractAddress;\n    }\n\n    /// @notice withdraw function\n    /// @notice withdraws the required funds plus fees to be sent \n    /// @notice to the domain side rollup\n    function transfer(TransferData memory _transferData) external payable returns(bytes32){\n\n        uint256 amountPlusFee = _transferData.amount * (1000 + CONTRACT_FEE_BASIS_POINTS);\n        \n        if(_transferData.tokenAddress == ETHER_ADDRESS){\n            require(msg.value >= amountPlusFee, \"Error : Non Suffecient funds!!!!!!!!\");\n        }else{\n            ERC20 token = ERC20(_transferData.tokenAddress);\n            token.transferFrom(msg.sender, address(this), amountPlusFee);\n        }\n        \n        bytes32 transferDataHash = sha256(abi.encodePacked(\n            _transferData.tokenAddress,\n            _transferData.destination,\n            _transferData.amount,\n            _transferData.fee,\n            _transferData.startTime,\n            _transferData.feeRampup,\n            _transferData.nonce));\n        validTransferHashes[transferDataHash] = true;\n\n        emit Transaction(_transferData);\n        \n        return transferDataHash;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function processClaims(RewardData[] memory _rewardData, TransferData[] memory _transferData) external payable {\n        bytes32 newProcessedRewardHashOnion = calculateNewProcessedRewardHashOnion(_rewardData);\n        require(knownHashOnions[newProcessedRewardHashOnion], \"Invalide RewardData list.\");\n        for(uint n = 0; n < _rewardData.length; n++) {\n            if(validTransferHashes[_rewardData[n].transferDataHash]){\n                if(_rewardData[n].tokenAddress == ETHER_ADDRESS){\n                    payable(_rewardData[0].claimer).transfer(_rewardData[0].fee);\n                }else{\n                    ERC20 token = ERC20(_rewardData[n].tokenAddress);\n                    token.transferFrom(address(this), _rewardData[n].claimer,\n                        _rewardData[n].fee);\n                }\n            }\n        }\n        processedRewardHashOnion = newProcessedRewardHashOnion;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function calculateNewProcessedRewardHashOnion(RewardData[] memory _rewardData) private returns (bytes32){\n        bytes32 newProcessedRewardHashOnion = processedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            newProcessedRewardHashOnion = sha256(abi.encodePacked(newProcessedRewardHashOnion,\n                 _rewardData[n].transferDataHash,\n                 _rewardData[n].tokenAddress,\n                 _rewardData[n].claimer,\n                 _rewardData[n].fee\n                 ));\n        }\n        return newProcessedRewardHashOnion;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function addNewKnownHashOnion(bytes32 _newKnownHashOnions) external onlyL1Contract{\n        knownHashOnions[_newKnownHashOnions] = true;\n    }\n   \n}", "sourceMap": "330:4758:6:-:0;;;1845:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1904:25;:70;;1932:42;-1:-1:-1;;;;;;1904:70:6;;;;;;;1984:27;:58;;;;;-1:-1:-1;;;;;1984:58:6;;;;;;;;;;330:4758;;14:290:8;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;:::-;330:4758:6;;;;;;", "sourcePath": "contracts/SourceDomainSideBridge.sol", "type": "contract", "deployment": {"address": "0xE10401f00f89bD55f2Ff508E52b04D776Fc204db", "chainid": "69", "blockHeight": 2431853}}