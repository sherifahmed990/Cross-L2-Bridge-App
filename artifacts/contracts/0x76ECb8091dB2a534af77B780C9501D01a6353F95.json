{"abi": [{"inputs": [{"internalType": "address", "name": "_l1DomainSideContractAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "bool", "name": "success", "type": "bool"}], "name": "ClaimPayed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "newKnownHashOnions", "type": "bytes32"}], "name": "NewKnownHashOnionAdded", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "indexed": false, "internalType": "struct SourceDomainSideBridge.TransferData", "name": "transferData", "type": "tuple"}], "name": "Transaction", "type": "event"}, {"inputs": [], "name": "CONTRACT_FEE_BASIS_POINTS", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "FIXED_FEE", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "GetGovernanceBalance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "MAX_TRADE_LIMIT", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_newKnownHashOnions", "type": "bytes32"}], "name": "addNewKnownHashOnion", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "collectGovernanceFixedFees", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "governance", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "knownHashOnions", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "amountPlusFee", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.RewardData[]", "name": "_rewardData", "type": "tuple[]"}], "name": "processClaims", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_tokenAddress", "type": "address"}, {"internalType": "address", "name": "_destination", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "uint256", "name": "_feeRampup", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "validTransferHashes", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"1": "contracts/SourceDomainSideBridge.sol", "2": "contracts/deb/ERC20.sol", "3": "contracts/deb/ICrossDomainMessenger.sol"}, "ast": {"absolutePath": "contracts/SourceDomainSideBridge.sol", "exportedSymbols": {"ERC20": [936], "ICrossDomainMessenger": [975], "SourceDomainSideBridge": [867]}, "id": 868, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 330, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "31:23:1"}, {"absolutePath": "contracts/deb/ERC20.sol", "file": "./deb/ERC20.sol", "id": 331, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 868, "sourceUnit": 937, "src": "56:25:1", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/ICrossDomainMessenger.sol", "file": "./deb/ICrossDomainMessenger.sol", "id": 332, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 868, "sourceUnit": 976, "src": "82:41:1", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "SourceDomainSideBridge", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 333, "nodeType": "StructuredDocumentation", "src": "125:139:1", "text": "@title SourceDomainSideBridge Contract\n @author Sherif Abdelmoatty\n @notice This contract is to be deployed in the source rollup"}, "fullyImplemented": true, "id": 867, "linearizedBaseContracts": [867], "name": "SourceDomainSideBridge", "nameLocation": "273:22:1", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 336, "mutability": "constant", "name": "ETHER_ADDRESS", "nameLocation": "320:13:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "303:75:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 334, "name": "address", "nodeType": "ElementaryTypeName", "src": "303:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030", "id": 335, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "336:42:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x0000000000000000000000000000000000000000"}, "visibility": "internal"}, {"constant": true, "id": 339, "mutability": "constant", "name": "ovmL2CrossDomainMessenger", "nameLocation": "401:25:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "384:87:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 337, "name": "address", "nodeType": "ElementaryTypeName", "src": "384:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303037", "id": 338, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "429:42:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4200000000000000000000000000000000000007"}, "visibility": "internal"}, {"constant": true, "functionSelector": "13457d88", "id": 342, "mutability": "constant", "name": "CONTRACT_FEE_BASIS_POINTS", "nameLocation": "555:25:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "534:50:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 340, "name": "uint", "nodeType": "ElementaryTypeName", "src": "534:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "35", "id": 341, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "583:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "visibility": "public"}, {"constant": true, "functionSelector": "23d1b06c", "id": 345, "mutability": "constant", "name": "FIXED_FEE", "nameLocation": "630:9:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "609:42:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 343, "name": "uint", "nodeType": "ElementaryTypeName", "src": "609:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "33303032", "id": 344, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "642:9:1", "subdenomination": "gwei", "typeDescriptions": {"typeIdentifier": "t_rational_3002000000000_by_1", "typeString": "int_const 3002000000000"}, "value": "3002"}, "visibility": "public"}, {"constant": true, "functionSelector": "bfd683b3", "id": 348, "mutability": "constant", "name": "MAX_TRADE_LIMIT", "nameLocation": "813:15:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "792:48:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 346, "name": "uint", "nodeType": "ElementaryTypeName", "src": "792:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "302e31", "id": 347, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "831:9:1", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000_by_1", "typeString": "int_const 100000000000000000"}, "value": "0.1"}, "visibility": "public"}, {"canonicalName": "SourceDomainSideBridge.TransferData", "id": 363, "members": [{"constant": false, "id": 350, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "925:12:1", "nodeType": "VariableDeclaration", "scope": 363, "src": "916:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 349, "name": "address", "nodeType": "ElementaryTypeName", "src": "916:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 352, "mutability": "mutable", "name": "destination", "nameLocation": "975:11:1", "nodeType": "VariableDeclaration", "scope": 363, "src": "966:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 351, "name": "address", "nodeType": "ElementaryTypeName", "src": "966:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 354, "mutability": "mutable", "name": "amount", "nameLocation": "1005:6:1", "nodeType": "VariableDeclaration", "scope": 363, "src": "996:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 353, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "996:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 356, "mutability": "mutable", "name": "fee", "nameLocation": "1070:3:1", "nodeType": "VariableDeclaration", "scope": 363, "src": "1061:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 355, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1061:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 358, "mutability": "mutable", "name": "startTime", "nameLocation": "1092:9:1", "nodeType": "VariableDeclaration", "scope": 363, "src": "1083:18:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 357, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1083:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 360, "mutability": "mutable", "name": "feeRampup", "nameLocation": "1120:9:1", "nodeType": "VariableDeclaration", "scope": 363, "src": "1111:18:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 359, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1111:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 362, "mutability": "mutable", "name": "nonce", "nameLocation": "1148:5:1", "nodeType": "VariableDeclaration", "scope": 363, "src": "1139:14:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1139:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "TransferData", "nameLocation": "893:12:1", "nodeType": "StructDefinition", "scope": 867, "src": "886:274:1", "visibility": "public"}, {"canonicalName": "SourceDomainSideBridge.RewardData", "id": 372, "members": [{"constant": false, "id": 365, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1203:16:1", "nodeType": "VariableDeclaration", "scope": 372, "src": "1194:25:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 364, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1194:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 367, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "1238:12:1", "nodeType": "VariableDeclaration", "scope": 372, "src": "1229:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 366, "name": "address", "nodeType": "ElementaryTypeName", "src": "1229:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 369, "mutability": "mutable", "name": "claimer", "nameLocation": "1270:7:1", "nodeType": "VariableDeclaration", "scope": 372, "src": "1261:16:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 368, "name": "address", "nodeType": "ElementaryTypeName", "src": "1261:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 371, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "1296:13:1", "nodeType": "VariableDeclaration", "scope": 372, "src": "1287:22:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 370, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1287:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "RewardData", "nameLocation": "1173:10:1", "nodeType": "StructDefinition", "scope": 867, "src": "1166:150:1", "visibility": "public"}, {"constant": false, "functionSelector": "040c05b6", "id": 376, "mutability": "mutable", "name": "validTransferHashes", "nameLocation": "1354:19:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "1322:51:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 375, "keyType": {"id": 373, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1330:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "1322:24:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 374, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1341:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "5a1294b7", "id": 380, "mutability": "mutable", "name": "knownHashOnions", "nameLocation": "1411:15:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "1379:47:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 379, "keyType": {"id": 377, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1387:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "1379:24:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 378, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1398:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "id": 382, "mutability": "mutable", "name": "processedRewardHashOnion", "nameLocation": "1440:24:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "1432:32:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 381, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1432:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 384, "mutability": "mutable", "name": "l1DomainSideContractAddress", "nameLocation": "1478:27:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "1470:35:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 383, "name": "address", "nodeType": "ElementaryTypeName", "src": "1470:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 386, "mutability": "mutable", "name": "currentNonce", "nameLocation": "1581:12:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "1572:21:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 385, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1572:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "5aa6e675", "id": 388, "mutability": "mutable", "name": "governance", "nameLocation": "1614:10:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "1599:25:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 387, "name": "address", "nodeType": "ElementaryTypeName", "src": "1599:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "id": 390, "mutability": "mutable", "name": "governanceBalance", "nameLocation": "1638:17:1", "nodeType": "VariableDeclaration", "scope": 867, "src": "1630:25:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 389, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1630:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "d8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f89", "id": 395, "name": "Transaction", "nameLocation": "1668:11:1", "nodeType": "EventDefinition", "parameters": {"id": 394, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 393, "indexed": false, "mutability": "mutable", "name": "transferData", "nameLocation": "1693:12:1", "nodeType": "VariableDeclaration", "scope": 395, "src": "1680:25:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 392, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 391, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 363, "src": "1680:12:1"}, "referencedDeclaration": 363, "src": "1680:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "src": "1679:27:1"}, "src": "1662:45:1"}, {"anonymous": false, "eventSelector": "6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a", "id": 401, "name": "ClaimPayed", "nameLocation": "1718:10:1", "nodeType": "EventDefinition", "parameters": {"id": 400, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 397, "indexed": false, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1737:16:1", "nodeType": "VariableDeclaration", "scope": 401, "src": "1729:24:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 396, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1729:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 399, "indexed": false, "mutability": "mutable", "name": "success", "nameLocation": "1760:7:1", "nodeType": "VariableDeclaration", "scope": 401, "src": "1755:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 398, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1755:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1728:40:1"}, "src": "1712:57:1"}, {"anonymous": false, "eventSelector": "f92a8a7980eb38c3c210ad55b80880529bccdbc8206e7cdb24d9f52c6a5171e8", "id": 405, "name": "NewKnownHashOnionAdded", "nameLocation": "1780:22:1", "nodeType": "EventDefinition", "parameters": {"id": 404, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 403, "indexed": false, "mutability": "mutable", "name": "newKnownHashOnions", "nameLocation": "1811:18:1", "nodeType": "VariableDeclaration", "scope": 405, "src": "1803:26:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 402, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1803:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "1802:28:1"}, "src": "1774:57:1"}, {"body": {"id": 432, "nodeType": "Block", "src": "1979:270:1", "statements": [{"assignments": [410], "declarations": [{"constant": false, "id": 410, "mutability": "mutable", "name": "l2cdm", "nameLocation": "2011:5:1", "nodeType": "VariableDeclaration", "scope": 432, "src": "1989:27:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$975", "typeString": "contract ICrossDomainMessenger"}, "typeName": {"id": 409, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 408, "name": "ICrossDomainMessenger", "nodeType": "IdentifierPath", "referencedDeclaration": 975, "src": "1989:21:1"}, "referencedDeclaration": 975, "src": "1989:21:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$975", "typeString": "contract ICrossDomainMessenger"}}, "visibility": "internal"}], "id": 414, "initialValue": {"arguments": [{"id": 412, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 339, "src": "2041:25:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 411, "name": "ICrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 975, "src": "2019:21:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$975_$", "typeString": "type(contract ICrossDomainMessenger)"}}, "id": 413, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2019:48:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$975", "typeString": "contract ICrossDomainMessenger"}}, "nodeType": "VariableDeclarationStatement", "src": "1989:78:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 422, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 416, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2098:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 417, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2098:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 420, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 339, "src": "2120:25:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 419, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2112:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 418, "name": "address", "nodeType": "ElementaryTypeName", "src": "2112:7:1", "typeDescriptions": {}}}, "id": 421, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2112:34:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2098:48:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 427, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 423, "name": "l2cdm", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 410, "src": "2162:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$975", "typeString": "contract ICrossDomainMessenger"}}, "id": 424, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "xDomainMessageSender", "nodeType": "MemberAccess", "referencedDeclaration": 964, "src": "2162:26:1", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 425, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2162:28:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 426, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 384, "src": "2194:27:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2162:59:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "2098:123:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 415, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2077:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 429, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2077:154:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 430, "nodeType": "ExpressionStatement", "src": "2077:154:1"}, {"id": 431, "nodeType": "PlaceholderStatement", "src": "2241:1:1"}]}, "documentation": {"id": 406, "nodeType": "StructuredDocumentation", "src": "1841:108:1", "text": "@notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge"}, "id": 433, "name": "onlyL1Contract", "nameLocation": "1963:14:1", "nodeType": "ModifierDefinition", "parameters": {"id": 407, "nodeType": "ParameterList", "parameters": [], "src": "1977:2:1"}, "src": "1954:295:1", "virtual": false, "visibility": "internal"}, {"body": {"id": 445, "nodeType": "Block", "src": "2370:104:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 440, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 437, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2388:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 438, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2388:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 439, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "2402:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2388:24:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "476f7665726e616e63653a20596f7520617265206e6f742074686520476f7665726e6f72212121", "id": 441, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2414:41:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_300c0d2f8768dc2f5059e5cda9a599bc809e73a6a59e433d49c1d574de5907dc", "typeString": "literal_string \"Governance: You are not the Governor!!!\""}, "value": "Governance: You are not the Governor!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_300c0d2f8768dc2f5059e5cda9a599bc809e73a6a59e433d49c1d574de5907dc", "typeString": "literal_string \"Governance: You are not the Governor!!!\""}], "id": 436, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2380:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 442, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2380:76:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 443, "nodeType": "ExpressionStatement", "src": "2380:76:1"}, {"id": 444, "nodeType": "PlaceholderStatement", "src": "2466:1:1"}]}, "documentation": {"id": 434, "nodeType": "StructuredDocumentation", "src": "2255:86:1", "text": "@notice onlyGovernance modifier \n @notice allow only the Governor to access"}, "id": 446, "name": "onlyGovernance", "nameLocation": "2355:14:1", "nodeType": "ModifierDefinition", "parameters": {"id": 435, "nodeType": "ParameterList", "parameters": [], "src": "2370:0:1"}, "src": "2346:128:1", "virtual": false, "visibility": "internal"}, {"body": {"id": 461, "nodeType": "Block", "src": "2619:108:1", "statements": [{"expression": {"id": 454, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 452, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 384, "src": "2629:27:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 453, "name": "_l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 449, "src": "2659:28:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2629:58:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 455, "nodeType": "ExpressionStatement", "src": "2629:58:1"}, {"expression": {"id": 459, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 456, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "2697:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 457, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2710:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 458, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2710:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2697:23:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 460, "nodeType": "ExpressionStatement", "src": "2697:23:1"}]}, "documentation": {"id": 447, "nodeType": "StructuredDocumentation", "src": "2480:85:1", "text": "@param _l1DomainSideContractAddress is the address of the contract in etherium L1"}, "id": 462, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 450, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 449, "mutability": "mutable", "name": "_l1DomainSideContractAddress", "nameLocation": "2590:28:1", "nodeType": "VariableDeclaration", "scope": 462, "src": "2582:36:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 448, "name": "address", "nodeType": "ElementaryTypeName", "src": "2582:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2581:38:1"}, "returnParameters": {"id": 451, "nodeType": "ParameterList", "parameters": [], "src": "2619:0:1"}, "scope": 867, "src": "2570:157:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 632, "nodeType": "Block", "src": "2972:1368:1", "statements": [{"assignments": [477], "declarations": [{"constant": false, "id": 477, "mutability": "mutable", "name": "fee", "nameLocation": "2999:3:1", "nodeType": "VariableDeclaration", "scope": 632, "src": "2991:11:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 476, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2991:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 481, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 480, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 478, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "3005:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 479, "name": "CONTRACT_FEE_BASIS_POINTS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 342, "src": "3015:25:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3005:35:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2991:49:1"}, {"assignments": [483], "declarations": [{"constant": false, "id": 483, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "3058:13:1", "nodeType": "VariableDeclaration", "scope": 632, "src": "3050:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 482, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3050:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 489, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 488, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 484, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "3074:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 485, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3084:4:1", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3074:14:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 487, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "3091:3:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3074:20:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3050:44:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 497, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 491, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "3121:3:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 492, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 471, "src": "3127:10:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3121:16:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 496, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 494, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "3140:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 495, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3150:4:1", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3140:14:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3121:33:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "66656552616d707570206d6178696d756d20636f73742073686f756c64206265206c657373207468616e2074686520746f74616c20616d6f756e74", "id": 498, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3156:61:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4bc519888d66881083968bfd12d4fec087513ea2bfda5d86f622fedd64a2aa09", "typeString": "literal_string \"feeRampup maximum cost should be less than the total amount\""}, "value": "feeRampup maximum cost should be less than the total amount"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4bc519888d66881083968bfd12d4fec087513ea2bfda5d86f622fedd64a2aa09", "typeString": "literal_string \"feeRampup maximum cost should be less than the total amount\""}], "id": 490, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3113:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 499, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3113:105:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 500, "nodeType": "ExpressionStatement", "src": "3113:105:1"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 503, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 501, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 465, "src": "3232:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 502, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 336, "src": "3249:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3232:30:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 551, "nodeType": "Block", "src": "3458:225:1", "statements": [{"assignments": [526], "declarations": [{"constant": false, "id": 526, "mutability": "mutable", "name": "token", "nameLocation": "3478:5:1", "nodeType": "VariableDeclaration", "scope": 551, "src": "3472:11:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$936", "typeString": "contract ERC20"}, "typeName": {"id": 525, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 524, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 936, "src": "3472:5:1"}, "referencedDeclaration": 936, "src": "3472:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$936", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 530, "initialValue": {"arguments": [{"id": 528, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 465, "src": "3492:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 527, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "3486:5:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$936_$", "typeString": "type(contract ERC20)"}}, "id": 529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3486:20:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$936", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "3472:34:1"}, {"expression": {"arguments": [{"expression": {"id": 534, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3539:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3539:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 538, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3559:4:1", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$867", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$867", "typeString": "contract SourceDomainSideBridge"}], "id": 537, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3551:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 536, "name": "address", "nodeType": "ElementaryTypeName", "src": "3551:7:1", "typeDescriptions": {}}}, "id": 539, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3551:13:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 540, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "3566:13:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 531, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 526, "src": "3520:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$936", "typeString": "contract ERC20"}}, "id": 533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 919, "src": "3520:18:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 541, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3520:60:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 542, "nodeType": "ExpressionStatement", "src": "3520:60:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 544, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3602:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "3602:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 546, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "3615:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3602:22:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2053756666656369656e7420657468657220666f722074686520666978656420657468657220666565", "id": 548, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3626:45:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_64ba999596c4f1bdb4efd3b6724f85fe7965e7c80268be2ebabf9a78cb176819", "typeString": "literal_string \"No Suffecient ether for the fixed ether fee\""}, "value": "No Suffecient ether for the fixed ether fee"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_64ba999596c4f1bdb4efd3b6724f85fe7965e7c80268be2ebabf9a78cb176819", "typeString": "literal_string \"No Suffecient ether for the fixed ether fee\""}], "id": 543, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3594:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 549, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3594:78:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 550, "nodeType": "ExpressionStatement", "src": "3594:78:1"}]}, "id": 552, "nodeType": "IfStatement", "src": "3229:454:1", "trueBody": {"id": 523, "nodeType": "Block", "src": "3263:191:1", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 505, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "3285:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 506, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3294:4:1", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "3285:13:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 508, "name": "MAX_TRADE_LIMIT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 348, "src": "3301:15:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3285:31:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420686967686572207468616e206d6178696d756d207472616465206c696d6974", "id": 510, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3318:40:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_541250fccaebd85b78dfda892f93e70a245432cff15b3fb7fc320458cd1107bf", "typeString": "literal_string \"Amount higher than maximum trade limit\""}, "value": "Amount higher than maximum trade limit"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_541250fccaebd85b78dfda892f93e70a245432cff15b3fb7fc320458cd1107bf", "typeString": "literal_string \"Amount higher than maximum trade limit\""}], "id": 504, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3277:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 511, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3277:82:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 512, "nodeType": "ExpressionStatement", "src": "3277:82:1"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 514, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3381:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "3381:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 516, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 483, "src": "3394:13:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 517, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "3410:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3394:25:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3381:38:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f2053756666656369656e74206574686572", "id": 520, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3421:21:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9524d3942520ea058e373f61030588302685b586802f82c6be4e5149e46e6fbf", "typeString": "literal_string \"No Suffecient ether\""}, "value": "No Suffecient ether"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9524d3942520ea058e373f61030588302685b586802f82c6be4e5149e46e6fbf", "typeString": "literal_string \"No Suffecient ether\""}], "id": 513, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3373:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3373:70:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 522, "nodeType": "ExpressionStatement", "src": "3373:70:1"}]}}, {"assignments": [555], "declarations": [{"constant": false, "id": 555, "mutability": "mutable", "name": "transferData", "nameLocation": "3713:12:1", "nodeType": "VariableDeclaration", "scope": 632, "src": "3693:32:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 554, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 553, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 363, "src": "3693:12:1"}, "referencedDeclaration": 363, "src": "3693:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "id": 556, "nodeType": "VariableDeclarationStatement", "src": "3693:32:1"}, {"expression": {"id": 561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 557, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "3735:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 559, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 350, "src": "3735:25:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 560, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 465, "src": "3763:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3735:41:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 562, "nodeType": "ExpressionStatement", "src": "3735:41:1"}, {"expression": {"id": 567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 563, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "3786:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 565, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 352, "src": "3786:24:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 566, "name": "_destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "3813:12:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3786:39:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 568, "nodeType": "ExpressionStatement", "src": "3786:39:1"}, {"expression": {"id": 573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 569, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "3835:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 571, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 354, "src": "3835:19:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 572, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "3857:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3835:29:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 574, "nodeType": "ExpressionStatement", "src": "3835:29:1"}, {"expression": {"id": 579, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 575, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "3874:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 577, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 356, "src": "3874:16:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 578, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "3893:3:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3874:22:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 580, "nodeType": "ExpressionStatement", "src": "3874:22:1"}, {"expression": {"id": 586, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 581, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "3906:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 583, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 358, "src": "3906:22:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 584, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3931:5:1", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "3931:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3906:37:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 587, "nodeType": "ExpressionStatement", "src": "3906:37:1"}, {"expression": {"id": 592, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 588, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "3953:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 590, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "feeRampup", "nodeType": "MemberAccess", "referencedDeclaration": 360, "src": "3953:22:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 591, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 471, "src": "3978:10:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3953:35:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 593, "nodeType": "ExpressionStatement", "src": "3953:35:1"}, {"expression": {"id": 598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 594, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "3998:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 596, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "nonce", "nodeType": "MemberAccess", "referencedDeclaration": 362, "src": "3998:18:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 597, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "4019:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3998:33:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 599, "nodeType": "ExpressionStatement", "src": "3998:33:1"}, {"expression": {"id": 601, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4042:14:1", "subExpression": {"id": 600, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 386, "src": "4042:12:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 602, "nodeType": "ExpressionStatement", "src": "4042:14:1"}, {"expression": {"id": 609, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 603, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 390, "src": "4066:17:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 604, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 390, "src": "4086:17:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 607, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"id": 605, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "4106:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 606, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4116:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "4106:11:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4086:31:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4066:51:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 610, "nodeType": "ExpressionStatement", "src": "4066:51:1"}, {"assignments": [612], "declarations": [{"constant": false, "id": 612, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "4136:16:1", "nodeType": "VariableDeclaration", "scope": 632, "src": "4128:24:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 611, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4128:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 619, "initialValue": {"arguments": [{"arguments": [{"id": 616, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "4173:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "expression": {"id": 614, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "4162:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 615, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "4162:10:1", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 617, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4162:24:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 613, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "4155:6:1", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 618, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4155:32:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "4128:59:1"}, {"expression": {"id": 624, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 620, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 376, "src": "4206:19:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 622, "indexExpression": {"id": 621, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 612, "src": "4226:16:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4206:37:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 623, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "4246:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "4206:44:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 625, "nodeType": "ExpressionStatement", "src": "4206:44:1"}, {"eventCall": {"arguments": [{"id": 627, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 555, "src": "4278:12:1", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$363_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "id": 626, "name": "Transaction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 395, "src": "4266:11:1", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_TransferData_$363_memory_ptr_$returns$__$", "typeString": "function (struct SourceDomainSideBridge.TransferData memory)"}}, "id": 628, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4266:25:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 629, "nodeType": "EmitStatement", "src": "4261:30:1"}, {"expression": {"id": 630, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 612, "src": "4317:16:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 475, "id": 631, "nodeType": "Return", "src": "4310:23:1"}]}, "documentation": {"id": 463, "nodeType": "StructuredDocumentation", "src": "2733:92:1", "text": "@notice transfer the required funds plus fees to be sent to the current contract balance"}, "functionSelector": "0411b252", "id": 633, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "2839:8:1", "nodeType": "FunctionDefinition", "parameters": {"id": 472, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 465, "mutability": "mutable", "name": "_tokenAddress", "nameLocation": "2856:13:1", "nodeType": "VariableDeclaration", "scope": 633, "src": "2848:21:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 464, "name": "address", "nodeType": "ElementaryTypeName", "src": "2848:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 467, "mutability": "mutable", "name": "_destination", "nameLocation": "2879:12:1", "nodeType": "VariableDeclaration", "scope": 633, "src": "2871:20:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 466, "name": "address", "nodeType": "ElementaryTypeName", "src": "2871:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 469, "mutability": "mutable", "name": "_amount", "nameLocation": "2901:7:1", "nodeType": "VariableDeclaration", "scope": 633, "src": "2893:15:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 468, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2893:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 471, "mutability": "mutable", "name": "_feeRampup", "nameLocation": "2927:10:1", "nodeType": "VariableDeclaration", "scope": 633, "src": "2918:19:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 470, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2918:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2847:91:1"}, "returnParameters": {"id": 475, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 474, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 633, "src": "2964:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 473, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2964:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2963:9:1"}, "scope": 867, "src": "2830:1510:1", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 776, "nodeType": "Block", "src": "4602:1146:1", "statements": [{"assignments": [642], "declarations": [{"constant": false, "id": 642, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "4620:27:1", "nodeType": "VariableDeclaration", "scope": 776, "src": "4612:35:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 641, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4612:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 646, "initialValue": {"arguments": [{"id": 644, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "4687:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}], "id": 643, "name": "calculateNewProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 866, "src": "4650:36:1", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (struct SourceDomainSideBridge.RewardData memory[] memory) view returns (bytes32)"}}, "id": 645, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4650:49:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "4612:87:1"}, {"expression": {"arguments": [{"baseExpression": {"id": 648, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "4717:15:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 650, "indexExpression": {"id": 649, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "4733:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4717:44:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964652052657761726444617461206c6973742e", "id": 651, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4763:27:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}, "value": "Invalide RewardData list."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}], "id": 647, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4709:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 652, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4709:82:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 653, "nodeType": "ExpressionStatement", "src": "4709:82:1"}, {"expression": {"id": 656, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 654, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 382, "src": "4801:24:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 655, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "4828:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4801:54:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 657, "nodeType": "ExpressionStatement", "src": "4801:54:1"}, {"body": {"id": 774, "nodeType": "Block", "src": "4910:828:1", "statements": [{"condition": {"baseExpression": {"id": 669, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 376, "src": "4927:19:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 674, "indexExpression": {"expression": {"baseExpression": {"id": 670, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "4947:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 672, "indexExpression": {"id": 671, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "4959:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4947:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 673, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 365, "src": "4947:31:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4927:52:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 773, "nodeType": "IfStatement", "src": "4924:804:1", "trueBody": {"id": 772, "nodeType": "Block", "src": "4980:748:1", "statements": [{"assignments": [676], "declarations": [{"constant": false, "id": 676, "mutability": "mutable", "name": "success", "nameLocation": "5003:7:1", "nodeType": "VariableDeclaration", "scope": 772, "src": "4998:12:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 675, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4998:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 677, "nodeType": "VariableDeclarationStatement", "src": "4998:12:1"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 683, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 678, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "5031:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 680, "indexExpression": {"id": 679, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "5043:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5031:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 681, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 367, "src": "5031:27:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 682, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 336, "src": "5062:13:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5031:44:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 762, "nodeType": "Block", "src": "5262:377:1", "statements": [{"assignments": [713], "declarations": [{"constant": false, "id": 713, "mutability": "mutable", "name": "token", "nameLocation": "5290:5:1", "nodeType": "VariableDeclaration", "scope": 762, "src": "5284:11:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$936", "typeString": "contract ERC20"}, "typeName": {"id": 712, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 711, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 936, "src": "5284:5:1"}, "referencedDeclaration": 936, "src": "5284:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$936", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 720, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 715, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "5304:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 717, "indexExpression": {"id": 716, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "5316:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5304:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 718, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 367, "src": "5304:27:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 714, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 936, "src": "5298:5:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$936_$", "typeString": "type(contract ERC20)"}}, "id": 719, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5298:34:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$936", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "5284:48:1"}, {"expression": {"id": 737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 721, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 676, "src": "5354:7:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 726, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5391:4:1", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$867", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$867", "typeString": "contract SourceDomainSideBridge"}], "id": 725, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5383:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 724, "name": "address", "nodeType": "ElementaryTypeName", "src": "5383:7:1", "typeDescriptions": {}}}, "id": 727, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5383:13:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 728, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "5398:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 730, "indexExpression": {"id": 729, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "5410:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5398:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 731, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 369, "src": "5398:22:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 732, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "5446:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 734, "indexExpression": {"id": 733, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "5458:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5446:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 735, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amountPlusFee", "nodeType": "MemberAccess", "referencedDeclaration": 371, "src": "5446:28:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 722, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 713, "src": "5364:5:1", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$936", "typeString": "contract ERC20"}}, "id": 723, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 919, "src": "5364:18:1", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5364:111:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5354:121:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 738, "nodeType": "ExpressionStatement", "src": "5354:121:1"}, {"assignments": [740, null], "declarations": [{"constant": false, "id": 740, "mutability": "mutable", "name": "suc", "nameLocation": "5504:3:1", "nodeType": "VariableDeclaration", "scope": 762, "src": "5499:8:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 739, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5499:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 755, "initialValue": {"arguments": [{"hexValue": "", "id": 753, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5570:2:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 743, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "5521:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 745, "indexExpression": {"id": 744, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "5533:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5521:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 746, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 369, "src": "5521:22:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 742, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5513:8:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 741, "name": "address", "nodeType": "ElementaryTypeName", "src": "5513:8:1", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 747, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5513:31:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 748, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "5513:36:1", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 752, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 751, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"id": 749, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "5557:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 750, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5567:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "5557:11:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "5513:56:1", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 754, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5513:60:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5498:75:1"}, {"expression": {"id": 760, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 756, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 676, "src": "5596:7:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 757, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 676, "src": "5606:7:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"id": 758, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 740, "src": "5617:3:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5606:14:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5596:24:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 761, "nodeType": "ExpressionStatement", "src": "5596:24:1"}]}, "id": 763, "nodeType": "IfStatement", "src": "5028:611:1", "trueBody": {"id": 710, "nodeType": "Block", "src": "5076:182:1", "statements": [{"assignments": [685, null], "declarations": [{"constant": false, "id": 685, "mutability": "mutable", "name": "suc", "nameLocation": "5104:3:1", "nodeType": "VariableDeclaration", "scope": 710, "src": "5099:8:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 684, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5099:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 705, "initialValue": {"arguments": [{"hexValue": "", "id": 703, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5201:2:1", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 688, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "5121:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 690, "indexExpression": {"id": 689, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "5133:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5121:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 691, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 369, "src": "5121:22:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 687, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5113:8:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 686, "name": "address", "nodeType": "ElementaryTypeName", "src": "5113:8:1", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 692, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5113:31:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "5113:36:1", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 702, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 701, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 694, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "5157:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 696, "indexExpression": {"id": 695, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "5169:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5157:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 697, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amountPlusFee", "nodeType": "MemberAccess", "referencedDeclaration": 371, "src": "5157:28:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 700, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"id": 698, "name": "FIXED_FEE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 345, "src": "5188:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 699, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5198:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "5188:11:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5157:42:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "5113:87:1", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 704, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5113:91:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5098:106:1"}, {"expression": {"id": 708, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 706, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 676, "src": "5226:7:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 707, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 685, "src": "5236:3:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5226:13:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 709, "nodeType": "ExpressionStatement", "src": "5226:13:1"}]}}, {"eventCall": {"arguments": [{"expression": {"baseExpression": {"id": 765, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "5672:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 767, "indexExpression": {"id": 766, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "5684:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5672:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 768, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 365, "src": "5672:31:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 769, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 676, "src": "5705:7:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 764, "name": "ClaimPayed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 401, "src": "5661:10:1", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$", "typeString": "function (bytes32,bool)"}}, "id": 770, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5661:52:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 771, "nodeType": "EmitStatement", "src": "5656:57:1"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 665, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 662, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "4881:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 663, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 638, "src": "4885:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 664, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4885:18:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4881:22:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 775, "initializationExpression": {"assignments": [659], "declarations": [{"constant": false, "id": 659, "mutability": "mutable", "name": "n", "nameLocation": "4874:1:1", "nodeType": "VariableDeclaration", "scope": 775, "src": "4869:6:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 658, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4869:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 661, "initialValue": {"hexValue": "30", "id": 660, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4878:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4869:10:1"}, "loopExpression": {"expression": {"id": 667, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4905:3:1", "subExpression": {"id": 666, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 659, "src": "4905:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 668, "nodeType": "ExpressionStatement", "src": "4905:3:1"}, "nodeType": "ForStatement", "src": "4865:873:1"}]}, "documentation": {"id": 634, "nodeType": "StructuredDocumentation", "src": "4346:178:1", "text": "@notice process the processClaims structs to be paid to the liquidity providers\n @param _rewardData is an array of RewardData structs to be paid to liquidity providers"}, "functionSelector": "ef4481d1", "id": 777, "implemented": true, "kind": "function", "modifiers": [], "name": "processClaims", "nameLocation": "4538:13:1", "nodeType": "FunctionDefinition", "parameters": {"id": 639, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 638, "mutability": "mutable", "name": "_rewardData", "nameLocation": "4572:11:1", "nodeType": "VariableDeclaration", "scope": 777, "src": "4552:31:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 636, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 635, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 372, "src": "4552:10:1"}, "referencedDeclaration": 372, "src": "4552:10:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 637, "nodeType": "ArrayTypeName", "src": "4552:12:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "4551:33:1"}, "returnParameters": {"id": 640, "nodeType": "ParameterList", "parameters": [], "src": "4602:0:1"}, "scope": 867, "src": "4529:1219:1", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 795, "nodeType": "Block", "src": "6002:118:1", "statements": [{"expression": {"id": 789, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 785, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "6012:15:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 787, "indexExpression": {"id": 786, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 780, "src": "6028:19:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6012:36:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 788, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6051:4:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "6012:43:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 790, "nodeType": "ExpressionStatement", "src": "6012:43:1"}, {"eventCall": {"arguments": [{"id": 792, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 780, "src": "6093:19:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 791, "name": "NewKnownHashOnionAdded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 405, "src": "6070:22:1", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 793, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6070:43:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 794, "nodeType": "EmitStatement", "src": "6065:48:1"}]}, "documentation": {"id": 778, "nodeType": "StructuredDocumentation", "src": "5754:161:1", "text": "@notice this function is only called from the contract at the etherium L1\n @notice through the rollup messenger contract to add a new known hash onion"}, "functionSelector": "a9d72b02", "id": 796, "implemented": true, "kind": "function", "modifiers": [{"id": 783, "kind": "modifierInvocation", "modifierName": {"id": 782, "name": "onlyL1Contract", "nodeType": "IdentifierPath", "referencedDeclaration": 433, "src": "5988:14:1"}, "nodeType": "ModifierInvocation", "src": "5988:14:1"}], "name": "addNewKnownHashOnion", "nameLocation": "5929:20:1", "nodeType": "FunctionDefinition", "parameters": {"id": 781, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 780, "mutability": "mutable", "name": "_newKnownHashOnions", "nameLocation": "5958:19:1", "nodeType": "VariableDeclaration", "scope": 796, "src": "5950:27:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 779, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5950:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5949:29:1"}, "returnParameters": {"id": 784, "nodeType": "ParameterList", "parameters": [], "src": "6002:0:1"}, "scope": 867, "src": "5920:200:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 805, "nodeType": "Block", "src": "6203:41:1", "statements": [{"expression": {"id": 803, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 390, "src": "6220:17:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 802, "id": 804, "nodeType": "Return", "src": "6213:24:1"}]}, "functionSelector": "e93aea44", "id": 806, "implemented": true, "kind": "function", "modifiers": [{"id": 799, "kind": "modifierInvocation", "modifierName": {"id": 798, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 446, "src": "6172:14:1"}, "nodeType": "ModifierInvocation", "src": "6172:14:1"}], "name": "GetGovernanceBalance", "nameLocation": "6135:20:1", "nodeType": "FunctionDefinition", "parameters": {"id": 797, "nodeType": "ParameterList", "parameters": [], "src": "6155:2:1"}, "returnParameters": {"id": 802, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 801, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 806, "src": "6195:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 800, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6195:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6194:9:1"}, "scope": 867, "src": "6126:118:1", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 823, "nodeType": "Block", "src": "6311:95:1", "statements": [{"expression": {"arguments": [{"id": 816, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 390, "src": "6350:17:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 813, "name": "governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 388, "src": "6329:10:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 812, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6321:8:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 811, "name": "address", "nodeType": "ElementaryTypeName", "src": "6321:8:1", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 814, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6321:19:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 815, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "6321:28:1", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 817, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6321:47:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 818, "nodeType": "ExpressionStatement", "src": "6321:47:1"}, {"expression": {"id": 821, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 819, "name": "governanceBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 390, "src": "6378:17:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 820, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6398:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6378:21:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 822, "nodeType": "ExpressionStatement", "src": "6378:21:1"}]}, "functionSelector": "5181353d", "id": 824, "implemented": true, "kind": "function", "modifiers": [{"id": 809, "kind": "modifierInvocation", "modifierName": {"id": 808, "name": "onlyGovernance", "nodeType": "IdentifierPath", "referencedDeclaration": 446, "src": "6297:14:1"}, "nodeType": "ModifierInvocation", "src": "6297:14:1"}], "name": "collectGovernanceFixedFees", "nameLocation": "6259:26:1", "nodeType": "FunctionDefinition", "parameters": {"id": 807, "nodeType": "ParameterList", "parameters": [], "src": "6285:2:1"}, "returnParameters": {"id": 810, "nodeType": "ParameterList", "parameters": [], "src": "6311:0:1"}, "scope": 867, "src": "6250:156:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 865, "nodeType": "Block", "src": "6567:311:1", "statements": [{"assignments": [835], "declarations": [{"constant": false, "id": 835, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "6585:27:1", "nodeType": "VariableDeclaration", "scope": 865, "src": "6577:35:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 834, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6577:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 837, "initialValue": {"id": 836, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 382, "src": "6615:24:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "6577:62:1"}, {"body": {"id": 861, "nodeType": "Block", "src": "6694:134:1", "statements": [{"expression": {"id": 859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 849, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 835, "src": "6708:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 853, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 835, "src": "6773:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 854, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 829, "src": "6801:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 856, "indexExpression": {"id": 855, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "6813:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6801:14:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_RewardData_$372_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}], "expression": {"id": 851, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "6762:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 852, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "6762:10:1", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 857, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6762:54:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 850, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "6755:6:1", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 858, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6755:62:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "6708:109:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 860, "nodeType": "ExpressionStatement", "src": "6708:109:1"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 845, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 842, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "6665:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 843, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 829, "src": "6669:11:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 844, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6669:18:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6665:22:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 862, "initializationExpression": {"assignments": [839], "declarations": [{"constant": false, "id": 839, "mutability": "mutable", "name": "n", "nameLocation": "6658:1:1", "nodeType": "VariableDeclaration", "scope": 862, "src": "6653:6:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 838, "name": "uint", "nodeType": "ElementaryTypeName", "src": "6653:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 841, "initialValue": {"hexValue": "30", "id": 840, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6662:1:1", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "6653:10:1"}, "loopExpression": {"expression": {"id": 847, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6689:3:1", "subExpression": {"id": 846, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 839, "src": "6689:1:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 848, "nodeType": "ExpressionStatement", "src": "6689:3:1"}, "nodeType": "ForStatement", "src": "6649:179:1"}, {"expression": {"id": 863, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 835, "src": "6844:27:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 833, "id": 864, "nodeType": "Return", "src": "6837:34:1"}]}, "documentation": {"id": 825, "nodeType": "StructuredDocumentation", "src": "6412:41:1", "text": "@notice calculates the new hash onion"}, "id": 866, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateNewProcessedRewardHashOnion", "nameLocation": "6467:36:1", "nodeType": "FunctionDefinition", "parameters": {"id": 830, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 829, "mutability": "mutable", "name": "_rewardData", "nameLocation": "6524:11:1", "nodeType": "VariableDeclaration", "scope": 866, "src": "6504:31:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 827, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 826, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 372, "src": "6504:10:1"}, "referencedDeclaration": 372, "src": "6504:10:1", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$372_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 828, "nodeType": "ArrayTypeName", "src": "6504:12:1", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$372_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "6503:33:1"}, "returnParameters": {"id": 833, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 832, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 866, "src": "6559:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 831, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6559:7:1", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "6558:9:1"}, "scope": 867, "src": "6458:420:1", "stateMutability": "view", "virtual": false, "visibility": "private"}], "scope": 868, "src": "264:6616:1", "usedErrors": []}], "src": "31:6849:1"}, "bytecode": "608060405234801561001057600080fd5b506040516110a53803806110a583398101604081905261002f9161005d565b600380546001600160a01b039092166001600160a01b0319928316179055600580549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b6110098061009c6000396000f3fe60806040526004361061009c5760003560e01c80635a1294b7116100645780635a1294b71461014d5780635aa6e6751461017d578063a9d72b02146101b5578063bfd683b3146101d5578063e93aea44146101f1578063ef4481d11461020657600080fd5b8063040c05b6146100a15780630411b252146100e657806313457d881461010757806323d1b06c1461011c5780635181353d14610136575b600080fd5b3480156100ad57600080fd5b506100d16100bc366004610c23565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100f96100f4366004610c54565b610219565b6040519081526020016100dd565b34801561011357600080fd5b506100f9600581565b34801561012857600080fd5b506100f96502baf524c40081565b34801561014257600080fd5b5061014b610621565b005b34801561015957600080fd5b506100d1610168366004610c23565b60016020526000908152604090205460ff1681565b34801561018957600080fd5b5060055461019d906001600160a01b031681565b6040516001600160a01b0390911681526020016100dd565b3480156101c157600080fd5b5061014b6101d0366004610c23565b61068f565b3480156101e157600080fd5b506100f967016345785d8a000081565b3480156101fd57600080fd5b506100f9610777565b61014b610214366004610d0a565b6107ab565b600080610227600585610e13565b9050600081610238866103e8610e13565b6102429190610e32565b9050610250856103e8610e13565b61025a8584610e13565b106102d25760405162461bcd60e51b815260206004820152603b60248201527f66656552616d707570206d6178696d756d20636f73742073686f756c6420626560448201527f206c657373207468616e2074686520746f74616c20616d6f756e74000000000060648201526084015b60405180910390fd5b6001600160a01b0387166103ab5767016345785d8a00006102f5866103e8610e13565b106103515760405162461bcd60e51b815260206004820152602660248201527f416d6f756e7420686967686572207468616e206d6178696d756d207472616465604482015265081b1a5b5a5d60d21b60648201526084016102c9565b6103616502baf524c40082610e32565b3410156103a65760405162461bcd60e51b815260206004820152601360248201527227379029bab33332b1b4b2b73a1032ba3432b960691b60448201526064016102c9565b610491565b6040516323b872dd60e01b81523360048201523060248201526044810182905287906001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104249190610e4a565b506502baf524c40034101561048f5760405162461bcd60e51b815260206004820152602b60248201527f4e6f2053756666656369656e7420657468657220666f7220746865206669786560448201526a642065746865722066656560a81b60648201526084016102c9565b505b6104e36040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808916825287166020820152604081018690526060810183905243608082015260a081018590526004805460c0830181905290600061052983610e73565b90915550610540905060026502baf524c400610e8c565b60065461054d9190610e32565b600655604051600090600290610567908490602001610eae565b60408051601f198184030181529082905261058191610f05565b602060405180830381855afa15801561059e573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105c19190610f40565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f899061060d908490610eae565b60405180910390a198975050505050505050565b6005546001600160a01b0316331461064b5760405162461bcd60e51b81526004016102c990610f59565b6005546006546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610687573d6000803e3d6000fd5b506000600655565b6007602160991b01338114801561071c575060035460408051636e296e4560e01b815290516001600160a01b0392831692841691636e296e459160048083019260209291908290030181865afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107119190610fa0565b6001600160a01b0316145b61072557600080fd5b600082815260016020818152604092839020805460ff191690921790915590518381527ff92a8a7980eb38c3c210ad55b80880529bccdbc8206e7cdb24d9f52c6a5171e8910160405180910390a15050565b6005546000906001600160a01b031633146107a45760405162461bcd60e51b81526004016102c990610f59565b5060065490565b60006107b682610b3f565b60008181526001602052604090205490915060ff166108175760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e0000000000000060448201526064016102c9565b600281905560005b8251811015610b3a5760008084838151811061083d5761083d610fbd565b6020908102919091018101515182528101919091526040016000205460ff1615610b28576000806001600160a01b031684838151811061087f5761087f610fbd565b6020026020010151602001516001600160a01b03160361094a5760008483815181106108ad576108ad610fbd565b6020026020010151604001516001600160a01b031660026502baf524c4006108d59190610e8c565b8685815181106108e7576108e7610fbd565b6020026020010151606001516108fd9190610e32565b604051600081818185875af1925050503d8060008114610939576040519150601f19603f3d011682016040523d82523d6000602084013e61093e565b606091505b50909250610ac5915050565b600084838151811061095e5761095e610fbd565b6020026020010151602001519050806001600160a01b03166323b872dd3087868151811061098e5761098e610fbd565b6020026020010151604001518887815181106109ac576109ac610fbd565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190610e4a565b91506000858481518110610a4957610a49610fbd565b6020026020010151604001516001600160a01b031660026502baf524c400610a719190610e8c565b604051600081818185875af1925050503d8060008114610aad576040519150601f19603f3d011682016040523d82523d6000602084013e610ab2565b606091505b50509050828015610ac05750805b925050505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a848381518110610af857610af8610fbd565b60200260200101516000015182604051610b1e9291909182521515602082015260400190565b60405180910390a1505b80610b3281610e73565b91505061081f565b505050565b600254600090815b8351811015610c1c57600282858381518110610b6557610b65610fbd565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f1981840301815290829052610bc891610f05565b602060405180830381855afa158015610be5573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610c089190610f40565b915080610c1481610e73565b915050610b47565b5092915050565b600060208284031215610c3557600080fd5b5035919050565b6001600160a01b0381168114610c5157600080fd5b50565b60008060008060808587031215610c6a57600080fd5b8435610c7581610c3c565b93506020850135610c8581610c3c565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610cd357610cd3610c9a565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d0257610d02610c9a565b604052919050565b60006020808385031215610d1d57600080fd5b823567ffffffffffffffff80821115610d3557600080fd5b818501915085601f830112610d4957600080fd5b813581811115610d5b57610d5b610c9a565b610d69848260051b01610cd9565b818152848101925060079190911b830184019087821115610d8957600080fd5b928401925b81841015610df25760808489031215610da75760008081fd5b610daf610cb0565b8435815285850135610dc081610c3c565b81870152604085810135610dd381610c3c565b9082015260608581013590820152835260809093019291840191610d8e565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610e2d57610e2d610dfd565b500290565b60008219821115610e4557610e45610dfd565b500190565b600060208284031215610e5c57600080fd5b81518015158114610e6c57600080fd5b9392505050565b600060018201610e8557610e85610dfd565b5060010190565b600082610ea957634e487b7160e01b600052601260045260246000fd5b500490565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610f265760208186018101518583015201610f0c565b81811115610f35576000828501525b509190910192915050565b600060208284031215610f5257600080fd5b5051919050565b60208082526027908201527f476f7665726e616e63653a20596f7520617265206e6f742074686520476f7665604082015266726e6f7221212160c81b606082015260800190565b600060208284031215610fb257600080fd5b8151610e6c81610c3c565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201d589cca4a1dacf165bfba1eea515797cf55e23641292f9fd8b738e8345f9c0c64736f6c634300080d0033", "bytecodeSha1": "57fe13dbb801607d580317c9344ef8eaad0a004d", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "SourceDomainSideBridge", "coverageMap": {"branches": {"1": {"SourceDomainSideBridge.addNewKnownHashOnion": {"36": [2098, 2146, false], "37": [2162, 2221, true]}, "SourceDomainSideBridge.processClaims": {"38": [4717, 4761, true], "39": [4927, 4979, false], "40": [5031, 5075, false]}, "SourceDomainSideBridge.transfer": {"31": [3121, 3154, true], "32": [3232, 3262, false], "33": [3285, 3316, true], "34": [3381, 3419, true], "35": [3602, 3624, true]}}, "2": {}, "3": {}}, "statements": {"1": {"SourceDomainSideBridge.GetGovernanceBalance": {"21": [6213, 6237]}, "SourceDomainSideBridge.addNewKnownHashOnion": {"19": [6012, 6055], "20": [6065, 6113]}, "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion": {"28": [6708, 6817], "29": [6689, 6692], "30": [6837, 6871]}, "SourceDomainSideBridge.collectGovernanceFixedFees": {"17": [6321, 6368], "18": [6378, 6399]}, "SourceDomainSideBridge.processClaims": {"22": [4709, 4791], "23": [4801, 4855], "24": [5354, 5475], "25": [5596, 5620], "26": [5656, 5713], "27": [4905, 4908]}, "SourceDomainSideBridge.transfer": {"0": [3113, 3218], "1": [3277, 3359], "2": [3373, 3443], "3": [3520, 3580], "4": [3594, 3672], "5": [3735, 3776], "6": [3786, 3825], "7": [3835, 3864], "8": [3874, 3896], "9": [3906, 3943], "10": [3953, 3988], "11": [3998, 4031], "12": [4042, 4056], "13": [4066, 4117], "14": [4206, 4250], "15": [4261, 4291], "16": [4310, 4333]}}, "2": {}, "3": {}}}, "dependencies": ["ERC20", "ICrossDomainMessenger"], "deployedBytecode": "", "deployedSourceMap": "264:6616:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1322:51;;;;;;;;;;-1:-1:-1;1322:51:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;364:14:4;;357:22;339:41;;327:2;312:18;1322:51:1;;;;;;;;2830:1510;;;;;;:::i;:::-;;:::i;:::-;;;1203:25:4;;;1191:2;1176:18;2830:1510:1;1057:177:4;534:50:1;;;;;;;;;;;;583:1;534:50;;609:42;;;;;;;;;;;;642:9;609:42;;6250:156;;;;;;;;;;;;;:::i;:::-;;1379:47;;;;;;;;;;-1:-1:-1;1379:47:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;1599:25;;;;;;;;;;-1:-1:-1;1599:25:1;;;;-1:-1:-1;;;;;1599:25:1;;;;;;-1:-1:-1;;;;;1585:32:4;;;1567:51;;1555:2;1540:18;1599:25:1;1421:203:4;5920:200:1;;;;;;;;;;-1:-1:-1;5920:200:1;;;;;:::i;:::-;;:::i;792:48::-;;;;;;;;;;;;831:9;792:48;;6126:118;;;;;;;;;;;;;:::i;4529:1219::-;;;;;;:::i;:::-;;:::i;2830:1510::-;2964:7;;3005:35;583:1;3005:7;:35;:::i;:::-;2991:49;-1:-1:-1;3050:21:1;2991:49;3074:14;:7;3084:4;3074:14;:::i;:::-;:20;;;;:::i;:::-;3050:44;-1:-1:-1;3140:14:1;:7;3150:4;3140:14;:::i;:::-;3121:16;3127:10;3121:3;:16;:::i;:::-;:33;3113:105;;;;-1:-1:-1;;;3113:105:1;;4519:2:4;3113:105:1;;;4501:21:4;4558:2;4538:18;;;4531:30;4597:34;4577:18;;;4570:62;4668:29;4648:18;;;4641:57;4715:19;;3113:105:1;;;;;;;;;-1:-1:-1;;;;;3232:30:1;;3229:454;;831:9;3285:13;:7;3294:4;3285:13;:::i;:::-;:31;3277:82;;;;-1:-1:-1;;;3277:82:1;;4947:2:4;3277:82:1;;;4929:21:4;4986:2;4966:18;;;4959:30;5025:34;5005:18;;;4998:62;-1:-1:-1;;;5076:18:4;;;5069:36;5122:19;;3277:82:1;4745:402:4;3277:82:1;3394:25;642:9;3394:13;:25;:::i;:::-;3381:9;:38;;3373:70;;;;-1:-1:-1;;;3373:70:1;;5354:2:4;3373:70:1;;;5336:21:4;5393:2;5373:18;;;5366:30;-1:-1:-1;;;5412:18:4;;;5405:49;5471:18;;3373:70:1;5152:343:4;3373:70:1;3229:454;;;3520:60;;-1:-1:-1;;;3520:60:1;;3539:10;3520:60;;;5740:34:4;3559:4:1;5790:18:4;;;5783:43;5842:18;;;5835:34;;;3492:13:1;;-1:-1:-1;;;;;3520:18:1;;;;;5675::4;;3520:60:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;642:9;3602;:22;;3594:78;;;;-1:-1:-1;;;3594:78:1;;6364:2:4;3594:78:1;;;6346:21:4;6403:2;6383:18;;;6376:30;6442:34;6422:18;;;6415:62;-1:-1:-1;;;6493:18:4;;;6486:41;6544:19;;3594:78:1;6162:407:4;3594:78:1;3458:225;3229:454;3693:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3693:32:1;-1:-1:-1;;;;;3735:41:1;;;;;3786:39;;:24;;;:39;3835:19;;;:29;;;3874:16;;;:22;;;3931:12;3906:22;;;:37;3953:22;;;:35;;;4019:12;;;3998:18;;;:33;;;4019:12;3735:25;4042:14;4019:12;4042:14;:::i;:::-;;;;-1:-1:-1;4106:11:1;;-1:-1:-1;4116:1:1;642:9;4106:11;:::i;:::-;4086:17;;:31;;;;:::i;:::-;4066:17;:51;4162:24;;4128;;4155:32;;4162:24;;4173:12;;4162:24;;;:::i;:::-;;;;-1:-1:-1;;4162:24:1;;;;;;;;;;4155:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4206:19;:37;;;;;;;;;;;;:44;;-1:-1:-1;;4206:44:1;4246:4;4206:44;;;4266:25;4128:59;;-1:-1:-1;4266:25:1;;;;4278:12;;4266:25;:::i;:::-;;;;;;;;4317:16;2830:1510;-1:-1:-1;;;;;;;;2830:1510:1:o;6250:156::-;2402:10;;-1:-1:-1;;;;;2402:10:1;2388;:24;2380:76;;;;-1:-1:-1;;;2380:76:1;;;;;;;:::i;:::-;6329:10:::1;::::0;6350:17:::1;::::0;6321:47:::1;::::0;-1:-1:-1;;;;;6329:10:1;;::::1;::::0;6321:47;::::1;;;::::0;6350:17;6329:10:::1;6321:47:::0;6329:10;6321:47;6350:17;6329:10;6321:47;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6398:1:1::1;6378:17;:21:::0;6250:156::o;5920:200::-;-1:-1:-1;;;;;2098:10:1;:48;;:123;;;;-1:-1:-1;2194:27:1;;2162:28;;;-1:-1:-1;;;2162:28:1;;;;-1:-1:-1;;;;;2194:27:1;;;;2162:26;;;;;:28;;;;;;;;;;;;;;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2162:59:1;;2098:123;2077:154;;;;;;6012:36:::1;::::0;;;6051:4:::1;6012:36;::::0;;;;;;;;:43;;-1:-1:-1;;6012:43:1::1;::::0;;::::1;::::0;;;6070;;1203:25:4;;;6070:43:1::1;::::0;1176:18:4;6070:43:1::1;;;;;;;1979:270:::0;5920:200;:::o;6126:118::-;2402:10;;6195:7;;-1:-1:-1;;;;;2402:10:1;2388;:24;2380:76;;;;-1:-1:-1;;;2380:76:1;;;;;;;:::i;:::-;-1:-1:-1;6220:17:1::1;::::0;6126:118;:::o;4529:1219::-;4612:35;4650:49;4687:11;4650:36;:49::i;:::-;4717:44;;;;:15;:44;;;;;;4612:87;;-1:-1:-1;4717:44:1;;4709:82;;;;-1:-1:-1;;;4709:82:1;;9104:2:4;4709:82:1;;;9086:21:4;9143:2;9123:18;;;9116:30;9182:27;9162:18;;;9155:55;9227:18;;4709:82:1;8902:349:4;4709:82:1;4801:24;:54;;;4869:6;4865:873;4885:11;:18;4881:1;:22;4865:873;;;4927:19;:52;4947:11;4959:1;4947:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;4927:52;;;;;;;;;;4947:31;4927:52;;;;4924:804;;;4998:12;336:42;-1:-1:-1;;;;;5031:44:1;:11;5043:1;5031:14;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;5031:44:1;;5028:611;;5099:8;5121:11;5133:1;5121:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;5113:36:1;5198:1;642:9;5188:11;;;;:::i;:::-;5157;5169:1;5157:14;;;;;;;;:::i;:::-;;;;;;;:28;;;:42;;;;:::i;:::-;5113:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5098:106:1;;-1:-1:-1;5028:611:1;;-1:-1:-1;;5028:611:1;;5284:11;5304;5316:1;5304:14;;;;;;;;:::i;:::-;;;;;;;:27;;;5284:48;;5364:5;-1:-1:-1;;;;;5364:18:1;;5391:4;5398:11;5410:1;5398:14;;;;;;;;:::i;:::-;;;;;;;:22;;;5446:11;5458:1;5446:14;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;5364:111;;-1:-1:-1;;;;;;5364:111:1;;;;;;;-1:-1:-1;;;;;5758:15:4;;;5364:111:1;;;5740:34:4;5810:15;;;;5790:18;;;5783:43;5842:18;;;5835:34;5675:18;;5364:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5354:121;;5499:8;5521:11;5533:1;5521:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;5513:36:1;5567:1;642:9;5557:11;;;;:::i;:::-;5513:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5498:75;;;5606:7;:14;;;;;5617:3;5606:14;5596:24;;5262:377;;5028:611;5661:52;5672:11;5684:1;5672:14;;;;;;;;:::i;:::-;;;;;;;:31;;;5705:7;5661:52;;;;;;9766:25:4;;;9834:14;9827:22;9822:2;9807:18;;9800:50;9754:2;9739:18;;9598:258;5661:52:1;;;;;;;;4980:748;4924:804;4905:3;;;;:::i;:::-;;;;4865:873;;;;4602:1146;4529:1219;:::o;6458:420::-;6615:24;;6559:7;;;6649:179;6669:11;:18;6665:1;:22;6649:179;;;6755:62;6773:27;6801:11;6813:1;6801:14;;;;;;;;:::i;:::-;;;;;;;;;;;;6762:54;;;;;;10090:25:4;;;;10151:13;;10131:18;;;10124:41;10200:15;;;10194:22;-1:-1:-1;;;;;10290:21:4;;;10270:18;;;;10263:49;;;;10358:15;;;10352:22;10348:31;10328:18;;;10321:59;10423:15;10417:22;10396:19;;;10389:51;10062:19;;6762:54:1;;;-1:-1:-1;;6762:54:1;;;;;;;;;;6755:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6708:109;-1:-1:-1;6689:3:1;;;;:::i;:::-;;;;6649:179;;;-1:-1:-1;6844:27:1;6458:420;-1:-1:-1;;6458:420:1:o;14:180:4:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:4;;14:180;-1:-1:-1;14:180:4:o;391:131::-;-1:-1:-1;;;;;466:31:4;;456:42;;446:70;;512:1;509;502:12;446:70;391:131;:::o;527:525::-;613:6;621;629;637;690:3;678:9;669:7;665:23;661:33;658:53;;;707:1;704;697:12;658:53;746:9;733:23;765:31;790:5;765:31;:::i;:::-;815:5;-1:-1:-1;872:2:4;857:18;;844:32;885:33;844:32;885:33;:::i;:::-;527:525;;937:7;;-1:-1:-1;;;;991:2:4;976:18;;963:32;;1042:2;1027:18;1014:32;;527:525::o;1629:127::-;1690:10;1685:3;1681:20;1678:1;1671:31;1721:4;1718:1;1711:15;1745:4;1742:1;1735:15;1761:253;1833:2;1827:9;1875:4;1863:17;;1910:18;1895:34;;1931:22;;;1892:62;1889:88;;;1957:18;;:::i;:::-;1993:2;1986:22;1761:253;:::o;2019:275::-;2090:2;2084:9;2155:2;2136:13;;-1:-1:-1;;2132:27:4;2120:40;;2190:18;2175:34;;2211:22;;;2172:62;2169:88;;;2237:18;;:::i;:::-;2273:2;2266:22;2019:275;;-1:-1:-1;2019:275:4:o;2299:1575::-;2410:6;2441:2;2484;2472:9;2463:7;2459:23;2455:32;2452:52;;;2500:1;2497;2490:12;2452:52;2540:9;2527:23;2569:18;2610:2;2602:6;2599:14;2596:34;;;2626:1;2623;2616:12;2596:34;2664:6;2653:9;2649:22;2639:32;;2709:7;2702:4;2698:2;2694:13;2690:27;2680:55;;2731:1;2728;2721:12;2680:55;2767:2;2754:16;2789:2;2785;2782:10;2779:36;;;2795:18;;:::i;:::-;2835:36;2867:2;2862;2859:1;2855:10;2851:19;2835:36;:::i;:::-;2905:15;;;2936:12;;;;-1:-1:-1;2987:1:4;2983:10;;;;2975:19;;2971:28;;;3011:19;;;3008:39;;;3043:1;3040;3033:12;3008:39;3067:11;;;;3087:757;3103:6;3098:3;3095:15;3087:757;;;3185:4;3179:3;3170:7;3166:17;3162:28;3159:118;;;3231:1;3260:2;3256;3249:14;3159:118;3303:22;;:::i;:::-;3365:3;3352:17;3345:5;3338:32;3420:2;3415:3;3411:12;3398:26;3437:33;3462:7;3437:33;:::i;:::-;3490:14;;;3483:31;3537:2;3580:12;;;3567:26;3606:33;3567:26;3606:33;:::i;:::-;3659:14;;;3652:31;3706:2;3757:12;;;3744:26;3728:14;;;3721:50;3784:18;;3129:4;3120:14;;;;3822:12;;;;3087:757;;;3863:5;2299:1575;-1:-1:-1;;;;;;;2299:1575:4:o;3879:127::-;3940:10;3935:3;3931:20;3928:1;3921:31;3971:4;3968:1;3961:15;3995:4;3992:1;3985:15;4011:168;4051:7;4117:1;4113;4109:6;4105:14;4102:1;4099:21;4094:1;4087:9;4080:17;4076:45;4073:71;;;4124:18;;:::i;:::-;-1:-1:-1;4164:9:4;;4011:168::o;4184:128::-;4224:3;4255:1;4251:6;4248:1;4245:13;4242:39;;;4261:18;;:::i;:::-;-1:-1:-1;4297:9:4;;4184:128::o;5880:277::-;5947:6;6000:2;5988:9;5979:7;5975:23;5971:32;5968:52;;;6016:1;6013;6006:12;5968:52;6048:9;6042:16;6101:5;6094:13;6087:21;6080:5;6077:32;6067:60;;6123:1;6120;6113:12;6067:60;6146:5;5880:277;-1:-1:-1;;;5880:277:4:o;6574:135::-;6613:3;6634:17;;;6631:43;;6654:18;;:::i;:::-;-1:-1:-1;6701:1:4;6690:13;;6574:135::o;6714:217::-;6754:1;6780;6770:132;;6824:10;6819:3;6815:20;6812:1;6805:31;6859:4;6856:1;6849:15;6887:4;6884:1;6877:15;6770:132;-1:-1:-1;6916:9:4;;6714:217::o;6936:677::-;7201:13;;-1:-1:-1;;;;;7197:22:4;;;7179:41;;7280:4;7268:17;;;7262:24;7258:33;;;7236:20;;;7229:63;7348:4;7336:17;;;7330:24;7308:20;;;7301:54;7411:4;7399:17;;;7393:24;7371:20;;;7364:54;7474:4;7462:17;;;7456:24;7434:20;;;7427:54;7159:3;7525:17;;;7519:24;7497:20;;;7490:54;7600:4;7588:17;;;7582:24;7560:20;;;7553:54;;;;7128:3;7113:19;;6936:677::o;7618:426::-;7747:3;7785:6;7779:13;7810:1;7820:129;7834:6;7831:1;7828:13;7820:129;;;7932:4;7916:14;;;7912:25;;7906:32;7893:11;;;7886:53;7849:12;7820:129;;;7967:6;7964:1;7961:13;7958:48;;;8002:1;7993:6;7988:3;7984:16;7977:27;7958:48;-1:-1:-1;8022:16:4;;;;;7618:426;-1:-1:-1;;7618:426:4:o;8049:184::-;8119:6;8172:2;8160:9;8151:7;8147:23;8143:32;8140:52;;;8188:1;8185;8178:12;8140:52;-1:-1:-1;8211:16:4;;8049:184;-1:-1:-1;8049:184:4:o;8238:403::-;8440:2;8422:21;;;8479:2;8459:18;;;8452:30;8518:34;8513:2;8498:18;;8491:62;-1:-1:-1;;;8584:2:4;8569:18;;8562:37;8631:3;8616:19;;8238:403::o;8646:251::-;8716:6;8769:2;8757:9;8748:7;8744:23;8740:32;8737:52;;;8785:1;8782;8775:12;8737:52;8817:9;8811:16;8836:31;8861:5;8836:31;:::i;9256:127::-;9317:10;9312:3;9308:20;9305:1;9298:31;9348:4;9345:1;9338:15;9372:4;9369:1;9362:15", "language": "Solidity", "natspec": {"author": "Sherif Abdelmoatty", "kind": "dev", "methods": {"addNewKnownHashOnion(bytes32)": {"notice": "this function is only called from the contract at the etherium L1through the rollup messenger contract to add a new known hash onion"}, "constructor": {"params": {"_l1DomainSideContractAddress": "is the address of the contract in etherium L1"}}, "processClaims((bytes32,address,address,uint256)[])": {"notice": "process the processClaims structs to be paid to the liquidity providers", "params": {"_rewardData": "is an array of RewardData structs to be paid to liquidity providers"}}, "transfer(address,address,uint256,uint256)": {"notice": "transfer the required funds plus fees to be sent to the current contract balance"}}, "notice": "This contract is to be deployed in the source rollup", "title": "SourceDomainSideBridge Contract", "version": 1}, "offset": [264, 6880], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A1294B7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x5A1294B7 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA9D72B02 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xBFD683B3 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE93AEA44 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xEF4481D1 EQ PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C05B6 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x411B252 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x13457D88 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23D1B06C EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x5181353D EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH6 0x2BAF524C400 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x19D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x227 PUSH1 0x5 DUP6 PUSH2 0xE13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x238 DUP7 PUSH2 0x3E8 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH2 0x250 DUP6 PUSH2 0x3E8 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x25A DUP6 DUP5 PUSH2 0xE13 JUMP JUMPDEST LT PUSH2 0x2D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66656552616D707570206D6178696D756D20636F73742073686F756C64206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206C657373207468616E2074686520746F74616C20616D6F756E740000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x3AB JUMPI PUSH8 0x16345785D8A0000 PUSH2 0x2F5 DUP7 PUSH2 0x3E8 PUSH2 0xE13 JUMP JUMPDEST LT PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420686967686572207468616E206D6178696D756D207472616465 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x81B1A5B5A5D PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x361 PUSH6 0x2BAF524C400 DUP3 PUSH2 0xE32 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27379029BAB33332B1B4B2B73A1032BA3432B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x400 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x424 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST POP PUSH6 0x2BAF524C400 CALLVALUE LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2053756666656369656E7420657468657220666F72207468652066697865 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6420657468657220666565 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C9 JUMP JUMPDEST POP JUMPDEST PUSH2 0x4E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE NUMBER PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH1 0x0 PUSH2 0x529 DUP4 PUSH2 0xE73 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x540 SWAP1 POP PUSH1 0x2 PUSH6 0x2BAF524C400 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x567 SWAP1 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x581 SWAP2 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89 SWAP1 PUSH2 0x60D SWAP1 DUP5 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x687 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x21 PUSH1 0x99 SHL ADD CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x71C JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6E296E45 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP5 AND SWAP2 PUSH4 0x6E296E45 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0xF92A8A7980EB38C3C210AD55B80880529BCCDBC8206E7CDB24D9F52C6A5171E8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9 SWAP1 PUSH2 0xF59 JUMP JUMPDEST POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B6 DUP3 PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964652052657761726444617461206C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x83D JUMPI PUSH2 0x83D PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB28 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x87F JUMPI PUSH2 0x87F PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x94A JUMPI PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8AD JUMPI PUSH2 0x8AD PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH6 0x2BAF524C400 PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x8E7 JUMPI PUSH2 0x8E7 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH2 0x8FD SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x939 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x93E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP PUSH2 0xAC5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95E JUMPI PUSH2 0x95E PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x98E JUMPI PUSH2 0x98E PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x9AC JUMPI PUSH2 0x9AC PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA49 JUMPI PUSH2 0xA49 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 PUSH6 0x2BAF524C400 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xAC0 JUMPI POP DUP1 JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH32 0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xB1E SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST DUP1 PUSH2 0xB32 DUP2 PUSH2 0xE73 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x81F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC1C JUMPI PUSH1 0x2 DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB65 JUMPI PUSH2 0xB65 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 MLOAD DUP5 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP3 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0xBC8 SWAP2 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xC14 DUP2 PUSH2 0xE73 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB47 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xC75 DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xC85 DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD3 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD02 JUMPI PUSH2 0xD02 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5B JUMPI PUSH2 0xD5B PUSH2 0xC9A JUMP JUMPDEST PUSH2 0xD69 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xCD9 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x80 DUP5 DUP10 SUB SLT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDAF PUSH2 0xCB0 JUMP JUMPDEST DUP5 CALLDATALOAD DUP2 MSTORE DUP6 DUP6 ADD CALLDATALOAD PUSH2 0xDC0 DUP2 PUSH2 0xC3C JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP6 DUP2 ADD CALLDATALOAD PUSH2 0xDD3 DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xD8E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0xDFD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0xDFD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE85 JUMPI PUSH2 0xE85 PUSH2 0xDFD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEA9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xF0C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF35 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x476F7665726E616E63653A20596F7520617265206E6F742074686520476F7665 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x726E6F72212121 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE6C DUP2 PUSH2 0xC3C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR PC SWAP13 0xCA 0x4A SAR 0xAC CALL PUSH6 0xBFBA1EEA5157 SWAP8 0xCF SSTORE 0xE2 CALLDATASIZE COINBASE 0x29 0x2F SWAP16 0xD8 0xB7 CODESIZE 0xE8 CALLVALUE 0x5F SWAP13 0xC PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ", "pcMap": {"0": {"offset": [264, 6880], "op": "PUSH1", "path": "1", "value": "0x80"}, "2": {"fn": null, "offset": [264, 6880], "op": "PUSH1", "path": "1", "value": "0x40"}, "4": {"fn": null, "offset": [264, 6880], "op": "MSTORE", "path": "1"}, "5": {"fn": null, "offset": [264, 6880], "op": "PUSH1", "path": "1", "value": "0x4"}, "7": {"fn": null, "offset": [264, 6880], "op": "CALLDATASIZE", "path": "1"}, "8": {"fn": null, "offset": [264, 6880], "op": "LT", "path": "1"}, "9": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x9C"}, "12": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "13": {"fn": null, "offset": [264, 6880], "op": "PUSH1", "path": "1", "value": "0x0"}, "15": {"fn": null, "offset": [264, 6880], "op": "CALLDATALOAD", "path": "1"}, "16": {"fn": null, "offset": [264, 6880], "op": "PUSH1", "path": "1", "value": "0xE0"}, "18": {"fn": null, "offset": [264, 6880], "op": "SHR", "path": "1"}, "19": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "20": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0x5A1294B7"}, "25": {"fn": null, "offset": [264, 6880], "op": "GT", "path": "1"}, "26": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x64"}, "29": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "30": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "31": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0x5A1294B7"}, "36": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "37": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x14D"}, "40": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "41": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "42": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0x5AA6E675"}, "47": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "48": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x17D"}, "51": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "52": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "53": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0xA9D72B02"}, "58": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "59": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x1B5"}, "62": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "63": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "64": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0xBFD683B3"}, "69": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "70": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x1D5"}, "73": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "74": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "75": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0xE93AEA44"}, "80": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "81": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x1F1"}, "84": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "85": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "86": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0xEF4481D1"}, "91": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "92": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x206"}, "95": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "96": {"fn": null, "offset": [264, 6880], "op": "PUSH1", "path": "1", "value": "0x0"}, "98": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "99": {"fn": null, "offset": [264, 6880], "op": "REVERT", "path": "1"}, "100": {"fn": null, "offset": [264, 6880], "op": "JUMPDEST", "path": "1"}, "101": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "102": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0x40C05B6"}, "107": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "108": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0xA1"}, "111": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "112": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "113": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0x411B252"}, "118": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "119": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0xE6"}, "122": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "123": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "124": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0x13457D88"}, "129": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "130": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x107"}, "133": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "134": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "135": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0x23D1B06C"}, "140": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "141": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x11C"}, "144": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "145": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "146": {"fn": null, "offset": [264, 6880], "op": "PUSH4", "path": "1", "value": "0x5181353D"}, "151": {"fn": null, "offset": [264, 6880], "op": "EQ", "path": "1"}, "152": {"fn": null, "offset": [264, 6880], "op": "PUSH2", "path": "1", "value": "0x136"}, "155": {"fn": null, "offset": [264, 6880], "op": "JUMPI", "path": "1"}, "156": {"fn": null, "offset": [264, 6880], "op": "JUMPDEST", "path": "1"}, "157": {"fn": null, "offset": [264, 6880], "op": "PUSH1", "path": "1", "value": "0x0"}, "159": {"fn": null, "offset": [264, 6880], "op": "DUP1", "path": "1"}, "160": {"first_revert": true, "fn": null, "offset": [264, 6880], "op": "REVERT", "path": "1"}, "161": {"offset": [1322, 1373], "op": "JUMPDEST", "path": "1"}, "162": {"fn": null, "offset": [1322, 1373], "op": "CALLVALUE", "path": "1"}, "163": {"fn": null, "offset": [1322, 1373], "op": "DUP1", "path": "1"}, "164": {"fn": null, "offset": [1322, 1373], "op": "ISZERO", "path": "1"}, "165": {"fn": null, "offset": [1322, 1373], "op": "PUSH2", "path": "1", "value": "0xAD"}, "168": {"fn": null, "offset": [1322, 1373], "op": "JUMPI", "path": "1"}, "169": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "1", "value": "0x0"}, "171": {"fn": null, "offset": [1322, 1373], "op": "DUP1", "path": "1"}, "172": {"fn": null, "offset": [1322, 1373], "op": "REVERT", "path": "1"}, "173": {"fn": null, "offset": [1322, 1373], "op": "JUMPDEST", "path": "1"}, "174": {"op": "POP"}, "175": {"offset": [1322, 1373], "op": "PUSH2", "path": "1", "value": "0xD1"}, "178": {"fn": null, "offset": [1322, 1373], "op": "PUSH2", "path": "1", "value": "0xBC"}, "181": {"fn": null, "offset": [1322, 1373], "op": "CALLDATASIZE", "path": "1"}, "182": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "1", "value": "0x4"}, "184": {"fn": null, "offset": [1322, 1373], "op": "PUSH2", "path": "1", "value": "0xC23"}, "187": {"fn": null, "jump": "i", "offset": [1322, 1373], "op": "JUMP", "path": "1"}, "188": {"fn": null, "offset": [1322, 1373], "op": "JUMPDEST", "path": "1"}, "189": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "1", "value": "0x0"}, "191": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "1", "value": "0x20"}, "193": {"fn": null, "offset": [1322, 1373], "op": "DUP2", "path": "1"}, "194": {"fn": null, "offset": [1322, 1373], "op": "SWAP1", "path": "1"}, "195": {"fn": null, "offset": [1322, 1373], "op": "MSTORE", "path": "1"}, "196": {"fn": null, "offset": [1322, 1373], "op": "SWAP1", "path": "1"}, "197": {"fn": null, "offset": [1322, 1373], "op": "DUP2", "path": "1"}, "198": {"fn": null, "offset": [1322, 1373], "op": "MSTORE", "path": "1"}, "199": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "1", "value": "0x40"}, "201": {"fn": null, "offset": [1322, 1373], "op": "SWAP1", "path": "1"}, "202": {"fn": null, "offset": [1322, 1373], "op": "KECCAK256", "path": "1"}, "203": {"fn": null, "offset": [1322, 1373], "op": "SLOAD", "path": "1"}, "204": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "1", "value": "0xFF"}, "206": {"fn": null, "offset": [1322, 1373], "op": "AND", "path": "1"}, "207": {"fn": null, "offset": [1322, 1373], "op": "DUP2", "path": "1"}, "208": {"fn": null, "offset": [1322, 1373], "op": "JUMP", "path": "1"}, "209": {"fn": null, "offset": [1322, 1373], "op": "JUMPDEST", "path": "1"}, "210": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "1", "value": "0x40"}, "212": {"fn": null, "offset": [1322, 1373], "op": "MLOAD", "path": "1"}, "213": {"op": "SWAP1"}, "214": {"op": "ISZERO"}, "215": {"op": "ISZERO"}, "216": {"op": "DUP2"}, "217": {"op": "MSTORE"}, "218": {"op": "PUSH1", "value": "0x20"}, "220": {"op": "ADD"}, "221": {"offset": [1322, 1373], "op": "JUMPDEST", "path": "1"}, "222": {"fn": null, "offset": [1322, 1373], "op": "PUSH1", "path": "1", "value": "0x40"}, "224": {"fn": null, "offset": [1322, 1373], "op": "MLOAD", "path": "1"}, "225": {"fn": null, "offset": [1322, 1373], "op": "DUP1", "path": "1"}, "226": {"fn": null, "offset": [1322, 1373], "op": "SWAP2", "path": "1"}, "227": {"fn": null, "offset": [1322, 1373], "op": "SUB", "path": "1"}, "228": {"fn": null, "offset": [1322, 1373], "op": "SWAP1", "path": "1"}, "229": {"fn": null, "offset": [1322, 1373], "op": "RETURN", "path": "1"}, "230": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "JUMPDEST", "path": "1"}, "231": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "PUSH2", "path": "1", "value": "0xF9"}, "234": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "PUSH2", "path": "1", "value": "0xF4"}, "237": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "CALLDATASIZE", "path": "1"}, "238": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "PUSH1", "path": "1", "value": "0x4"}, "240": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "PUSH2", "path": "1", "value": "0xC54"}, "243": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2830, 4340], "op": "JUMP", "path": "1"}, "244": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "JUMPDEST", "path": "1"}, "245": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "PUSH2", "path": "1", "value": "0x219"}, "248": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2830, 4340], "op": "JUMP", "path": "1"}, "249": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "JUMPDEST", "path": "1"}, "250": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "PUSH1", "path": "1", "value": "0x40"}, "252": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "MLOAD", "path": "1"}, "253": {"op": "SWAP1"}, "254": {"op": "DUP2"}, "255": {"op": "MSTORE"}, "256": {"op": "PUSH1", "value": "0x20"}, "258": {"op": "ADD"}, "259": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "PUSH2", "path": "1", "value": "0xDD"}, "262": {"op": "JUMP"}, "263": {"offset": [534, 584], "op": "JUMPDEST", "path": "1"}, "264": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "CALLVALUE", "path": "1"}, "265": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "DUP1", "path": "1"}, "266": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "ISZERO", "path": "1"}, "267": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "PUSH2", "path": "1", "value": "0x113"}, "270": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "JUMPI", "path": "1"}, "271": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "PUSH1", "path": "1", "value": "0x0"}, "273": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "DUP1", "path": "1"}, "274": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "REVERT", "path": "1"}, "275": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "JUMPDEST", "path": "1"}, "276": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "POP", "path": "1"}, "277": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "PUSH2", "path": "1", "value": "0xF9"}, "280": {"offset": [583, 584], "op": "PUSH1", "path": "1", "value": "0x5"}, "282": {"offset": [534, 584], "op": "DUP2", "path": "1"}, "283": {"fn": "SourceDomainSideBridge.transfer", "offset": [534, 584], "op": "JUMP", "path": "1"}, "284": {"offset": [609, 651], "op": "JUMPDEST", "path": "1"}, "285": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "CALLVALUE", "path": "1"}, "286": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "DUP1", "path": "1"}, "287": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "ISZERO", "path": "1"}, "288": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "PUSH2", "path": "1", "value": "0x128"}, "291": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "JUMPI", "path": "1"}, "292": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "PUSH1", "path": "1", "value": "0x0"}, "294": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "DUP1", "path": "1"}, "295": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "REVERT", "path": "1"}, "296": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "JUMPDEST", "path": "1"}, "297": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "POP", "path": "1"}, "298": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "PUSH2", "path": "1", "value": "0xF9"}, "301": {"offset": [642, 651], "op": "PUSH6", "path": "1", "value": "0x2BAF524C400"}, "308": {"offset": [609, 651], "op": "DUP2", "path": "1"}, "309": {"fn": "SourceDomainSideBridge.transfer", "offset": [609, 651], "op": "JUMP", "path": "1"}, "310": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "JUMPDEST", "path": "1"}, "311": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "CALLVALUE", "path": "1"}, "312": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "DUP1", "path": "1"}, "313": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "ISZERO", "path": "1"}, "314": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "PUSH2", "path": "1", "value": "0x142"}, "317": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "JUMPI", "path": "1"}, "318": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "PUSH1", "path": "1", "value": "0x0"}, "320": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "DUP1", "path": "1"}, "321": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "REVERT", "path": "1"}, "322": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "JUMPDEST", "path": "1"}, "323": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "POP", "path": "1"}, "324": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "PUSH2", "path": "1", "value": "0x14B"}, "327": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "PUSH2", "path": "1", "value": "0x621"}, "330": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "i", "offset": [6250, 6406], "op": "JUMP", "path": "1"}, "331": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "JUMPDEST", "path": "1"}, "332": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "STOP", "path": "1"}, "333": {"offset": [1379, 1426], "op": "JUMPDEST", "path": "1"}, "334": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "CALLVALUE", "path": "1"}, "335": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "DUP1", "path": "1"}, "336": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "ISZERO", "path": "1"}, "337": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH2", "path": "1", "value": "0x159"}, "340": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "JUMPI", "path": "1"}, "341": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "1", "value": "0x0"}, "343": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "DUP1", "path": "1"}, "344": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "REVERT", "path": "1"}, "345": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "JUMPDEST", "path": "1"}, "346": {"op": "POP"}, "347": {"offset": [1379, 1426], "op": "PUSH2", "path": "1", "value": "0xD1"}, "350": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH2", "path": "1", "value": "0x168"}, "353": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "CALLDATASIZE", "path": "1"}, "354": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "1", "value": "0x4"}, "356": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH2", "path": "1", "value": "0xC23"}, "359": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "i", "offset": [1379, 1426], "op": "JUMP", "path": "1"}, "360": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "JUMPDEST", "path": "1"}, "361": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "1", "value": "0x1"}, "363": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "1", "value": "0x20"}, "365": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "MSTORE", "path": "1"}, "366": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "1", "value": "0x0"}, "368": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "SWAP1", "path": "1"}, "369": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "DUP2", "path": "1"}, "370": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "MSTORE", "path": "1"}, "371": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "1", "value": "0x40"}, "373": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "SWAP1", "path": "1"}, "374": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "KECCAK256", "path": "1"}, "375": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "SLOAD", "path": "1"}, "376": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "PUSH1", "path": "1", "value": "0xFF"}, "378": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "AND", "path": "1"}, "379": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "DUP2", "path": "1"}, "380": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1379, 1426], "op": "JUMP", "path": "1"}, "381": {"offset": [1599, 1624], "op": "JUMPDEST", "path": "1"}, "382": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "CALLVALUE", "path": "1"}, "383": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "DUP1", "path": "1"}, "384": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "ISZERO", "path": "1"}, "385": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "PUSH2", "path": "1", "value": "0x189"}, "388": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "JUMPI", "path": "1"}, "389": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "PUSH1", "path": "1", "value": "0x0"}, "391": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "DUP1", "path": "1"}, "392": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "REVERT", "path": "1"}, "393": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "JUMPDEST", "path": "1"}, "394": {"op": "POP"}, "395": {"offset": [1599, 1624], "op": "PUSH1", "path": "1", "value": "0x5"}, "397": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "SLOAD", "path": "1"}, "398": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "PUSH2", "path": "1", "value": "0x19D"}, "401": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "SWAP1", "path": "1"}, "402": {"op": "PUSH1", "value": "0x1"}, "404": {"op": "PUSH1", "value": "0x1"}, "406": {"op": "PUSH1", "value": "0xA0"}, "408": {"op": "SHL"}, "409": {"op": "SUB"}, "410": {"offset": [1599, 1624], "op": "AND", "path": "1"}, "411": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "DUP2", "path": "1"}, "412": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "JUMP", "path": "1"}, "413": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "JUMPDEST", "path": "1"}, "414": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "PUSH1", "path": "1", "value": "0x40"}, "416": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [1599, 1624], "op": "MLOAD", "path": "1"}, "417": {"op": "PUSH1", "value": "0x1"}, "419": {"op": "PUSH1", "value": "0x1"}, "421": {"op": "PUSH1", "value": "0xA0"}, "423": {"op": "SHL"}, "424": {"op": "SUB"}, "425": {"op": "SWAP1"}, "426": {"op": "SWAP2"}, "427": {"op": "AND"}, "428": {"op": "DUP2"}, "429": {"op": "MSTORE"}, "430": {"op": "PUSH1", "value": "0x20"}, "432": {"op": "ADD"}, "433": {"offset": [1599, 1624], "op": "PUSH2", "path": "1", "value": "0xDD"}, "436": {"op": "JUMP"}, "437": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "JUMPDEST", "path": "1"}, "438": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "CALLVALUE", "path": "1"}, "439": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "DUP1", "path": "1"}, "440": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "ISZERO", "path": "1"}, "441": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "PUSH2", "path": "1", "value": "0x1C1"}, "444": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "JUMPI", "path": "1"}, "445": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "PUSH1", "path": "1", "value": "0x0"}, "447": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "DUP1", "path": "1"}, "448": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "REVERT", "path": "1"}, "449": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "JUMPDEST", "path": "1"}, "450": {"op": "POP"}, "451": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "PUSH2", "path": "1", "value": "0x14B"}, "454": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "PUSH2", "path": "1", "value": "0x1D0"}, "457": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "CALLDATASIZE", "path": "1"}, "458": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "PUSH1", "path": "1", "value": "0x4"}, "460": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "PUSH2", "path": "1", "value": "0xC23"}, "463": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5920, 6120], "op": "JUMP", "path": "1"}, "464": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "JUMPDEST", "path": "1"}, "465": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "PUSH2", "path": "1", "value": "0x68F"}, "468": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5920, 6120], "op": "JUMP", "path": "1"}, "469": {"offset": [792, 840], "op": "JUMPDEST", "path": "1"}, "470": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "CALLVALUE", "path": "1"}, "471": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "DUP1", "path": "1"}, "472": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "ISZERO", "path": "1"}, "473": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "PUSH2", "path": "1", "value": "0x1E1"}, "476": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "JUMPI", "path": "1"}, "477": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "PUSH1", "path": "1", "value": "0x0"}, "479": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "DUP1", "path": "1"}, "480": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "REVERT", "path": "1"}, "481": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "JUMPDEST", "path": "1"}, "482": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "POP", "path": "1"}, "483": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "PUSH2", "path": "1", "value": "0xF9"}, "486": {"offset": [831, 840], "op": "PUSH8", "path": "1", "value": "0x16345785D8A0000"}, "495": {"offset": [792, 840], "op": "DUP2", "path": "1"}, "496": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [792, 840], "op": "JUMP", "path": "1"}, "497": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "JUMPDEST", "path": "1"}, "498": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "CALLVALUE", "path": "1"}, "499": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "DUP1", "path": "1"}, "500": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "ISZERO", "path": "1"}, "501": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "PUSH2", "path": "1", "value": "0x1FD"}, "504": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "JUMPI", "path": "1"}, "505": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "PUSH1", "path": "1", "value": "0x0"}, "507": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "DUP1", "path": "1"}, "508": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "REVERT", "path": "1"}, "509": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "JUMPDEST", "path": "1"}, "510": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "POP", "path": "1"}, "511": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "PUSH2", "path": "1", "value": "0xF9"}, "514": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "PUSH2", "path": "1", "value": "0x777"}, "517": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "jump": "i", "offset": [6126, 6244], "op": "JUMP", "path": "1"}, "518": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "JUMPDEST", "path": "1"}, "519": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "PUSH2", "path": "1", "value": "0x14B"}, "522": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "PUSH2", "path": "1", "value": "0x214"}, "525": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "CALLDATASIZE", "path": "1"}, "526": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "PUSH1", "path": "1", "value": "0x4"}, "528": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "PUSH2", "path": "1", "value": "0xD0A"}, "531": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4529, 5748], "op": "JUMP", "path": "1"}, "532": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "JUMPDEST", "path": "1"}, "533": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "PUSH2", "path": "1", "value": "0x7AB"}, "536": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4529, 5748], "op": "JUMP", "path": "1"}, "537": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "JUMPDEST", "path": "1"}, "538": {"fn": "SourceDomainSideBridge.transfer", "offset": [2964, 2971], "op": "PUSH1", "path": "1", "value": "0x0"}, "540": {"fn": "SourceDomainSideBridge.transfer", "offset": [2964, 2971], "op": "DUP1", "path": "1"}, "541": {"fn": "SourceDomainSideBridge.transfer", "offset": [3005, 3040], "op": "PUSH2", "path": "1", "value": "0x227"}, "544": {"offset": [583, 584], "op": "PUSH1", "path": "1", "value": "0x5"}, "546": {"fn": "SourceDomainSideBridge.transfer", "offset": [3005, 3012], "op": "DUP6", "path": "1"}, "547": {"fn": "SourceDomainSideBridge.transfer", "offset": [3005, 3040], "op": "PUSH2", "path": "1", "value": "0xE13"}, "550": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3005, 3040], "op": "JUMP", "path": "1"}, "551": {"fn": "SourceDomainSideBridge.transfer", "offset": [3005, 3040], "op": "JUMPDEST", "path": "1"}, "552": {"fn": "SourceDomainSideBridge.transfer", "offset": [2991, 3040], "op": "SWAP1", "path": "1"}, "553": {"op": "POP"}, "554": {"fn": "SourceDomainSideBridge.transfer", "offset": [3050, 3071], "op": "PUSH1", "path": "1", "value": "0x0"}, "556": {"fn": "SourceDomainSideBridge.transfer", "offset": [2991, 3040], "op": "DUP2", "path": "1"}, "557": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3088], "op": "PUSH2", "path": "1", "value": "0x238"}, "560": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3081], "op": "DUP7", "path": "1"}, "561": {"fn": "SourceDomainSideBridge.transfer", "offset": [3084, 3088], "op": "PUSH2", "path": "1", "value": "0x3E8"}, "564": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3088], "op": "PUSH2", "path": "1", "value": "0xE13"}, "567": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3074, 3088], "op": "JUMP", "path": "1"}, "568": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3088], "op": "JUMPDEST", "path": "1"}, "569": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3094], "op": "PUSH2", "path": "1", "value": "0x242"}, "572": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3094], "op": "SWAP2", "path": "1"}, "573": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3094], "op": "SWAP1", "path": "1"}, "574": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3094], "op": "PUSH2", "path": "1", "value": "0xE32"}, "577": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3074, 3094], "op": "JUMP", "path": "1"}, "578": {"fn": "SourceDomainSideBridge.transfer", "offset": [3074, 3094], "op": "JUMPDEST", "path": "1"}, "579": {"fn": "SourceDomainSideBridge.transfer", "offset": [3050, 3094], "op": "SWAP1", "path": "1"}, "580": {"op": "POP"}, "581": {"fn": "SourceDomainSideBridge.transfer", "offset": [3140, 3154], "op": "PUSH2", "path": "1", "statement": 0, "value": "0x250"}, "584": {"fn": "SourceDomainSideBridge.transfer", "offset": [3140, 3147], "op": "DUP6", "path": "1"}, "585": {"fn": "SourceDomainSideBridge.transfer", "offset": [3150, 3154], "op": "PUSH2", "path": "1", "value": "0x3E8"}, "588": {"fn": "SourceDomainSideBridge.transfer", "offset": [3140, 3154], "op": "PUSH2", "path": "1", "value": "0xE13"}, "591": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3140, 3154], "op": "JUMP", "path": "1"}, "592": {"fn": "SourceDomainSideBridge.transfer", "offset": [3140, 3154], "op": "JUMPDEST", "path": "1"}, "593": {"fn": "SourceDomainSideBridge.transfer", "offset": [3121, 3137], "op": "PUSH2", "path": "1", "value": "0x25A"}, "596": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3137], "op": "DUP6", "path": "1"}, "597": {"fn": "SourceDomainSideBridge.transfer", "offset": [3121, 3124], "op": "DUP5", "path": "1"}, "598": {"fn": "SourceDomainSideBridge.transfer", "offset": [3121, 3137], "op": "PUSH2", "path": "1", "value": "0xE13"}, "601": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3121, 3137], "op": "JUMP", "path": "1"}, "602": {"fn": "SourceDomainSideBridge.transfer", "offset": [3121, 3137], "op": "JUMPDEST", "path": "1"}, "603": {"branch": 31, "fn": "SourceDomainSideBridge.transfer", "offset": [3121, 3154], "op": "LT", "path": "1"}, "604": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "PUSH2", "path": "1", "value": "0x2D2"}, "607": {"branch": 31, "fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "JUMPI", "path": "1"}, "608": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "PUSH1", "path": "1", "value": "0x40"}, "610": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "MLOAD", "path": "1"}, "611": {"op": "PUSH3", "value": "0x461BCD"}, "615": {"op": "PUSH1", "value": "0xE5"}, "617": {"op": "SHL"}, "618": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "DUP2", "path": "1"}, "619": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "MSTORE", "path": "1"}, "620": {"op": "PUSH1", "value": "0x20"}, "622": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "PUSH1", "path": "1", "value": "0x4"}, "624": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "DUP3", "path": "1"}, "625": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "ADD", "path": "1"}, "626": {"op": "MSTORE"}, "627": {"op": "PUSH1", "value": "0x3B"}, "629": {"op": "PUSH1", "value": "0x24"}, "631": {"op": "DUP3"}, "632": {"op": "ADD"}, "633": {"op": "MSTORE"}, "634": {"op": "PUSH32", "value": "0x66656552616D707570206D6178696D756D20636F73742073686F756C64206265"}, "667": {"op": "PUSH1", "value": "0x44"}, "669": {"op": "DUP3"}, "670": {"op": "ADD"}, "671": {"op": "MSTORE"}, "672": {"op": "PUSH32", "value": "0x206C657373207468616E2074686520746F74616C20616D6F756E740000000000"}, "705": {"op": "PUSH1", "value": "0x64"}, "707": {"op": "DUP3"}, "708": {"op": "ADD"}, "709": {"op": "MSTORE"}, "710": {"op": "PUSH1", "value": "0x84"}, "712": {"op": "ADD"}, "713": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "JUMPDEST", "path": "1"}, "714": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "PUSH1", "path": "1", "value": "0x40"}, "716": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "MLOAD", "path": "1"}, "717": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "DUP1", "path": "1"}, "718": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "SWAP2", "path": "1"}, "719": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "SUB", "path": "1"}, "720": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "SWAP1", "path": "1"}, "721": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "REVERT", "optimizer_revert": true, "path": "1"}, "722": {"fn": "SourceDomainSideBridge.transfer", "offset": [3113, 3218], "op": "JUMPDEST", "path": "1"}, "723": {"op": "PUSH1", "value": "0x1"}, "725": {"op": "PUSH1", "value": "0x1"}, "727": {"op": "PUSH1", "value": "0xA0"}, "729": {"op": "SHL"}, "730": {"op": "SUB"}, "731": {"fn": "SourceDomainSideBridge.transfer", "offset": [3232, 3262], "op": "DUP8", "path": "1"}, "732": {"branch": 32, "fn": "SourceDomainSideBridge.transfer", "offset": [3232, 3262], "op": "AND", "path": "1"}, "733": {"fn": "SourceDomainSideBridge.transfer", "offset": [3229, 3683], "op": "PUSH2", "path": "1", "value": "0x3AB"}, "736": {"branch": 32, "fn": "SourceDomainSideBridge.transfer", "offset": [3229, 3683], "op": "JUMPI", "path": "1"}, "737": {"offset": [831, 840], "op": "PUSH8", "path": "1", "value": "0x16345785D8A0000"}, "746": {"fn": "SourceDomainSideBridge.transfer", "offset": [3285, 3298], "op": "PUSH2", "path": "1", "statement": 1, "value": "0x2F5"}, "749": {"fn": "SourceDomainSideBridge.transfer", "offset": [3285, 3292], "op": "DUP7", "path": "1"}, "750": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3298], "op": "PUSH2", "path": "1", "value": "0x3E8"}, "753": {"fn": "SourceDomainSideBridge.transfer", "offset": [3285, 3298], "op": "PUSH2", "path": "1", "value": "0xE13"}, "756": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3285, 3298], "op": "JUMP", "path": "1"}, "757": {"fn": "SourceDomainSideBridge.transfer", "offset": [3285, 3298], "op": "JUMPDEST", "path": "1"}, "758": {"branch": 33, "fn": "SourceDomainSideBridge.transfer", "offset": [3285, 3316], "op": "LT", "path": "1"}, "759": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "PUSH2", "path": "1", "value": "0x351"}, "762": {"branch": 33, "fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "JUMPI", "path": "1"}, "763": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "PUSH1", "path": "1", "value": "0x40"}, "765": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "MLOAD", "path": "1"}, "766": {"op": "PUSH3", "value": "0x461BCD"}, "770": {"op": "PUSH1", "value": "0xE5"}, "772": {"op": "SHL"}, "773": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "DUP2", "path": "1"}, "774": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "MSTORE", "path": "1"}, "775": {"op": "PUSH1", "value": "0x20"}, "777": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "PUSH1", "path": "1", "value": "0x4"}, "779": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "DUP3", "path": "1"}, "780": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "ADD", "path": "1"}, "781": {"op": "MSTORE"}, "782": {"op": "PUSH1", "value": "0x26"}, "784": {"op": "PUSH1", "value": "0x24"}, "786": {"op": "DUP3"}, "787": {"op": "ADD"}, "788": {"op": "MSTORE"}, "789": {"op": "PUSH32", "value": "0x416D6F756E7420686967686572207468616E206D6178696D756D207472616465"}, "822": {"op": "PUSH1", "value": "0x44"}, "824": {"op": "DUP3"}, "825": {"op": "ADD"}, "826": {"op": "MSTORE"}, "827": {"op": "PUSH6", "value": "0x81B1A5B5A5D"}, "834": {"op": "PUSH1", "value": "0xD2"}, "836": {"op": "SHL"}, "837": {"op": "PUSH1", "value": "0x64"}, "839": {"op": "DUP3"}, "840": {"op": "ADD"}, "841": {"op": "MSTORE"}, "842": {"op": "PUSH1", "value": "0x84"}, "844": {"op": "ADD"}, "845": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "PUSH2", "path": "1", "value": "0x2C9"}, "848": {"op": "JUMP"}, "849": {"fn": "SourceDomainSideBridge.transfer", "offset": [3277, 3359], "op": "JUMPDEST", "path": "1"}, "850": {"fn": "SourceDomainSideBridge.transfer", "offset": [3394, 3419], "op": "PUSH2", "path": "1", "statement": 2, "value": "0x361"}, "853": {"offset": [642, 651], "op": "PUSH6", "path": "1", "value": "0x2BAF524C400"}, "860": {"fn": "SourceDomainSideBridge.transfer", "offset": [3394, 3407], "op": "DUP3", "path": "1"}, "861": {"fn": "SourceDomainSideBridge.transfer", "offset": [3394, 3419], "op": "PUSH2", "path": "1", "value": "0xE32"}, "864": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3394, 3419], "op": "JUMP", "path": "1"}, "865": {"fn": "SourceDomainSideBridge.transfer", "offset": [3394, 3419], "op": "JUMPDEST", "path": "1"}, "866": {"fn": "SourceDomainSideBridge.transfer", "offset": [3381, 3390], "op": "CALLVALUE", "path": "1"}, "867": {"fn": "SourceDomainSideBridge.transfer", "offset": [3381, 3419], "op": "LT", "path": "1"}, "868": {"branch": 34, "fn": "SourceDomainSideBridge.transfer", "offset": [3381, 3419], "op": "ISZERO", "path": "1"}, "869": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "PUSH2", "path": "1", "value": "0x3A6"}, "872": {"branch": 34, "fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "JUMPI", "path": "1"}, "873": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "PUSH1", "path": "1", "value": "0x40"}, "875": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "MLOAD", "path": "1"}, "876": {"op": "PUSH3", "value": "0x461BCD"}, "880": {"op": "PUSH1", "value": "0xE5"}, "882": {"op": "SHL"}, "883": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "DUP2", "path": "1"}, "884": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "MSTORE", "path": "1"}, "885": {"op": "PUSH1", "value": "0x20"}, "887": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "PUSH1", "path": "1", "value": "0x4"}, "889": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "DUP3", "path": "1"}, "890": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "ADD", "path": "1"}, "891": {"op": "MSTORE"}, "892": {"op": "PUSH1", "value": "0x13"}, "894": {"op": "PUSH1", "value": "0x24"}, "896": {"op": "DUP3"}, "897": {"op": "ADD"}, "898": {"op": "MSTORE"}, "899": {"op": "PUSH19", "value": "0x27379029BAB33332B1B4B2B73A1032BA3432B9"}, "919": {"op": "PUSH1", "value": "0x69"}, "921": {"op": "SHL"}, "922": {"op": "PUSH1", "value": "0x44"}, "924": {"op": "DUP3"}, "925": {"op": "ADD"}, "926": {"op": "MSTORE"}, "927": {"op": "PUSH1", "value": "0x64"}, "929": {"op": "ADD"}, "930": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "PUSH2", "path": "1", "value": "0x2C9"}, "933": {"op": "JUMP"}, "934": {"fn": "SourceDomainSideBridge.transfer", "offset": [3373, 3443], "op": "JUMPDEST", "path": "1"}, "935": {"fn": "SourceDomainSideBridge.transfer", "offset": [3229, 3683], "op": "PUSH2", "path": "1", "value": "0x491"}, "938": {"fn": "SourceDomainSideBridge.transfer", "offset": [3229, 3683], "op": "JUMP", "path": "1"}, "939": {"fn": "SourceDomainSideBridge.transfer", "offset": [3229, 3683], "op": "JUMPDEST", "path": "1"}, "940": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "statement": 3, "value": "0x40"}, "942": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "MLOAD", "path": "1"}, "943": {"op": "PUSH4", "value": "0x23B872DD"}, "948": {"op": "PUSH1", "value": "0xE0"}, "950": {"op": "SHL"}, "951": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP2", "path": "1"}, "952": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "MSTORE", "path": "1"}, "953": {"fn": "SourceDomainSideBridge.transfer", "offset": [3539, 3549], "op": "CALLER", "path": "1"}, "954": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x4"}, "956": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP3", "path": "1"}, "957": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "ADD", "path": "1"}, "958": {"op": "MSTORE"}, "959": {"fn": "SourceDomainSideBridge.transfer", "offset": [3559, 3563], "op": "ADDRESS", "path": "1"}, "960": {"op": "PUSH1", "value": "0x24"}, "962": {"op": "DUP3"}, "963": {"op": "ADD"}, "964": {"op": "MSTORE"}, "965": {"op": "PUSH1", "value": "0x44"}, "967": {"op": "DUP2"}, "968": {"op": "ADD"}, "969": {"op": "DUP3"}, "970": {"op": "SWAP1"}, "971": {"op": "MSTORE"}, "972": {"fn": "SourceDomainSideBridge.transfer", "offset": [3492, 3505], "op": "DUP8", "path": "1"}, "973": {"fn": "SourceDomainSideBridge.transfer", "offset": [3492, 3505], "op": "SWAP1", "path": "1"}, "974": {"op": "PUSH1", "value": "0x1"}, "976": {"op": "PUSH1", "value": "0x1"}, "978": {"op": "PUSH1", "value": "0xA0"}, "980": {"op": "SHL"}, "981": {"op": "SUB"}, "982": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3538], "op": "DUP3", "path": "1"}, "983": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3538], "op": "AND", "path": "1"}, "984": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3538], "op": "SWAP1", "path": "1"}, "985": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3538], "op": "PUSH4", "path": "1", "value": "0x23B872DD"}, "990": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3538], "op": "SWAP1", "path": "1"}, "991": {"op": "PUSH1", "value": "0x64"}, "993": {"op": "ADD"}, "994": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x20"}, "996": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x40"}, "998": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "MLOAD", "path": "1"}, "999": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP1", "path": "1"}, "1000": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP4", "path": "1"}, "1001": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "SUB", "path": "1"}, "1002": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP2", "path": "1"}, "1003": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x0"}, "1005": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP8", "path": "1"}, "1006": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "GAS", "path": "1"}, "1007": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "CALL", "path": "1"}, "1008": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "ISZERO", "path": "1"}, "1009": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP1", "path": "1"}, "1010": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "ISZERO", "path": "1"}, "1011": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH2", "path": "1", "value": "0x400"}, "1014": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "JUMPI", "path": "1"}, "1015": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "RETURNDATASIZE", "path": "1"}, "1016": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x0"}, "1018": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP1", "path": "1"}, "1019": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "RETURNDATACOPY", "path": "1"}, "1020": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "RETURNDATASIZE", "path": "1"}, "1021": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x0"}, "1023": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "REVERT", "path": "1"}, "1024": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "JUMPDEST", "path": "1"}, "1025": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "POP", "path": "1"}, "1026": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "POP", "path": "1"}, "1027": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "POP", "path": "1"}, "1028": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "POP", "path": "1"}, "1029": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x40"}, "1031": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "MLOAD", "path": "1"}, "1032": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "RETURNDATASIZE", "path": "1"}, "1033": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1035": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "NOT", "path": "1"}, "1036": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1038": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP3", "path": "1"}, "1039": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "ADD", "path": "1"}, "1040": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "AND", "path": "1"}, "1041": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP3", "path": "1"}, "1042": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "ADD", "path": "1"}, "1043": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP1", "path": "1"}, "1044": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH1", "path": "1", "value": "0x40"}, "1046": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "MSTORE", "path": "1"}, "1047": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "POP", "path": "1"}, "1048": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "DUP2", "path": "1"}, "1049": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "ADD", "path": "1"}, "1050": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "SWAP1", "path": "1"}, "1051": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH2", "path": "1", "value": "0x424"}, "1054": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "SWAP2", "path": "1"}, "1055": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "SWAP1", "path": "1"}, "1056": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "PUSH2", "path": "1", "value": "0xE4A"}, "1059": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3520, 3580], "op": "JUMP", "path": "1"}, "1060": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "JUMPDEST", "path": "1"}, "1061": {"fn": "SourceDomainSideBridge.transfer", "offset": [3520, 3580], "op": "POP", "path": "1"}, "1062": {"offset": [642, 651], "op": "PUSH6", "path": "1", "value": "0x2BAF524C400"}, "1069": {"fn": "SourceDomainSideBridge.transfer", "offset": [3602, 3611], "op": "CALLVALUE", "path": "1", "statement": 4}, "1070": {"fn": "SourceDomainSideBridge.transfer", "offset": [3602, 3624], "op": "LT", "path": "1"}, "1071": {"branch": 35, "fn": "SourceDomainSideBridge.transfer", "offset": [3602, 3624], "op": "ISZERO", "path": "1"}, "1072": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "PUSH2", "path": "1", "value": "0x48F"}, "1075": {"branch": 35, "fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "JUMPI", "path": "1"}, "1076": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "PUSH1", "path": "1", "value": "0x40"}, "1078": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "MLOAD", "path": "1"}, "1079": {"op": "PUSH3", "value": "0x461BCD"}, "1083": {"op": "PUSH1", "value": "0xE5"}, "1085": {"op": "SHL"}, "1086": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "DUP2", "path": "1"}, "1087": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "MSTORE", "path": "1"}, "1088": {"op": "PUSH1", "value": "0x20"}, "1090": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "PUSH1", "path": "1", "value": "0x4"}, "1092": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "DUP3", "path": "1"}, "1093": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "ADD", "path": "1"}, "1094": {"op": "MSTORE"}, "1095": {"op": "PUSH1", "value": "0x2B"}, "1097": {"op": "PUSH1", "value": "0x24"}, "1099": {"op": "DUP3"}, "1100": {"op": "ADD"}, "1101": {"op": "MSTORE"}, "1102": {"op": "PUSH32", "value": "0x4E6F2053756666656369656E7420657468657220666F72207468652066697865"}, "1135": {"op": "PUSH1", "value": "0x44"}, "1137": {"op": "DUP3"}, "1138": {"op": "ADD"}, "1139": {"op": "MSTORE"}, "1140": {"op": "PUSH11", "value": "0x6420657468657220666565"}, "1152": {"op": "PUSH1", "value": "0xA8"}, "1154": {"op": "SHL"}, "1155": {"op": "PUSH1", "value": "0x64"}, "1157": {"op": "DUP3"}, "1158": {"op": "ADD"}, "1159": {"op": "MSTORE"}, "1160": {"op": "PUSH1", "value": "0x84"}, "1162": {"op": "ADD"}, "1163": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "PUSH2", "path": "1", "value": "0x2C9"}, "1166": {"op": "JUMP"}, "1167": {"fn": "SourceDomainSideBridge.transfer", "offset": [3594, 3672], "op": "JUMPDEST", "path": "1"}, "1168": {"fn": "SourceDomainSideBridge.transfer", "offset": [3458, 3683], "op": "POP", "path": "1"}, "1169": {"fn": "SourceDomainSideBridge.transfer", "offset": [3229, 3683], "op": "JUMPDEST", "path": "1"}, "1170": {"fn": "SourceDomainSideBridge.transfer", "offset": [3693, 3725], "op": "PUSH2", "path": "1", "value": "0x4E3"}, "1173": {"op": "PUSH1", "value": "0x40"}, "1175": {"op": "MLOAD"}, "1176": {"op": "DUP1"}, "1177": {"op": "PUSH1", "value": "0xE0"}, "1179": {"op": "ADD"}, "1180": {"op": "PUSH1", "value": "0x40"}, "1182": {"op": "MSTORE"}, "1183": {"op": "DUP1"}, "1184": {"op": "PUSH1", "value": "0x0"}, "1186": {"op": "PUSH1", "value": "0x1"}, "1188": {"op": "PUSH1", "value": "0x1"}, "1190": {"op": "PUSH1", "value": "0xA0"}, "1192": {"op": "SHL"}, "1193": {"op": "SUB"}, "1194": {"op": "AND"}, "1195": {"op": "DUP2"}, "1196": {"op": "MSTORE"}, "1197": {"op": "PUSH1", "value": "0x20"}, "1199": {"op": "ADD"}, "1200": {"op": "PUSH1", "value": "0x0"}, "1202": {"op": "PUSH1", "value": "0x1"}, "1204": {"op": "PUSH1", "value": "0x1"}, "1206": {"op": "PUSH1", "value": "0xA0"}, "1208": {"op": "SHL"}, "1209": {"op": "SUB"}, "1210": {"op": "AND"}, "1211": {"op": "DUP2"}, "1212": {"op": "MSTORE"}, "1213": {"op": "PUSH1", "value": "0x20"}, "1215": {"op": "ADD"}, "1216": {"op": "PUSH1", "value": "0x0"}, "1218": {"op": "DUP2"}, "1219": {"op": "MSTORE"}, "1220": {"op": "PUSH1", "value": "0x20"}, "1222": {"op": "ADD"}, "1223": {"op": "PUSH1", "value": "0x0"}, "1225": {"op": "DUP2"}, "1226": {"op": "MSTORE"}, "1227": {"op": "PUSH1", "value": "0x20"}, "1229": {"op": "ADD"}, "1230": {"op": "PUSH1", "value": "0x0"}, "1232": {"op": "DUP2"}, "1233": {"op": "MSTORE"}, "1234": {"op": "PUSH1", "value": "0x20"}, "1236": {"op": "ADD"}, "1237": {"op": "PUSH1", "value": "0x0"}, "1239": {"op": "DUP2"}, "1240": {"op": "MSTORE"}, "1241": {"op": "PUSH1", "value": "0x20"}, "1243": {"op": "ADD"}, "1244": {"op": "PUSH1", "value": "0x0"}, "1246": {"op": "DUP2"}, "1247": {"op": "MSTORE"}, "1248": {"op": "POP"}, "1249": {"op": "SWAP1"}, "1250": {"op": "JUMP"}, "1251": {"fn": "SourceDomainSideBridge.transfer", "offset": [3693, 3725], "op": "JUMPDEST", "path": "1"}, "1252": {"op": "PUSH1", "value": "0x1"}, "1254": {"op": "PUSH1", "value": "0x1"}, "1256": {"op": "PUSH1", "value": "0xA0"}, "1258": {"op": "SHL"}, "1259": {"op": "SUB"}, "1260": {"fn": "SourceDomainSideBridge.transfer", "offset": [3735, 3776], "op": "DUP1", "path": "1", "statement": 5}, "1261": {"fn": "SourceDomainSideBridge.transfer", "offset": [3735, 3776], "op": "DUP10", "path": "1"}, "1262": {"fn": "SourceDomainSideBridge.transfer", "offset": [3735, 3776], "op": "AND", "path": "1"}, "1263": {"fn": "SourceDomainSideBridge.transfer", "offset": [3735, 3776], "op": "DUP3", "path": "1"}, "1264": {"fn": "SourceDomainSideBridge.transfer", "offset": [3735, 3776], "op": "MSTORE", "path": "1"}, "1265": {"fn": "SourceDomainSideBridge.transfer", "offset": [3786, 3825], "op": "DUP8", "path": "1", "statement": 6}, "1266": {"fn": "SourceDomainSideBridge.transfer", "offset": [3786, 3825], "op": "AND", "path": "1"}, "1267": {"fn": "SourceDomainSideBridge.transfer", "offset": [3786, 3810], "op": "PUSH1", "path": "1", "value": "0x20"}, "1269": {"fn": "SourceDomainSideBridge.transfer", "offset": [3786, 3810], "op": "DUP3", "path": "1"}, "1270": {"fn": "SourceDomainSideBridge.transfer", "offset": [3786, 3810], "op": "ADD", "path": "1"}, "1271": {"fn": "SourceDomainSideBridge.transfer", "offset": [3786, 3825], "op": "MSTORE", "path": "1"}, "1272": {"fn": "SourceDomainSideBridge.transfer", "offset": [3835, 3854], "op": "PUSH1", "path": "1", "statement": 7, "value": "0x40"}, "1274": {"fn": "SourceDomainSideBridge.transfer", "offset": [3835, 3854], "op": "DUP2", "path": "1"}, "1275": {"fn": "SourceDomainSideBridge.transfer", "offset": [3835, 3854], "op": "ADD", "path": "1"}, "1276": {"fn": "SourceDomainSideBridge.transfer", "offset": [3835, 3864], "op": "DUP7", "path": "1"}, "1277": {"fn": "SourceDomainSideBridge.transfer", "offset": [3835, 3864], "op": "SWAP1", "path": "1"}, "1278": {"fn": "SourceDomainSideBridge.transfer", "offset": [3835, 3864], "op": "MSTORE", "path": "1"}, "1279": {"fn": "SourceDomainSideBridge.transfer", "offset": [3874, 3890], "op": "PUSH1", "path": "1", "statement": 8, "value": "0x60"}, "1281": {"fn": "SourceDomainSideBridge.transfer", "offset": [3874, 3890], "op": "DUP2", "path": "1"}, "1282": {"fn": "SourceDomainSideBridge.transfer", "offset": [3874, 3890], "op": "ADD", "path": "1"}, "1283": {"fn": "SourceDomainSideBridge.transfer", "offset": [3874, 3896], "op": "DUP4", "path": "1"}, "1284": {"fn": "SourceDomainSideBridge.transfer", "offset": [3874, 3896], "op": "SWAP1", "path": "1"}, "1285": {"fn": "SourceDomainSideBridge.transfer", "offset": [3874, 3896], "op": "MSTORE", "path": "1"}, "1286": {"fn": "SourceDomainSideBridge.transfer", "offset": [3931, 3943], "op": "NUMBER", "path": "1", "statement": 9}, "1287": {"fn": "SourceDomainSideBridge.transfer", "offset": [3906, 3928], "op": "PUSH1", "path": "1", "value": "0x80"}, "1289": {"fn": "SourceDomainSideBridge.transfer", "offset": [3906, 3928], "op": "DUP3", "path": "1"}, "1290": {"fn": "SourceDomainSideBridge.transfer", "offset": [3906, 3928], "op": "ADD", "path": "1"}, "1291": {"fn": "SourceDomainSideBridge.transfer", "offset": [3906, 3943], "op": "MSTORE", "path": "1"}, "1292": {"fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3975], "op": "PUSH1", "path": "1", "statement": 10, "value": "0xA0"}, "1294": {"fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3975], "op": "DUP2", "path": "1"}, "1295": {"fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3975], "op": "ADD", "path": "1"}, "1296": {"fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3988], "op": "DUP6", "path": "1"}, "1297": {"fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3988], "op": "SWAP1", "path": "1"}, "1298": {"fn": "SourceDomainSideBridge.transfer", "offset": [3953, 3988], "op": "MSTORE", "path": "1"}, "1299": {"fn": "SourceDomainSideBridge.transfer", "offset": [4019, 4031], "op": "PUSH1", "path": "1", "statement": 11, "value": "0x4"}, "1301": {"fn": "SourceDomainSideBridge.transfer", "offset": [4019, 4031], "op": "DUP1", "path": "1"}, "1302": {"fn": "SourceDomainSideBridge.transfer", "offset": [4019, 4031], "op": "SLOAD", "path": "1"}, "1303": {"fn": "SourceDomainSideBridge.transfer", "offset": [3998, 4016], "op": "PUSH1", "path": "1", "value": "0xC0"}, "1305": {"fn": "SourceDomainSideBridge.transfer", "offset": [3998, 4016], "op": "DUP4", "path": "1"}, "1306": {"fn": "SourceDomainSideBridge.transfer", "offset": [3998, 4016], "op": "ADD", "path": "1"}, "1307": {"fn": "SourceDomainSideBridge.transfer", "offset": [3998, 4031], "op": "DUP2", "path": "1"}, "1308": {"fn": "SourceDomainSideBridge.transfer", "offset": [3998, 4031], "op": "SWAP1", "path": "1"}, "1309": {"fn": "SourceDomainSideBridge.transfer", "offset": [3998, 4031], "op": "MSTORE", "path": "1"}, "1310": {"fn": "SourceDomainSideBridge.transfer", "offset": [4019, 4031], "op": "SWAP1", "path": "1"}, "1311": {"fn": "SourceDomainSideBridge.transfer", "offset": [3735, 3760], "op": "PUSH1", "path": "1", "value": "0x0"}, "1313": {"fn": "SourceDomainSideBridge.transfer", "offset": [4042, 4056], "op": "PUSH2", "path": "1", "statement": 12, "value": "0x529"}, "1316": {"fn": "SourceDomainSideBridge.transfer", "offset": [4019, 4031], "op": "DUP4", "path": "1"}, "1317": {"fn": "SourceDomainSideBridge.transfer", "offset": [4042, 4056], "op": "PUSH2", "path": "1", "value": "0xE73"}, "1320": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4042, 4056], "op": "JUMP", "path": "1"}, "1321": {"fn": "SourceDomainSideBridge.transfer", "offset": [4042, 4056], "op": "JUMPDEST", "path": "1"}, "1322": {"fn": "SourceDomainSideBridge.transfer", "offset": [4042, 4056], "op": "SWAP1", "path": "1"}, "1323": {"fn": "SourceDomainSideBridge.transfer", "offset": [4042, 4056], "op": "SWAP2", "path": "1"}, "1324": {"fn": "SourceDomainSideBridge.transfer", "offset": [4042, 4056], "op": "SSTORE", "path": "1"}, "1325": {"op": "POP"}, "1326": {"fn": "SourceDomainSideBridge.transfer", "offset": [4106, 4117], "op": "PUSH2", "path": "1", "statement": 13, "value": "0x540"}, "1329": {"fn": "SourceDomainSideBridge.transfer", "offset": [4106, 4117], "op": "SWAP1", "path": "1"}, "1330": {"op": "POP"}, "1331": {"fn": "SourceDomainSideBridge.transfer", "offset": [4116, 4117], "op": "PUSH1", "path": "1", "value": "0x2"}, "1333": {"offset": [642, 651], "op": "PUSH6", "path": "1", "value": "0x2BAF524C400"}, "1340": {"fn": "SourceDomainSideBridge.transfer", "offset": [4106, 4117], "op": "PUSH2", "path": "1", "value": "0xE8C"}, "1343": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4106, 4117], "op": "JUMP", "path": "1"}, "1344": {"fn": "SourceDomainSideBridge.transfer", "offset": [4106, 4117], "op": "JUMPDEST", "path": "1"}, "1345": {"fn": "SourceDomainSideBridge.transfer", "offset": [4086, 4103], "op": "PUSH1", "path": "1", "value": "0x6"}, "1347": {"fn": "SourceDomainSideBridge.transfer", "offset": [4086, 4103], "op": "SLOAD", "path": "1"}, "1348": {"fn": "SourceDomainSideBridge.transfer", "offset": [4086, 4117], "op": "PUSH2", "path": "1", "value": "0x54D"}, "1351": {"fn": "SourceDomainSideBridge.transfer", "offset": [4086, 4117], "op": "SWAP2", "path": "1"}, "1352": {"fn": "SourceDomainSideBridge.transfer", "offset": [4086, 4117], "op": "SWAP1", "path": "1"}, "1353": {"fn": "SourceDomainSideBridge.transfer", "offset": [4086, 4117], "op": "PUSH2", "path": "1", "value": "0xE32"}, "1356": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4086, 4117], "op": "JUMP", "path": "1"}, "1357": {"fn": "SourceDomainSideBridge.transfer", "offset": [4086, 4117], "op": "JUMPDEST", "path": "1"}, "1358": {"fn": "SourceDomainSideBridge.transfer", "offset": [4066, 4083], "op": "PUSH1", "path": "1", "value": "0x6"}, "1360": {"fn": "SourceDomainSideBridge.transfer", "offset": [4066, 4117], "op": "SSTORE", "path": "1"}, "1361": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "PUSH1", "path": "1", "value": "0x40"}, "1363": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "MLOAD", "path": "1"}, "1364": {"fn": "SourceDomainSideBridge.transfer", "offset": [4128, 4152], "op": "PUSH1", "path": "1", "value": "0x0"}, "1366": {"fn": "SourceDomainSideBridge.transfer", "offset": [4128, 4152], "op": "SWAP1", "path": "1"}, "1367": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x2"}, "1369": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "SWAP1", "path": "1"}, "1370": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "PUSH2", "path": "1", "value": "0x567"}, "1373": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "SWAP1", "path": "1"}, "1374": {"fn": "SourceDomainSideBridge.transfer", "offset": [4173, 4185], "op": "DUP5", "path": "1"}, "1375": {"fn": "SourceDomainSideBridge.transfer", "offset": [4173, 4185], "op": "SWAP1", "path": "1"}, "1376": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "PUSH1", "path": "1", "value": "0x20"}, "1378": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "ADD", "path": "1"}, "1379": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "PUSH2", "path": "1", "value": "0xEAE"}, "1382": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4162, 4186], "op": "JUMP", "path": "1"}, "1383": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "JUMPDEST", "path": "1"}, "1384": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "PUSH1", "path": "1", "value": "0x40"}, "1386": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "DUP1", "path": "1"}, "1387": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "MLOAD", "path": "1"}, "1388": {"op": "PUSH1", "value": "0x1F"}, "1390": {"op": "NOT"}, "1391": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "DUP2", "path": "1"}, "1392": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "DUP5", "path": "1"}, "1393": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "SUB", "path": "1"}, "1394": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "ADD", "path": "1"}, "1395": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "DUP2", "path": "1"}, "1396": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "MSTORE", "path": "1"}, "1397": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "SWAP1", "path": "1"}, "1398": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "DUP3", "path": "1"}, "1399": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "SWAP1", "path": "1"}, "1400": {"fn": "SourceDomainSideBridge.transfer", "offset": [4162, 4186], "op": "MSTORE", "path": "1"}, "1401": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH2", "path": "1", "value": "0x581"}, "1404": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "SWAP2", "path": "1"}, "1405": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH2", "path": "1", "value": "0xF05"}, "1408": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4155, 4187], "op": "JUMP", "path": "1"}, "1409": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "JUMPDEST", "path": "1"}, "1410": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x20"}, "1412": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x40"}, "1414": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "MLOAD", "path": "1"}, "1415": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP1", "path": "1"}, "1416": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP4", "path": "1"}, "1417": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "SUB", "path": "1"}, "1418": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP2", "path": "1"}, "1419": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP6", "path": "1"}, "1420": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "GAS", "path": "1"}, "1421": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "STATICCALL", "path": "1"}, "1422": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "ISZERO", "path": "1"}, "1423": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP1", "path": "1"}, "1424": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "ISZERO", "path": "1"}, "1425": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH2", "path": "1", "value": "0x59E"}, "1428": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "JUMPI", "path": "1"}, "1429": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "RETURNDATASIZE", "path": "1"}, "1430": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x0"}, "1432": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP1", "path": "1"}, "1433": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "RETURNDATACOPY", "path": "1"}, "1434": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "RETURNDATASIZE", "path": "1"}, "1435": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x0"}, "1437": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "REVERT", "path": "1"}, "1438": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "JUMPDEST", "path": "1"}, "1439": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "POP", "path": "1"}, "1440": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "POP", "path": "1"}, "1441": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "POP", "path": "1"}, "1442": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x40"}, "1444": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "MLOAD", "path": "1"}, "1445": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "RETURNDATASIZE", "path": "1"}, "1446": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1448": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "NOT", "path": "1"}, "1449": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1451": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP3", "path": "1"}, "1452": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "ADD", "path": "1"}, "1453": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "AND", "path": "1"}, "1454": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP3", "path": "1"}, "1455": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "ADD", "path": "1"}, "1456": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP1", "path": "1"}, "1457": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH1", "path": "1", "value": "0x40"}, "1459": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "MSTORE", "path": "1"}, "1460": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "POP", "path": "1"}, "1461": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "DUP2", "path": "1"}, "1462": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "ADD", "path": "1"}, "1463": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "SWAP1", "path": "1"}, "1464": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH2", "path": "1", "value": "0x5C1"}, "1467": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "SWAP2", "path": "1"}, "1468": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "SWAP1", "path": "1"}, "1469": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "PUSH2", "path": "1", "value": "0xF40"}, "1472": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4155, 4187], "op": "JUMP", "path": "1"}, "1473": {"fn": "SourceDomainSideBridge.transfer", "offset": [4155, 4187], "op": "JUMPDEST", "path": "1"}, "1474": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4225], "op": "PUSH1", "path": "1", "statement": 14, "value": "0x0"}, "1476": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "DUP2", "path": "1"}, "1477": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "DUP2", "path": "1"}, "1478": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "MSTORE", "path": "1"}, "1479": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "PUSH1", "path": "1", "value": "0x20"}, "1481": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "DUP2", "path": "1"}, "1482": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "SWAP1", "path": "1"}, "1483": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "MSTORE", "path": "1"}, "1484": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "PUSH1", "path": "1", "value": "0x40"}, "1486": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "SWAP1", "path": "1"}, "1487": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "DUP2", "path": "1"}, "1488": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "SWAP1", "path": "1"}, "1489": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4243], "op": "KECCAK256", "path": "1"}, "1490": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4250], "op": "DUP1", "path": "1"}, "1491": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4250], "op": "SLOAD", "path": "1"}, "1492": {"op": "PUSH1", "value": "0xFF"}, "1494": {"op": "NOT"}, "1495": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4250], "op": "AND", "path": "1"}, "1496": {"fn": "SourceDomainSideBridge.transfer", "offset": [4246, 4250], "op": "PUSH1", "path": "1", "value": "0x1"}, "1498": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4250], "op": "OR", "path": "1"}, "1499": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4250], "op": "SWAP1", "path": "1"}, "1500": {"fn": "SourceDomainSideBridge.transfer", "offset": [4206, 4250], "op": "SSTORE", "path": "1"}, "1501": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "MLOAD", "path": "1", "statement": 15}, "1502": {"fn": "SourceDomainSideBridge.transfer", "offset": [4128, 4187], "op": "SWAP1", "path": "1"}, "1503": {"fn": "SourceDomainSideBridge.transfer", "offset": [4128, 4187], "op": "SWAP2", "path": "1"}, "1504": {"op": "POP"}, "1505": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "PUSH32", "path": "1", "value": "0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89"}, "1538": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "SWAP1", "path": "1"}, "1539": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "PUSH2", "path": "1", "value": "0x60D"}, "1542": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "SWAP1", "path": "1"}, "1543": {"fn": "SourceDomainSideBridge.transfer", "offset": [4278, 4290], "op": "DUP5", "path": "1"}, "1544": {"fn": "SourceDomainSideBridge.transfer", "offset": [4278, 4290], "op": "SWAP1", "path": "1"}, "1545": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "PUSH2", "path": "1", "value": "0xEAE"}, "1548": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [4266, 4291], "op": "JUMP", "path": "1"}, "1549": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "JUMPDEST", "path": "1"}, "1550": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "PUSH1", "path": "1", "value": "0x40"}, "1552": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "MLOAD", "path": "1"}, "1553": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "DUP1", "path": "1"}, "1554": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "SWAP2", "path": "1"}, "1555": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "SUB", "path": "1"}, "1556": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "SWAP1", "path": "1"}, "1557": {"fn": "SourceDomainSideBridge.transfer", "offset": [4266, 4291], "op": "LOG1", "path": "1"}, "1558": {"fn": "SourceDomainSideBridge.transfer", "offset": [4317, 4333], "op": "SWAP9", "path": "1", "statement": 16}, "1559": {"fn": "SourceDomainSideBridge.transfer", "offset": [2830, 4340], "op": "SWAP8", "path": "1"}, "1560": {"op": "POP"}, "1561": {"op": "POP"}, "1562": {"op": "POP"}, "1563": {"op": "POP"}, "1564": {"op": "POP"}, "1565": {"op": "POP"}, "1566": {"op": "POP"}, "1567": {"op": "POP"}, "1568": {"fn": "SourceDomainSideBridge.transfer", "jump": "o", "offset": [2830, 4340], "op": "JUMP", "path": "1"}, "1569": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6250, 6406], "op": "JUMPDEST", "path": "1"}, "1570": {"offset": [2402, 2412], "op": "PUSH1", "path": "1", "value": "0x5"}, "1572": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2402, 2412], "op": "SLOAD", "path": "1"}, "1573": {"op": "PUSH1", "value": "0x1"}, "1575": {"op": "PUSH1", "value": "0x1"}, "1577": {"op": "PUSH1", "value": "0xA0"}, "1579": {"op": "SHL"}, "1580": {"op": "SUB"}, "1581": {"offset": [2402, 2412], "op": "AND", "path": "1"}, "1582": {"offset": [2388, 2398], "op": "CALLER", "path": "1"}, "1583": {"offset": [2388, 2412], "op": "EQ", "path": "1"}, "1584": {"offset": [2380, 2456], "op": "PUSH2", "path": "1", "value": "0x64B"}, "1587": {"offset": [2380, 2456], "op": "JUMPI", "path": "1"}, "1588": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "PUSH1", "path": "1", "value": "0x40"}, "1590": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "MLOAD", "path": "1"}, "1591": {"op": "PUSH3", "value": "0x461BCD"}, "1595": {"op": "PUSH1", "value": "0xE5"}, "1597": {"op": "SHL"}, "1598": {"offset": [2380, 2456], "op": "DUP2", "path": "1"}, "1599": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "MSTORE", "path": "1"}, "1600": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "PUSH1", "path": "1", "value": "0x4"}, "1602": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "ADD", "path": "1"}, "1603": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "PUSH2", "path": "1", "value": "0x2C9"}, "1606": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "SWAP1", "path": "1"}, "1607": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "PUSH2", "path": "1", "value": "0xF59"}, "1610": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "i", "offset": [2380, 2456], "op": "JUMP", "path": "1"}, "1611": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [2380, 2456], "op": "JUMPDEST", "path": "1"}, "1612": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "PUSH1", "path": "1", "statement": 17, "value": "0x5"}, "1614": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "SLOAD", "path": "1"}, "1615": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6350, 6367], "op": "PUSH1", "path": "1", "value": "0x6"}, "1617": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6350, 6367], "op": "SLOAD", "path": "1"}, "1618": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "PUSH1", "path": "1", "value": "0x40"}, "1620": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "MLOAD", "path": "1"}, "1621": {"op": "PUSH1", "value": "0x1"}, "1623": {"op": "PUSH1", "value": "0x1"}, "1625": {"op": "PUSH1", "value": "0xA0"}, "1627": {"op": "SHL"}, "1628": {"op": "SUB"}, "1629": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "SWAP1", "path": "1"}, "1630": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "SWAP3", "path": "1"}, "1631": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "AND", "path": "1"}, "1632": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "SWAP2", "path": "1"}, "1633": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "DUP2", "path": "1"}, "1634": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "ISZERO", "path": "1"}, "1635": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "PUSH2", "path": "1", "value": "0x8FC"}, "1638": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "MUL", "path": "1"}, "1639": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "SWAP2", "path": "1"}, "1640": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6350, 6367], "op": "SWAP1", "path": "1"}, "1641": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "PUSH1", "path": "1", "value": "0x0"}, "1643": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "DUP2", "path": "1"}, "1644": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "DUP2", "path": "1"}, "1645": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "DUP2", "path": "1"}, "1646": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6350, 6367], "op": "DUP6", "path": "1"}, "1647": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6329, 6339], "op": "DUP9", "path": "1"}, "1648": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "DUP9", "path": "1"}, "1649": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "CALL", "path": "1"}, "1650": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "SWAP4", "path": "1"}, "1651": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "POP", "path": "1"}, "1652": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "POP", "path": "1"}, "1653": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "POP", "path": "1"}, "1654": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "POP", "path": "1"}, "1655": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "ISZERO", "path": "1"}, "1656": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "DUP1", "path": "1"}, "1657": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "ISZERO", "path": "1"}, "1658": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "PUSH2", "path": "1", "value": "0x687"}, "1661": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "JUMPI", "path": "1"}, "1662": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "RETURNDATASIZE", "path": "1"}, "1663": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "PUSH1", "path": "1", "value": "0x0"}, "1665": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "DUP1", "path": "1"}, "1666": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "RETURNDATACOPY", "path": "1"}, "1667": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "RETURNDATASIZE", "path": "1"}, "1668": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "PUSH1", "path": "1", "value": "0x0"}, "1670": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "REVERT", "path": "1"}, "1671": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6321, 6368], "op": "JUMPDEST", "path": "1"}, "1672": {"op": "POP"}, "1673": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6398, 6399], "op": "PUSH1", "path": "1", "statement": 18, "value": "0x0"}, "1675": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6378, 6395], "op": "PUSH1", "path": "1", "value": "0x6"}, "1677": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "offset": [6378, 6399], "op": "SSTORE", "path": "1"}, "1678": {"fn": "SourceDomainSideBridge.collectGovernanceFixedFees", "jump": "o", "offset": [6250, 6406], "op": "JUMP", "path": "1"}, "1679": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "JUMPDEST", "path": "1"}, "1680": {"op": "PUSH1", "value": "0x7"}, "1682": {"op": "PUSH1", "value": "0x21"}, "1684": {"op": "PUSH1", "value": "0x99"}, "1686": {"op": "SHL"}, "1687": {"op": "ADD"}, "1688": {"offset": [2098, 2108], "op": "CALLER", "path": "1"}, "1689": {"offset": [2098, 2146], "op": "DUP2", "path": "1"}, "1690": {"branch": 36, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2098, 2146], "op": "EQ", "path": "1"}, "1691": {"offset": [2098, 2221], "op": "DUP1", "path": "1"}, "1692": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2098, 2221], "op": "ISZERO", "path": "1"}, "1693": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2098, 2221], "op": "PUSH2", "path": "1", "value": "0x71C"}, "1696": {"branch": 36, "offset": [2098, 2221], "op": "JUMPI", "path": "1"}, "1697": {"op": "POP"}, "1698": {"offset": [2194, 2221], "op": "PUSH1", "path": "1", "value": "0x3"}, "1700": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2194, 2221], "op": "SLOAD", "path": "1"}, "1701": {"offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x40"}, "1703": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "1"}, "1704": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MLOAD", "path": "1"}, "1705": {"op": "PUSH4", "value": "0x6E296E45"}, "1710": {"op": "PUSH1", "value": "0xE0"}, "1712": {"op": "SHL"}, "1713": {"offset": [2162, 2190], "op": "DUP2", "path": "1"}, "1714": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MSTORE", "path": "1"}, "1715": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "1"}, "1716": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MLOAD", "path": "1"}, "1717": {"op": "PUSH1", "value": "0x1"}, "1719": {"op": "PUSH1", "value": "0x1"}, "1721": {"op": "PUSH1", "value": "0xA0"}, "1723": {"op": "SHL"}, "1724": {"op": "SUB"}, "1725": {"offset": [2194, 2221], "op": "SWAP3", "path": "1"}, "1726": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2194, 2221], "op": "DUP4", "path": "1"}, "1727": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2194, 2221], "op": "AND", "path": "1"}, "1728": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2194, 2221], "op": "SWAP3", "path": "1"}, "1729": {"offset": [2162, 2188], "op": "DUP5", "path": "1"}, "1730": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2188], "op": "AND", "path": "1"}, "1731": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2188], "op": "SWAP2", "path": "1"}, "1732": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2188], "op": "PUSH4", "path": "1", "value": "0x6E296E45"}, "1737": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2188], "op": "SWAP2", "path": "1"}, "1738": {"offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x4"}, "1740": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "1"}, "1741": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP4", "path": "1"}, "1742": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "1"}, "1743": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP3", "path": "1"}, "1744": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x20"}, "1746": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP3", "path": "1"}, "1747": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP2", "path": "1"}, "1748": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "1"}, "1749": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP3", "path": "1"}, "1750": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "1"}, "1751": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SUB", "path": "1"}, "1752": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "1"}, "1753": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP2", "path": "1"}, "1754": {"offset": [2162, 2188], "op": "DUP7", "path": "1"}, "1755": {"offset": [2162, 2190], "op": "GAS", "path": "1"}, "1756": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "STATICCALL", "path": "1"}, "1757": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ISZERO", "path": "1"}, "1758": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "1"}, "1759": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ISZERO", "path": "1"}, "1760": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH2", "path": "1", "value": "0x6ED"}, "1763": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "JUMPI", "path": "1"}, "1764": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "RETURNDATASIZE", "path": "1"}, "1765": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x0"}, "1767": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "1"}, "1768": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "RETURNDATACOPY", "path": "1"}, "1769": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "RETURNDATASIZE", "path": "1"}, "1770": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x0"}, "1772": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "REVERT", "path": "1"}, "1773": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "JUMPDEST", "path": "1"}, "1774": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "1"}, "1775": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "1"}, "1776": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "1"}, "1777": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "1"}, "1778": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x40"}, "1780": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MLOAD", "path": "1"}, "1781": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "RETURNDATASIZE", "path": "1"}, "1782": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1784": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "NOT", "path": "1"}, "1785": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x1F"}, "1787": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP3", "path": "1"}, "1788": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "1"}, "1789": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "AND", "path": "1"}, "1790": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP3", "path": "1"}, "1791": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "1"}, "1792": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP1", "path": "1"}, "1793": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH1", "path": "1", "value": "0x40"}, "1795": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "MSTORE", "path": "1"}, "1796": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "POP", "path": "1"}, "1797": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "DUP2", "path": "1"}, "1798": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "ADD", "path": "1"}, "1799": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "1"}, "1800": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH2", "path": "1", "value": "0x711"}, "1803": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP2", "path": "1"}, "1804": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "SWAP1", "path": "1"}, "1805": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "PUSH2", "path": "1", "value": "0xFA0"}, "1808": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [2162, 2190], "op": "JUMP", "path": "1"}, "1809": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2190], "op": "JUMPDEST", "path": "1"}, "1810": {"op": "PUSH1", "value": "0x1"}, "1812": {"op": "PUSH1", "value": "0x1"}, "1814": {"op": "PUSH1", "value": "0xA0"}, "1816": {"op": "SHL"}, "1817": {"op": "SUB"}, "1818": {"offset": [2162, 2221], "op": "AND", "path": "1"}, "1819": {"branch": 37, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2162, 2221], "op": "EQ", "path": "1"}, "1820": {"offset": [2098, 2221], "op": "JUMPDEST", "path": "1"}, "1821": {"offset": [2077, 2231], "op": "PUSH2", "path": "1", "value": "0x725"}, "1824": {"branch": 37, "offset": [2077, 2231], "op": "JUMPI", "path": "1"}, "1825": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2077, 2231], "op": "PUSH1", "path": "1", "value": "0x0"}, "1827": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2077, 2231], "op": "DUP1", "path": "1"}, "1828": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2077, 2231], "op": "REVERT", "path": "1"}, "1829": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [2077, 2231], "op": "JUMPDEST", "path": "1"}, "1830": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "PUSH1", "path": "1", "statement": 19, "value": "0x0"}, "1832": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "DUP3", "path": "1"}, "1833": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "DUP2", "path": "1"}, "1834": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "MSTORE", "path": "1"}, "1835": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6051, 6055], "op": "PUSH1", "path": "1", "value": "0x1"}, "1837": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "PUSH1", "path": "1", "value": "0x20"}, "1839": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "DUP2", "path": "1"}, "1840": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "DUP2", "path": "1"}, "1841": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "MSTORE", "path": "1"}, "1842": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "PUSH1", "path": "1", "value": "0x40"}, "1844": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "SWAP3", "path": "1"}, "1845": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "DUP4", "path": "1"}, "1846": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "SWAP1", "path": "1"}, "1847": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6048], "op": "KECCAK256", "path": "1"}, "1848": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "DUP1", "path": "1"}, "1849": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "SLOAD", "path": "1"}, "1850": {"op": "PUSH1", "value": "0xFF"}, "1852": {"op": "NOT"}, "1853": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "AND", "path": "1"}, "1854": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "SWAP1", "path": "1"}, "1855": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "SWAP3", "path": "1"}, "1856": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "OR", "path": "1"}, "1857": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "SWAP1", "path": "1"}, "1858": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "SWAP2", "path": "1"}, "1859": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6012, 6055], "op": "SSTORE", "path": "1"}, "1860": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "SWAP1", "path": "1", "statement": 20}, "1861": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "MLOAD", "path": "1"}, "1862": {"op": "DUP4"}, "1863": {"op": "DUP2"}, "1864": {"op": "MSTORE"}, "1865": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "PUSH32", "path": "1", "value": "0xF92A8A7980EB38C3C210AD55B80880529BCCDBC8206E7CDB24D9F52C6A5171E8"}, "1898": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "SWAP2", "path": "1"}, "1899": {"op": "ADD"}, "1900": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "PUSH1", "path": "1", "value": "0x40"}, "1902": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "MLOAD", "path": "1"}, "1903": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "DUP1", "path": "1"}, "1904": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "SWAP2", "path": "1"}, "1905": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "SUB", "path": "1"}, "1906": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "SWAP1", "path": "1"}, "1907": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [6070, 6113], "op": "LOG1", "path": "1"}, "1908": {"offset": [1979, 2249], "op": "POP", "path": "1"}, "1909": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5920, 6120], "op": "POP", "path": "1"}, "1910": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "o", "offset": [5920, 6120], "op": "JUMP", "path": "1"}, "1911": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "JUMPDEST", "path": "1"}, "1912": {"offset": [2402, 2412], "op": "PUSH1", "path": "1", "value": "0x5"}, "1914": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2402, 2412], "op": "SLOAD", "path": "1"}, "1915": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6195, 6202], "op": "PUSH1", "path": "1", "value": "0x0"}, "1917": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6195, 6202], "op": "SWAP1", "path": "1"}, "1918": {"op": "PUSH1", "value": "0x1"}, "1920": {"op": "PUSH1", "value": "0x1"}, "1922": {"op": "PUSH1", "value": "0xA0"}, "1924": {"op": "SHL"}, "1925": {"op": "SUB"}, "1926": {"offset": [2402, 2412], "op": "AND", "path": "1"}, "1927": {"offset": [2388, 2398], "op": "CALLER", "path": "1"}, "1928": {"offset": [2388, 2412], "op": "EQ", "path": "1"}, "1929": {"offset": [2380, 2456], "op": "PUSH2", "path": "1", "value": "0x7A4"}, "1932": {"offset": [2380, 2456], "op": "JUMPI", "path": "1"}, "1933": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "PUSH1", "path": "1", "value": "0x40"}, "1935": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "MLOAD", "path": "1"}, "1936": {"op": "PUSH3", "value": "0x461BCD"}, "1940": {"op": "PUSH1", "value": "0xE5"}, "1942": {"op": "SHL"}, "1943": {"offset": [2380, 2456], "op": "DUP2", "path": "1"}, "1944": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "MSTORE", "path": "1"}, "1945": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "PUSH1", "path": "1", "value": "0x4"}, "1947": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "ADD", "path": "1"}, "1948": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "PUSH2", "path": "1", "value": "0x2C9"}, "1951": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "SWAP1", "path": "1"}, "1952": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "PUSH2", "path": "1", "value": "0xF59"}, "1955": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "jump": "i", "offset": [2380, 2456], "op": "JUMP", "path": "1"}, "1956": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [2380, 2456], "op": "JUMPDEST", "path": "1"}, "1957": {"op": "POP"}, "1958": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6220, 6237], "op": "PUSH1", "path": "1", "statement": 21, "value": "0x6"}, "1960": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6220, 6237], "op": "SLOAD", "path": "1"}, "1961": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "offset": [6126, 6244], "op": "SWAP1", "path": "1"}, "1962": {"fn": "SourceDomainSideBridge.GetGovernanceBalance", "jump": "o", "offset": [6126, 6244], "op": "JUMP", "path": "1"}, "1963": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "JUMPDEST", "path": "1"}, "1964": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4612, 4647], "op": "PUSH1", "path": "1", "value": "0x0"}, "1966": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4650, 4699], "op": "PUSH2", "path": "1", "value": "0x7B6"}, "1969": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4687, 4698], "op": "DUP3", "path": "1"}, "1970": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4650, 4686], "op": "PUSH2", "path": "1", "value": "0xB3F"}, "1973": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4650, 4699], "op": "JUMP", "path": "1"}, "1974": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4650, 4699], "op": "JUMPDEST", "path": "1"}, "1975": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "PUSH1", "path": "1", "statement": 22, "value": "0x0"}, "1977": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "DUP2", "path": "1"}, "1978": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "DUP2", "path": "1"}, "1979": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "MSTORE", "path": "1"}, "1980": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4732], "op": "PUSH1", "path": "1", "value": "0x1"}, "1982": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "PUSH1", "path": "1", "value": "0x20"}, "1984": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "MSTORE", "path": "1"}, "1985": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "PUSH1", "path": "1", "value": "0x40"}, "1987": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "SWAP1", "path": "1"}, "1988": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "KECCAK256", "path": "1"}, "1989": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "SLOAD", "path": "1"}, "1990": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4612, 4699], "op": "SWAP1", "path": "1"}, "1991": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4612, 4699], "op": "SWAP2", "path": "1"}, "1992": {"op": "POP"}, "1993": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "PUSH1", "path": "1", "value": "0xFF"}, "1995": {"branch": 38, "fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4761], "op": "AND", "path": "1"}, "1996": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "PUSH2", "path": "1", "value": "0x817"}, "1999": {"branch": 38, "fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "JUMPI", "path": "1"}, "2000": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "PUSH1", "path": "1", "value": "0x40"}, "2002": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "MLOAD", "path": "1"}, "2003": {"op": "PUSH3", "value": "0x461BCD"}, "2007": {"op": "PUSH1", "value": "0xE5"}, "2009": {"op": "SHL"}, "2010": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "DUP2", "path": "1"}, "2011": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "MSTORE", "path": "1"}, "2012": {"op": "PUSH1", "value": "0x20"}, "2014": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "PUSH1", "path": "1", "value": "0x4"}, "2016": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "DUP3", "path": "1"}, "2017": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "ADD", "path": "1"}, "2018": {"op": "MSTORE"}, "2019": {"op": "PUSH1", "value": "0x19"}, "2021": {"op": "PUSH1", "value": "0x24"}, "2023": {"op": "DUP3"}, "2024": {"op": "ADD"}, "2025": {"op": "MSTORE"}, "2026": {"op": "PUSH32", "value": "0x496E76616C6964652052657761726444617461206C6973742E00000000000000"}, "2059": {"op": "PUSH1", "value": "0x44"}, "2061": {"op": "DUP3"}, "2062": {"op": "ADD"}, "2063": {"op": "MSTORE"}, "2064": {"op": "PUSH1", "value": "0x64"}, "2066": {"op": "ADD"}, "2067": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "PUSH2", "path": "1", "value": "0x2C9"}, "2070": {"op": "JUMP"}, "2071": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4709, 4791], "op": "JUMPDEST", "path": "1"}, "2072": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4801, 4825], "op": "PUSH1", "path": "1", "statement": 23, "value": "0x2"}, "2074": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4801, 4855], "op": "DUP2", "path": "1"}, "2075": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4801, 4855], "op": "SWAP1", "path": "1"}, "2076": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4801, 4855], "op": "SSTORE", "path": "1"}, "2077": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4869, 4875], "op": "PUSH1", "path": "1", "value": "0x0"}, "2079": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4865, 5738], "op": "JUMPDEST", "path": "1"}, "2080": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4885, 4896], "op": "DUP3", "path": "1"}, "2081": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4885, 4903], "op": "MLOAD", "path": "1"}, "2082": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4881, 4882], "op": "DUP2", "path": "1"}, "2083": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4881, 4903], "op": "LT", "path": "1"}, "2084": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4865, 5738], "op": "ISZERO", "path": "1"}, "2085": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4865, 5738], "op": "PUSH2", "path": "1", "value": "0xB3A"}, "2088": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4865, 5738], "op": "JUMPI", "path": "1"}, "2089": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4946], "op": "PUSH1", "path": "1", "value": "0x0"}, "2091": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "DUP1", "path": "1"}, "2092": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4958], "op": "DUP5", "path": "1"}, "2093": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4959, 4960], "op": "DUP4", "path": "1"}, "2094": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "DUP2", "path": "1"}, "2095": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "MLOAD", "path": "1"}, "2096": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "DUP2", "path": "1"}, "2097": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "LT", "path": "1"}, "2098": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "PUSH2", "path": "1", "value": "0x83D"}, "2101": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "JUMPI", "path": "1"}, "2102": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "PUSH2", "path": "1", "value": "0x83D"}, "2105": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2108": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4947, 4961], "op": "JUMP", "path": "1"}, "2109": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "JUMPDEST", "path": "1"}, "2110": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "PUSH1", "path": "1", "value": "0x20"}, "2112": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "SWAP1", "path": "1"}, "2113": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "DUP2", "path": "1"}, "2114": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "MUL", "path": "1"}, "2115": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "SWAP2", "path": "1"}, "2116": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "SWAP1", "path": "1"}, "2117": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "SWAP2", "path": "1"}, "2118": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "ADD", "path": "1"}, "2119": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "DUP2", "path": "1"}, "2120": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "ADD", "path": "1"}, "2121": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4961], "op": "MLOAD", "path": "1"}, "2122": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4978], "op": "MLOAD", "path": "1"}, "2123": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "DUP3", "path": "1"}, "2124": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "MSTORE", "path": "1"}, "2125": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "DUP2", "path": "1"}, "2126": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "ADD", "path": "1"}, "2127": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "SWAP2", "path": "1"}, "2128": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "SWAP1", "path": "1"}, "2129": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "SWAP2", "path": "1"}, "2130": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "MSTORE", "path": "1"}, "2131": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "PUSH1", "path": "1", "value": "0x40"}, "2133": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "ADD", "path": "1"}, "2134": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4947, 4978], "op": "PUSH1", "path": "1", "value": "0x0"}, "2136": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "KECCAK256", "path": "1"}, "2137": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "SLOAD", "path": "1"}, "2138": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "PUSH1", "path": "1", "value": "0xFF"}, "2140": {"branch": 39, "fn": "SourceDomainSideBridge.processClaims", "offset": [4927, 4979], "op": "AND", "path": "1"}, "2141": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4924, 5728], "op": "ISZERO", "path": "1"}, "2142": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4924, 5728], "op": "PUSH2", "path": "1", "value": "0xB28"}, "2145": {"branch": 39, "fn": "SourceDomainSideBridge.processClaims", "offset": [4924, 5728], "op": "JUMPI", "path": "1"}, "2146": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4998, 5010], "op": "PUSH1", "path": "1", "value": "0x0"}, "2148": {"offset": [336, 378], "op": "DUP1", "path": "1"}, "2149": {"op": "PUSH1", "value": "0x1"}, "2151": {"op": "PUSH1", "value": "0x1"}, "2153": {"op": "PUSH1", "value": "0xA0"}, "2155": {"op": "SHL"}, "2156": {"op": "SUB"}, "2157": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5075], "op": "AND", "path": "1"}, "2158": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5042], "op": "DUP5", "path": "1"}, "2159": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5043, 5044], "op": "DUP4", "path": "1"}, "2160": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "DUP2", "path": "1"}, "2161": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "MLOAD", "path": "1"}, "2162": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "DUP2", "path": "1"}, "2163": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "LT", "path": "1"}, "2164": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "PUSH2", "path": "1", "value": "0x87F"}, "2167": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "JUMPI", "path": "1"}, "2168": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "PUSH2", "path": "1", "value": "0x87F"}, "2171": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2174": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5031, 5045], "op": "JUMP", "path": "1"}, "2175": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "JUMPDEST", "path": "1"}, "2176": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "PUSH1", "path": "1", "value": "0x20"}, "2178": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "MUL", "path": "1"}, "2179": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "PUSH1", "path": "1", "value": "0x20"}, "2181": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "ADD", "path": "1"}, "2182": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "ADD", "path": "1"}, "2183": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5045], "op": "MLOAD", "path": "1"}, "2184": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5058], "op": "PUSH1", "path": "1", "value": "0x20"}, "2186": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5058], "op": "ADD", "path": "1"}, "2187": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5058], "op": "MLOAD", "path": "1"}, "2188": {"op": "PUSH1", "value": "0x1"}, "2190": {"op": "PUSH1", "value": "0x1"}, "2192": {"op": "PUSH1", "value": "0xA0"}, "2194": {"op": "SHL"}, "2195": {"op": "SUB"}, "2196": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5075], "op": "AND", "path": "1"}, "2197": {"branch": 40, "fn": "SourceDomainSideBridge.processClaims", "offset": [5031, 5075], "op": "SUB", "path": "1"}, "2198": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5028, 5639], "op": "PUSH2", "path": "1", "value": "0x94A"}, "2201": {"branch": 40, "fn": "SourceDomainSideBridge.processClaims", "offset": [5028, 5639], "op": "JUMPI", "path": "1"}, "2202": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5099, 5107], "op": "PUSH1", "path": "1", "value": "0x0"}, "2204": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5132], "op": "DUP5", "path": "1"}, "2205": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5133, 5134], "op": "DUP4", "path": "1"}, "2206": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "DUP2", "path": "1"}, "2207": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "MLOAD", "path": "1"}, "2208": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "DUP2", "path": "1"}, "2209": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "LT", "path": "1"}, "2210": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "PUSH2", "path": "1", "value": "0x8AD"}, "2213": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "JUMPI", "path": "1"}, "2214": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "PUSH2", "path": "1", "value": "0x8AD"}, "2217": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2220": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5121, 5135], "op": "JUMP", "path": "1"}, "2221": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "JUMPDEST", "path": "1"}, "2222": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "PUSH1", "path": "1", "value": "0x20"}, "2224": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "MUL", "path": "1"}, "2225": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "PUSH1", "path": "1", "value": "0x20"}, "2227": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "ADD", "path": "1"}, "2228": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "ADD", "path": "1"}, "2229": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5135], "op": "MLOAD", "path": "1"}, "2230": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5143], "op": "PUSH1", "path": "1", "value": "0x40"}, "2232": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5143], "op": "ADD", "path": "1"}, "2233": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5121, 5143], "op": "MLOAD", "path": "1"}, "2234": {"op": "PUSH1", "value": "0x1"}, "2236": {"op": "PUSH1", "value": "0x1"}, "2238": {"op": "PUSH1", "value": "0xA0"}, "2240": {"op": "SHL"}, "2241": {"op": "SUB"}, "2242": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5149], "op": "AND", "path": "1"}, "2243": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5198, 5199], "op": "PUSH1", "path": "1", "value": "0x2"}, "2245": {"offset": [642, 651], "op": "PUSH6", "path": "1", "value": "0x2BAF524C400"}, "2252": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5188, 5199], "op": "PUSH2", "path": "1", "value": "0x8D5"}, "2255": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5188, 5199], "op": "SWAP2", "path": "1"}, "2256": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5188, 5199], "op": "SWAP1", "path": "1"}, "2257": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5188, 5199], "op": "PUSH2", "path": "1", "value": "0xE8C"}, "2260": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5188, 5199], "op": "JUMP", "path": "1"}, "2261": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5188, 5199], "op": "JUMPDEST", "path": "1"}, "2262": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5168], "op": "DUP7", "path": "1"}, "2263": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5169, 5170], "op": "DUP6", "path": "1"}, "2264": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "DUP2", "path": "1"}, "2265": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "MLOAD", "path": "1"}, "2266": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "DUP2", "path": "1"}, "2267": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "LT", "path": "1"}, "2268": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "PUSH2", "path": "1", "value": "0x8E7"}, "2271": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "JUMPI", "path": "1"}, "2272": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "PUSH2", "path": "1", "value": "0x8E7"}, "2275": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2278": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5157, 5171], "op": "JUMP", "path": "1"}, "2279": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "JUMPDEST", "path": "1"}, "2280": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "PUSH1", "path": "1", "value": "0x20"}, "2282": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "MUL", "path": "1"}, "2283": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "PUSH1", "path": "1", "value": "0x20"}, "2285": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "ADD", "path": "1"}, "2286": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "ADD", "path": "1"}, "2287": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5171], "op": "MLOAD", "path": "1"}, "2288": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5185], "op": "PUSH1", "path": "1", "value": "0x60"}, "2290": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5185], "op": "ADD", "path": "1"}, "2291": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5185], "op": "MLOAD", "path": "1"}, "2292": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5199], "op": "PUSH2", "path": "1", "value": "0x8FD"}, "2295": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5199], "op": "SWAP2", "path": "1"}, "2296": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5199], "op": "SWAP1", "path": "1"}, "2297": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5199], "op": "PUSH2", "path": "1", "value": "0xE32"}, "2300": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5157, 5199], "op": "JUMP", "path": "1"}, "2301": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5157, 5199], "op": "JUMPDEST", "path": "1"}, "2302": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x40"}, "2304": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "MLOAD", "path": "1"}, "2305": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x0"}, "2307": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP2", "path": "1"}, "2308": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP2", "path": "1"}, "2309": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP2", "path": "1"}, "2310": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP6", "path": "1"}, "2311": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP8", "path": "1"}, "2312": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "GAS", "path": "1"}, "2313": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "CALL", "path": "1"}, "2314": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "SWAP3", "path": "1"}, "2315": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "POP", "path": "1"}, "2316": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "POP", "path": "1"}, "2317": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "POP", "path": "1"}, "2318": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "RETURNDATASIZE", "path": "1"}, "2319": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP1", "path": "1"}, "2320": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x0"}, "2322": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP2", "path": "1"}, "2323": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "EQ", "path": "1"}, "2324": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH2", "path": "1", "value": "0x939"}, "2327": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "JUMPI", "path": "1"}, "2328": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x40"}, "2330": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "MLOAD", "path": "1"}, "2331": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "SWAP2", "path": "1"}, "2332": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "POP", "path": "1"}, "2333": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x1F"}, "2335": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "NOT", "path": "1"}, "2336": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x3F"}, "2338": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "RETURNDATASIZE", "path": "1"}, "2339": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "ADD", "path": "1"}, "2340": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "AND", "path": "1"}, "2341": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP3", "path": "1"}, "2342": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "ADD", "path": "1"}, "2343": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x40"}, "2345": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "MSTORE", "path": "1"}, "2346": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "RETURNDATASIZE", "path": "1"}, "2347": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP3", "path": "1"}, "2348": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "MSTORE", "path": "1"}, "2349": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "RETURNDATASIZE", "path": "1"}, "2350": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x0"}, "2352": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x20"}, "2354": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "DUP5", "path": "1"}, "2355": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "ADD", "path": "1"}, "2356": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "RETURNDATACOPY", "path": "1"}, "2357": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH2", "path": "1", "value": "0x93E"}, "2360": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "JUMP", "path": "1"}, "2361": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "JUMPDEST", "path": "1"}, "2362": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "PUSH1", "path": "1", "value": "0x60"}, "2364": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "SWAP2", "path": "1"}, "2365": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "POP", "path": "1"}, "2366": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5113, 5204], "op": "JUMPDEST", "path": "1"}, "2367": {"op": "POP"}, "2368": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5098, 5204], "op": "SWAP1", "path": "1"}, "2369": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5098, 5204], "op": "SWAP3", "path": "1"}, "2370": {"op": "POP"}, "2371": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5028, 5639], "op": "PUSH2", "path": "1", "value": "0xAC5"}, "2374": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5028, 5639], "op": "SWAP2", "path": "1"}, "2375": {"op": "POP"}, "2376": {"op": "POP"}, "2377": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5028, 5639], "op": "JUMP", "path": "1"}, "2378": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5028, 5639], "op": "JUMPDEST", "path": "1"}, "2379": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5284, 5295], "op": "PUSH1", "path": "1", "value": "0x0"}, "2381": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5315], "op": "DUP5", "path": "1"}, "2382": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5316, 5317], "op": "DUP4", "path": "1"}, "2383": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "DUP2", "path": "1"}, "2384": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "MLOAD", "path": "1"}, "2385": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "DUP2", "path": "1"}, "2386": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "LT", "path": "1"}, "2387": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "PUSH2", "path": "1", "value": "0x95E"}, "2390": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "JUMPI", "path": "1"}, "2391": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "PUSH2", "path": "1", "value": "0x95E"}, "2394": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2397": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5304, 5318], "op": "JUMP", "path": "1"}, "2398": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "JUMPDEST", "path": "1"}, "2399": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "PUSH1", "path": "1", "value": "0x20"}, "2401": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "MUL", "path": "1"}, "2402": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "PUSH1", "path": "1", "value": "0x20"}, "2404": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "ADD", "path": "1"}, "2405": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "ADD", "path": "1"}, "2406": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5318], "op": "MLOAD", "path": "1"}, "2407": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5331], "op": "PUSH1", "path": "1", "value": "0x20"}, "2409": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5331], "op": "ADD", "path": "1"}, "2410": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5304, 5331], "op": "MLOAD", "path": "1"}, "2411": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5284, 5332], "op": "SWAP1", "path": "1"}, "2412": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5284, 5332], "op": "POP", "path": "1"}, "2413": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5369], "op": "DUP1", "path": "1", "statement": 24}, "2414": {"op": "PUSH1", "value": "0x1"}, "2416": {"op": "PUSH1", "value": "0x1"}, "2418": {"op": "PUSH1", "value": "0xA0"}, "2420": {"op": "SHL"}, "2421": {"op": "SUB"}, "2422": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5382], "op": "AND", "path": "1"}, "2423": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5382], "op": "PUSH4", "path": "1", "value": "0x23B872DD"}, "2428": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5391, 5395], "op": "ADDRESS", "path": "1"}, "2429": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5409], "op": "DUP8", "path": "1"}, "2430": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5410, 5411], "op": "DUP7", "path": "1"}, "2431": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "DUP2", "path": "1"}, "2432": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "MLOAD", "path": "1"}, "2433": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "DUP2", "path": "1"}, "2434": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "LT", "path": "1"}, "2435": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "PUSH2", "path": "1", "value": "0x98E"}, "2438": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "JUMPI", "path": "1"}, "2439": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "PUSH2", "path": "1", "value": "0x98E"}, "2442": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2445": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5398, 5412], "op": "JUMP", "path": "1"}, "2446": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "JUMPDEST", "path": "1"}, "2447": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "PUSH1", "path": "1", "value": "0x20"}, "2449": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "MUL", "path": "1"}, "2450": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "PUSH1", "path": "1", "value": "0x20"}, "2452": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "ADD", "path": "1"}, "2453": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "ADD", "path": "1"}, "2454": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5412], "op": "MLOAD", "path": "1"}, "2455": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5420], "op": "PUSH1", "path": "1", "value": "0x40"}, "2457": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5420], "op": "ADD", "path": "1"}, "2458": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5398, 5420], "op": "MLOAD", "path": "1"}, "2459": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5457], "op": "DUP9", "path": "1"}, "2460": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5458, 5459], "op": "DUP8", "path": "1"}, "2461": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "DUP2", "path": "1"}, "2462": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "MLOAD", "path": "1"}, "2463": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "DUP2", "path": "1"}, "2464": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "LT", "path": "1"}, "2465": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "PUSH2", "path": "1", "value": "0x9AC"}, "2468": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "JUMPI", "path": "1"}, "2469": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "PUSH2", "path": "1", "value": "0x9AC"}, "2472": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2475": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5446, 5460], "op": "JUMP", "path": "1"}, "2476": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "JUMPDEST", "path": "1"}, "2477": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "PUSH1", "path": "1", "value": "0x20"}, "2479": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "SWAP1", "path": "1"}, "2480": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "DUP2", "path": "1"}, "2481": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "MUL", "path": "1"}, "2482": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "SWAP2", "path": "1"}, "2483": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "SWAP1", "path": "1"}, "2484": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "SWAP2", "path": "1"}, "2485": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "ADD", "path": "1"}, "2486": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "ADD", "path": "1"}, "2487": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5460], "op": "MLOAD", "path": "1"}, "2488": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5474], "op": "PUSH1", "path": "1", "value": "0x60"}, "2490": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5474], "op": "ADD", "path": "1"}, "2491": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5446, 5474], "op": "MLOAD", "path": "1"}, "2492": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x40"}, "2494": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "MLOAD", "path": "1"}, "2495": {"op": "PUSH1", "value": "0x1"}, "2497": {"op": "PUSH1", "value": "0x1"}, "2499": {"op": "PUSH1", "value": "0xE0"}, "2501": {"op": "SHL"}, "2502": {"op": "SUB"}, "2503": {"op": "NOT"}, "2504": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0xE0"}, "2506": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP7", "path": "1"}, "2507": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "SWAP1", "path": "1"}, "2508": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "SHL", "path": "1"}, "2509": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "AND", "path": "1"}, "2510": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP2", "path": "1"}, "2511": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "MSTORE", "path": "1"}, "2512": {"op": "PUSH1", "value": "0x1"}, "2514": {"op": "PUSH1", "value": "0x1"}, "2516": {"op": "PUSH1", "value": "0xA0"}, "2518": {"op": "SHL"}, "2519": {"op": "SUB"}, "2520": {"op": "SWAP4"}, "2521": {"op": "DUP5"}, "2522": {"op": "AND"}, "2523": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x4"}, "2525": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP3", "path": "1"}, "2526": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "ADD", "path": "1"}, "2527": {"op": "MSTORE"}, "2528": {"op": "SWAP3"}, "2529": {"op": "SWAP1"}, "2530": {"op": "SWAP2"}, "2531": {"op": "AND"}, "2532": {"op": "PUSH1", "value": "0x24"}, "2534": {"op": "DUP4"}, "2535": {"op": "ADD"}, "2536": {"op": "MSTORE"}, "2537": {"op": "PUSH1", "value": "0x44"}, "2539": {"op": "DUP3"}, "2540": {"op": "ADD"}, "2541": {"op": "MSTORE"}, "2542": {"op": "PUSH1", "value": "0x64"}, "2544": {"op": "ADD"}, "2545": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x20"}, "2547": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x40"}, "2549": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "MLOAD", "path": "1"}, "2550": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP1", "path": "1"}, "2551": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP4", "path": "1"}, "2552": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "SUB", "path": "1"}, "2553": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP2", "path": "1"}, "2554": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x0"}, "2556": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP8", "path": "1"}, "2557": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "GAS", "path": "1"}, "2558": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "CALL", "path": "1"}, "2559": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "ISZERO", "path": "1"}, "2560": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP1", "path": "1"}, "2561": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "ISZERO", "path": "1"}, "2562": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH2", "path": "1", "value": "0xA0F"}, "2565": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "JUMPI", "path": "1"}, "2566": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "RETURNDATASIZE", "path": "1"}, "2567": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x0"}, "2569": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP1", "path": "1"}, "2570": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "RETURNDATACOPY", "path": "1"}, "2571": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "RETURNDATASIZE", "path": "1"}, "2572": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x0"}, "2574": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "REVERT", "path": "1"}, "2575": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "JUMPDEST", "path": "1"}, "2576": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "POP", "path": "1"}, "2577": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "POP", "path": "1"}, "2578": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "POP", "path": "1"}, "2579": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "POP", "path": "1"}, "2580": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x40"}, "2582": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "MLOAD", "path": "1"}, "2583": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "RETURNDATASIZE", "path": "1"}, "2584": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x1F"}, "2586": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "NOT", "path": "1"}, "2587": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x1F"}, "2589": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP3", "path": "1"}, "2590": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "ADD", "path": "1"}, "2591": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "AND", "path": "1"}, "2592": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP3", "path": "1"}, "2593": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "ADD", "path": "1"}, "2594": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP1", "path": "1"}, "2595": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH1", "path": "1", "value": "0x40"}, "2597": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "MSTORE", "path": "1"}, "2598": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "POP", "path": "1"}, "2599": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "DUP2", "path": "1"}, "2600": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "ADD", "path": "1"}, "2601": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "SWAP1", "path": "1"}, "2602": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH2", "path": "1", "value": "0xA33"}, "2605": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "SWAP2", "path": "1"}, "2606": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "SWAP1", "path": "1"}, "2607": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "PUSH2", "path": "1", "value": "0xE4A"}, "2610": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5364, 5475], "op": "JUMP", "path": "1"}, "2611": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5364, 5475], "op": "JUMPDEST", "path": "1"}, "2612": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5354, 5475], "op": "SWAP2", "path": "1"}, "2613": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5354, 5475], "op": "POP", "path": "1"}, "2614": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5499, 5507], "op": "PUSH1", "path": "1", "value": "0x0"}, "2616": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5532], "op": "DUP6", "path": "1"}, "2617": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5533, 5534], "op": "DUP5", "path": "1"}, "2618": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "DUP2", "path": "1"}, "2619": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "MLOAD", "path": "1"}, "2620": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "DUP2", "path": "1"}, "2621": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "LT", "path": "1"}, "2622": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "PUSH2", "path": "1", "value": "0xA49"}, "2625": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "JUMPI", "path": "1"}, "2626": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "PUSH2", "path": "1", "value": "0xA49"}, "2629": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2632": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5521, 5535], "op": "JUMP", "path": "1"}, "2633": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "JUMPDEST", "path": "1"}, "2634": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "PUSH1", "path": "1", "value": "0x20"}, "2636": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "MUL", "path": "1"}, "2637": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "PUSH1", "path": "1", "value": "0x20"}, "2639": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "ADD", "path": "1"}, "2640": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "ADD", "path": "1"}, "2641": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5535], "op": "MLOAD", "path": "1"}, "2642": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5543], "op": "PUSH1", "path": "1", "value": "0x40"}, "2644": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5543], "op": "ADD", "path": "1"}, "2645": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5521, 5543], "op": "MLOAD", "path": "1"}, "2646": {"op": "PUSH1", "value": "0x1"}, "2648": {"op": "PUSH1", "value": "0x1"}, "2650": {"op": "PUSH1", "value": "0xA0"}, "2652": {"op": "SHL"}, "2653": {"op": "SUB"}, "2654": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5549], "op": "AND", "path": "1"}, "2655": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5567, 5568], "op": "PUSH1", "path": "1", "value": "0x2"}, "2657": {"offset": [642, 651], "op": "PUSH6", "path": "1", "value": "0x2BAF524C400"}, "2664": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5557, 5568], "op": "PUSH2", "path": "1", "value": "0xA71"}, "2667": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5557, 5568], "op": "SWAP2", "path": "1"}, "2668": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5557, 5568], "op": "SWAP1", "path": "1"}, "2669": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5557, 5568], "op": "PUSH2", "path": "1", "value": "0xE8C"}, "2672": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5557, 5568], "op": "JUMP", "path": "1"}, "2673": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5557, 5568], "op": "JUMPDEST", "path": "1"}, "2674": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x40"}, "2676": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "MLOAD", "path": "1"}, "2677": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x0"}, "2679": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP2", "path": "1"}, "2680": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP2", "path": "1"}, "2681": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP2", "path": "1"}, "2682": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP6", "path": "1"}, "2683": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP8", "path": "1"}, "2684": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "GAS", "path": "1"}, "2685": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "CALL", "path": "1"}, "2686": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "SWAP3", "path": "1"}, "2687": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "POP", "path": "1"}, "2688": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "POP", "path": "1"}, "2689": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "POP", "path": "1"}, "2690": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "RETURNDATASIZE", "path": "1"}, "2691": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP1", "path": "1"}, "2692": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x0"}, "2694": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP2", "path": "1"}, "2695": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "EQ", "path": "1"}, "2696": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH2", "path": "1", "value": "0xAAD"}, "2699": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "JUMPI", "path": "1"}, "2700": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x40"}, "2702": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "MLOAD", "path": "1"}, "2703": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "SWAP2", "path": "1"}, "2704": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "POP", "path": "1"}, "2705": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x1F"}, "2707": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "NOT", "path": "1"}, "2708": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x3F"}, "2710": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "RETURNDATASIZE", "path": "1"}, "2711": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "ADD", "path": "1"}, "2712": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "AND", "path": "1"}, "2713": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP3", "path": "1"}, "2714": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "ADD", "path": "1"}, "2715": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x40"}, "2717": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "MSTORE", "path": "1"}, "2718": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "RETURNDATASIZE", "path": "1"}, "2719": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP3", "path": "1"}, "2720": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "MSTORE", "path": "1"}, "2721": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "RETURNDATASIZE", "path": "1"}, "2722": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x0"}, "2724": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x20"}, "2726": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "DUP5", "path": "1"}, "2727": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "ADD", "path": "1"}, "2728": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "RETURNDATACOPY", "path": "1"}, "2729": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH2", "path": "1", "value": "0xAB2"}, "2732": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "JUMP", "path": "1"}, "2733": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "JUMPDEST", "path": "1"}, "2734": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "PUSH1", "path": "1", "value": "0x60"}, "2736": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "SWAP2", "path": "1"}, "2737": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "POP", "path": "1"}, "2738": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "JUMPDEST", "path": "1"}, "2739": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5513, 5573], "op": "POP", "path": "1"}, "2740": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5498, 5573], "op": "POP", "path": "1"}, "2741": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5498, 5573], "op": "SWAP1", "path": "1"}, "2742": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5498, 5573], "op": "POP", "path": "1"}, "2743": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5606, 5613], "op": "DUP3", "path": "1", "statement": 25}, "2744": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5606, 5620], "op": "DUP1", "path": "1"}, "2745": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5606, 5620], "op": "ISZERO", "path": "1"}, "2746": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5606, 5620], "op": "PUSH2", "path": "1", "value": "0xAC0"}, "2749": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5606, 5620], "op": "JUMPI", "path": "1"}, "2750": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5606, 5620], "op": "POP", "path": "1"}, "2751": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5617, 5620], "op": "DUP1", "path": "1"}, "2752": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5606, 5620], "op": "JUMPDEST", "path": "1"}, "2753": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5596, 5620], "op": "SWAP3", "path": "1"}, "2754": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5596, 5620], "op": "POP", "path": "1"}, "2755": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5262, 5639], "op": "POP", "path": "1"}, "2756": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5262, 5639], "op": "POP", "path": "1"}, "2757": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5028, 5639], "op": "JUMPDEST", "path": "1"}, "2758": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "PUSH32", "path": "1", "statement": 26, "value": "0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A"}, "2791": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5683], "op": "DUP5", "path": "1"}, "2792": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5684, 5685], "op": "DUP4", "path": "1"}, "2793": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "DUP2", "path": "1"}, "2794": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "MLOAD", "path": "1"}, "2795": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "DUP2", "path": "1"}, "2796": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "LT", "path": "1"}, "2797": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "PUSH2", "path": "1", "value": "0xAF8"}, "2800": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "JUMPI", "path": "1"}, "2801": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "PUSH2", "path": "1", "value": "0xAF8"}, "2804": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2807": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [5672, 5686], "op": "JUMP", "path": "1"}, "2808": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "JUMPDEST", "path": "1"}, "2809": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "PUSH1", "path": "1", "value": "0x20"}, "2811": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "MUL", "path": "1"}, "2812": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "PUSH1", "path": "1", "value": "0x20"}, "2814": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "ADD", "path": "1"}, "2815": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "ADD", "path": "1"}, "2816": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5686], "op": "MLOAD", "path": "1"}, "2817": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5703], "op": "PUSH1", "path": "1", "value": "0x0"}, "2819": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5703], "op": "ADD", "path": "1"}, "2820": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5672, 5703], "op": "MLOAD", "path": "1"}, "2821": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5705, 5712], "op": "DUP3", "path": "1"}, "2822": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "PUSH1", "path": "1", "value": "0x40"}, "2824": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "MLOAD", "path": "1"}, "2825": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "PUSH2", "path": "1", "value": "0xB1E"}, "2828": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "SWAP3", "path": "1"}, "2829": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "SWAP2", "path": "1"}, "2830": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "SWAP1", "path": "1"}, "2831": {"op": "SWAP2"}, "2832": {"op": "DUP3"}, "2833": {"op": "MSTORE"}, "2834": {"op": "ISZERO"}, "2835": {"op": "ISZERO"}, "2836": {"op": "PUSH1", "value": "0x20"}, "2838": {"op": "DUP3"}, "2839": {"op": "ADD"}, "2840": {"op": "MSTORE"}, "2841": {"op": "PUSH1", "value": "0x40"}, "2843": {"op": "ADD"}, "2844": {"op": "SWAP1"}, "2845": {"op": "JUMP"}, "2846": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "JUMPDEST", "path": "1"}, "2847": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "PUSH1", "path": "1", "value": "0x40"}, "2849": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "MLOAD", "path": "1"}, "2850": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "DUP1", "path": "1"}, "2851": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "SWAP2", "path": "1"}, "2852": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "SUB", "path": "1"}, "2853": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "SWAP1", "path": "1"}, "2854": {"fn": "SourceDomainSideBridge.processClaims", "offset": [5661, 5713], "op": "LOG1", "path": "1"}, "2855": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4980, 5728], "op": "POP", "path": "1"}, "2856": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4924, 5728], "op": "JUMPDEST", "path": "1"}, "2857": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4905, 4908], "op": "DUP1", "path": "1", "statement": 27}, "2858": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4905, 4908], "op": "PUSH2", "path": "1", "value": "0xB32"}, "2861": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4905, 4908], "op": "DUP2", "path": "1"}, "2862": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4905, 4908], "op": "PUSH2", "path": "1", "value": "0xE73"}, "2865": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4905, 4908], "op": "JUMP", "path": "1"}, "2866": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4905, 4908], "op": "JUMPDEST", "path": "1"}, "2867": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4905, 4908], "op": "SWAP2", "path": "1"}, "2868": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4905, 4908], "op": "POP", "path": "1"}, "2869": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4905, 4908], "op": "POP", "path": "1"}, "2870": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4865, 5738], "op": "PUSH2", "path": "1", "value": "0x81F"}, "2873": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4865, 5738], "op": "JUMP", "path": "1"}, "2874": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4865, 5738], "op": "JUMPDEST", "path": "1"}, "2875": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4865, 5738], "op": "POP", "path": "1"}, "2876": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4602, 5748], "op": "POP", "path": "1"}, "2877": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4529, 5748], "op": "POP", "path": "1"}, "2878": {"fn": "SourceDomainSideBridge.processClaims", "jump": "o", "offset": [4529, 5748], "op": "JUMP", "path": "1"}, "2879": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6458, 6878], "op": "JUMPDEST", "path": "1"}, "2880": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6615, 6639], "op": "PUSH1", "path": "1", "value": "0x2"}, "2882": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6615, 6639], "op": "SLOAD", "path": "1"}, "2883": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6559, 6566], "op": "PUSH1", "path": "1", "value": "0x0"}, "2885": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6559, 6566], "op": "SWAP1", "path": "1"}, "2886": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6559, 6566], "op": "DUP2", "path": "1"}, "2887": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6649, 6828], "op": "JUMPDEST", "path": "1"}, "2888": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6669, 6680], "op": "DUP4", "path": "1"}, "2889": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6669, 6687], "op": "MLOAD", "path": "1"}, "2890": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6665, 6666], "op": "DUP2", "path": "1"}, "2891": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6665, 6687], "op": "LT", "path": "1"}, "2892": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6649, 6828], "op": "ISZERO", "path": "1"}, "2893": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6649, 6828], "op": "PUSH2", "path": "1", "value": "0xC1C"}, "2896": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6649, 6828], "op": "JUMPI", "path": "1"}, "2897": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "statement": 28, "value": "0x2"}, "2899": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6773, 6800], "op": "DUP3", "path": "1"}, "2900": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6812], "op": "DUP6", "path": "1"}, "2901": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6813, 6814], "op": "DUP4", "path": "1"}, "2902": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "DUP2", "path": "1"}, "2903": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "MLOAD", "path": "1"}, "2904": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "DUP2", "path": "1"}, "2905": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "LT", "path": "1"}, "2906": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "PUSH2", "path": "1", "value": "0xB65"}, "2909": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "JUMPI", "path": "1"}, "2910": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "PUSH2", "path": "1", "value": "0xB65"}, "2913": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "PUSH2", "path": "1", "value": "0xFBD"}, "2916": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [6801, 6815], "op": "JUMP", "path": "1"}, "2917": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "JUMPDEST", "path": "1"}, "2918": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "PUSH1", "path": "1", "value": "0x20"}, "2920": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "SWAP1", "path": "1"}, "2921": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "DUP2", "path": "1"}, "2922": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "MUL", "path": "1"}, "2923": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "SWAP2", "path": "1"}, "2924": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "SWAP1", "path": "1"}, "2925": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "SWAP2", "path": "1"}, "2926": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "ADD", "path": "1"}, "2927": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "DUP2", "path": "1"}, "2928": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "ADD", "path": "1"}, "2929": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6801, 6815], "op": "MLOAD", "path": "1"}, "2930": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "PUSH1", "path": "1", "value": "0x40"}, "2932": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "DUP1", "path": "1"}, "2933": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "MLOAD", "path": "1"}, "2934": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "DUP1", "path": "1"}, "2935": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "DUP5", "path": "1"}, "2936": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "ADD", "path": "1"}, "2937": {"op": "SWAP5"}, "2938": {"op": "SWAP1"}, "2939": {"op": "SWAP5"}, "2940": {"op": "MSTORE"}, "2941": {"op": "DUP2"}, "2942": {"op": "MLOAD"}, "2943": {"op": "DUP5"}, "2944": {"op": "DUP3"}, "2945": {"op": "ADD"}, "2946": {"op": "MSTORE"}, "2947": {"op": "SWAP2"}, "2948": {"op": "DUP2"}, "2949": {"op": "ADD"}, "2950": {"op": "MLOAD"}, "2951": {"op": "PUSH1", "value": "0x1"}, "2953": {"op": "PUSH1", "value": "0x1"}, "2955": {"op": "PUSH1", "value": "0xA0"}, "2957": {"op": "SHL"}, "2958": {"op": "SUB"}, "2959": {"op": "SWAP1"}, "2960": {"op": "DUP2"}, "2961": {"op": "AND"}, "2962": {"op": "PUSH1", "value": "0x60"}, "2964": {"op": "DUP1"}, "2965": {"op": "DUP7"}, "2966": {"op": "ADD"}, "2967": {"op": "SWAP2"}, "2968": {"op": "SWAP1"}, "2969": {"op": "SWAP2"}, "2970": {"op": "MSTORE"}, "2971": {"op": "SWAP3"}, "2972": {"op": "DUP3"}, "2973": {"op": "ADD"}, "2974": {"op": "MLOAD"}, "2975": {"op": "AND"}, "2976": {"op": "PUSH1", "value": "0x80"}, "2978": {"op": "DUP5"}, "2979": {"op": "ADD"}, "2980": {"op": "MSTORE"}, "2981": {"op": "ADD"}, "2982": {"op": "MLOAD"}, "2983": {"op": "PUSH1", "value": "0xA0"}, "2985": {"op": "DUP3"}, "2986": {"op": "ADD"}, "2987": {"op": "MSTORE"}, "2988": {"op": "PUSH1", "value": "0xC0"}, "2990": {"op": "ADD"}, "2991": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "PUSH1", "path": "1", "value": "0x40"}, "2993": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "DUP1", "path": "1"}, "2994": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "MLOAD", "path": "1"}, "2995": {"op": "PUSH1", "value": "0x1F"}, "2997": {"op": "NOT"}, "2998": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "DUP2", "path": "1"}, "2999": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "DUP5", "path": "1"}, "3000": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "SUB", "path": "1"}, "3001": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "ADD", "path": "1"}, "3002": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "DUP2", "path": "1"}, "3003": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "MSTORE", "path": "1"}, "3004": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "SWAP1", "path": "1"}, "3005": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "DUP3", "path": "1"}, "3006": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "SWAP1", "path": "1"}, "3007": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6762, 6816], "op": "MSTORE", "path": "1"}, "3008": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH2", "path": "1", "value": "0xBC8"}, "3011": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "SWAP2", "path": "1"}, "3012": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH2", "path": "1", "value": "0xF05"}, "3015": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [6755, 6817], "op": "JUMP", "path": "1"}, "3016": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "JUMPDEST", "path": "1"}, "3017": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "value": "0x20"}, "3019": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "value": "0x40"}, "3021": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "MLOAD", "path": "1"}, "3022": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP1", "path": "1"}, "3023": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP4", "path": "1"}, "3024": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "SUB", "path": "1"}, "3025": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP2", "path": "1"}, "3026": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP6", "path": "1"}, "3027": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "GAS", "path": "1"}, "3028": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "STATICCALL", "path": "1"}, "3029": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "ISZERO", "path": "1"}, "3030": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP1", "path": "1"}, "3031": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "ISZERO", "path": "1"}, "3032": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH2", "path": "1", "value": "0xBE5"}, "3035": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "JUMPI", "path": "1"}, "3036": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "RETURNDATASIZE", "path": "1"}, "3037": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "value": "0x0"}, "3039": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP1", "path": "1"}, "3040": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "RETURNDATACOPY", "path": "1"}, "3041": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "RETURNDATASIZE", "path": "1"}, "3042": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "value": "0x0"}, "3044": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "REVERT", "path": "1"}, "3045": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "JUMPDEST", "path": "1"}, "3046": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "POP", "path": "1"}, "3047": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "POP", "path": "1"}, "3048": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "POP", "path": "1"}, "3049": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "value": "0x40"}, "3051": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "MLOAD", "path": "1"}, "3052": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "RETURNDATASIZE", "path": "1"}, "3053": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "value": "0x1F"}, "3055": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "NOT", "path": "1"}, "3056": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "value": "0x1F"}, "3058": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP3", "path": "1"}, "3059": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "ADD", "path": "1"}, "3060": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "AND", "path": "1"}, "3061": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP3", "path": "1"}, "3062": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "ADD", "path": "1"}, "3063": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP1", "path": "1"}, "3064": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH1", "path": "1", "value": "0x40"}, "3066": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "MSTORE", "path": "1"}, "3067": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "POP", "path": "1"}, "3068": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "DUP2", "path": "1"}, "3069": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "ADD", "path": "1"}, "3070": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "SWAP1", "path": "1"}, "3071": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH2", "path": "1", "value": "0xC08"}, "3074": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "SWAP2", "path": "1"}, "3075": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "SWAP1", "path": "1"}, "3076": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "PUSH2", "path": "1", "value": "0xF40"}, "3079": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [6755, 6817], "op": "JUMP", "path": "1"}, "3080": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6755, 6817], "op": "JUMPDEST", "path": "1"}, "3081": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6708, 6817], "op": "SWAP2", "path": "1"}, "3082": {"op": "POP"}, "3083": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6689, 6692], "op": "DUP1", "path": "1", "statement": 29}, "3084": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6689, 6692], "op": "PUSH2", "path": "1", "value": "0xC14"}, "3087": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6689, 6692], "op": "DUP2", "path": "1"}, "3088": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6689, 6692], "op": "PUSH2", "path": "1", "value": "0xE73"}, "3091": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [6689, 6692], "op": "JUMP", "path": "1"}, "3092": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6689, 6692], "op": "JUMPDEST", "path": "1"}, "3093": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6689, 6692], "op": "SWAP2", "path": "1"}, "3094": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6689, 6692], "op": "POP", "path": "1"}, "3095": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6689, 6692], "op": "POP", "path": "1"}, "3096": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6649, 6828], "op": "PUSH2", "path": "1", "value": "0xB47"}, "3099": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6649, 6828], "op": "JUMP", "path": "1"}, "3100": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6649, 6828], "op": "JUMPDEST", "path": "1"}, "3101": {"op": "POP"}, "3102": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6844, 6871], "op": "SWAP3", "path": "1", "statement": 30}, "3103": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [6458, 6878], "op": "SWAP2", "path": "1"}, "3104": {"op": "POP"}, "3105": {"op": "POP"}, "3106": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "o", "offset": [6458, 6878], "op": "JUMP", "path": "1"}, "3107": {"op": "JUMPDEST"}, "3108": {"op": "PUSH1", "value": "0x0"}, "3110": {"op": "PUSH1", "value": "0x20"}, "3112": {"op": "DUP3"}, "3113": {"op": "DUP5"}, "3114": {"op": "SUB"}, "3115": {"op": "SLT"}, "3116": {"op": "ISZERO"}, "3117": {"op": "PUSH2", "value": "0xC35"}, "3120": {"op": "JUMPI"}, "3121": {"op": "PUSH1", "value": "0x0"}, "3123": {"op": "DUP1"}, "3124": {"op": "REVERT"}, "3125": {"op": "JUMPDEST"}, "3126": {"op": "POP"}, "3127": {"op": "CALLDATALOAD"}, "3128": {"op": "SWAP2"}, "3129": {"op": "SWAP1"}, "3130": {"op": "POP"}, "3131": {"jump": "o", "op": "JUMP"}, "3132": {"op": "JUMPDEST"}, "3133": {"op": "PUSH1", "value": "0x1"}, "3135": {"op": "PUSH1", "value": "0x1"}, "3137": {"op": "PUSH1", "value": "0xA0"}, "3139": {"op": "SHL"}, "3140": {"op": "SUB"}, "3141": {"op": "DUP2"}, "3142": {"op": "AND"}, "3143": {"op": "DUP2"}, "3144": {"op": "EQ"}, "3145": {"op": "PUSH2", "value": "0xC51"}, "3148": {"op": "JUMPI"}, "3149": {"op": "PUSH1", "value": "0x0"}, "3151": {"op": "DUP1"}, "3152": {"op": "REVERT"}, "3153": {"op": "JUMPDEST"}, "3154": {"op": "POP"}, "3155": {"jump": "o", "op": "JUMP"}, "3156": {"op": "JUMPDEST"}, "3157": {"op": "PUSH1", "value": "0x0"}, "3159": {"op": "DUP1"}, "3160": {"op": "PUSH1", "value": "0x0"}, "3162": {"op": "DUP1"}, "3163": {"op": "PUSH1", "value": "0x80"}, "3165": {"op": "DUP6"}, "3166": {"op": "DUP8"}, "3167": {"op": "SUB"}, "3168": {"op": "SLT"}, "3169": {"op": "ISZERO"}, "3170": {"op": "PUSH2", "value": "0xC6A"}, "3173": {"op": "JUMPI"}, "3174": {"op": "PUSH1", "value": "0x0"}, "3176": {"op": "DUP1"}, "3177": {"op": "REVERT"}, "3178": {"op": "JUMPDEST"}, "3179": {"op": "DUP5"}, "3180": {"op": "CALLDATALOAD"}, "3181": {"op": "PUSH2", "value": "0xC75"}, "3184": {"op": "DUP2"}, "3185": {"op": "PUSH2", "value": "0xC3C"}, "3188": {"jump": "i", "op": "JUMP"}, "3189": {"op": "JUMPDEST"}, "3190": {"op": "SWAP4"}, "3191": {"op": "POP"}, "3192": {"op": "PUSH1", "value": "0x20"}, "3194": {"op": "DUP6"}, "3195": {"op": "ADD"}, "3196": {"op": "CALLDATALOAD"}, "3197": {"op": "PUSH2", "value": "0xC85"}, "3200": {"op": "DUP2"}, "3201": {"op": "PUSH2", "value": "0xC3C"}, "3204": {"jump": "i", "op": "JUMP"}, "3205": {"op": "JUMPDEST"}, "3206": {"op": "SWAP4"}, "3207": {"op": "SWAP7"}, "3208": {"op": "SWAP4"}, "3209": {"op": "SWAP6"}, "3210": {"op": "POP"}, "3211": {"op": "POP"}, "3212": {"op": "POP"}, "3213": {"op": "POP"}, "3214": {"op": "PUSH1", "value": "0x40"}, "3216": {"op": "DUP3"}, "3217": {"op": "ADD"}, "3218": {"op": "CALLDATALOAD"}, "3219": {"op": "SWAP2"}, "3220": {"op": "PUSH1", "value": "0x60"}, "3222": {"op": "ADD"}, "3223": {"op": "CALLDATALOAD"}, "3224": {"op": "SWAP1"}, "3225": {"jump": "o", "op": "JUMP"}, "3226": {"op": "JUMPDEST"}, "3227": {"op": "PUSH4", "value": "0x4E487B71"}, "3232": {"op": "PUSH1", "value": "0xE0"}, "3234": {"op": "SHL"}, "3235": {"op": "PUSH1", "value": "0x0"}, "3237": {"op": "MSTORE"}, "3238": {"op": "PUSH1", "value": "0x41"}, "3240": {"op": "PUSH1", "value": "0x4"}, "3242": {"op": "MSTORE"}, "3243": {"op": "PUSH1", "value": "0x24"}, "3245": {"op": "PUSH1", "value": "0x0"}, "3247": {"op": "REVERT"}, "3248": {"op": "JUMPDEST"}, "3249": {"op": "PUSH1", "value": "0x40"}, "3251": {"op": "MLOAD"}, "3252": {"op": "PUSH1", "value": "0x80"}, "3254": {"op": "DUP2"}, "3255": {"op": "ADD"}, "3256": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3265": {"op": "DUP2"}, "3266": {"op": "GT"}, "3267": {"op": "DUP3"}, "3268": {"op": "DUP3"}, "3269": {"op": "LT"}, "3270": {"op": "OR"}, "3271": {"op": "ISZERO"}, "3272": {"op": "PUSH2", "value": "0xCD3"}, "3275": {"op": "JUMPI"}, "3276": {"op": "PUSH2", "value": "0xCD3"}, "3279": {"op": "PUSH2", "value": "0xC9A"}, "3282": {"jump": "i", "op": "JUMP"}, "3283": {"op": "JUMPDEST"}, "3284": {"op": "PUSH1", "value": "0x40"}, "3286": {"op": "MSTORE"}, "3287": {"op": "SWAP1"}, "3288": {"jump": "o", "op": "JUMP"}, "3289": {"op": "JUMPDEST"}, "3290": {"op": "PUSH1", "value": "0x40"}, "3292": {"op": "MLOAD"}, "3293": {"op": "PUSH1", "value": "0x1F"}, "3295": {"op": "DUP3"}, "3296": {"op": "ADD"}, "3297": {"op": "PUSH1", "value": "0x1F"}, "3299": {"op": "NOT"}, "3300": {"op": "AND"}, "3301": {"op": "DUP2"}, "3302": {"op": "ADD"}, "3303": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3312": {"op": "DUP2"}, "3313": {"op": "GT"}, "3314": {"op": "DUP3"}, "3315": {"op": "DUP3"}, "3316": {"op": "LT"}, "3317": {"op": "OR"}, "3318": {"op": "ISZERO"}, "3319": {"op": "PUSH2", "value": "0xD02"}, "3322": {"op": "JUMPI"}, "3323": {"op": "PUSH2", "value": "0xD02"}, "3326": {"op": "PUSH2", "value": "0xC9A"}, "3329": {"jump": "i", "op": "JUMP"}, "3330": {"op": "JUMPDEST"}, "3331": {"op": "PUSH1", "value": "0x40"}, "3333": {"op": "MSTORE"}, "3334": {"op": "SWAP2"}, "3335": {"op": "SWAP1"}, "3336": {"op": "POP"}, "3337": {"jump": "o", "op": "JUMP"}, "3338": {"op": "JUMPDEST"}, "3339": {"op": "PUSH1", "value": "0x0"}, "3341": {"op": "PUSH1", "value": "0x20"}, "3343": {"op": "DUP1"}, "3344": {"op": "DUP4"}, "3345": {"op": "DUP6"}, "3346": {"op": "SUB"}, "3347": {"op": "SLT"}, "3348": {"op": "ISZERO"}, "3349": {"op": "PUSH2", "value": "0xD1D"}, "3352": {"op": "JUMPI"}, "3353": {"op": "PUSH1", "value": "0x0"}, "3355": {"op": "DUP1"}, "3356": {"op": "REVERT"}, "3357": {"op": "JUMPDEST"}, "3358": {"op": "DUP3"}, "3359": {"op": "CALLDATALOAD"}, "3360": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3369": {"op": "DUP1"}, "3370": {"op": "DUP3"}, "3371": {"op": "GT"}, "3372": {"op": "ISZERO"}, "3373": {"op": "PUSH2", "value": "0xD35"}, "3376": {"op": "JUMPI"}, "3377": {"op": "PUSH1", "value": "0x0"}, "3379": {"op": "DUP1"}, "3380": {"op": "REVERT"}, "3381": {"op": "JUMPDEST"}, "3382": {"op": "DUP2"}, "3383": {"op": "DUP6"}, "3384": {"op": "ADD"}, "3385": {"op": "SWAP2"}, "3386": {"op": "POP"}, "3387": {"op": "DUP6"}, "3388": {"op": "PUSH1", "value": "0x1F"}, "3390": {"op": "DUP4"}, "3391": {"op": "ADD"}, "3392": {"op": "SLT"}, "3393": {"op": "PUSH2", "value": "0xD49"}, "3396": {"op": "JUMPI"}, "3397": {"op": "PUSH1", "value": "0x0"}, "3399": {"op": "DUP1"}, "3400": {"op": "REVERT"}, "3401": {"op": "JUMPDEST"}, "3402": {"op": "DUP2"}, "3403": {"op": "CALLDATALOAD"}, "3404": {"op": "DUP2"}, "3405": {"op": "DUP2"}, "3406": {"op": "GT"}, "3407": {"op": "ISZERO"}, "3408": {"op": "PUSH2", "value": "0xD5B"}, "3411": {"op": "JUMPI"}, "3412": {"op": "PUSH2", "value": "0xD5B"}, "3415": {"op": "PUSH2", "value": "0xC9A"}, "3418": {"jump": "i", "op": "JUMP"}, "3419": {"op": "JUMPDEST"}, "3420": {"op": "PUSH2", "value": "0xD69"}, "3423": {"op": "DUP5"}, "3424": {"op": "DUP3"}, "3425": {"op": "PUSH1", "value": "0x5"}, "3427": {"op": "SHL"}, "3428": {"op": "ADD"}, "3429": {"op": "PUSH2", "value": "0xCD9"}, "3432": {"jump": "i", "op": "JUMP"}, "3433": {"op": "JUMPDEST"}, "3434": {"op": "DUP2"}, "3435": {"op": "DUP2"}, "3436": {"op": "MSTORE"}, "3437": {"op": "DUP5"}, "3438": {"op": "DUP2"}, "3439": {"op": "ADD"}, "3440": {"op": "SWAP3"}, "3441": {"op": "POP"}, "3442": {"op": "PUSH1", "value": "0x7"}, "3444": {"op": "SWAP2"}, "3445": {"op": "SWAP1"}, "3446": {"op": "SWAP2"}, "3447": {"op": "SHL"}, "3448": {"op": "DUP4"}, "3449": {"op": "ADD"}, "3450": {"op": "DUP5"}, "3451": {"op": "ADD"}, "3452": {"op": "SWAP1"}, "3453": {"op": "DUP8"}, "3454": {"op": "DUP3"}, "3455": {"op": "GT"}, "3456": {"op": "ISZERO"}, "3457": {"op": "PUSH2", "value": "0xD89"}, "3460": {"op": "JUMPI"}, "3461": {"op": "PUSH1", "value": "0x0"}, "3463": {"op": "DUP1"}, "3464": {"op": "REVERT"}, "3465": {"op": "JUMPDEST"}, "3466": {"op": "SWAP3"}, "3467": {"op": "DUP5"}, "3468": {"op": "ADD"}, "3469": {"op": "SWAP3"}, "3470": {"op": "JUMPDEST"}, "3471": {"op": "DUP2"}, "3472": {"op": "DUP5"}, "3473": {"op": "LT"}, "3474": {"op": "ISZERO"}, "3475": {"op": "PUSH2", "value": "0xDF2"}, "3478": {"op": "JUMPI"}, "3479": {"op": "PUSH1", "value": "0x80"}, "3481": {"op": "DUP5"}, "3482": {"op": "DUP10"}, "3483": {"op": "SUB"}, "3484": {"op": "SLT"}, "3485": {"op": "ISZERO"}, "3486": {"op": "PUSH2", "value": "0xDA7"}, "3489": {"op": "JUMPI"}, "3490": {"op": "PUSH1", "value": "0x0"}, "3492": {"op": "DUP1"}, "3493": {"op": "DUP2"}, "3494": {"op": "REVERT"}, "3495": {"op": "JUMPDEST"}, "3496": {"op": "PUSH2", "value": "0xDAF"}, "3499": {"op": "PUSH2", "value": "0xCB0"}, "3502": {"jump": "i", "op": "JUMP"}, "3503": {"op": "JUMPDEST"}, "3504": {"op": "DUP5"}, "3505": {"op": "CALLDATALOAD"}, "3506": {"op": "DUP2"}, "3507": {"op": "MSTORE"}, "3508": {"op": "DUP6"}, "3509": {"op": "DUP6"}, "3510": {"op": "ADD"}, "3511": {"op": "CALLDATALOAD"}, "3512": {"op": "PUSH2", "value": "0xDC0"}, "3515": {"op": "DUP2"}, "3516": {"op": "PUSH2", "value": "0xC3C"}, "3519": {"jump": "i", "op": "JUMP"}, "3520": {"op": "JUMPDEST"}, "3521": {"op": "DUP2"}, "3522": {"op": "DUP8"}, "3523": {"op": "ADD"}, "3524": {"op": "MSTORE"}, "3525": {"op": "PUSH1", "value": "0x40"}, "3527": {"op": "DUP6"}, "3528": {"op": "DUP2"}, "3529": {"op": "ADD"}, "3530": {"op": "CALLDATALOAD"}, "3531": {"op": "PUSH2", "value": "0xDD3"}, "3534": {"op": "DUP2"}, "3535": {"op": "PUSH2", "value": "0xC3C"}, "3538": {"jump": "i", "op": "JUMP"}, "3539": {"op": "JUMPDEST"}, "3540": {"op": "SWAP1"}, "3541": {"op": "DUP3"}, "3542": {"op": "ADD"}, "3543": {"op": "MSTORE"}, "3544": {"op": "PUSH1", "value": "0x60"}, "3546": {"op": "DUP6"}, "3547": {"op": "DUP2"}, "3548": {"op": "ADD"}, "3549": {"op": "CALLDATALOAD"}, "3550": {"op": "SWAP1"}, "3551": {"op": "DUP3"}, "3552": {"op": "ADD"}, "3553": {"op": "MSTORE"}, "3554": {"op": "DUP4"}, "3555": {"op": "MSTORE"}, "3556": {"op": "PUSH1", "value": "0x80"}, "3558": {"op": "SWAP1"}, "3559": {"op": "SWAP4"}, "3560": {"op": "ADD"}, "3561": {"op": "SWAP3"}, "3562": {"op": "SWAP2"}, "3563": {"op": "DUP5"}, "3564": {"op": "ADD"}, "3565": {"op": "SWAP2"}, "3566": {"op": "PUSH2", "value": "0xD8E"}, "3569": {"op": "JUMP"}, "3570": {"op": "JUMPDEST"}, "3571": {"op": "SWAP8"}, "3572": {"op": "SWAP7"}, "3573": {"op": "POP"}, "3574": {"op": "POP"}, "3575": {"op": "POP"}, "3576": {"op": "POP"}, "3577": {"op": "POP"}, "3578": {"op": "POP"}, "3579": {"op": "POP"}, "3580": {"jump": "o", "op": "JUMP"}, "3581": {"op": "JUMPDEST"}, "3582": {"op": "PUSH4", "value": "0x4E487B71"}, "3587": {"op": "PUSH1", "value": "0xE0"}, "3589": {"op": "SHL"}, "3590": {"op": "PUSH1", "value": "0x0"}, "3592": {"op": "MSTORE"}, "3593": {"op": "PUSH1", "value": "0x11"}, "3595": {"op": "PUSH1", "value": "0x4"}, "3597": {"op": "MSTORE"}, "3598": {"op": "PUSH1", "value": "0x24"}, "3600": {"op": "PUSH1", "value": "0x0"}, "3602": {"op": "REVERT"}, "3603": {"op": "JUMPDEST"}, "3604": {"op": "PUSH1", "value": "0x0"}, "3606": {"op": "DUP2"}, "3607": {"op": "PUSH1", "value": "0x0"}, "3609": {"op": "NOT"}, "3610": {"op": "DIV"}, "3611": {"op": "DUP4"}, "3612": {"op": "GT"}, "3613": {"op": "DUP3"}, "3614": {"op": "ISZERO"}, "3615": {"op": "ISZERO"}, "3616": {"op": "AND"}, "3617": {"op": "ISZERO"}, "3618": {"op": "PUSH2", "value": "0xE2D"}, "3621": {"op": "JUMPI"}, "3622": {"op": "PUSH2", "value": "0xE2D"}, "3625": {"op": "PUSH2", "value": "0xDFD"}, "3628": {"jump": "i", "op": "JUMP"}, "3629": {"op": "JUMPDEST"}, "3630": {"op": "POP"}, "3631": {"op": "MUL"}, "3632": {"op": "SWAP1"}, "3633": {"jump": "o", "op": "JUMP"}, "3634": {"op": "JUMPDEST"}, "3635": {"op": "PUSH1", "value": "0x0"}, "3637": {"op": "DUP3"}, "3638": {"op": "NOT"}, "3639": {"op": "DUP3"}, "3640": {"op": "GT"}, "3641": {"op": "ISZERO"}, "3642": {"op": "PUSH2", "value": "0xE45"}, "3645": {"op": "JUMPI"}, "3646": {"op": "PUSH2", "value": "0xE45"}, "3649": {"op": "PUSH2", "value": "0xDFD"}, "3652": {"jump": "i", "op": "JUMP"}, "3653": {"op": "JUMPDEST"}, "3654": {"op": "POP"}, "3655": {"op": "ADD"}, "3656": {"op": "SWAP1"}, "3657": {"jump": "o", "op": "JUMP"}, "3658": {"op": "JUMPDEST"}, "3659": {"op": "PUSH1", "value": "0x0"}, "3661": {"op": "PUSH1", "value": "0x20"}, "3663": {"op": "DUP3"}, "3664": {"op": "DUP5"}, "3665": {"op": "SUB"}, "3666": {"op": "SLT"}, "3667": {"op": "ISZERO"}, "3668": {"op": "PUSH2", "value": "0xE5C"}, "3671": {"op": "JUMPI"}, "3672": {"op": "PUSH1", "value": "0x0"}, "3674": {"op": "DUP1"}, "3675": {"op": "REVERT"}, "3676": {"op": "JUMPDEST"}, "3677": {"op": "DUP2"}, "3678": {"op": "MLOAD"}, "3679": {"op": "DUP1"}, "3680": {"op": "ISZERO"}, "3681": {"op": "ISZERO"}, "3682": {"op": "DUP2"}, "3683": {"op": "EQ"}, "3684": {"op": "PUSH2", "value": "0xE6C"}, "3687": {"op": "JUMPI"}, "3688": {"op": "PUSH1", "value": "0x0"}, "3690": {"op": "DUP1"}, "3691": {"op": "REVERT"}, "3692": {"op": "JUMPDEST"}, "3693": {"op": "SWAP4"}, "3694": {"op": "SWAP3"}, "3695": {"op": "POP"}, "3696": {"op": "POP"}, "3697": {"op": "POP"}, "3698": {"jump": "o", "op": "JUMP"}, "3699": {"op": "JUMPDEST"}, "3700": {"op": "PUSH1", "value": "0x0"}, "3702": {"op": "PUSH1", "value": "0x1"}, "3704": {"op": "DUP3"}, "3705": {"op": "ADD"}, "3706": {"op": "PUSH2", "value": "0xE85"}, "3709": {"op": "JUMPI"}, "3710": {"op": "PUSH2", "value": "0xE85"}, "3713": {"op": "PUSH2", "value": "0xDFD"}, "3716": {"jump": "i", "op": "JUMP"}, "3717": {"op": "JUMPDEST"}, "3718": {"op": "POP"}, "3719": {"op": "PUSH1", "value": "0x1"}, "3721": {"op": "ADD"}, "3722": {"op": "SWAP1"}, "3723": {"jump": "o", "op": "JUMP"}, "3724": {"op": "JUMPDEST"}, "3725": {"op": "PUSH1", "value": "0x0"}, "3727": {"op": "DUP3"}, "3728": {"op": "PUSH2", "value": "0xEA9"}, "3731": {"op": "JUMPI"}, "3732": {"op": "PUSH4", "value": "0x4E487B71"}, "3737": {"op": "PUSH1", "value": "0xE0"}, "3739": {"op": "SHL"}, "3740": {"op": "PUSH1", "value": "0x0"}, "3742": {"op": "MSTORE"}, "3743": {"op": "PUSH1", "value": "0x12"}, "3745": {"op": "PUSH1", "value": "0x4"}, "3747": {"op": "MSTORE"}, "3748": {"op": "PUSH1", "value": "0x24"}, "3750": {"op": "PUSH1", "value": "0x0"}, "3752": {"op": "REVERT"}, "3753": {"op": "JUMPDEST"}, "3754": {"op": "POP"}, "3755": {"op": "DIV"}, "3756": {"op": "SWAP1"}, "3757": {"jump": "o", "op": "JUMP"}, "3758": {"op": "JUMPDEST"}, "3759": {"op": "DUP2"}, "3760": {"op": "MLOAD"}, "3761": {"op": "PUSH1", "value": "0x1"}, "3763": {"op": "PUSH1", "value": "0x1"}, "3765": {"op": "PUSH1", "value": "0xA0"}, "3767": {"op": "SHL"}, "3768": {"op": "SUB"}, "3769": {"op": "SWAP1"}, "3770": {"op": "DUP2"}, "3771": {"op": "AND"}, "3772": {"op": "DUP3"}, "3773": {"op": "MSTORE"}, "3774": {"op": "PUSH1", "value": "0x20"}, "3776": {"op": "DUP1"}, "3777": {"op": "DUP5"}, "3778": {"op": "ADD"}, "3779": {"op": "MLOAD"}, "3780": {"op": "SWAP1"}, "3781": {"op": "SWAP2"}, "3782": {"op": "AND"}, "3783": {"op": "SWAP1"}, "3784": {"op": "DUP3"}, "3785": {"op": "ADD"}, "3786": {"op": "MSTORE"}, "3787": {"op": "PUSH1", "value": "0x40"}, "3789": {"op": "DUP1"}, "3790": {"op": "DUP4"}, "3791": {"op": "ADD"}, "3792": {"op": "MLOAD"}, "3793": {"op": "SWAP1"}, "3794": {"op": "DUP3"}, "3795": {"op": "ADD"}, "3796": {"op": "MSTORE"}, "3797": {"op": "PUSH1", "value": "0x60"}, "3799": {"op": "DUP1"}, "3800": {"op": "DUP4"}, "3801": {"op": "ADD"}, "3802": {"op": "MLOAD"}, "3803": {"op": "SWAP1"}, "3804": {"op": "DUP3"}, "3805": {"op": "ADD"}, "3806": {"op": "MSTORE"}, "3807": {"op": "PUSH1", "value": "0x80"}, "3809": {"op": "DUP1"}, "3810": {"op": "DUP4"}, "3811": {"op": "ADD"}, "3812": {"op": "MLOAD"}, "3813": {"op": "SWAP1"}, "3814": {"op": "DUP3"}, "3815": {"op": "ADD"}, "3816": {"op": "MSTORE"}, "3817": {"op": "PUSH1", "value": "0xA0"}, "3819": {"op": "DUP3"}, "3820": {"op": "DUP2"}, "3821": {"op": "ADD"}, "3822": {"op": "MLOAD"}, "3823": {"op": "SWAP1"}, "3824": {"op": "DUP3"}, "3825": {"op": "ADD"}, "3826": {"op": "MSTORE"}, "3827": {"op": "PUSH1", "value": "0xC0"}, "3829": {"op": "SWAP2"}, "3830": {"op": "DUP3"}, "3831": {"op": "ADD"}, "3832": {"op": "MLOAD"}, "3833": {"op": "SWAP2"}, "3834": {"op": "DUP2"}, "3835": {"op": "ADD"}, "3836": {"op": "SWAP2"}, "3837": {"op": "SWAP1"}, "3838": {"op": "SWAP2"}, "3839": {"op": "MSTORE"}, "3840": {"op": "PUSH1", "value": "0xE0"}, "3842": {"op": "ADD"}, "3843": {"op": "SWAP1"}, "3844": {"jump": "o", "op": "JUMP"}, "3845": {"op": "JUMPDEST"}, "3846": {"op": "PUSH1", "value": "0x0"}, "3848": {"op": "DUP3"}, "3849": {"op": "MLOAD"}, "3850": {"op": "PUSH1", "value": "0x0"}, "3852": {"op": "JUMPDEST"}, "3853": {"op": "DUP2"}, "3854": {"op": "DUP2"}, "3855": {"op": "LT"}, "3856": {"op": "ISZERO"}, "3857": {"op": "PUSH2", "value": "0xF26"}, "3860": {"op": "JUMPI"}, "3861": {"op": "PUSH1", "value": "0x20"}, "3863": {"op": "DUP2"}, "3864": {"op": "DUP7"}, "3865": {"op": "ADD"}, "3866": {"op": "DUP2"}, "3867": {"op": "ADD"}, "3868": {"op": "MLOAD"}, "3869": {"op": "DUP6"}, "3870": {"op": "DUP4"}, "3871": {"op": "ADD"}, "3872": {"op": "MSTORE"}, "3873": {"op": "ADD"}, "3874": {"op": "PUSH2", "value": "0xF0C"}, "3877": {"op": "JUMP"}, "3878": {"op": "JUMPDEST"}, "3879": {"op": "DUP2"}, "3880": {"op": "DUP2"}, "3881": {"op": "GT"}, "3882": {"op": "ISZERO"}, "3883": {"op": "PUSH2", "value": "0xF35"}, "3886": {"op": "JUMPI"}, "3887": {"op": "PUSH1", "value": "0x0"}, "3889": {"op": "DUP3"}, "3890": {"op": "DUP6"}, "3891": {"op": "ADD"}, "3892": {"op": "MSTORE"}, "3893": {"op": "JUMPDEST"}, "3894": {"op": "POP"}, "3895": {"op": "SWAP2"}, "3896": {"op": "SWAP1"}, "3897": {"op": "SWAP2"}, "3898": {"op": "ADD"}, "3899": {"op": "SWAP3"}, "3900": {"op": "SWAP2"}, "3901": {"op": "POP"}, "3902": {"op": "POP"}, "3903": {"jump": "o", "op": "JUMP"}, "3904": {"op": "JUMPDEST"}, "3905": {"op": "PUSH1", "value": "0x0"}, "3907": {"op": "PUSH1", "value": "0x20"}, "3909": {"op": "DUP3"}, "3910": {"op": "DUP5"}, "3911": {"op": "SUB"}, "3912": {"op": "SLT"}, "3913": {"op": "ISZERO"}, "3914": {"op": "PUSH2", "value": "0xF52"}, "3917": {"op": "JUMPI"}, "3918": {"op": "PUSH1", "value": "0x0"}, "3920": {"op": "DUP1"}, "3921": {"op": "REVERT"}, "3922": {"op": "JUMPDEST"}, "3923": {"op": "POP"}, "3924": {"op": "MLOAD"}, "3925": {"op": "SWAP2"}, "3926": {"op": "SWAP1"}, "3927": {"op": "POP"}, "3928": {"jump": "o", "op": "JUMP"}, "3929": {"op": "JUMPDEST"}, "3930": {"op": "PUSH1", "value": "0x20"}, "3932": {"op": "DUP1"}, "3933": {"op": "DUP3"}, "3934": {"op": "MSTORE"}, "3935": {"op": "PUSH1", "value": "0x27"}, "3937": {"op": "SWAP1"}, "3938": {"op": "DUP3"}, "3939": {"op": "ADD"}, "3940": {"op": "MSTORE"}, "3941": {"op": "PUSH32", "value": "0x476F7665726E616E63653A20596F7520617265206E6F742074686520476F7665"}, "3974": {"op": "PUSH1", "value": "0x40"}, "3976": {"op": "DUP3"}, "3977": {"op": "ADD"}, "3978": {"op": "MSTORE"}, "3979": {"op": "PUSH7", "value": "0x726E6F72212121"}, "3987": {"op": "PUSH1", "value": "0xC8"}, "3989": {"op": "SHL"}, "3990": {"op": "PUSH1", "value": "0x60"}, "3992": {"op": "DUP3"}, "3993": {"op": "ADD"}, "3994": {"op": "MSTORE"}, "3995": {"op": "PUSH1", "value": "0x80"}, "3997": {"op": "ADD"}, "3998": {"op": "SWAP1"}, "3999": {"jump": "o", "op": "JUMP"}, "4000": {"op": "JUMPDEST"}, "4001": {"op": "PUSH1", "value": "0x0"}, "4003": {"op": "PUSH1", "value": "0x20"}, "4005": {"op": "DUP3"}, "4006": {"op": "DUP5"}, "4007": {"op": "SUB"}, "4008": {"op": "SLT"}, "4009": {"op": "ISZERO"}, "4010": {"op": "PUSH2", "value": "0xFB2"}, "4013": {"op": "JUMPI"}, "4014": {"op": "PUSH1", "value": "0x0"}, "4016": {"op": "DUP1"}, "4017": {"op": "REVERT"}, "4018": {"op": "JUMPDEST"}, "4019": {"op": "DUP2"}, "4020": {"op": "MLOAD"}, "4021": {"op": "PUSH2", "value": "0xE6C"}, "4024": {"op": "DUP2"}, "4025": {"op": "PUSH2", "value": "0xC3C"}, "4028": {"jump": "i", "op": "JUMP"}, "4029": {"op": "JUMPDEST"}, "4030": {"op": "PUSH4", "value": "0x4E487B71"}, "4035": {"op": "PUSH1", "value": "0xE0"}, "4037": {"op": "SHL"}, "4038": {"op": "PUSH1", "value": "0x0"}, "4040": {"op": "MSTORE"}, "4041": {"op": "PUSH1", "value": "0x32"}, "4043": {"op": "PUSH1", "value": "0x4"}, "4045": {"op": "MSTORE"}, "4046": {"op": "PUSH1", "value": "0x24"}, "4048": {"op": "PUSH1", "value": "0x0"}, "4050": {"op": "REVERT"}}, "sha1": "26a9c9cbf38fa51fe4c1884ee4eaf22a4090f47f", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"./deb/ERC20.sol\";\nimport \"./deb/ICrossDomainMessenger.sol\";\n\n/// @title SourceDomainSideBridge Contract\n/// @author Sherif Abdelmoatty\n/// @notice This contract is to be deployed in the source rollup\ncontract SourceDomainSideBridge {\n\n    address constant ETHER_ADDRESS = 0x0000000000000000000000000000000000000000;\n    address constant ovmL2CrossDomainMessenger = 0x4200000000000000000000000000000000000007;  //ovmL2CrossDomainMessenger contract address(Optimism)\n\n    uint constant public CONTRACT_FEE_BASIS_POINTS = 5; //fee basis points\n    uint constant public FIXED_FEE = 3002 gwei;         //fixed fee - this is added as erc20 tokens value are unknown and to discorage small transactions and acts as a governance fee\n    uint constant public MAX_TRADE_LIMIT = 0.1 ether;   //max allowed ether to be transfered\n\n    struct TransferData {\n        address  tokenAddress; //rollup dependent\n        address  destination;\n        uint256  amount;       //amount to be transfered in kwei\n        uint256  fee;\n        uint256  startTime;\n        uint256  feeRampup;\n        uint256  nonce;\n    }\n\n    struct RewardData {\n        bytes32  transferDataHash;\n        address  tokenAddress; \n        address  claimer;\n        uint256  amountPlusFee;\n    }\n\n    mapping(bytes32 => bool) public validTransferHashes;\n    mapping(bytes32 => bool) public knownHashOnions;\n    bytes32 processedRewardHashOnion;\n    address l1DomainSideContractAddress;  //l1DomainSideContract deployed contract address on mainnet\n    uint256  currentNonce;\n    address public governance;\n    uint256 governanceBalance;\n\n    event Transaction(TransferData transferData);\n    event ClaimPayed(bytes32 transferDataHash, bool success);\n    event NewKnownHashOnionAdded(bytes32 newKnownHashOnions);\n    \n    /// @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n    modifier onlyL1Contract(){\n        ICrossDomainMessenger l2cdm = ICrossDomainMessenger(ovmL2CrossDomainMessenger);\n        require(\n            msg.sender == address(ovmL2CrossDomainMessenger)\n            && l2cdm.xDomainMessageSender() == l1DomainSideContractAddress\n        );\n        _;\n    }\n\n    /// @notice onlyGovernance modifier \n    /// @notice allow only the Governor to access\n    modifier onlyGovernance {\n        require(msg.sender == governance, \"Governance: You are not the Governor!!!\");\n        _;\n    }\n\n    /// @param _l1DomainSideContractAddress is the address of the contract in etherium L1\n    constructor(address _l1DomainSideContractAddress){\n        l1DomainSideContractAddress = _l1DomainSideContractAddress;\n        governance = msg.sender;\n    }\n\n    /// @notice transfer the required funds plus fees to be sent to the current contract balance\n    function transfer(address _tokenAddress, address _destination, uint256 _amount,\n        uint256  _feeRampup) external payable returns(bytes32){\n        \n        uint256 fee = _amount * CONTRACT_FEE_BASIS_POINTS;\n        uint256 amountPlusFee = _amount * 1000 + fee;\n        \n        require(fee * _feeRampup < _amount * 1000, \"feeRampup maximum cost should be less than the total amount\");\n\n        if(_tokenAddress == ETHER_ADDRESS){\n            require(_amount* 1000 < MAX_TRADE_LIMIT, \"Amount higher than maximum trade limit\");\n            require(msg.value >= amountPlusFee + FIXED_FEE, \"No Suffecient ether\");\n        }else{\n            ERC20 token = ERC20(_tokenAddress);\n            token.transferFrom(msg.sender, address(this), amountPlusFee);\n            require(msg.value >= FIXED_FEE, \"No Suffecient ether for the fixed ether fee\");\n        }\n\n        TransferData memory transferData;\n        transferData.tokenAddress = _tokenAddress;\n        transferData.destination = _destination;\n        transferData.amount = _amount;\n        transferData.fee = fee;\n        transferData.startTime = block.number;\n        transferData.feeRampup = _feeRampup;\n        transferData.nonce = currentNonce;\n\n        currentNonce++;\n        governanceBalance = governanceBalance + FIXED_FEE/2;\n\n        bytes32 transferDataHash = sha256(abi.encode(transferData));\n        \n        validTransferHashes[transferDataHash] = true;\n\n        emit Transaction(transferData);\n        \n        return transferDataHash;\n    }\n\n    /// @notice process the processClaims structs to be paid to the liquidity providers\n    /// @param _rewardData is an array of RewardData structs to be paid to liquidity providers\n    function processClaims(RewardData[] memory _rewardData) external payable {\n        bytes32 newProcessedRewardHashOnion = calculateNewProcessedRewardHashOnion(_rewardData);\n        require(knownHashOnions[newProcessedRewardHashOnion], \"Invalide RewardData list.\");\n        processedRewardHashOnion = newProcessedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            if(validTransferHashes[_rewardData[n].transferDataHash]){\n                bool success;\n                if(_rewardData[n].tokenAddress == ETHER_ADDRESS){\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: _rewardData[n].amountPlusFee + FIXED_FEE/2}(\"\");\n                    success = suc;\n                }else{\n                    ERC20 token = ERC20(_rewardData[n].tokenAddress);\n                    success = token.transferFrom(address(this), _rewardData[n].claimer,\n                        _rewardData[n].amountPlusFee);\n\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: FIXED_FEE/2}(\"\");\n\n                    success = success && suc;\n                }\n                emit ClaimPayed(_rewardData[n].transferDataHash, success);\n            }\n        }    \n    }\n\n    /// @notice this function is only called from the contract at the etherium L1\n    /// @notice through the rollup messenger contract to add a new known hash onion\n    function addNewKnownHashOnion(bytes32 _newKnownHashOnions) external onlyL1Contract{\n        knownHashOnions[_newKnownHashOnions] = true;\n        emit NewKnownHashOnionAdded(_newKnownHashOnions);\n    }\n\n    function GetGovernanceBalance() external view onlyGovernance returns(uint256){\n        return governanceBalance;\n    }\n\n    function collectGovernanceFixedFees() external onlyGovernance{\n        payable(governance).transfer(governanceBalance);\n        governanceBalance = 0;\n    }\n\n    /// @notice calculates the new hash onion\n    function calculateNewProcessedRewardHashOnion(RewardData[] memory _rewardData) private view returns (bytes32){\n        bytes32 newProcessedRewardHashOnion = processedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            newProcessedRewardHashOnion = \n                sha256(abi.encode(newProcessedRewardHashOnion,_rewardData[n]));\n        }\n        return newProcessedRewardHashOnion;\n    }\n}", "sourceMap": "264:6616:1:-:0;;;2570:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2629:27;:58;;-1:-1:-1;;;;;2629:58:1;;;-1:-1:-1;;;;;;2629:58:1;;;;;;2697:10;:23;;;;;2710:10;2697:23;;;264:6616;;14:290:4;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;:::-;264:6616:1;;;;;;", "sourcePath": "contracts/SourceDomainSideBridge.sol", "type": "contract", "deployment": {"address": "0x76ECb8091dB2a534af77B780C9501D01a6353F95", "chainid": "69", "blockHeight": 3827515}}