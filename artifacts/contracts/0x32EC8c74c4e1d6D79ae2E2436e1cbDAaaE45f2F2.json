{"abi": [{"inputs": [{"internalType": "address", "name": "_l1DomainSideContractAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"indexed": false, "internalType": "bool", "name": "success", "type": "bool"}], "name": "ClaimPayed", "type": "event"}, {"anonymous": false, "inputs": [{"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "feeRampup", "type": "uint256"}, {"internalType": "uint256", "name": "nonce", "type": "uint256"}], "indexed": false, "internalType": "struct SourceDomainSideBridge.TransferData", "name": "transferData", "type": "tuple"}], "name": "Transaction", "type": "event"}, {"inputs": [], "name": "CONTRACT_FEE_BASIS_POINTS", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "TRADE_LIMIT", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_newKnownHashOnions", "type": "bytes32"}], "name": "addNewKnownHashOnion", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "knownHashOnions", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "bytes32", "name": "transferDataHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}], "internalType": "struct SourceDomainSideBridge.RewardData[]", "name": "_rewardData", "type": "tuple[]"}], "name": "processClaims", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_tokenAddress", "type": "address"}, {"internalType": "address", "name": "_destination", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}, {"internalType": "uint256", "name": "_feeRampup", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "name": "validTransferHashes", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "contracts/SourceDomainSideBridge.sol", "1": "contracts/deb/ERC20.sol", "2": "contracts/deb/ICrossDomainMessenger.sol"}, "ast": {"absolutePath": "contracts/SourceDomainSideBridge.sol", "exportedSymbols": {"ERC20": [493], "ICrossDomainMessenger": [532], "SourceDomainSideBridge": [424]}, "id": 425, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".9"], "nodeType": "PragmaDirective", "src": "31:23:0"}, {"absolutePath": "contracts/deb/ERC20.sol", "file": "./deb/ERC20.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 425, "sourceUnit": 494, "src": "56:25:0", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/deb/ICrossDomainMessenger.sol", "file": "./deb/ICrossDomainMessenger.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 425, "sourceUnit": 533, "src": "82:41:0", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "SourceDomainSideBridge", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 4, "nodeType": "StructuredDocumentation", "src": "125:139:0", "text": "@title SourceDomainSideBridge Contract\n @author Sherif Abdelmoatty\n @notice This contract is to be deployed in the source rollup"}, "fullyImplemented": true, "id": 424, "linearizedBaseContracts": [424], "name": "SourceDomainSideBridge", "nameLocation": "273:22:0", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "functionSelector": "13457d88", "id": 7, "mutability": "constant", "name": "CONTRACT_FEE_BASIS_POINTS", "nameLocation": "328:25:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "307:50:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5, "name": "uint", "nodeType": "ElementaryTypeName", "src": "307:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "35", "id": 6, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "356:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "visibility": "public"}, {"constant": true, "functionSelector": "eb66091f", "id": 10, "mutability": "constant", "name": "TRADE_LIMIT", "nameLocation": "384:11:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "363:44:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8, "name": "uint", "nodeType": "ElementaryTypeName", "src": "363:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "302e31", "id": 9, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "398:9:0", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000_by_1", "typeString": "int_const 100000000000000000"}, "value": "0.1"}, "visibility": "public"}, {"constant": true, "id": 13, "mutability": "constant", "name": "ETHER_ADDRESS", "nameLocation": "430:13:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "413:75:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 11, "name": "address", "nodeType": "ElementaryTypeName", "src": "413:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030", "id": 12, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "446:42:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x0000000000000000000000000000000000000000"}, "visibility": "internal"}, {"canonicalName": "SourceDomainSideBridge.TransferData", "id": 28, "members": [{"constant": false, "id": 15, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "534:12:0", "nodeType": "VariableDeclaration", "scope": 28, "src": "525:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 14, "name": "address", "nodeType": "ElementaryTypeName", "src": "525:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 17, "mutability": "mutable", "name": "destination", "nameLocation": "566:11:0", "nodeType": "VariableDeclaration", "scope": 28, "src": "557:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 16, "name": "address", "nodeType": "ElementaryTypeName", "src": "557:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 19, "mutability": "mutable", "name": "amount", "nameLocation": "596:6:0", "nodeType": "VariableDeclaration", "scope": 28, "src": "587:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 18, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "587:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 21, "mutability": "mutable", "name": "fee", "nameLocation": "621:3:0", "nodeType": "VariableDeclaration", "scope": 28, "src": "612:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "612:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 23, "mutability": "mutable", "name": "startTime", "nameLocation": "643:9:0", "nodeType": "VariableDeclaration", "scope": 28, "src": "634:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "634:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 25, "mutability": "mutable", "name": "feeRampup", "nameLocation": "671:9:0", "nodeType": "VariableDeclaration", "scope": 28, "src": "662:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "662:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 27, "mutability": "mutable", "name": "nonce", "nameLocation": "699:5:0", "nodeType": "VariableDeclaration", "scope": 28, "src": "690:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 26, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "690:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "TransferData", "nameLocation": "502:12:0", "nodeType": "StructDefinition", "scope": 424, "src": "495:216:0", "visibility": "public"}, {"canonicalName": "SourceDomainSideBridge.RewardData", "id": 37, "members": [{"constant": false, "id": 30, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "753:16:0", "nodeType": "VariableDeclaration", "scope": 37, "src": "744:25:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 29, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "744:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 32, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "788:12:0", "nodeType": "VariableDeclaration", "scope": 37, "src": "779:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 31, "name": "address", "nodeType": "ElementaryTypeName", "src": "779:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 34, "mutability": "mutable", "name": "claimer", "nameLocation": "820:7:0", "nodeType": "VariableDeclaration", "scope": 37, "src": "811:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 33, "name": "address", "nodeType": "ElementaryTypeName", "src": "811:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 36, "mutability": "mutable", "name": "fee", "nameLocation": "846:3:0", "nodeType": "VariableDeclaration", "scope": 37, "src": "837:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 35, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "837:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "RewardData", "nameLocation": "723:10:0", "nodeType": "StructDefinition", "scope": 424, "src": "716:140:0", "visibility": "public"}, {"constant": false, "functionSelector": "040c05b6", "id": 41, "mutability": "mutable", "name": "validTransferHashes", "nameLocation": "893:19:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "861:51:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 40, "keyType": {"id": 38, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "869:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "861:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 39, "name": "bool", "nodeType": "ElementaryTypeName", "src": "880:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "5a1294b7", "id": 45, "mutability": "mutable", "name": "knownHashOnions", "nameLocation": "950:15:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "918:47:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 44, "keyType": {"id": 42, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "926:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "918:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 43, "name": "bool", "nodeType": "ElementaryTypeName", "src": "937:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "id": 47, "mutability": "mutable", "name": "processedRewardHashOnion", "nameLocation": "979:24:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "971:32:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 46, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "971:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 49, "mutability": "mutable", "name": "ovmL2CrossDomainMessenger", "nameLocation": "1022:25:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "1014:33:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 48, "name": "address", "nodeType": "ElementaryTypeName", "src": "1014:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 51, "mutability": "mutable", "name": "l1DomainSideContractAddress", "nameLocation": "1117:27:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "1109:35:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 50, "name": "address", "nodeType": "ElementaryTypeName", "src": "1109:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 53, "mutability": "mutable", "name": "currentNonce", "nameLocation": "1221:12:0", "nodeType": "VariableDeclaration", "scope": 424, "src": "1212:21:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 52, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1212:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"anonymous": false, "eventSelector": "d8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f89", "id": 58, "name": "Transaction", "nameLocation": "1246:11:0", "nodeType": "EventDefinition", "parameters": {"id": 57, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 56, "indexed": false, "mutability": "mutable", "name": "transferData", "nameLocation": "1271:12:0", "nodeType": "VariableDeclaration", "scope": 58, "src": "1258:25:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 55, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 54, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 28, "src": "1258:12:0"}, "referencedDeclaration": 28, "src": "1258:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "src": "1257:27:0"}, "src": "1240:45:0"}, {"anonymous": false, "eventSelector": "6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a", "id": 64, "name": "ClaimPayed", "nameLocation": "1296:10:0", "nodeType": "EventDefinition", "parameters": {"id": 63, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 60, "indexed": false, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "1315:16:0", "nodeType": "VariableDeclaration", "scope": 64, "src": "1307:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 59, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1307:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 62, "indexed": false, "mutability": "mutable", "name": "success", "nameLocation": "1338:7:0", "nodeType": "VariableDeclaration", "scope": 64, "src": "1333:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 61, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1333:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1306:40:0"}, "src": "1290:57:0"}, {"body": {"id": 91, "nodeType": "Block", "src": "1590:270:0", "statements": [{"assignments": [69], "declarations": [{"constant": false, "id": 69, "mutability": "mutable", "name": "l2cdm", "nameLocation": "1622:5:0", "nodeType": "VariableDeclaration", "scope": 91, "src": "1600:27:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$532", "typeString": "contract ICrossDomainMessenger"}, "typeName": {"id": 68, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 67, "name": "ICrossDomainMessenger", "nodeType": "IdentifierPath", "referencedDeclaration": 532, "src": "1600:21:0"}, "referencedDeclaration": 532, "src": "1600:21:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$532", "typeString": "contract ICrossDomainMessenger"}}, "visibility": "internal"}], "id": 73, "initialValue": {"arguments": [{"id": 71, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "1652:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 70, "name": "ICrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 532, "src": "1630:21:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$532_$", "typeString": "type(contract ICrossDomainMessenger)"}}, "id": 72, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1630:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$532", "typeString": "contract ICrossDomainMessenger"}}, "nodeType": "VariableDeclarationStatement", "src": "1600:78:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 87, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 81, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 75, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1709:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 76, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1709:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 79, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "1731:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 78, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1723:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 77, "name": "address", "nodeType": "ElementaryTypeName", "src": "1723:7:0", "typeDescriptions": {}}}, "id": 80, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1723:34:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1709:48:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 82, "name": "l2cdm", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69, "src": "1773:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ICrossDomainMessenger_$532", "typeString": "contract ICrossDomainMessenger"}}, "id": 83, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "xDomainMessageSender", "nodeType": "MemberAccess", "referencedDeclaration": 521, "src": "1773:26:0", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 84, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1773:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 85, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "1805:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1773:59:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1709:123:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 74, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1688:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1688:154:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 89, "nodeType": "ExpressionStatement", "src": "1688:154:0"}, {"id": 90, "nodeType": "PlaceholderStatement", "src": "1852:1:0"}]}, "documentation": {"id": 65, "nodeType": "StructuredDocumentation", "src": "1357:202:0", "text": "@notice onlyL1Contract modifier\n @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n @notice to call the approveStateRoot function"}, "id": 92, "name": "onlyL1Contract", "nameLocation": "1573:14:0", "nodeType": "ModifierDefinition", "parameters": {"id": 66, "nodeType": "ParameterList", "parameters": [], "src": "1587:2:0"}, "src": "1564:296:0", "virtual": false, "visibility": "internal"}, {"body": {"id": 106, "nodeType": "Block", "src": "1989:155:0", "statements": [{"expression": {"id": 100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 98, "name": "ovmL2CrossDomainMessenger", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 49, "src": "1999:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303037", "id": 99, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2027:42:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4200000000000000000000000000000000000007"}, "src": "1999:70:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 101, "nodeType": "ExpressionStatement", "src": "1999:70:0"}, {"expression": {"id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 102, "name": "l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51, "src": "2079:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 103, "name": "_l1DomainSideContractAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95, "src": "2109:28:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2079:58:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 105, "nodeType": "ExpressionStatement", "src": "2079:58:0"}]}, "documentation": {"id": 93, "nodeType": "StructuredDocumentation", "src": "1866:69:0", "text": "@notice Constructior function\n @notice Intialize variables"}, "id": 107, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 96, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 95, "mutability": "mutable", "name": "_l1DomainSideContractAddress", "nameLocation": "1960:28:0", "nodeType": "VariableDeclaration", "scope": 107, "src": "1952:36:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 94, "name": "address", "nodeType": "ElementaryTypeName", "src": "1952:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1951:38:0"}, "returnParameters": {"id": 97, "nodeType": "ParameterList", "parameters": [], "src": "1989:0:0"}, "scope": 424, "src": "1940:204:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 248, "nodeType": "Block", "src": "2531:1089:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 124, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 122, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "2558:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 123, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2567:4:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "2558:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 125, "name": "TRADE_LIMIT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2575:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2558:28:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416d6f756e7420686967686572207468616e207472616465206c696d6974", "id": 127, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2588:32:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2847f3c8e537b3e952c276b8e24cd091d5e275357e1ebcc6dc037999d4bf70ab", "typeString": "literal_string \"Amount higher than trade limit\""}, "value": "Amount higher than trade limit"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2847f3c8e537b3e952c276b8e24cd091d5e275357e1ebcc6dc037999d4bf70ab", "typeString": "literal_string \"Amount higher than trade limit\""}], "id": 121, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2550:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 128, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2550:71:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 129, "nodeType": "ExpressionStatement", "src": "2550:71:0"}, {"assignments": [131], "declarations": [{"constant": false, "id": 131, "mutability": "mutable", "name": "fee", "nameLocation": "2639:3:0", "nodeType": "VariableDeclaration", "scope": 248, "src": "2631:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 130, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2631:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 135, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 132, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "2645:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 133, "name": "CONTRACT_FEE_BASIS_POINTS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7, "src": "2655:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2645:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2631:49:0"}, {"assignments": [137], "declarations": [{"constant": false, "id": 137, "mutability": "mutable", "name": "amountPlusFee", "nameLocation": "2698:13:0", "nodeType": "VariableDeclaration", "scope": 248, "src": "2690:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 136, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2690:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 143, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 142, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 140, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 138, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "2714:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31303030", "id": 139, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2724:4:0", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "2714:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 141, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 131, "src": "2731:3:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2714:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2690:44:0"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 144, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "2756:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 145, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "2773:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2756:30:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 175, "nodeType": "Block", "src": "2891:133:0", "statements": [{"assignments": [158], "declarations": [{"constant": false, "id": 158, "mutability": "mutable", "name": "token", "nameLocation": "2911:5:0", "nodeType": "VariableDeclaration", "scope": 175, "src": "2905:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$493", "typeString": "contract ERC20"}, "typeName": {"id": 157, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 156, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 493, "src": "2905:5:0"}, "referencedDeclaration": 493, "src": "2905:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$493", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 162, "initialValue": {"arguments": [{"id": 160, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "2925:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 159, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 493, "src": "2919:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$493_$", "typeString": "type(contract ERC20)"}}, "id": 161, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2919:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$493", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "2905:34:0"}, {"expression": {"arguments": [{"expression": {"id": 166, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2972:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 167, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2972:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 170, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2992:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$424", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$424", "typeString": "contract SourceDomainSideBridge"}], "id": 169, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2984:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 168, "name": "address", "nodeType": "ElementaryTypeName", "src": "2984:7:0", "typeDescriptions": {}}}, "id": 171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2984:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 172, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 137, "src": "2999:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 163, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 158, "src": "2953:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$493", "typeString": "contract ERC20"}}, "id": 165, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 476, "src": "2953:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 173, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2953:60:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 174, "nodeType": "ExpressionStatement", "src": "2953:60:0"}]}, "id": 176, "nodeType": "IfStatement", "src": "2753:271:0", "trueBody": {"id": 155, "nodeType": "Block", "src": "2787:100:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 148, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2809:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 149, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "2809:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 150, "name": "amountPlusFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 137, "src": "2822:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2809:26:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4572726f72203a204e6f6e2053756666656369656e742066756e64732121212121212121", "id": 152, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2837:38:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}, "value": "Error : Non Suffecient funds!!!!!!!!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f0549379d915bd00e44096cda269bf6912603f14d62e76b11f922a879bf67864", "typeString": "literal_string \"Error : Non Suffecient funds!!!!!!!!\""}], "id": 147, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2801:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 153, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2801:75:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 154, "nodeType": "ExpressionStatement", "src": "2801:75:0"}]}}, {"assignments": [179], "declarations": [{"constant": false, "id": 179, "mutability": "mutable", "name": "transferData", "nameLocation": "3054:12:0", "nodeType": "VariableDeclaration", "scope": 248, "src": "3034:32:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}, "typeName": {"id": 178, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 177, "name": "TransferData", "nodeType": "IdentifierPath", "referencedDeclaration": 28, "src": "3034:12:0"}, "referencedDeclaration": 28, "src": "3034:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_storage_ptr", "typeString": "struct SourceDomainSideBridge.TransferData"}}, "visibility": "internal"}], "id": 180, "nodeType": "VariableDeclarationStatement", "src": "3034:32:0"}, {"expression": {"id": 185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 181, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3076:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 183, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 15, "src": "3076:25:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 184, "name": "_tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 110, "src": "3104:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3076:41:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 186, "nodeType": "ExpressionStatement", "src": "3076:41:0"}, {"expression": {"id": 191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 187, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3127:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 189, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 17, "src": "3127:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 190, "name": "_destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 112, "src": "3154:12:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3127:39:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 192, "nodeType": "ExpressionStatement", "src": "3127:39:0"}, {"expression": {"id": 197, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 193, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3176:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 195, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 19, "src": "3176:19:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 196, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 114, "src": "3198:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3176:29:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 198, "nodeType": "ExpressionStatement", "src": "3176:29:0"}, {"expression": {"id": 203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 199, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3215:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 201, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 21, "src": "3215:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 202, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 131, "src": "3234:3:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3215:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 204, "nodeType": "ExpressionStatement", "src": "3215:22:0"}, {"expression": {"id": 210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 205, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3247:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 207, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 23, "src": "3247:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 208, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3272:5:0", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "3272:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3247:37:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 211, "nodeType": "ExpressionStatement", "src": "3247:37:0"}, {"expression": {"id": 216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 212, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3294:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 214, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "feeRampup", "nodeType": "MemberAccess", "referencedDeclaration": 25, "src": "3294:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 215, "name": "_feeRampup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 116, "src": "3319:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3294:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 217, "nodeType": "ExpressionStatement", "src": "3294:35:0"}, {"expression": {"id": 222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 218, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3339:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}, "id": 220, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "nonce", "nodeType": "MemberAccess", "referencedDeclaration": 27, "src": "3339:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 221, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "3360:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3339:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 223, "nodeType": "ExpressionStatement", "src": "3339:33:0"}, {"expression": {"id": 225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3383:14:0", "subExpression": {"id": 224, "name": "currentNonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "3383:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 226, "nodeType": "ExpressionStatement", "src": "3383:14:0"}, {"assignments": [228], "declarations": [{"constant": false, "id": 228, "mutability": "mutable", "name": "transferDataHash", "nameLocation": "3416:16:0", "nodeType": "VariableDeclaration", "scope": 248, "src": "3408:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 227, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3408:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 235, "initialValue": {"arguments": [{"arguments": [{"id": 232, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3453:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "expression": {"id": 230, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "3442:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 231, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "3442:10:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 233, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3442:24:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 229, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "3435:6:0", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 234, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3435:32:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3408:59:0"}, {"expression": {"id": 240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 236, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "3486:19:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 238, "indexExpression": {"id": 237, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "3506:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3486:37:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 239, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3526:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "3486:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 241, "nodeType": "ExpressionStatement", "src": "3486:44:0"}, {"eventCall": {"arguments": [{"id": 243, "name": "transferData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 179, "src": "3558:12:0", "typeDescriptions": {"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TransferData_$28_memory_ptr", "typeString": "struct SourceDomainSideBridge.TransferData memory"}], "id": 242, "name": "Transaction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 58, "src": "3546:11:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_struct$_TransferData_$28_memory_ptr_$returns$__$", "typeString": "function (struct SourceDomainSideBridge.TransferData memory)"}}, "id": 244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3546:25:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 245, "nodeType": "EmitStatement", "src": "3541:30:0"}, {"expression": {"id": 246, "name": "transferDataHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "3597:16:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 120, "id": 247, "nodeType": "Return", "src": "3590:23:0"}]}, "documentation": {"id": 108, "nodeType": "StructuredDocumentation", "src": "2150:233:0", "text": "@notice withdraw function\n @notice withdraws the required funds plus fees to be sent \n @notice to the domain side rollup\nfunction transfer(TransferData memory _transferData) external payable returns(bytes32){"}, "functionSelector": "0411b252", "id": 249, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "2397:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 117, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 110, "mutability": "mutable", "name": "_tokenAddress", "nameLocation": "2414:13:0", "nodeType": "VariableDeclaration", "scope": 249, "src": "2406:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 109, "name": "address", "nodeType": "ElementaryTypeName", "src": "2406:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 112, "mutability": "mutable", "name": "_destination", "nameLocation": "2437:12:0", "nodeType": "VariableDeclaration", "scope": 249, "src": "2429:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 111, "name": "address", "nodeType": "ElementaryTypeName", "src": "2429:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 114, "mutability": "mutable", "name": "_amount", "nameLocation": "2459:7:0", "nodeType": "VariableDeclaration", "scope": 249, "src": "2451:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2451:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 116, "mutability": "mutable", "name": "_feeRampup", "nameLocation": "2486:10:0", "nodeType": "VariableDeclaration", "scope": 249, "src": "2477:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 115, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2477:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2405:92:0"}, "returnParameters": {"id": 120, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 119, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 249, "src": "2523:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 118, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2523:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2522:9:0"}, "scope": 424, "src": "2388:1232:0", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 365, "nodeType": "Block", "src": "3793:993:0", "statements": [{"assignments": [258], "declarations": [{"constant": false, "id": 258, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "3811:27:0", "nodeType": "VariableDeclaration", "scope": 365, "src": "3803:35:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 257, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3803:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 262, "initialValue": {"arguments": [{"id": 260, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "3878:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}], "id": 259, "name": "calculateNewProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 408, "src": "3841:36:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (struct SourceDomainSideBridge.RewardData memory[] memory) view returns (bytes32)"}}, "id": 261, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3841:49:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3803:87:0"}, {"expression": {"arguments": [{"baseExpression": {"id": 264, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 45, "src": "3908:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 266, "indexExpression": {"id": 265, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "3924:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3908:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964652052657761726444617461206c6973742e", "id": 267, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3954:27:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}, "value": "Invalide RewardData list."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e0d2f59ec1aea9645610ccd05ae8153689e4619f66b321682083b18dba9e69c6", "typeString": "literal_string \"Invalide RewardData list.\""}], "id": 263, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3900:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 268, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3900:82:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 269, "nodeType": "ExpressionStatement", "src": "3900:82:0"}, {"expression": {"id": 272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 270, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "3992:24:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 271, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "4019:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "3992:54:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 273, "nodeType": "ExpressionStatement", "src": "3992:54:0"}, {"body": {"id": 363, "nodeType": "Block", "src": "4101:670:0", "statements": [{"condition": {"baseExpression": {"id": 285, "name": "validTransferHashes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "4118:19:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 290, "indexExpression": {"expression": {"baseExpression": {"id": 286, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4138:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 288, "indexExpression": {"id": 287, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4150:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4138:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 289, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "4138:31:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4118:52:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 362, "nodeType": "IfStatement", "src": "4115:646:0", "trueBody": {"id": 361, "nodeType": "Block", "src": "4171:590:0", "statements": [{"assignments": [292], "declarations": [{"constant": false, "id": 292, "mutability": "mutable", "name": "success", "nameLocation": "4194:7:0", "nodeType": "VariableDeclaration", "scope": 361, "src": "4189:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 291, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4189:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 293, "nodeType": "VariableDeclarationStatement", "src": "4189:12:0"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 299, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 294, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4222:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 296, "indexExpression": {"id": 295, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4234:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4222:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 297, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 32, "src": "4222:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 298, "name": "ETHER_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "4253:13:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4222:44:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 351, "nodeType": "Block", "src": "4429:243:0", "statements": [{"assignments": [325], "declarations": [{"constant": false, "id": 325, "mutability": "mutable", "name": "token", "nameLocation": "4457:5:0", "nodeType": "VariableDeclaration", "scope": 351, "src": "4451:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$493", "typeString": "contract ERC20"}, "typeName": {"id": 324, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 323, "name": "ERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 493, "src": "4451:5:0"}, "referencedDeclaration": 493, "src": "4451:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$493", "typeString": "contract ERC20"}}, "visibility": "internal"}], "id": 332, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 327, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4471:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 329, "indexExpression": {"id": 328, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4483:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4471:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 330, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 32, "src": "4471:27:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 326, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 493, "src": "4465:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC20_$493_$", "typeString": "type(contract ERC20)"}}, "id": 331, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4465:34:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$493", "typeString": "contract ERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "4451:48:0"}, {"expression": {"id": 349, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 333, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 292, "src": "4542:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 338, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "4579:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_SourceDomainSideBridge_$424", "typeString": "contract SourceDomainSideBridge"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_SourceDomainSideBridge_$424", "typeString": "contract SourceDomainSideBridge"}], "id": 337, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4571:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 336, "name": "address", "nodeType": "ElementaryTypeName", "src": "4571:7:0", "typeDescriptions": {}}}, "id": 339, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4571:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 340, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4586:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 342, "indexExpression": {"id": 341, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4598:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4586:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 343, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 34, "src": "4586:22:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"baseExpression": {"id": 344, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4634:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 346, "indexExpression": {"id": 345, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4646:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4634:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 347, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 36, "src": "4634:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 334, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 325, "src": "4552:5:0", "typeDescriptions": {"typeIdentifier": "t_contract$_ERC20_$493", "typeString": "contract ERC20"}}, "id": 335, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 476, "src": "4552:18:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4552:101:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4542:111:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 350, "nodeType": "ExpressionStatement", "src": "4542:111:0"}]}, "id": 352, "nodeType": "IfStatement", "src": "4219:453:0", "trueBody": {"id": 322, "nodeType": "Block", "src": "4267:158:0", "statements": [{"assignments": [301, null], "declarations": [{"constant": false, "id": 301, "mutability": "mutable", "name": "suc", "nameLocation": "4295:3:0", "nodeType": "VariableDeclaration", "scope": 322, "src": "4290:8:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 300, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4290:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 317, "initialValue": {"arguments": [{"hexValue": "", "id": 315, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4368:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"baseExpression": {"id": 304, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4312:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 306, "indexExpression": {"id": 305, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4324:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4312:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 307, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "claimer", "nodeType": "MemberAccess", "referencedDeclaration": 34, "src": "4312:22:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 303, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4304:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 302, "name": "address", "nodeType": "ElementaryTypeName", "src": "4304:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 308, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4304:31:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 309, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "4304:36:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 314, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"expression": {"baseExpression": {"id": 310, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4348:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 312, "indexExpression": {"id": 311, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4360:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4348:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 313, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fee", "nodeType": "MemberAccess", "referencedDeclaration": 36, "src": "4348:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "4304:63:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 316, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4304:67:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "4289:82:0"}, {"expression": {"id": 320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 318, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 292, "src": "4393:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 319, "name": "suc", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 301, "src": "4403:3:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4393:13:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 321, "nodeType": "ExpressionStatement", "src": "4393:13:0"}]}}, {"eventCall": {"arguments": [{"expression": {"baseExpression": {"id": 354, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4705:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 356, "indexExpression": {"id": 355, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4717:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4705:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}, "id": 357, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "transferDataHash", "nodeType": "MemberAccess", "referencedDeclaration": 30, "src": "4705:31:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 358, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 292, "src": "4738:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 353, "name": "ClaimPayed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 64, "src": "4694:10:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$", "typeString": "function (bytes32,bool)"}}, "id": 359, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4694:52:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 360, "nodeType": "EmitStatement", "src": "4689:57:0"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 278, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4072:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 279, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "4076:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 280, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4076:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4072:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 364, "initializationExpression": {"assignments": [275], "declarations": [{"constant": false, "id": 275, "mutability": "mutable", "name": "n", "nameLocation": "4065:1:0", "nodeType": "VariableDeclaration", "scope": 364, "src": "4060:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 274, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4060:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 277, "initialValue": {"hexValue": "30", "id": 276, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4069:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4060:10:0"}, "loopExpression": {"expression": {"id": 283, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4096:3:0", "subExpression": {"id": 282, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 275, "src": "4096:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 284, "nodeType": "ExpressionStatement", "src": "4096:3:0"}, "nodeType": "ForStatement", "src": "4056:715:0"}]}, "documentation": {"id": 250, "nodeType": "StructuredDocumentation", "src": "3626:89:0", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "functionSelector": "ef4481d1", "id": 366, "implemented": true, "kind": "function", "modifiers": [], "name": "processClaims", "nameLocation": "3729:13:0", "nodeType": "FunctionDefinition", "parameters": {"id": 255, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 254, "mutability": "mutable", "name": "_rewardData", "nameLocation": "3763:11:0", "nodeType": "VariableDeclaration", "scope": 366, "src": "3743:31:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 252, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 251, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 37, "src": "3743:10:0"}, "referencedDeclaration": 37, "src": "3743:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 253, "nodeType": "ArrayTypeName", "src": "3743:12:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "3742:33:0"}, "returnParameters": {"id": 256, "nodeType": "ParameterList", "parameters": [], "src": "3793:0:0"}, "scope": 424, "src": "3720:1066:0", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"body": {"id": 407, "nodeType": "Block", "src": "4995:311:0", "statements": [{"assignments": [377], "declarations": [{"constant": false, "id": 377, "mutability": "mutable", "name": "newProcessedRewardHashOnion", "nameLocation": "5013:27:0", "nodeType": "VariableDeclaration", "scope": 407, "src": "5005:35:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 376, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5005:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 379, "initialValue": {"id": 378, "name": "processedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 47, "src": "5043:24:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "5005:62:0"}, {"body": {"id": 403, "nodeType": "Block", "src": "5122:134:0", "statements": [{"expression": {"id": 401, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 391, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "5136:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 395, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "5201:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"baseExpression": {"id": 396, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 371, "src": "5229:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 398, "indexExpression": {"id": 397, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5241:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5229:14:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_struct$_RewardData_$37_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory"}], "expression": {"id": 393, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "5190:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 394, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "5190:10:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 399, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5190:54:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 392, "name": "sha256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -22, "src": "5183:6:0", "typeDescriptions": {"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 400, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5183:62:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "5136:109:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 402, "nodeType": "ExpressionStatement", "src": "5136:109:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 387, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 384, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5093:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 385, "name": "_rewardData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 371, "src": "5097:11:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData memory[] memory"}}, "id": 386, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5097:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5093:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 404, "initializationExpression": {"assignments": [381], "declarations": [{"constant": false, "id": 381, "mutability": "mutable", "name": "n", "nameLocation": "5086:1:0", "nodeType": "VariableDeclaration", "scope": 404, "src": "5081:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 380, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5081:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 383, "initialValue": {"hexValue": "30", "id": 382, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5090:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5081:10:0"}, "loopExpression": {"expression": {"id": 389, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5117:3:0", "subExpression": {"id": 388, "name": "n", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 381, "src": "5117:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 390, "nodeType": "ExpressionStatement", "src": "5117:3:0"}, "nodeType": "ForStatement", "src": "5077:179:0"}, {"expression": {"id": 405, "name": "newProcessedRewardHashOnion", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 377, "src": "5272:27:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "functionReturnParameters": 375, "id": 406, "nodeType": "Return", "src": "5265:34:0"}]}, "documentation": {"id": 367, "nodeType": "StructuredDocumentation", "src": "4792:89:0", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "id": 408, "implemented": true, "kind": "function", "modifiers": [], "name": "calculateNewProcessedRewardHashOnion", "nameLocation": "4895:36:0", "nodeType": "FunctionDefinition", "parameters": {"id": 372, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 371, "mutability": "mutable", "name": "_rewardData", "nameLocation": "4952:11:0", "nodeType": "VariableDeclaration", "scope": 408, "src": "4932:31:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_memory_ptr_$dyn_memory_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}, "typeName": {"baseType": {"id": 369, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 368, "name": "RewardData", "nodeType": "IdentifierPath", "referencedDeclaration": 37, "src": "4932:10:0"}, "referencedDeclaration": 37, "src": "4932:10:0", "typeDescriptions": {"typeIdentifier": "t_struct$_RewardData_$37_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData"}}, "id": 370, "nodeType": "ArrayTypeName", "src": "4932:12:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_RewardData_$37_storage_$dyn_storage_ptr", "typeString": "struct SourceDomainSideBridge.RewardData[]"}}, "visibility": "internal"}], "src": "4931:33:0"}, "returnParameters": {"id": 375, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 374, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 408, "src": "4987:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 373, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4987:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "4986:9:0"}, "scope": 424, "src": "4886:420:0", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 422, "nodeType": "Block", "src": "5488:60:0", "statements": [{"expression": {"id": 420, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 416, "name": "knownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 45, "src": "5498:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 418, "indexExpression": {"id": 417, "name": "_newKnownHashOnions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 411, "src": "5514:19:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5498:36:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 419, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5537:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5498:43:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 421, "nodeType": "ExpressionStatement", "src": "5498:43:0"}]}, "documentation": {"id": 409, "nodeType": "StructuredDocumentation", "src": "5312:89:0", "text": "@notice processClaims function\n @notice calculates the liquidity provider fee."}, "functionSelector": "a9d72b02", "id": 423, "implemented": true, "kind": "function", "modifiers": [{"id": 414, "kind": "modifierInvocation", "modifierName": {"id": 413, "name": "onlyL1Contract", "nodeType": "IdentifierPath", "referencedDeclaration": 92, "src": "5474:14:0"}, "nodeType": "ModifierInvocation", "src": "5474:14:0"}], "name": "addNewKnownHashOnion", "nameLocation": "5415:20:0", "nodeType": "FunctionDefinition", "parameters": {"id": 412, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 411, "mutability": "mutable", "name": "_newKnownHashOnions", "nameLocation": "5444:19:0", "nodeType": "VariableDeclaration", "scope": 423, "src": "5436:27:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 410, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5436:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5435:29:0"}, "returnParameters": {"id": 415, "nodeType": "ParameterList", "parameters": [], "src": "5488:0:0"}, "scope": 424, "src": "5406:142:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 425, "src": "264:5290:0", "usedErrors": []}], "src": "31:5523:0"}, "bytecode": "608060405234801561001057600080fd5b50604051610d29380380610d2983398101604081905261002f91610076565b600380547342000000000000000000000000000000000000076001600160a01b031991821617909155600480549091166001600160a01b03929092169190911790556100a6565b60006020828403121561008857600080fd5b81516001600160a01b038116811461009f57600080fd5b9392505050565b610c74806100b56000396000f3fe6080604052600436106100705760003560e01c80635a1294b71161004e5780635a1294b7146100f0578063a9d72b0214610120578063eb66091f14610142578063ef4481d11461015e57600080fd5b8063040c05b6146100755780630411b252146100ba57806313457d88146100db575b600080fd5b34801561008157600080fd5b506100a56100903660046108f7565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100cd6100c8366004610928565b610171565b6040519081526020016100b1565b3480156100e757600080fd5b506100cd600581565b3480156100fc57600080fd5b506100a561010b3660046108f7565b60016020526000908152604090205460ff1681565b34801561012c57600080fd5b5061014061013b3660046108f7565b61045c565b005b34801561014e57600080fd5b506100cd67016345785d8a000081565b61014061016c3660046109de565b610526565b600067016345785d8a0000610188846103e8610ae7565b11156101db5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420686967686572207468616e207472616465206c696d6974000060448201526064015b60405180910390fd5b60006101e8600585610ae7565b90506000816101f9866103e8610ae7565b6102039190610b06565b90506001600160a01b038716610274578034101561026f5760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084016101d2565b6102f0565b6040516323b872dd60e01b81523360048201523060248201526044810182905287906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610b1e565b50505b6103426040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808916825287166020820152604081018690526060810183905243608082015260a081018590526005805460c0830181905290600061038883610b47565b919050555060006002826040516020016103a29190610b60565b60408051601f19818403018152908290526103bc91610bb7565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc9190610bf2565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f8990610448908490610b60565b60405180910390a198975050505050505050565b6003546001600160a01b031633811480156104fe5750600460009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610c0b565b6001600160a01b0316145b61050757600080fd5b506000908152600160208190526040909120805460ff19169091179055565b600061053182610813565b60008181526001602052604090205490915060ff166105925760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e0000000000000060448201526064016101d2565b600281905560005b825181101561080e576000808483815181106105b8576105b8610c28565b6020908102919091018101515182528101919091526040016000205460ff16156107fc576000806001600160a01b03168483815181106105fa576105fa610c28565b6020026020010151602001516001600160a01b0316036106ac57600084838151811061062857610628610c28565b6020026020010151604001516001600160a01b031685848151811061064f5761064f610c28565b60200260200101516060015160405160006040518083038185875af1925050503d806000811461069b576040519150601f19603f3d011682016040523d82523d6000602084013e6106a0565b606091505b50909250610799915050565b60008483815181106106c0576106c0610c28565b6020026020010151602001519050806001600160a01b03166323b872dd308786815181106106f0576106f0610c28565b60200260200101516040015188878151811061070e5761070e610c28565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610b1e565b9150505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a8483815181106107cc576107cc610c28565b602002602001015160000151826040516107f29291909182521515602082015260400190565b60405180910390a1505b8061080681610b47565b91505061059a565b505050565b600254600090815b83518110156108f05760028285838151811061083957610839610c28565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f198184030181529082905261089c91610bb7565b602060405180830381855afa1580156108b9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108dc9190610bf2565b9150806108e881610b47565b91505061081b565b5092915050565b60006020828403121561090957600080fd5b5035919050565b6001600160a01b038116811461092557600080fd5b50565b6000806000806080858703121561093e57600080fd5b843561094981610910565b9350602085013561095981610910565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156109a7576109a761096e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156109d6576109d661096e565b604052919050565b600060208083850312156109f157600080fd5b823567ffffffffffffffff80821115610a0957600080fd5b818501915085601f830112610a1d57600080fd5b813581811115610a2f57610a2f61096e565b610a3d848260051b016109ad565b818152848101925060079190911b830184019087821115610a5d57600080fd5b928401925b81841015610ac65760808489031215610a7b5760008081fd5b610a83610984565b8435815285850135610a9481610910565b81870152604085810135610aa781610910565b9082015260608581013590820152835260809093019291840191610a62565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610b0157610b01610ad1565b500290565b60008219821115610b1957610b19610ad1565b500190565b600060208284031215610b3057600080fd5b81518015158114610b4057600080fd5b9392505050565b600060018201610b5957610b59610ad1565b5060010190565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610bd85760208186018101518583015201610bbe565b81811115610be7576000828501525b509190910192915050565b600060208284031215610c0457600080fd5b5051919050565b600060208284031215610c1d57600080fd5b8151610b4081610910565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220be774ffbd522b7d8be3e9e291e61887468a4f0bfe854e12abaf0226d98fe074364736f6c634300080d0033", "bytecodeSha1": "1dd96ece4487594239275f4f4af74aa1f513b859", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "SourceDomainSideBridge", "coverageMap": {"branches": {"0": {"SourceDomainSideBridge.addNewKnownHashOnion": {"26": [1709, 1757, false], "27": [1773, 1832, true]}, "SourceDomainSideBridge.processClaims": {"28": [3908, 3952, true], "29": [4118, 4170, false], "30": [4222, 4266, false]}, "SourceDomainSideBridge.transfer": {"23": [2558, 2586, true], "24": [2756, 2786, false], "25": [2809, 2835, true]}}, "1": {}, "2": {}}, "statements": {"0": {"SourceDomainSideBridge.addNewKnownHashOnion": {"14": [5498, 5541]}, "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion": {"20": [5136, 5245], "21": [5117, 5120], "22": [5265, 5299]}, "SourceDomainSideBridge.processClaims": {"15": [3900, 3982], "16": [3992, 4046], "17": [4542, 4653], "18": [4689, 4746], "19": [4096, 4099]}, "SourceDomainSideBridge.transfer": {"0": [2550, 2621], "1": [2801, 2876], "2": [2953, 3013], "3": [3076, 3117], "4": [3127, 3166], "5": [3176, 3205], "6": [3215, 3237], "7": [3247, 3284], "8": [3294, 3329], "9": [3339, 3372], "10": [3383, 3397], "11": [3486, 3530], "12": [3541, 3571], "13": [3590, 3613]}}, "1": {}, "2": {}}}, "dependencies": ["ERC20", "ICrossDomainMessenger"], "deployedBytecode": "6080604052600436106100705760003560e01c80635a1294b71161004e5780635a1294b7146100f0578063a9d72b0214610120578063eb66091f14610142578063ef4481d11461015e57600080fd5b8063040c05b6146100755780630411b252146100ba57806313457d88146100db575b600080fd5b34801561008157600080fd5b506100a56100903660046108f7565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100cd6100c8366004610928565b610171565b6040519081526020016100b1565b3480156100e757600080fd5b506100cd600581565b3480156100fc57600080fd5b506100a561010b3660046108f7565b60016020526000908152604090205460ff1681565b34801561012c57600080fd5b5061014061013b3660046108f7565b61045c565b005b34801561014e57600080fd5b506100cd67016345785d8a000081565b61014061016c3660046109de565b610526565b600067016345785d8a0000610188846103e8610ae7565b11156101db5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420686967686572207468616e207472616465206c696d6974000060448201526064015b60405180910390fd5b60006101e8600585610ae7565b90506000816101f9866103e8610ae7565b6102039190610b06565b90506001600160a01b038716610274578034101561026f5760405162461bcd60e51b8152602060048201526024808201527f4572726f72203a204e6f6e2053756666656369656e742066756e6473212121216044820152632121212160e01b60648201526084016101d2565b6102f0565b6040516323b872dd60e01b81523360048201523060248201526044810182905287906001600160a01b038216906323b872dd906064016020604051808303816000875af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610b1e565b50505b6103426040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03808916825287166020820152604081018690526060810183905243608082015260a081018590526005805460c0830181905290600061038883610b47565b919050555060006002826040516020016103a29190610b60565b60408051601f19818403018152908290526103bc91610bb7565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc9190610bf2565b60008181526020819052604090819020805460ff19166001179055519091507fd8a86d1088d904bb6bf6291af6c7530b6ff4a8f6514c77a44c143331be826f8990610448908490610b60565b60405180910390a198975050505050505050565b6003546001600160a01b031633811480156104fe5750600460009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610c0b565b6001600160a01b0316145b61050757600080fd5b506000908152600160208190526040909120805460ff19169091179055565b600061053182610813565b60008181526001602052604090205490915060ff166105925760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964652052657761726444617461206c6973742e0000000000000060448201526064016101d2565b600281905560005b825181101561080e576000808483815181106105b8576105b8610c28565b6020908102919091018101515182528101919091526040016000205460ff16156107fc576000806001600160a01b03168483815181106105fa576105fa610c28565b6020026020010151602001516001600160a01b0316036106ac57600084838151811061062857610628610c28565b6020026020010151604001516001600160a01b031685848151811061064f5761064f610c28565b60200260200101516060015160405160006040518083038185875af1925050503d806000811461069b576040519150601f19603f3d011682016040523d82523d6000602084013e6106a0565b606091505b50909250610799915050565b60008483815181106106c0576106c0610c28565b6020026020010151602001519050806001600160a01b03166323b872dd308786815181106106f0576106f0610c28565b60200260200101516040015188878151811061070e5761070e610c28565b6020908102919091010151606001516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610b1e565b9150505b7f6949409522b57ddd499e29e527ea6b74df8d2f4f2993b0030bee0fd0ead7ca4a8483815181106107cc576107cc610c28565b602002602001015160000151826040516107f29291909182521515602082015260400190565b60405180910390a1505b8061080681610b47565b91505061059a565b505050565b600254600090815b83518110156108f05760028285838151811061083957610839610c28565b6020908102919091018101516040805180840194909452815184820152918101516001600160a01b0390811660608086019190915292820151166080840152015160a082015260c00160408051601f198184030181529082905261089c91610bb7565b602060405180830381855afa1580156108b9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108dc9190610bf2565b9150806108e881610b47565b91505061081b565b5092915050565b60006020828403121561090957600080fd5b5035919050565b6001600160a01b038116811461092557600080fd5b50565b6000806000806080858703121561093e57600080fd5b843561094981610910565b9350602085013561095981610910565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156109a7576109a761096e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156109d6576109d661096e565b604052919050565b600060208083850312156109f157600080fd5b823567ffffffffffffffff80821115610a0957600080fd5b818501915085601f830112610a1d57600080fd5b813581811115610a2f57610a2f61096e565b610a3d848260051b016109ad565b818152848101925060079190911b830184019087821115610a5d57600080fd5b928401925b81841015610ac65760808489031215610a7b5760008081fd5b610a83610984565b8435815285850135610a9481610910565b81870152604085810135610aa781610910565b9082015260608581013590820152835260809093019291840191610a62565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610b0157610b01610ad1565b500290565b60008219821115610b1957610b19610ad1565b500190565b600060208284031215610b3057600080fd5b81518015158114610b4057600080fd5b9392505050565b600060018201610b5957610b59610ad1565b5060010190565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c0918201519181019190915260e00190565b6000825160005b81811015610bd85760208186018101518583015201610bbe565b81811115610be7576000828501525b509190910192915050565b600060208284031215610c0457600080fd5b5051919050565b600060208284031215610c1d57600080fd5b8151610b4081610910565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220be774ffbd522b7d8be3e9e291e61887468a4f0bfe854e12abaf0226d98fe074364736f6c634300080d0033", "deployedSourceMap": "264:5290:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:51;;;;;;;;;;-1:-1:-1;861:51:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;364:14:3;;357:22;339:41;;327:2;312:18;861:51:0;;;;;;;;2388:1232;;;;;;:::i;:::-;;:::i;:::-;;;1203:25:3;;;1191:2;1176:18;2388:1232:0;1057:177:3;307:50:0;;;;;;;;;;;;356:1;307:50;;918:47;;;;;;;;;;-1:-1:-1;918:47:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;5406:142;;;;;;;;;;-1:-1:-1;5406:142:0;;;;;:::i;:::-;;:::i;:::-;;363:44;;;;;;;;;;;;398:9;363:44;;3720:1066;;;;;;:::i;:::-;;:::i;2388:1232::-;2523:7;398:9;2558:13;:7;2567:4;2558:13;:::i;:::-;:28;;2550:71;;;;-1:-1:-1;;;2550:71:0;;4177:2:3;2550:71:0;;;4159:21:3;4216:2;4196:18;;;4189:30;4255:32;4235:18;;;4228:60;4305:18;;2550:71:0;;;;;;;;;2631:11;2645:35;356:1;2645:7;:35;:::i;:::-;2631:49;-1:-1:-1;2690:21:0;2631:49;2714:14;:7;2724:4;2714:14;:::i;:::-;:20;;;;:::i;:::-;2690:44;-1:-1:-1;;;;;;2756:30:0;;2753:271;;2822:13;2809:9;:26;;2801:75;;;;-1:-1:-1;;;2801:75:0;;4669:2:3;2801:75:0;;;4651:21:3;4708:2;4688:18;;;4681:30;4747:34;4727:18;;;4720:62;-1:-1:-1;;;4798:18:3;;;4791:34;4842:19;;2801:75:0;4467:400:3;2801:75:0;2753:271;;;2953:60;;-1:-1:-1;;;2953:60:0;;2972:10;2953:60;;;5112:34:3;2992:4:0;5162:18:3;;;5155:43;5214:18;;;5207:34;;;2925:13:0;;-1:-1:-1;;;;;2953:18:0;;;;;5047::3;;2953:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2891:133;2753:271;3034:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3034:32:0;-1:-1:-1;;;;;3076:41:0;;;;;3127:39;;:24;;;:39;3176:19;;;:29;;;3215:16;;;:22;;;3272:12;3247:22;;;:37;3294:22;;;:35;;;3360:12;;;3339:18;;;:33;;;3360:12;3076:25;3383:14;3360:12;3383:14;:::i;:::-;;;;;;3408:24;3435:32;3453:12;3442:24;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3442:24:0;;;;;;;;;;3435:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3486:19;:37;;;;;;;;;;;;:44;;-1:-1:-1;;3486:44:0;3526:4;3486:44;;;3546:25;3408:59;;-1:-1:-1;3546:25:0;;;;3558:12;;3546:25;:::i;:::-;;;;;;;;3597:16;2388:1232;-1:-1:-1;;;;;;;;2388:1232:0:o;5406:142::-;1652:25;;-1:-1:-1;;;;;1652:25:0;1709:10;:48;;:123;;;;;1805:27;;;;;;;;;-1:-1:-1;;;;;1805:27:0;-1:-1:-1;;;;;1773:59:0;:5;-1:-1:-1;;;;;1773:26:0;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1773:59:0;;1709:123;1688:154;;;;;;-1:-1:-1;5498:36:0::1;::::0;;;5537:4:::1;5498:36;::::0;;;;;;;:43;;-1:-1:-1;;5498:43:0::1;::::0;;::::1;::::0;;5406:142::o;3720:1066::-;3803:35;3841:49;3878:11;3841:36;:49::i;:::-;3908:44;;;;:15;:44;;;;;;3803:87;;-1:-1:-1;3908:44:0;;3900:82;;;;-1:-1:-1;;;3900:82:0;;7432:2:3;3900:82:0;;;7414:21:3;7471:2;7451:18;;;7444:30;7510:27;7490:18;;;7483:55;7555:18;;3900:82:0;7230:349:3;3900:82:0;3992:24;:54;;;4060:6;4056:715;4076:11;:18;4072:1;:22;4056:715;;;4118:19;:52;4138:11;4150:1;4138:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:31;4118:52;;;;;;;;;;4138:31;4118:52;;;;4115:646;;;4189:12;446:42;-1:-1:-1;;;;;4222:44:0;:11;4234:1;4222:14;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;4222:44:0;;4219:453;;4290:8;4312:11;4324:1;4312:14;;;;;;;;:::i;:::-;;;;;;;:22;;;-1:-1:-1;;;;;4304:36:0;4348:11;4360:1;4348:14;;;;;;;;:::i;:::-;;;;;;;:18;;;4304:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4289:82:0;;-1:-1:-1;4219:453:0;;-1:-1:-1;;4219:453:0;;4451:11;4471;4483:1;4471:14;;;;;;;;:::i;:::-;;;;;;;:27;;;4451:48;;4552:5;-1:-1:-1;;;;;4552:18:0;;4579:4;4586:11;4598:1;4586:14;;;;;;;;:::i;:::-;;;;;;;:22;;;4634:11;4646:1;4634:14;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;4552:101;;-1:-1:-1;;;;;;4552:101:0;;;;;;;-1:-1:-1;;;;;5130:15:3;;;4552:101:0;;;5112:34:3;5182:15;;;;5162:18;;;5155:43;5214:18;;;5207:34;5047:18;;4552:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4542:111;;4429:243;4219:453;4694:52;4705:11;4717:1;4705:14;;;;;;;;:::i;:::-;;;;;;;:31;;;4738:7;4694:52;;;;;;8094:25:3;;;8162:14;8155:22;8150:2;8135:18;;8128:50;8082:2;8067:18;;7926:258;4694:52:0;;;;;;;;4171:590;4115:646;4096:3;;;;:::i;:::-;;;;4056:715;;;;3793:993;3720:1066;:::o;4886:420::-;5043:24;;4987:7;;;5077:179;5097:11;:18;5093:1;:22;5077:179;;;5183:62;5201:27;5229:11;5241:1;5229:14;;;;;;;;:::i;:::-;;;;;;;;;;;;5190:54;;;;;;8416:25:3;;;;8477:13;;8457:18;;;8450:41;8526:15;;;8520:22;-1:-1:-1;;;;;8616:21:3;;;8596:18;;;;8589:49;;;;8684:15;;;8678:22;8674:31;8654:18;;;8647:59;8749:15;8743:22;8722:19;;;8715:51;8388:19;;5190:54:0;;;-1:-1:-1;;5190:54:0;;;;;;;;;;5183:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5136:109;-1:-1:-1;5117:3:0;;;;:::i;:::-;;;;5077:179;;;-1:-1:-1;5272:27:0;4886:420;-1:-1:-1;;4886:420:0:o;14:180:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;391:131::-;-1:-1:-1;;;;;466:31:3;;456:42;;446:70;;512:1;509;502:12;446:70;391:131;:::o;527:525::-;613:6;621;629;637;690:3;678:9;669:7;665:23;661:33;658:53;;;707:1;704;697:12;658:53;746:9;733:23;765:31;790:5;765:31;:::i;:::-;815:5;-1:-1:-1;872:2:3;857:18;;844:32;885:33;844:32;885:33;:::i;:::-;527:525;;937:7;;-1:-1:-1;;;;991:2:3;976:18;;963:32;;1042:2;1027:18;1014:32;;527:525::o;1421:127::-;1482:10;1477:3;1473:20;1470:1;1463:31;1513:4;1510:1;1503:15;1537:4;1534:1;1527:15;1553:253;1625:2;1619:9;1667:4;1655:17;;1702:18;1687:34;;1723:22;;;1684:62;1681:88;;;1749:18;;:::i;:::-;1785:2;1778:22;1553:253;:::o;1811:275::-;1882:2;1876:9;1947:2;1928:13;;-1:-1:-1;;1924:27:3;1912:40;;1982:18;1967:34;;2003:22;;;1964:62;1961:88;;;2029:18;;:::i;:::-;2065:2;2058:22;1811:275;;-1:-1:-1;1811:275:3:o;2091:1574::-;2201:6;2232:2;2275;2263:9;2254:7;2250:23;2246:32;2243:52;;;2291:1;2288;2281:12;2243:52;2331:9;2318:23;2360:18;2401:2;2393:6;2390:14;2387:34;;;2417:1;2414;2407:12;2387:34;2455:6;2444:9;2440:22;2430:32;;2500:7;2493:4;2489:2;2485:13;2481:27;2471:55;;2522:1;2519;2512:12;2471:55;2558:2;2545:16;2580:2;2576;2573:10;2570:36;;;2586:18;;:::i;:::-;2626:36;2658:2;2653;2650:1;2646:10;2642:19;2626:36;:::i;:::-;2696:15;;;2727:12;;;;-1:-1:-1;2778:1:3;2774:10;;;;2766:19;;2762:28;;;2802:19;;;2799:39;;;2834:1;2831;2824:12;2799:39;2858:11;;;;2878:757;2894:6;2889:3;2886:15;2878:757;;;2976:4;2970:3;2961:7;2957:17;2953:28;2950:118;;;3022:1;3051:2;3047;3040:14;2950:118;3094:22;;:::i;:::-;3156:3;3143:17;3136:5;3129:32;3211:2;3206:3;3202:12;3189:26;3228:33;3253:7;3228:33;:::i;:::-;3281:14;;;3274:31;3328:2;3371:12;;;3358:26;3397:33;3358:26;3397:33;:::i;:::-;3450:14;;;3443:31;3497:2;3548:12;;;3535:26;3519:14;;;3512:50;3575:18;;2920:4;2911:14;;;;3613:12;;;;2878:757;;;3654:5;2091:1574;-1:-1:-1;;;;;;;2091:1574:3:o;3670:127::-;3731:10;3726:3;3722:20;3719:1;3712:31;3762:4;3759:1;3752:15;3786:4;3783:1;3776:15;3802:168;3842:7;3908:1;3904;3900:6;3896:14;3893:1;3890:21;3885:1;3878:9;3871:17;3867:45;3864:71;;;3915:18;;:::i;:::-;-1:-1:-1;3955:9:3;;3802:168::o;4334:128::-;4374:3;4405:1;4401:6;4398:1;4395:13;4392:39;;;4411:18;;:::i;:::-;-1:-1:-1;4447:9:3;;4334:128::o;5252:277::-;5319:6;5372:2;5360:9;5351:7;5347:23;5343:32;5340:52;;;5388:1;5385;5378:12;5340:52;5420:9;5414:16;5473:5;5466:13;5459:21;5452:5;5449:32;5439:60;;5495:1;5492;5485:12;5439:60;5518:5;5252:277;-1:-1:-1;;;5252:277:3:o;5534:135::-;5573:3;5594:17;;;5591:43;;5614:18;;:::i;:::-;-1:-1:-1;5661:1:3;5650:13;;5534:135::o;5674:675::-;5937:13;;-1:-1:-1;;;;;5933:22:3;;;5915:41;;6016:4;6004:17;;;5998:24;5994:33;;;5972:20;;;5965:63;6084:4;6072:17;;;6066:24;6044:20;;;6037:54;6147:4;6135:17;;;6129:24;6107:20;;;6100:54;6210:4;6198:17;;;6192:24;6170:20;;;6163:54;5895:3;6261:17;;;6255:24;6233:20;;;6226:54;6336:4;6324:17;;;6318:24;6296:20;;;6289:54;;;;5864:3;5849:19;;5674:675::o;6354:426::-;6483:3;6521:6;6515:13;6546:1;6556:129;6570:6;6567:1;6564:13;6556:129;;;6668:4;6652:14;;;6648:25;;6642:32;6629:11;;;6622:53;6585:12;6556:129;;;6703:6;6700:1;6697:13;6694:48;;;6738:1;6729:6;6724:3;6720:16;6713:27;6694:48;-1:-1:-1;6758:16:3;;;;;6354:426;-1:-1:-1;;6354:426:3:o;6785:184::-;6855:6;6908:2;6896:9;6887:7;6883:23;6879:32;6876:52;;;6924:1;6921;6914:12;6876:52;-1:-1:-1;6947:16:3;;6785:184;-1:-1:-1;6785:184:3:o;6974:251::-;7044:6;7097:2;7085:9;7076:7;7072:23;7068:32;7065:52;;;7113:1;7110;7103:12;7065:52;7145:9;7139:16;7164:31;7189:5;7164:31;:::i;7584:127::-;7645:10;7640:3;7636:20;7633:1;7626:31;7676:4;7673:1;7666:15;7700:4;7697:1;7690:15", "language": "Solidity", "natspec": {"author": "Sherif Abdelmoatty", "kind": "dev", "methods": {"addNewKnownHashOnion(bytes32)": {"notice": "processClaims functioncalculates the liquidity provider fee."}, "constructor": {"notice": "Constructior functionIntialize variables"}, "processClaims((bytes32,address,address,uint256)[])": {"notice": "processClaims functioncalculates the liquidity provider fee."}, "transfer(address,address,uint256,uint256)": {"notice": "withdraw functionwithdraws the required funds plus fees to be sent to the domain side rollup function transfer(TransferData memory _transferData) external payable returns(bytes32){"}}, "notice": "This contract is to be deployed in the source rollup", "title": "SourceDomainSideBridge Contract", "version": 1}, "offset": [264, 5554], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A1294B7 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x5A1294B7 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA9D72B02 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xEB66091F EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xEF4481D1 EQ PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C05B6 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x411B252 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x13457D88 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH1 0x5 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 PUSH8 0x16345785D8A0000 PUSH2 0x188 DUP5 PUSH2 0x3E8 PUSH2 0xAE7 JUMP JUMPDEST GT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420686967686572207468616E207472616465206C696D69740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E8 PUSH1 0x5 DUP6 PUSH2 0xAE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x1F9 DUP7 PUSH2 0x3E8 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xB06 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x274 JUMPI DUP1 CALLVALUE LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x21212121 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x342 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE NUMBER PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH1 0x0 PUSH2 0x388 DUP4 PUSH2 0xB47 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x3BC SWAP2 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89 SWAP1 PUSH2 0x448 SWAP1 DUP5 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x4FE JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP3 PUSH2 0x813 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964652052657761726444617461206C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5B8 JUMPI PUSH2 0x5B8 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5FA JUMPI PUSH2 0x5FA PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x6AC JUMPI PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x64F JUMPI PUSH2 0x64F PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP PUSH2 0x799 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6C0 JUMPI PUSH2 0x6C0 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x6F0 JUMPI PUSH2 0x6F0 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH2 0x70E PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xB1E JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH32 0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7CC JUMPI PUSH2 0x7CC PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST DUP1 PUSH2 0x806 DUP2 PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x59A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x2 DUP3 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x839 JUMPI PUSH2 0x839 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 MLOAD DUP5 DUP3 ADD MSTORE SWAP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP3 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x89C SWAP2 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DC SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x8E8 DUP2 PUSH2 0xB47 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x81B JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x949 DUP2 PUSH2 0x910 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x959 DUP2 PUSH2 0x910 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9A7 JUMPI PUSH2 0x9A7 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D6 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA2F JUMPI PUSH2 0xA2F PUSH2 0x96E JUMP JUMPDEST PUSH2 0xA3D DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0x9AD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0xA5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x80 DUP5 DUP10 SUB SLT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA83 PUSH2 0x984 JUMP JUMPDEST DUP5 CALLDATALOAD DUP2 MSTORE DUP6 DUP6 ADD CALLDATALOAD PUSH2 0xA94 DUP2 PUSH2 0x910 JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP6 DUP2 ADD CALLDATALOAD PUSH2 0xAA7 DUP2 PUSH2 0x910 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xA62 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB01 JUMPI PUSH2 0xB01 PUSH2 0xAD1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB19 JUMPI PUSH2 0xB19 PUSH2 0xAD1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB59 JUMPI PUSH2 0xB59 PUSH2 0xAD1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBD8 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xBBE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB40 DUP2 PUSH2 0x910 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH24 0x4FFBD522B7D8BE3E9E291E61887468A4F0BFE854E12ABAF0 0x22 PUSH14 0x98FE074364736F6C634300080D00 CALLER ", "pcMap": {"0": {"offset": [264, 5554], "op": "PUSH1", "path": "0", "value": "0x80"}, "2": {"fn": null, "offset": [264, 5554], "op": "PUSH1", "path": "0", "value": "0x40"}, "4": {"fn": null, "offset": [264, 5554], "op": "MSTORE", "path": "0"}, "5": {"fn": null, "offset": [264, 5554], "op": "PUSH1", "path": "0", "value": "0x4"}, "7": {"fn": null, "offset": [264, 5554], "op": "CALLDATASIZE", "path": "0"}, "8": {"fn": null, "offset": [264, 5554], "op": "LT", "path": "0"}, "9": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0x70"}, "12": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "13": {"fn": null, "offset": [264, 5554], "op": "PUSH1", "path": "0", "value": "0x0"}, "15": {"fn": null, "offset": [264, 5554], "op": "CALLDATALOAD", "path": "0"}, "16": {"fn": null, "offset": [264, 5554], "op": "PUSH1", "path": "0", "value": "0xE0"}, "18": {"fn": null, "offset": [264, 5554], "op": "SHR", "path": "0"}, "19": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "20": {"fn": null, "offset": [264, 5554], "op": "PUSH4", "path": "0", "value": "0x5A1294B7"}, "25": {"fn": null, "offset": [264, 5554], "op": "GT", "path": "0"}, "26": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0x4E"}, "29": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "30": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "31": {"fn": null, "offset": [264, 5554], "op": "PUSH4", "path": "0", "value": "0x5A1294B7"}, "36": {"fn": null, "offset": [264, 5554], "op": "EQ", "path": "0"}, "37": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0xF0"}, "40": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "41": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "42": {"fn": null, "offset": [264, 5554], "op": "PUSH4", "path": "0", "value": "0xA9D72B02"}, "47": {"fn": null, "offset": [264, 5554], "op": "EQ", "path": "0"}, "48": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0x120"}, "51": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "52": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "53": {"fn": null, "offset": [264, 5554], "op": "PUSH4", "path": "0", "value": "0xEB66091F"}, "58": {"fn": null, "offset": [264, 5554], "op": "EQ", "path": "0"}, "59": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0x142"}, "62": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "63": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "64": {"fn": null, "offset": [264, 5554], "op": "PUSH4", "path": "0", "value": "0xEF4481D1"}, "69": {"fn": null, "offset": [264, 5554], "op": "EQ", "path": "0"}, "70": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0x15E"}, "73": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "74": {"fn": null, "offset": [264, 5554], "op": "PUSH1", "path": "0", "value": "0x0"}, "76": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "77": {"fn": null, "offset": [264, 5554], "op": "REVERT", "path": "0"}, "78": {"fn": null, "offset": [264, 5554], "op": "JUMPDEST", "path": "0"}, "79": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "80": {"fn": null, "offset": [264, 5554], "op": "PUSH4", "path": "0", "value": "0x40C05B6"}, "85": {"fn": null, "offset": [264, 5554], "op": "EQ", "path": "0"}, "86": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0x75"}, "89": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "90": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "91": {"fn": null, "offset": [264, 5554], "op": "PUSH4", "path": "0", "value": "0x411B252"}, "96": {"fn": null, "offset": [264, 5554], "op": "EQ", "path": "0"}, "97": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0xBA"}, "100": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "101": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "102": {"fn": null, "offset": [264, 5554], "op": "PUSH4", "path": "0", "value": "0x13457D88"}, "107": {"fn": null, "offset": [264, 5554], "op": "EQ", "path": "0"}, "108": {"fn": null, "offset": [264, 5554], "op": "PUSH2", "path": "0", "value": "0xDB"}, "111": {"fn": null, "offset": [264, 5554], "op": "JUMPI", "path": "0"}, "112": {"fn": null, "offset": [264, 5554], "op": "JUMPDEST", "path": "0"}, "113": {"fn": null, "offset": [264, 5554], "op": "PUSH1", "path": "0", "value": "0x0"}, "115": {"fn": null, "offset": [264, 5554], "op": "DUP1", "path": "0"}, "116": {"first_revert": true, "fn": null, "offset": [264, 5554], "op": "REVERT", "path": "0"}, "117": {"offset": [861, 912], "op": "JUMPDEST", "path": "0"}, "118": {"fn": null, "offset": [861, 912], "op": "CALLVALUE", "path": "0"}, "119": {"fn": null, "offset": [861, 912], "op": "DUP1", "path": "0"}, "120": {"fn": null, "offset": [861, 912], "op": "ISZERO", "path": "0"}, "121": {"fn": null, "offset": [861, 912], "op": "PUSH2", "path": "0", "value": "0x81"}, "124": {"fn": null, "offset": [861, 912], "op": "JUMPI", "path": "0"}, "125": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "0", "value": "0x0"}, "127": {"fn": null, "offset": [861, 912], "op": "DUP1", "path": "0"}, "128": {"fn": null, "offset": [861, 912], "op": "REVERT", "path": "0"}, "129": {"fn": null, "offset": [861, 912], "op": "JUMPDEST", "path": "0"}, "130": {"op": "POP"}, "131": {"offset": [861, 912], "op": "PUSH2", "path": "0", "value": "0xA5"}, "134": {"fn": null, "offset": [861, 912], "op": "PUSH2", "path": "0", "value": "0x90"}, "137": {"fn": null, "offset": [861, 912], "op": "CALLDATASIZE", "path": "0"}, "138": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "0", "value": "0x4"}, "140": {"fn": null, "offset": [861, 912], "op": "PUSH2", "path": "0", "value": "0x8F7"}, "143": {"fn": null, "jump": "i", "offset": [861, 912], "op": "JUMP", "path": "0"}, "144": {"fn": null, "offset": [861, 912], "op": "JUMPDEST", "path": "0"}, "145": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "0", "value": "0x0"}, "147": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "0", "value": "0x20"}, "149": {"fn": null, "offset": [861, 912], "op": "DUP2", "path": "0"}, "150": {"fn": null, "offset": [861, 912], "op": "SWAP1", "path": "0"}, "151": {"fn": null, "offset": [861, 912], "op": "MSTORE", "path": "0"}, "152": {"fn": null, "offset": [861, 912], "op": "SWAP1", "path": "0"}, "153": {"fn": null, "offset": [861, 912], "op": "DUP2", "path": "0"}, "154": {"fn": null, "offset": [861, 912], "op": "MSTORE", "path": "0"}, "155": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "0", "value": "0x40"}, "157": {"fn": null, "offset": [861, 912], "op": "SWAP1", "path": "0"}, "158": {"fn": null, "offset": [861, 912], "op": "KECCAK256", "path": "0"}, "159": {"fn": null, "offset": [861, 912], "op": "SLOAD", "path": "0"}, "160": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "0", "value": "0xFF"}, "162": {"fn": null, "offset": [861, 912], "op": "AND", "path": "0"}, "163": {"fn": null, "offset": [861, 912], "op": "DUP2", "path": "0"}, "164": {"fn": null, "offset": [861, 912], "op": "JUMP", "path": "0"}, "165": {"fn": null, "offset": [861, 912], "op": "JUMPDEST", "path": "0"}, "166": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "0", "value": "0x40"}, "168": {"fn": null, "offset": [861, 912], "op": "MLOAD", "path": "0"}, "169": {"op": "SWAP1"}, "170": {"op": "ISZERO"}, "171": {"op": "ISZERO"}, "172": {"op": "DUP2"}, "173": {"op": "MSTORE"}, "174": {"op": "PUSH1", "value": "0x20"}, "176": {"op": "ADD"}, "177": {"offset": [861, 912], "op": "JUMPDEST", "path": "0"}, "178": {"fn": null, "offset": [861, 912], "op": "PUSH1", "path": "0", "value": "0x40"}, "180": {"fn": null, "offset": [861, 912], "op": "MLOAD", "path": "0"}, "181": {"fn": null, "offset": [861, 912], "op": "DUP1", "path": "0"}, "182": {"fn": null, "offset": [861, 912], "op": "SWAP2", "path": "0"}, "183": {"fn": null, "offset": [861, 912], "op": "SUB", "path": "0"}, "184": {"fn": null, "offset": [861, 912], "op": "SWAP1", "path": "0"}, "185": {"fn": null, "offset": [861, 912], "op": "RETURN", "path": "0"}, "186": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "JUMPDEST", "path": "0"}, "187": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "0", "value": "0xCD"}, "190": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "0", "value": "0xC8"}, "193": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "CALLDATASIZE", "path": "0"}, "194": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH1", "path": "0", "value": "0x4"}, "196": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "0", "value": "0x928"}, "199": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2388, 3620], "op": "JUMP", "path": "0"}, "200": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "JUMPDEST", "path": "0"}, "201": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "0", "value": "0x171"}, "204": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2388, 3620], "op": "JUMP", "path": "0"}, "205": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "JUMPDEST", "path": "0"}, "206": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH1", "path": "0", "value": "0x40"}, "208": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "MLOAD", "path": "0"}, "209": {"op": "SWAP1"}, "210": {"op": "DUP2"}, "211": {"op": "MSTORE"}, "212": {"op": "PUSH1", "value": "0x20"}, "214": {"op": "ADD"}, "215": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "PUSH2", "path": "0", "value": "0xB1"}, "218": {"op": "JUMP"}, "219": {"offset": [307, 357], "op": "JUMPDEST", "path": "0"}, "220": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "CALLVALUE", "path": "0"}, "221": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "DUP1", "path": "0"}, "222": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "ISZERO", "path": "0"}, "223": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "PUSH2", "path": "0", "value": "0xE7"}, "226": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "JUMPI", "path": "0"}, "227": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "PUSH1", "path": "0", "value": "0x0"}, "229": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "DUP1", "path": "0"}, "230": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "REVERT", "path": "0"}, "231": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "JUMPDEST", "path": "0"}, "232": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "POP", "path": "0"}, "233": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "PUSH2", "path": "0", "value": "0xCD"}, "236": {"offset": [356, 357], "op": "PUSH1", "path": "0", "value": "0x5"}, "238": {"offset": [307, 357], "op": "DUP2", "path": "0"}, "239": {"fn": "SourceDomainSideBridge.transfer", "offset": [307, 357], "op": "JUMP", "path": "0"}, "240": {"offset": [918, 965], "op": "JUMPDEST", "path": "0"}, "241": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "CALLVALUE", "path": "0"}, "242": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "DUP1", "path": "0"}, "243": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "ISZERO", "path": "0"}, "244": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH2", "path": "0", "value": "0xFC"}, "247": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "JUMPI", "path": "0"}, "248": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "0", "value": "0x0"}, "250": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "DUP1", "path": "0"}, "251": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "REVERT", "path": "0"}, "252": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "JUMPDEST", "path": "0"}, "253": {"op": "POP"}, "254": {"offset": [918, 965], "op": "PUSH2", "path": "0", "value": "0xA5"}, "257": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH2", "path": "0", "value": "0x10B"}, "260": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "CALLDATASIZE", "path": "0"}, "261": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "0", "value": "0x4"}, "263": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH2", "path": "0", "value": "0x8F7"}, "266": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [918, 965], "op": "JUMP", "path": "0"}, "267": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "JUMPDEST", "path": "0"}, "268": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "0", "value": "0x1"}, "270": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "0", "value": "0x20"}, "272": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "MSTORE", "path": "0"}, "273": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "0", "value": "0x0"}, "275": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "SWAP1", "path": "0"}, "276": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "DUP2", "path": "0"}, "277": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "MSTORE", "path": "0"}, "278": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "0", "value": "0x40"}, "280": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "SWAP1", "path": "0"}, "281": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "KECCAK256", "path": "0"}, "282": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "SLOAD", "path": "0"}, "283": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "PUSH1", "path": "0", "value": "0xFF"}, "285": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "AND", "path": "0"}, "286": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "DUP2", "path": "0"}, "287": {"fn": "SourceDomainSideBridge.transfer", "offset": [918, 965], "op": "JUMP", "path": "0"}, "288": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "JUMPDEST", "path": "0"}, "289": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "CALLVALUE", "path": "0"}, "290": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "DUP1", "path": "0"}, "291": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "ISZERO", "path": "0"}, "292": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "PUSH2", "path": "0", "value": "0x12C"}, "295": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "JUMPI", "path": "0"}, "296": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "PUSH1", "path": "0", "value": "0x0"}, "298": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "DUP1", "path": "0"}, "299": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "REVERT", "path": "0"}, "300": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "JUMPDEST", "path": "0"}, "301": {"op": "POP"}, "302": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "PUSH2", "path": "0", "value": "0x140"}, "305": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "PUSH2", "path": "0", "value": "0x13B"}, "308": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "CALLDATASIZE", "path": "0"}, "309": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "PUSH1", "path": "0", "value": "0x4"}, "311": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "PUSH2", "path": "0", "value": "0x8F7"}, "314": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5406, 5548], "op": "JUMP", "path": "0"}, "315": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "JUMPDEST", "path": "0"}, "316": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "PUSH2", "path": "0", "value": "0x45C"}, "319": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [5406, 5548], "op": "JUMP", "path": "0"}, "320": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "JUMPDEST", "path": "0"}, "321": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "STOP", "path": "0"}, "322": {"offset": [363, 407], "op": "JUMPDEST", "path": "0"}, "323": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "CALLVALUE", "path": "0"}, "324": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "DUP1", "path": "0"}, "325": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "ISZERO", "path": "0"}, "326": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "PUSH2", "path": "0", "value": "0x14E"}, "329": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "JUMPI", "path": "0"}, "330": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "PUSH1", "path": "0", "value": "0x0"}, "332": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "DUP1", "path": "0"}, "333": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "REVERT", "path": "0"}, "334": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "JUMPDEST", "path": "0"}, "335": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "POP", "path": "0"}, "336": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "PUSH2", "path": "0", "value": "0xCD"}, "339": {"offset": [398, 407], "op": "PUSH8", "path": "0", "value": "0x16345785D8A0000"}, "348": {"offset": [363, 407], "op": "DUP2", "path": "0"}, "349": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [363, 407], "op": "JUMP", "path": "0"}, "350": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "JUMPDEST", "path": "0"}, "351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "PUSH2", "path": "0", "value": "0x140"}, "354": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "PUSH2", "path": "0", "value": "0x16C"}, "357": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "CALLDATASIZE", "path": "0"}, "358": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "PUSH1", "path": "0", "value": "0x4"}, "360": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "PUSH2", "path": "0", "value": "0x9DE"}, "363": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3720, 4786], "op": "JUMP", "path": "0"}, "364": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "JUMPDEST", "path": "0"}, "365": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "PUSH2", "path": "0", "value": "0x526"}, "368": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3720, 4786], "op": "JUMP", "path": "0"}, "369": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "JUMPDEST", "path": "0"}, "370": {"fn": "SourceDomainSideBridge.transfer", "offset": [2523, 2530], "op": "PUSH1", "path": "0", "value": "0x0"}, "372": {"offset": [398, 407], "op": "PUSH8", "path": "0", "value": "0x16345785D8A0000"}, "381": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2571], "op": "PUSH2", "path": "0", "statement": 0, "value": "0x188"}, "384": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2565], "op": "DUP5", "path": "0"}, "385": {"fn": "SourceDomainSideBridge.transfer", "offset": [2567, 2571], "op": "PUSH2", "path": "0", "value": "0x3E8"}, "388": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2571], "op": "PUSH2", "path": "0", "value": "0xAE7"}, "391": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2558, 2571], "op": "JUMP", "path": "0"}, "392": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2571], "op": "JUMPDEST", "path": "0"}, "393": {"fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2586], "op": "GT", "path": "0"}, "394": {"branch": 23, "fn": "SourceDomainSideBridge.transfer", "offset": [2558, 2586], "op": "ISZERO", "path": "0"}, "395": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "PUSH2", "path": "0", "value": "0x1DB"}, "398": {"branch": 23, "fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "JUMPI", "path": "0"}, "399": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "PUSH1", "path": "0", "value": "0x40"}, "401": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "MLOAD", "path": "0"}, "402": {"op": "PUSH3", "value": "0x461BCD"}, "406": {"op": "PUSH1", "value": "0xE5"}, "408": {"op": "SHL"}, "409": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "DUP2", "path": "0"}, "410": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "MSTORE", "path": "0"}, "411": {"op": "PUSH1", "value": "0x20"}, "413": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "PUSH1", "path": "0", "value": "0x4"}, "415": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "DUP3", "path": "0"}, "416": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "ADD", "path": "0"}, "417": {"op": "MSTORE"}, "418": {"op": "PUSH1", "value": "0x1E"}, "420": {"op": "PUSH1", "value": "0x24"}, "422": {"op": "DUP3"}, "423": {"op": "ADD"}, "424": {"op": "MSTORE"}, "425": {"op": "PUSH32", "value": "0x416D6F756E7420686967686572207468616E207472616465206C696D69740000"}, "458": {"op": "PUSH1", "value": "0x44"}, "460": {"op": "DUP3"}, "461": {"op": "ADD"}, "462": {"op": "MSTORE"}, "463": {"op": "PUSH1", "value": "0x64"}, "465": {"op": "ADD"}, "466": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "JUMPDEST", "path": "0"}, "467": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "PUSH1", "path": "0", "value": "0x40"}, "469": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "MLOAD", "path": "0"}, "470": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "DUP1", "path": "0"}, "471": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "SWAP2", "path": "0"}, "472": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "SUB", "path": "0"}, "473": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "SWAP1", "path": "0"}, "474": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "REVERT", "optimizer_revert": true, "path": "0"}, "475": {"fn": "SourceDomainSideBridge.transfer", "offset": [2550, 2621], "op": "JUMPDEST", "path": "0"}, "476": {"fn": "SourceDomainSideBridge.transfer", "offset": [2631, 2642], "op": "PUSH1", "path": "0", "value": "0x0"}, "478": {"fn": "SourceDomainSideBridge.transfer", "offset": [2645, 2680], "op": "PUSH2", "path": "0", "value": "0x1E8"}, "481": {"offset": [356, 357], "op": "PUSH1", "path": "0", "value": "0x5"}, "483": {"fn": "SourceDomainSideBridge.transfer", "offset": [2645, 2652], "op": "DUP6", "path": "0"}, "484": {"fn": "SourceDomainSideBridge.transfer", "offset": [2645, 2680], "op": "PUSH2", "path": "0", "value": "0xAE7"}, "487": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2645, 2680], "op": "JUMP", "path": "0"}, "488": {"fn": "SourceDomainSideBridge.transfer", "offset": [2645, 2680], "op": "JUMPDEST", "path": "0"}, "489": {"fn": "SourceDomainSideBridge.transfer", "offset": [2631, 2680], "op": "SWAP1", "path": "0"}, "490": {"op": "POP"}, "491": {"fn": "SourceDomainSideBridge.transfer", "offset": [2690, 2711], "op": "PUSH1", "path": "0", "value": "0x0"}, "493": {"fn": "SourceDomainSideBridge.transfer", "offset": [2631, 2680], "op": "DUP2", "path": "0"}, "494": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2728], "op": "PUSH2", "path": "0", "value": "0x1F9"}, "497": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2721], "op": "DUP7", "path": "0"}, "498": {"fn": "SourceDomainSideBridge.transfer", "offset": [2724, 2728], "op": "PUSH2", "path": "0", "value": "0x3E8"}, "501": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2728], "op": "PUSH2", "path": "0", "value": "0xAE7"}, "504": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2714, 2728], "op": "JUMP", "path": "0"}, "505": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2728], "op": "JUMPDEST", "path": "0"}, "506": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "PUSH2", "path": "0", "value": "0x203"}, "509": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "SWAP2", "path": "0"}, "510": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "SWAP1", "path": "0"}, "511": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "PUSH2", "path": "0", "value": "0xB06"}, "514": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2714, 2734], "op": "JUMP", "path": "0"}, "515": {"fn": "SourceDomainSideBridge.transfer", "offset": [2714, 2734], "op": "JUMPDEST", "path": "0"}, "516": {"fn": "SourceDomainSideBridge.transfer", "offset": [2690, 2734], "op": "SWAP1", "path": "0"}, "517": {"op": "POP"}, "518": {"op": "PUSH1", "value": "0x1"}, "520": {"op": "PUSH1", "value": "0x1"}, "522": {"op": "PUSH1", "value": "0xA0"}, "524": {"op": "SHL"}, "525": {"op": "SUB"}, "526": {"fn": "SourceDomainSideBridge.transfer", "offset": [2756, 2786], "op": "DUP8", "path": "0"}, "527": {"branch": 24, "fn": "SourceDomainSideBridge.transfer", "offset": [2756, 2786], "op": "AND", "path": "0"}, "528": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "PUSH2", "path": "0", "value": "0x274"}, "531": {"branch": 24, "fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "JUMPI", "path": "0"}, "532": {"fn": "SourceDomainSideBridge.transfer", "offset": [2822, 2835], "op": "DUP1", "path": "0", "statement": 1}, "533": {"fn": "SourceDomainSideBridge.transfer", "offset": [2809, 2818], "op": "CALLVALUE", "path": "0"}, "534": {"fn": "SourceDomainSideBridge.transfer", "offset": [2809, 2835], "op": "LT", "path": "0"}, "535": {"branch": 25, "fn": "SourceDomainSideBridge.transfer", "offset": [2809, 2835], "op": "ISZERO", "path": "0"}, "536": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "PUSH2", "path": "0", "value": "0x26F"}, "539": {"branch": 25, "fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "JUMPI", "path": "0"}, "540": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "PUSH1", "path": "0", "value": "0x40"}, "542": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "MLOAD", "path": "0"}, "543": {"op": "PUSH3", "value": "0x461BCD"}, "547": {"op": "PUSH1", "value": "0xE5"}, "549": {"op": "SHL"}, "550": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "DUP2", "path": "0"}, "551": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "MSTORE", "path": "0"}, "552": {"op": "PUSH1", "value": "0x20"}, "554": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "PUSH1", "path": "0", "value": "0x4"}, "556": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "DUP3", "path": "0"}, "557": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "ADD", "path": "0"}, "558": {"op": "MSTORE"}, "559": {"op": "PUSH1", "value": "0x24"}, "561": {"op": "DUP1"}, "562": {"op": "DUP3"}, "563": {"op": "ADD"}, "564": {"op": "MSTORE"}, "565": {"op": "PUSH32", "value": "0x4572726F72203A204E6F6E2053756666656369656E742066756E647321212121"}, "598": {"op": "PUSH1", "value": "0x44"}, "600": {"op": "DUP3"}, "601": {"op": "ADD"}, "602": {"op": "MSTORE"}, "603": {"op": "PUSH4", "value": "0x21212121"}, "608": {"op": "PUSH1", "value": "0xE0"}, "610": {"op": "SHL"}, "611": {"op": "PUSH1", "value": "0x64"}, "613": {"op": "DUP3"}, "614": {"op": "ADD"}, "615": {"op": "MSTORE"}, "616": {"op": "PUSH1", "value": "0x84"}, "618": {"op": "ADD"}, "619": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "PUSH2", "path": "0", "value": "0x1D2"}, "622": {"op": "JUMP"}, "623": {"fn": "SourceDomainSideBridge.transfer", "offset": [2801, 2876], "op": "JUMPDEST", "path": "0"}, "624": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "PUSH2", "path": "0", "value": "0x2F0"}, "627": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "JUMP", "path": "0"}, "628": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "JUMPDEST", "path": "0"}, "629": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "statement": 2, "value": "0x40"}, "631": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MLOAD", "path": "0"}, "632": {"op": "PUSH4", "value": "0x23B872DD"}, "637": {"op": "PUSH1", "value": "0xE0"}, "639": {"op": "SHL"}, "640": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP2", "path": "0"}, "641": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MSTORE", "path": "0"}, "642": {"fn": "SourceDomainSideBridge.transfer", "offset": [2972, 2982], "op": "CALLER", "path": "0"}, "643": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x4"}, "645": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP3", "path": "0"}, "646": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ADD", "path": "0"}, "647": {"op": "MSTORE"}, "648": {"fn": "SourceDomainSideBridge.transfer", "offset": [2992, 2996], "op": "ADDRESS", "path": "0"}, "649": {"op": "PUSH1", "value": "0x24"}, "651": {"op": "DUP3"}, "652": {"op": "ADD"}, "653": {"op": "MSTORE"}, "654": {"op": "PUSH1", "value": "0x44"}, "656": {"op": "DUP2"}, "657": {"op": "ADD"}, "658": {"op": "DUP3"}, "659": {"op": "SWAP1"}, "660": {"op": "MSTORE"}, "661": {"fn": "SourceDomainSideBridge.transfer", "offset": [2925, 2938], "op": "DUP8", "path": "0"}, "662": {"fn": "SourceDomainSideBridge.transfer", "offset": [2925, 2938], "op": "SWAP1", "path": "0"}, "663": {"op": "PUSH1", "value": "0x1"}, "665": {"op": "PUSH1", "value": "0x1"}, "667": {"op": "PUSH1", "value": "0xA0"}, "669": {"op": "SHL"}, "670": {"op": "SUB"}, "671": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "DUP3", "path": "0"}, "672": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "AND", "path": "0"}, "673": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "SWAP1", "path": "0"}, "674": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "PUSH4", "path": "0", "value": "0x23B872DD"}, "679": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 2971], "op": "SWAP1", "path": "0"}, "680": {"op": "PUSH1", "value": "0x64"}, "682": {"op": "ADD"}, "683": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x20"}, "685": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x40"}, "687": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MLOAD", "path": "0"}, "688": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP1", "path": "0"}, "689": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP4", "path": "0"}, "690": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "SUB", "path": "0"}, "691": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP2", "path": "0"}, "692": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x0"}, "694": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP8", "path": "0"}, "695": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "GAS", "path": "0"}, "696": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "CALL", "path": "0"}, "697": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ISZERO", "path": "0"}, "698": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP1", "path": "0"}, "699": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ISZERO", "path": "0"}, "700": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH2", "path": "0", "value": "0x2C9"}, "703": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "JUMPI", "path": "0"}, "704": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "RETURNDATASIZE", "path": "0"}, "705": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x0"}, "707": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP1", "path": "0"}, "708": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "RETURNDATACOPY", "path": "0"}, "709": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "RETURNDATASIZE", "path": "0"}, "710": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x0"}, "712": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "REVERT", "path": "0"}, "713": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "JUMPDEST", "path": "0"}, "714": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "0"}, "715": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "0"}, "716": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "0"}, "717": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "0"}, "718": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x40"}, "720": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MLOAD", "path": "0"}, "721": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "RETURNDATASIZE", "path": "0"}, "722": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x1F"}, "724": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "NOT", "path": "0"}, "725": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x1F"}, "727": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP3", "path": "0"}, "728": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ADD", "path": "0"}, "729": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "AND", "path": "0"}, "730": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP3", "path": "0"}, "731": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ADD", "path": "0"}, "732": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP1", "path": "0"}, "733": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH1", "path": "0", "value": "0x40"}, "735": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "MSTORE", "path": "0"}, "736": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "0"}, "737": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "DUP2", "path": "0"}, "738": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "ADD", "path": "0"}, "739": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "SWAP1", "path": "0"}, "740": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH2", "path": "0", "value": "0x2ED"}, "743": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "SWAP2", "path": "0"}, "744": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "SWAP1", "path": "0"}, "745": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "PUSH2", "path": "0", "value": "0xB1E"}, "748": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [2953, 3013], "op": "JUMP", "path": "0"}, "749": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "JUMPDEST", "path": "0"}, "750": {"fn": "SourceDomainSideBridge.transfer", "offset": [2953, 3013], "op": "POP", "path": "0"}, "751": {"fn": "SourceDomainSideBridge.transfer", "offset": [2891, 3024], "op": "POP", "path": "0"}, "752": {"fn": "SourceDomainSideBridge.transfer", "offset": [2753, 3024], "op": "JUMPDEST", "path": "0"}, "753": {"fn": "SourceDomainSideBridge.transfer", "offset": [3034, 3066], "op": "PUSH2", "path": "0", "value": "0x342"}, "756": {"op": "PUSH1", "value": "0x40"}, "758": {"op": "MLOAD"}, "759": {"op": "DUP1"}, "760": {"op": "PUSH1", "value": "0xE0"}, "762": {"op": "ADD"}, "763": {"op": "PUSH1", "value": "0x40"}, "765": {"op": "MSTORE"}, "766": {"op": "DUP1"}, "767": {"op": "PUSH1", "value": "0x0"}, "769": {"op": "PUSH1", "value": "0x1"}, "771": {"op": "PUSH1", "value": "0x1"}, "773": {"op": "PUSH1", "value": "0xA0"}, "775": {"op": "SHL"}, "776": {"op": "SUB"}, "777": {"op": "AND"}, "778": {"op": "DUP2"}, "779": {"op": "MSTORE"}, "780": {"op": "PUSH1", "value": "0x20"}, "782": {"op": "ADD"}, "783": {"op": "PUSH1", "value": "0x0"}, "785": {"op": "PUSH1", "value": "0x1"}, "787": {"op": "PUSH1", "value": "0x1"}, "789": {"op": "PUSH1", "value": "0xA0"}, "791": {"op": "SHL"}, "792": {"op": "SUB"}, "793": {"op": "AND"}, "794": {"op": "DUP2"}, "795": {"op": "MSTORE"}, "796": {"op": "PUSH1", "value": "0x20"}, "798": {"op": "ADD"}, "799": {"op": "PUSH1", "value": "0x0"}, "801": {"op": "DUP2"}, "802": {"op": "MSTORE"}, "803": {"op": "PUSH1", "value": "0x20"}, "805": {"op": "ADD"}, "806": {"op": "PUSH1", "value": "0x0"}, "808": {"op": "DUP2"}, "809": {"op": "MSTORE"}, "810": {"op": "PUSH1", "value": "0x20"}, "812": {"op": "ADD"}, "813": {"op": "PUSH1", "value": "0x0"}, "815": {"op": "DUP2"}, "816": {"op": "MSTORE"}, "817": {"op": "PUSH1", "value": "0x20"}, "819": {"op": "ADD"}, "820": {"op": "PUSH1", "value": "0x0"}, "822": {"op": "DUP2"}, "823": {"op": "MSTORE"}, "824": {"op": "PUSH1", "value": "0x20"}, "826": {"op": "ADD"}, "827": {"op": "PUSH1", "value": "0x0"}, "829": {"op": "DUP2"}, "830": {"op": "MSTORE"}, "831": {"op": "POP"}, "832": {"op": "SWAP1"}, "833": {"op": "JUMP"}, "834": {"fn": "SourceDomainSideBridge.transfer", "offset": [3034, 3066], "op": "JUMPDEST", "path": "0"}, "835": {"op": "PUSH1", "value": "0x1"}, "837": {"op": "PUSH1", "value": "0x1"}, "839": {"op": "PUSH1", "value": "0xA0"}, "841": {"op": "SHL"}, "842": {"op": "SUB"}, "843": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "DUP1", "path": "0", "statement": 3}, "844": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "DUP10", "path": "0"}, "845": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "AND", "path": "0"}, "846": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "DUP3", "path": "0"}, "847": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3117], "op": "MSTORE", "path": "0"}, "848": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3166], "op": "DUP8", "path": "0", "statement": 4}, "849": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3166], "op": "AND", "path": "0"}, "850": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3151], "op": "PUSH1", "path": "0", "value": "0x20"}, "852": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3151], "op": "DUP3", "path": "0"}, "853": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3151], "op": "ADD", "path": "0"}, "854": {"fn": "SourceDomainSideBridge.transfer", "offset": [3127, 3166], "op": "MSTORE", "path": "0"}, "855": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3195], "op": "PUSH1", "path": "0", "statement": 5, "value": "0x40"}, "857": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3195], "op": "DUP2", "path": "0"}, "858": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3195], "op": "ADD", "path": "0"}, "859": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3205], "op": "DUP7", "path": "0"}, "860": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3205], "op": "SWAP1", "path": "0"}, "861": {"fn": "SourceDomainSideBridge.transfer", "offset": [3176, 3205], "op": "MSTORE", "path": "0"}, "862": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3231], "op": "PUSH1", "path": "0", "statement": 6, "value": "0x60"}, "864": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3231], "op": "DUP2", "path": "0"}, "865": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3231], "op": "ADD", "path": "0"}, "866": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3237], "op": "DUP4", "path": "0"}, "867": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3237], "op": "SWAP1", "path": "0"}, "868": {"fn": "SourceDomainSideBridge.transfer", "offset": [3215, 3237], "op": "MSTORE", "path": "0"}, "869": {"fn": "SourceDomainSideBridge.transfer", "offset": [3272, 3284], "op": "NUMBER", "path": "0", "statement": 7}, "870": {"fn": "SourceDomainSideBridge.transfer", "offset": [3247, 3269], "op": "PUSH1", "path": "0", "value": "0x80"}, "872": {"fn": "SourceDomainSideBridge.transfer", "offset": [3247, 3269], "op": "DUP3", "path": "0"}, "873": {"fn": "SourceDomainSideBridge.transfer", "offset": [3247, 3269], "op": "ADD", "path": "0"}, "874": {"fn": "SourceDomainSideBridge.transfer", "offset": [3247, 3284], "op": "MSTORE", "path": "0"}, "875": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3316], "op": "PUSH1", "path": "0", "statement": 8, "value": "0xA0"}, "877": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3316], "op": "DUP2", "path": "0"}, "878": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3316], "op": "ADD", "path": "0"}, "879": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3329], "op": "DUP6", "path": "0"}, "880": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3329], "op": "SWAP1", "path": "0"}, "881": {"fn": "SourceDomainSideBridge.transfer", "offset": [3294, 3329], "op": "MSTORE", "path": "0"}, "882": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "PUSH1", "path": "0", "statement": 9, "value": "0x5"}, "884": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "DUP1", "path": "0"}, "885": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "SLOAD", "path": "0"}, "886": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3357], "op": "PUSH1", "path": "0", "value": "0xC0"}, "888": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3357], "op": "DUP4", "path": "0"}, "889": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3357], "op": "ADD", "path": "0"}, "890": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3372], "op": "DUP2", "path": "0"}, "891": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3372], "op": "SWAP1", "path": "0"}, "892": {"fn": "SourceDomainSideBridge.transfer", "offset": [3339, 3372], "op": "MSTORE", "path": "0"}, "893": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "SWAP1", "path": "0"}, "894": {"fn": "SourceDomainSideBridge.transfer", "offset": [3076, 3101], "op": "PUSH1", "path": "0", "value": "0x0"}, "896": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "PUSH2", "path": "0", "statement": 10, "value": "0x388"}, "899": {"fn": "SourceDomainSideBridge.transfer", "offset": [3360, 3372], "op": "DUP4", "path": "0"}, "900": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "PUSH2", "path": "0", "value": "0xB47"}, "903": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3383, 3397], "op": "JUMP", "path": "0"}, "904": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "JUMPDEST", "path": "0"}, "905": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "SWAP2", "path": "0"}, "906": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "SWAP1", "path": "0"}, "907": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "POP", "path": "0"}, "908": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "SSTORE", "path": "0"}, "909": {"fn": "SourceDomainSideBridge.transfer", "offset": [3383, 3397], "op": "POP", "path": "0"}, "910": {"fn": "SourceDomainSideBridge.transfer", "offset": [3408, 3432], "op": "PUSH1", "path": "0", "value": "0x0"}, "912": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x2"}, "914": {"fn": "SourceDomainSideBridge.transfer", "offset": [3453, 3465], "op": "DUP3", "path": "0"}, "915": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH1", "path": "0", "value": "0x40"}, "917": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "MLOAD", "path": "0"}, "918": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH1", "path": "0", "value": "0x20"}, "920": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "ADD", "path": "0"}, "921": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH2", "path": "0", "value": "0x3A2"}, "924": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SWAP2", "path": "0"}, "925": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SWAP1", "path": "0"}, "926": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH2", "path": "0", "value": "0xB60"}, "929": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3442, 3466], "op": "JUMP", "path": "0"}, "930": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "JUMPDEST", "path": "0"}, "931": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "PUSH1", "path": "0", "value": "0x40"}, "933": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP1", "path": "0"}, "934": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "MLOAD", "path": "0"}, "935": {"op": "PUSH1", "value": "0x1F"}, "937": {"op": "NOT"}, "938": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP2", "path": "0"}, "939": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP5", "path": "0"}, "940": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SUB", "path": "0"}, "941": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "ADD", "path": "0"}, "942": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP2", "path": "0"}, "943": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "MSTORE", "path": "0"}, "944": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SWAP1", "path": "0"}, "945": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "DUP3", "path": "0"}, "946": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "SWAP1", "path": "0"}, "947": {"fn": "SourceDomainSideBridge.transfer", "offset": [3442, 3466], "op": "MSTORE", "path": "0"}, "948": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "0", "value": "0x3BC"}, "951": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SWAP2", "path": "0"}, "952": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "0", "value": "0xBB7"}, "955": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3435, 3467], "op": "JUMP", "path": "0"}, "956": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "JUMPDEST", "path": "0"}, "957": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x20"}, "959": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x40"}, "961": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "MLOAD", "path": "0"}, "962": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP1", "path": "0"}, "963": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP4", "path": "0"}, "964": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SUB", "path": "0"}, "965": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP2", "path": "0"}, "966": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP6", "path": "0"}, "967": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "GAS", "path": "0"}, "968": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "STATICCALL", "path": "0"}, "969": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ISZERO", "path": "0"}, "970": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP1", "path": "0"}, "971": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ISZERO", "path": "0"}, "972": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "0", "value": "0x3D9"}, "975": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "JUMPI", "path": "0"}, "976": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "RETURNDATASIZE", "path": "0"}, "977": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x0"}, "979": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP1", "path": "0"}, "980": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "RETURNDATACOPY", "path": "0"}, "981": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "RETURNDATASIZE", "path": "0"}, "982": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x0"}, "984": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "REVERT", "path": "0"}, "985": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "JUMPDEST", "path": "0"}, "986": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "POP", "path": "0"}, "987": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "POP", "path": "0"}, "988": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "POP", "path": "0"}, "989": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x40"}, "991": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "MLOAD", "path": "0"}, "992": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "RETURNDATASIZE", "path": "0"}, "993": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x1F"}, "995": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "NOT", "path": "0"}, "996": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x1F"}, "998": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP3", "path": "0"}, "999": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ADD", "path": "0"}, "1000": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "AND", "path": "0"}, "1001": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP3", "path": "0"}, "1002": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ADD", "path": "0"}, "1003": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP1", "path": "0"}, "1004": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH1", "path": "0", "value": "0x40"}, "1006": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "MSTORE", "path": "0"}, "1007": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "POP", "path": "0"}, "1008": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "DUP2", "path": "0"}, "1009": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "ADD", "path": "0"}, "1010": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SWAP1", "path": "0"}, "1011": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "0", "value": "0x3FC"}, "1014": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SWAP2", "path": "0"}, "1015": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "SWAP1", "path": "0"}, "1016": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "PUSH2", "path": "0", "value": "0xBF2"}, "1019": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3435, 3467], "op": "JUMP", "path": "0"}, "1020": {"fn": "SourceDomainSideBridge.transfer", "offset": [3435, 3467], "op": "JUMPDEST", "path": "0"}, "1021": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3505], "op": "PUSH1", "path": "0", "statement": 11, "value": "0x0"}, "1023": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "DUP2", "path": "0"}, "1024": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "DUP2", "path": "0"}, "1025": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "MSTORE", "path": "0"}, "1026": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "PUSH1", "path": "0", "value": "0x20"}, "1028": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "DUP2", "path": "0"}, "1029": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "SWAP1", "path": "0"}, "1030": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "MSTORE", "path": "0"}, "1031": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "PUSH1", "path": "0", "value": "0x40"}, "1033": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "SWAP1", "path": "0"}, "1034": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "DUP2", "path": "0"}, "1035": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "SWAP1", "path": "0"}, "1036": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3523], "op": "KECCAK256", "path": "0"}, "1037": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "DUP1", "path": "0"}, "1038": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "SLOAD", "path": "0"}, "1039": {"op": "PUSH1", "value": "0xFF"}, "1041": {"op": "NOT"}, "1042": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "AND", "path": "0"}, "1043": {"fn": "SourceDomainSideBridge.transfer", "offset": [3526, 3530], "op": "PUSH1", "path": "0", "value": "0x1"}, "1045": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "OR", "path": "0"}, "1046": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "SWAP1", "path": "0"}, "1047": {"fn": "SourceDomainSideBridge.transfer", "offset": [3486, 3530], "op": "SSTORE", "path": "0"}, "1048": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "MLOAD", "path": "0", "statement": 12}, "1049": {"fn": "SourceDomainSideBridge.transfer", "offset": [3408, 3467], "op": "SWAP1", "path": "0"}, "1050": {"fn": "SourceDomainSideBridge.transfer", "offset": [3408, 3467], "op": "SWAP2", "path": "0"}, "1051": {"op": "POP"}, "1052": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "PUSH32", "path": "0", "value": "0xD8A86D1088D904BB6BF6291AF6C7530B6FF4A8F6514C77A44C143331BE826F89"}, "1085": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SWAP1", "path": "0"}, "1086": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "PUSH2", "path": "0", "value": "0x448"}, "1089": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SWAP1", "path": "0"}, "1090": {"fn": "SourceDomainSideBridge.transfer", "offset": [3558, 3570], "op": "DUP5", "path": "0"}, "1091": {"fn": "SourceDomainSideBridge.transfer", "offset": [3558, 3570], "op": "SWAP1", "path": "0"}, "1092": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "PUSH2", "path": "0", "value": "0xB60"}, "1095": {"fn": "SourceDomainSideBridge.transfer", "jump": "i", "offset": [3546, 3571], "op": "JUMP", "path": "0"}, "1096": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "JUMPDEST", "path": "0"}, "1097": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "PUSH1", "path": "0", "value": "0x40"}, "1099": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "MLOAD", "path": "0"}, "1100": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "DUP1", "path": "0"}, "1101": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SWAP2", "path": "0"}, "1102": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SUB", "path": "0"}, "1103": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "SWAP1", "path": "0"}, "1104": {"fn": "SourceDomainSideBridge.transfer", "offset": [3546, 3571], "op": "LOG1", "path": "0"}, "1105": {"fn": "SourceDomainSideBridge.transfer", "offset": [3597, 3613], "op": "SWAP9", "path": "0", "statement": 13}, "1106": {"fn": "SourceDomainSideBridge.transfer", "offset": [2388, 3620], "op": "SWAP8", "path": "0"}, "1107": {"op": "POP"}, "1108": {"op": "POP"}, "1109": {"op": "POP"}, "1110": {"op": "POP"}, "1111": {"op": "POP"}, "1112": {"op": "POP"}, "1113": {"op": "POP"}, "1114": {"op": "POP"}, "1115": {"fn": "SourceDomainSideBridge.transfer", "jump": "o", "offset": [2388, 3620], "op": "JUMP", "path": "0"}, "1116": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5406, 5548], "op": "JUMPDEST", "path": "0"}, "1117": {"offset": [1652, 1677], "op": "PUSH1", "path": "0", "value": "0x3"}, "1119": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1652, 1677], "op": "SLOAD", "path": "0"}, "1120": {"op": "PUSH1", "value": "0x1"}, "1122": {"op": "PUSH1", "value": "0x1"}, "1124": {"op": "PUSH1", "value": "0xA0"}, "1126": {"op": "SHL"}, "1127": {"op": "SUB"}, "1128": {"offset": [1652, 1677], "op": "AND", "path": "0"}, "1129": {"offset": [1709, 1719], "op": "CALLER", "path": "0"}, "1130": {"offset": [1709, 1757], "op": "DUP2", "path": "0"}, "1131": {"branch": 26, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1709, 1757], "op": "EQ", "path": "0"}, "1132": {"offset": [1709, 1832], "op": "DUP1", "path": "0"}, "1133": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1709, 1832], "op": "ISZERO", "path": "0"}, "1134": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1709, 1832], "op": "PUSH2", "path": "0", "value": "0x4FE"}, "1137": {"branch": 26, "offset": [1709, 1832], "op": "JUMPI", "path": "0"}, "1138": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1709, 1832], "op": "POP", "path": "0"}, "1139": {"offset": [1805, 1832], "op": "PUSH1", "path": "0", "value": "0x4"}, "1141": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "PUSH1", "path": "0", "value": "0x0"}, "1143": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "SWAP1", "path": "0"}, "1144": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "SLOAD", "path": "0"}, "1145": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "SWAP1", "path": "0"}, "1146": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "PUSH2", "path": "0", "value": "0x100"}, "1149": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "EXP", "path": "0"}, "1150": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "SWAP1", "path": "0"}, "1151": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1805, 1832], "op": "DIV", "path": "0"}, "1152": {"op": "PUSH1", "value": "0x1"}, "1154": {"op": "PUSH1", "value": "0x1"}, "1156": {"op": "PUSH1", "value": "0xA0"}, "1158": {"op": "SHL"}, "1159": {"op": "SUB"}, "1160": {"offset": [1805, 1832], "op": "AND", "path": "0"}, "1161": {"op": "PUSH1", "value": "0x1"}, "1163": {"op": "PUSH1", "value": "0x1"}, "1165": {"op": "PUSH1", "value": "0xA0"}, "1167": {"op": "SHL"}, "1168": {"op": "SUB"}, "1169": {"offset": [1773, 1832], "op": "AND", "path": "0"}, "1170": {"offset": [1773, 1778], "op": "DUP2", "path": "0"}, "1171": {"op": "PUSH1", "value": "0x1"}, "1173": {"op": "PUSH1", "value": "0x1"}, "1175": {"op": "PUSH1", "value": "0xA0"}, "1177": {"op": "SHL"}, "1178": {"op": "SUB"}, "1179": {"offset": [1773, 1799], "op": "AND", "path": "0"}, "1180": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1799], "op": "PUSH4", "path": "0", "value": "0x6E296E45"}, "1185": {"offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x40"}, "1187": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MLOAD", "path": "0"}, "1188": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP2", "path": "0"}, "1189": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH4", "path": "0", "value": "0xFFFFFFFF"}, "1194": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "AND", "path": "0"}, "1195": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0xE0"}, "1197": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SHL", "path": "0"}, "1198": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP2", "path": "0"}, "1199": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MSTORE", "path": "0"}, "1200": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x4"}, "1202": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ADD", "path": "0"}, "1203": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x20"}, "1205": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x40"}, "1207": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MLOAD", "path": "0"}, "1208": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP1", "path": "0"}, "1209": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP4", "path": "0"}, "1210": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SUB", "path": "0"}, "1211": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP2", "path": "0"}, "1212": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP7", "path": "0"}, "1213": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "GAS", "path": "0"}, "1214": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "STATICCALL", "path": "0"}, "1215": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ISZERO", "path": "0"}, "1216": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP1", "path": "0"}, "1217": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ISZERO", "path": "0"}, "1218": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH2", "path": "0", "value": "0x4CF"}, "1221": {"offset": [1773, 1801], "op": "JUMPI", "path": "0"}, "1222": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "RETURNDATASIZE", "path": "0"}, "1223": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x0"}, "1225": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP1", "path": "0"}, "1226": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "RETURNDATACOPY", "path": "0"}, "1227": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "RETURNDATASIZE", "path": "0"}, "1228": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x0"}, "1230": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "REVERT", "path": "0"}, "1231": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "JUMPDEST", "path": "0"}, "1232": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "0"}, "1233": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "0"}, "1234": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "0"}, "1235": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "0"}, "1236": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x40"}, "1238": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MLOAD", "path": "0"}, "1239": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "RETURNDATASIZE", "path": "0"}, "1240": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1242": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "NOT", "path": "0"}, "1243": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1245": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP3", "path": "0"}, "1246": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ADD", "path": "0"}, "1247": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "AND", "path": "0"}, "1248": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP3", "path": "0"}, "1249": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ADD", "path": "0"}, "1250": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP1", "path": "0"}, "1251": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH1", "path": "0", "value": "0x40"}, "1253": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "MSTORE", "path": "0"}, "1254": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "POP", "path": "0"}, "1255": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "DUP2", "path": "0"}, "1256": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "ADD", "path": "0"}, "1257": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SWAP1", "path": "0"}, "1258": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH2", "path": "0", "value": "0x4F3"}, "1261": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SWAP2", "path": "0"}, "1262": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "SWAP1", "path": "0"}, "1263": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "PUSH2", "path": "0", "value": "0xC0B"}, "1266": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "i", "offset": [1773, 1801], "op": "JUMP", "path": "0"}, "1267": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1801], "op": "JUMPDEST", "path": "0"}, "1268": {"op": "PUSH1", "value": "0x1"}, "1270": {"op": "PUSH1", "value": "0x1"}, "1272": {"op": "PUSH1", "value": "0xA0"}, "1274": {"op": "SHL"}, "1275": {"op": "SUB"}, "1276": {"offset": [1773, 1832], "op": "AND", "path": "0"}, "1277": {"branch": 27, "fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1773, 1832], "op": "EQ", "path": "0"}, "1278": {"offset": [1709, 1832], "op": "JUMPDEST", "path": "0"}, "1279": {"offset": [1688, 1842], "op": "PUSH2", "path": "0", "value": "0x507"}, "1282": {"branch": 27, "offset": [1688, 1842], "op": "JUMPI", "path": "0"}, "1283": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1688, 1842], "op": "PUSH1", "path": "0", "value": "0x0"}, "1285": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1688, 1842], "op": "DUP1", "path": "0"}, "1286": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1688, 1842], "op": "REVERT", "path": "0"}, "1287": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [1688, 1842], "op": "JUMPDEST", "path": "0"}, "1288": {"op": "POP"}, "1289": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "PUSH1", "path": "0", "statement": 14, "value": "0x0"}, "1291": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "SWAP1", "path": "0"}, "1292": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "DUP2", "path": "0"}, "1293": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "MSTORE", "path": "0"}, "1294": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5537, 5541], "op": "PUSH1", "path": "0", "value": "0x1"}, "1296": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "PUSH1", "path": "0", "value": "0x20"}, "1298": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "DUP2", "path": "0"}, "1299": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "SWAP1", "path": "0"}, "1300": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "MSTORE", "path": "0"}, "1301": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "PUSH1", "path": "0", "value": "0x40"}, "1303": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "SWAP1", "path": "0"}, "1304": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "SWAP2", "path": "0"}, "1305": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5534], "op": "KECCAK256", "path": "0"}, "1306": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5541], "op": "DUP1", "path": "0"}, "1307": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5541], "op": "SLOAD", "path": "0"}, "1308": {"op": "PUSH1", "value": "0xFF"}, "1310": {"op": "NOT"}, "1311": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5541], "op": "AND", "path": "0"}, "1312": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5541], "op": "SWAP1", "path": "0"}, "1313": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5541], "op": "SWAP2", "path": "0"}, "1314": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5541], "op": "OR", "path": "0"}, "1315": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5541], "op": "SWAP1", "path": "0"}, "1316": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "offset": [5498, 5541], "op": "SSTORE", "path": "0"}, "1317": {"fn": "SourceDomainSideBridge.addNewKnownHashOnion", "jump": "o", "offset": [5406, 5548], "op": "JUMP", "path": "0"}, "1318": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "JUMPDEST", "path": "0"}, "1319": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3803, 3838], "op": "PUSH1", "path": "0", "value": "0x0"}, "1321": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3841, 3890], "op": "PUSH2", "path": "0", "value": "0x531"}, "1324": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3878, 3889], "op": "DUP3", "path": "0"}, "1325": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3841, 3877], "op": "PUSH2", "path": "0", "value": "0x813"}, "1328": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [3841, 3890], "op": "JUMP", "path": "0"}, "1329": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3841, 3890], "op": "JUMPDEST", "path": "0"}, "1330": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "PUSH1", "path": "0", "statement": 15, "value": "0x0"}, "1332": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "DUP2", "path": "0"}, "1333": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "DUP2", "path": "0"}, "1334": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "MSTORE", "path": "0"}, "1335": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3923], "op": "PUSH1", "path": "0", "value": "0x1"}, "1337": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "PUSH1", "path": "0", "value": "0x20"}, "1339": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "MSTORE", "path": "0"}, "1340": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "PUSH1", "path": "0", "value": "0x40"}, "1342": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "SWAP1", "path": "0"}, "1343": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "KECCAK256", "path": "0"}, "1344": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "SLOAD", "path": "0"}, "1345": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3803, 3890], "op": "SWAP1", "path": "0"}, "1346": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3803, 3890], "op": "SWAP2", "path": "0"}, "1347": {"op": "POP"}, "1348": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "PUSH1", "path": "0", "value": "0xFF"}, "1350": {"branch": 28, "fn": "SourceDomainSideBridge.processClaims", "offset": [3908, 3952], "op": "AND", "path": "0"}, "1351": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "PUSH2", "path": "0", "value": "0x592"}, "1354": {"branch": 28, "fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "JUMPI", "path": "0"}, "1355": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "PUSH1", "path": "0", "value": "0x40"}, "1357": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "MLOAD", "path": "0"}, "1358": {"op": "PUSH3", "value": "0x461BCD"}, "1362": {"op": "PUSH1", "value": "0xE5"}, "1364": {"op": "SHL"}, "1365": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "DUP2", "path": "0"}, "1366": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "MSTORE", "path": "0"}, "1367": {"op": "PUSH1", "value": "0x20"}, "1369": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "PUSH1", "path": "0", "value": "0x4"}, "1371": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "DUP3", "path": "0"}, "1372": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "ADD", "path": "0"}, "1373": {"op": "MSTORE"}, "1374": {"op": "PUSH1", "value": "0x19"}, "1376": {"op": "PUSH1", "value": "0x24"}, "1378": {"op": "DUP3"}, "1379": {"op": "ADD"}, "1380": {"op": "MSTORE"}, "1381": {"op": "PUSH32", "value": "0x496E76616C6964652052657761726444617461206C6973742E00000000000000"}, "1414": {"op": "PUSH1", "value": "0x44"}, "1416": {"op": "DUP3"}, "1417": {"op": "ADD"}, "1418": {"op": "MSTORE"}, "1419": {"op": "PUSH1", "value": "0x64"}, "1421": {"op": "ADD"}, "1422": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "PUSH2", "path": "0", "value": "0x1D2"}, "1425": {"op": "JUMP"}, "1426": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3900, 3982], "op": "JUMPDEST", "path": "0"}, "1427": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3992, 4016], "op": "PUSH1", "path": "0", "statement": 16, "value": "0x2"}, "1429": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3992, 4046], "op": "DUP2", "path": "0"}, "1430": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3992, 4046], "op": "SWAP1", "path": "0"}, "1431": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3992, 4046], "op": "SSTORE", "path": "0"}, "1432": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4060, 4066], "op": "PUSH1", "path": "0", "value": "0x0"}, "1434": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4056, 4771], "op": "JUMPDEST", "path": "0"}, "1435": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4076, 4087], "op": "DUP3", "path": "0"}, "1436": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4076, 4094], "op": "MLOAD", "path": "0"}, "1437": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4072, 4073], "op": "DUP2", "path": "0"}, "1438": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4072, 4094], "op": "LT", "path": "0"}, "1439": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4056, 4771], "op": "ISZERO", "path": "0"}, "1440": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4056, 4771], "op": "PUSH2", "path": "0", "value": "0x80E"}, "1443": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4056, 4771], "op": "JUMPI", "path": "0"}, "1444": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4137], "op": "PUSH1", "path": "0", "value": "0x0"}, "1446": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "DUP1", "path": "0"}, "1447": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4149], "op": "DUP5", "path": "0"}, "1448": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4150, 4151], "op": "DUP4", "path": "0"}, "1449": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "DUP2", "path": "0"}, "1450": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "MLOAD", "path": "0"}, "1451": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "DUP2", "path": "0"}, "1452": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "LT", "path": "0"}, "1453": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "PUSH2", "path": "0", "value": "0x5B8"}, "1456": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "JUMPI", "path": "0"}, "1457": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "PUSH2", "path": "0", "value": "0x5B8"}, "1460": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "PUSH2", "path": "0", "value": "0xC28"}, "1463": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4138, 4152], "op": "JUMP", "path": "0"}, "1464": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "JUMPDEST", "path": "0"}, "1465": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "PUSH1", "path": "0", "value": "0x20"}, "1467": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "SWAP1", "path": "0"}, "1468": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "DUP2", "path": "0"}, "1469": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "MUL", "path": "0"}, "1470": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "SWAP2", "path": "0"}, "1471": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "SWAP1", "path": "0"}, "1472": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "SWAP2", "path": "0"}, "1473": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "ADD", "path": "0"}, "1474": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "DUP2", "path": "0"}, "1475": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "ADD", "path": "0"}, "1476": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4152], "op": "MLOAD", "path": "0"}, "1477": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4169], "op": "MLOAD", "path": "0"}, "1478": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "DUP3", "path": "0"}, "1479": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "MSTORE", "path": "0"}, "1480": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "DUP2", "path": "0"}, "1481": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "ADD", "path": "0"}, "1482": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "SWAP2", "path": "0"}, "1483": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "SWAP1", "path": "0"}, "1484": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "SWAP2", "path": "0"}, "1485": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "MSTORE", "path": "0"}, "1486": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "PUSH1", "path": "0", "value": "0x40"}, "1488": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "ADD", "path": "0"}, "1489": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4138, 4169], "op": "PUSH1", "path": "0", "value": "0x0"}, "1491": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "KECCAK256", "path": "0"}, "1492": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "SLOAD", "path": "0"}, "1493": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "PUSH1", "path": "0", "value": "0xFF"}, "1495": {"branch": 29, "fn": "SourceDomainSideBridge.processClaims", "offset": [4118, 4170], "op": "AND", "path": "0"}, "1496": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4115, 4761], "op": "ISZERO", "path": "0"}, "1497": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4115, 4761], "op": "PUSH2", "path": "0", "value": "0x7FC"}, "1500": {"branch": 29, "fn": "SourceDomainSideBridge.processClaims", "offset": [4115, 4761], "op": "JUMPI", "path": "0"}, "1501": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4189, 4201], "op": "PUSH1", "path": "0", "value": "0x0"}, "1503": {"offset": [446, 488], "op": "DUP1", "path": "0"}, "1504": {"op": "PUSH1", "value": "0x1"}, "1506": {"op": "PUSH1", "value": "0x1"}, "1508": {"op": "PUSH1", "value": "0xA0"}, "1510": {"op": "SHL"}, "1511": {"op": "SUB"}, "1512": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4266], "op": "AND", "path": "0"}, "1513": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4233], "op": "DUP5", "path": "0"}, "1514": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4234, 4235], "op": "DUP4", "path": "0"}, "1515": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "DUP2", "path": "0"}, "1516": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "MLOAD", "path": "0"}, "1517": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "DUP2", "path": "0"}, "1518": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "LT", "path": "0"}, "1519": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "PUSH2", "path": "0", "value": "0x5FA"}, "1522": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "JUMPI", "path": "0"}, "1523": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "PUSH2", "path": "0", "value": "0x5FA"}, "1526": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "PUSH2", "path": "0", "value": "0xC28"}, "1529": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4222, 4236], "op": "JUMP", "path": "0"}, "1530": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "JUMPDEST", "path": "0"}, "1531": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "PUSH1", "path": "0", "value": "0x20"}, "1533": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "MUL", "path": "0"}, "1534": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "PUSH1", "path": "0", "value": "0x20"}, "1536": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "ADD", "path": "0"}, "1537": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "ADD", "path": "0"}, "1538": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4236], "op": "MLOAD", "path": "0"}, "1539": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4249], "op": "PUSH1", "path": "0", "value": "0x20"}, "1541": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4249], "op": "ADD", "path": "0"}, "1542": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4249], "op": "MLOAD", "path": "0"}, "1543": {"op": "PUSH1", "value": "0x1"}, "1545": {"op": "PUSH1", "value": "0x1"}, "1547": {"op": "PUSH1", "value": "0xA0"}, "1549": {"op": "SHL"}, "1550": {"op": "SUB"}, "1551": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4266], "op": "AND", "path": "0"}, "1552": {"branch": 30, "fn": "SourceDomainSideBridge.processClaims", "offset": [4222, 4266], "op": "SUB", "path": "0"}, "1553": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4219, 4672], "op": "PUSH2", "path": "0", "value": "0x6AC"}, "1556": {"branch": 30, "fn": "SourceDomainSideBridge.processClaims", "offset": [4219, 4672], "op": "JUMPI", "path": "0"}, "1557": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4290, 4298], "op": "PUSH1", "path": "0", "value": "0x0"}, "1559": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4323], "op": "DUP5", "path": "0"}, "1560": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4324, 4325], "op": "DUP4", "path": "0"}, "1561": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "DUP2", "path": "0"}, "1562": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "MLOAD", "path": "0"}, "1563": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "DUP2", "path": "0"}, "1564": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "LT", "path": "0"}, "1565": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "PUSH2", "path": "0", "value": "0x628"}, "1568": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "JUMPI", "path": "0"}, "1569": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "PUSH2", "path": "0", "value": "0x628"}, "1572": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "PUSH2", "path": "0", "value": "0xC28"}, "1575": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4312, 4326], "op": "JUMP", "path": "0"}, "1576": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "JUMPDEST", "path": "0"}, "1577": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "PUSH1", "path": "0", "value": "0x20"}, "1579": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "MUL", "path": "0"}, "1580": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "PUSH1", "path": "0", "value": "0x20"}, "1582": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "ADD", "path": "0"}, "1583": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "ADD", "path": "0"}, "1584": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4326], "op": "MLOAD", "path": "0"}, "1585": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4334], "op": "PUSH1", "path": "0", "value": "0x40"}, "1587": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4334], "op": "ADD", "path": "0"}, "1588": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4312, 4334], "op": "MLOAD", "path": "0"}, "1589": {"op": "PUSH1", "value": "0x1"}, "1591": {"op": "PUSH1", "value": "0x1"}, "1593": {"op": "PUSH1", "value": "0xA0"}, "1595": {"op": "SHL"}, "1596": {"op": "SUB"}, "1597": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4340], "op": "AND", "path": "0"}, "1598": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4359], "op": "DUP6", "path": "0"}, "1599": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4360, 4361], "op": "DUP5", "path": "0"}, "1600": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "DUP2", "path": "0"}, "1601": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "MLOAD", "path": "0"}, "1602": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "DUP2", "path": "0"}, "1603": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "LT", "path": "0"}, "1604": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "PUSH2", "path": "0", "value": "0x64F"}, "1607": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "JUMPI", "path": "0"}, "1608": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "PUSH2", "path": "0", "value": "0x64F"}, "1611": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "PUSH2", "path": "0", "value": "0xC28"}, "1614": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4348, 4362], "op": "JUMP", "path": "0"}, "1615": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "JUMPDEST", "path": "0"}, "1616": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "PUSH1", "path": "0", "value": "0x20"}, "1618": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "MUL", "path": "0"}, "1619": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "PUSH1", "path": "0", "value": "0x20"}, "1621": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "ADD", "path": "0"}, "1622": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "ADD", "path": "0"}, "1623": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4362], "op": "MLOAD", "path": "0"}, "1624": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4366], "op": "PUSH1", "path": "0", "value": "0x60"}, "1626": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4366], "op": "ADD", "path": "0"}, "1627": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4348, 4366], "op": "MLOAD", "path": "0"}, "1628": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x40"}, "1630": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "MLOAD", "path": "0"}, "1631": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x0"}, "1633": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x40"}, "1635": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "MLOAD", "path": "0"}, "1636": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP1", "path": "0"}, "1637": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP4", "path": "0"}, "1638": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "SUB", "path": "0"}, "1639": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP2", "path": "0"}, "1640": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP6", "path": "0"}, "1641": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP8", "path": "0"}, "1642": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "GAS", "path": "0"}, "1643": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "CALL", "path": "0"}, "1644": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "SWAP3", "path": "0"}, "1645": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "POP", "path": "0"}, "1646": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "POP", "path": "0"}, "1647": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "POP", "path": "0"}, "1648": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "RETURNDATASIZE", "path": "0"}, "1649": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP1", "path": "0"}, "1650": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x0"}, "1652": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP2", "path": "0"}, "1653": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "EQ", "path": "0"}, "1654": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH2", "path": "0", "value": "0x69B"}, "1657": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "JUMPI", "path": "0"}, "1658": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x40"}, "1660": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "MLOAD", "path": "0"}, "1661": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "SWAP2", "path": "0"}, "1662": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "POP", "path": "0"}, "1663": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1665": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "NOT", "path": "0"}, "1666": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x3F"}, "1668": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "RETURNDATASIZE", "path": "0"}, "1669": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "ADD", "path": "0"}, "1670": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "AND", "path": "0"}, "1671": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP3", "path": "0"}, "1672": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "ADD", "path": "0"}, "1673": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x40"}, "1675": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "MSTORE", "path": "0"}, "1676": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "RETURNDATASIZE", "path": "0"}, "1677": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP3", "path": "0"}, "1678": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "MSTORE", "path": "0"}, "1679": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "RETURNDATASIZE", "path": "0"}, "1680": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x0"}, "1682": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x20"}, "1684": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "DUP5", "path": "0"}, "1685": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "ADD", "path": "0"}, "1686": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "RETURNDATACOPY", "path": "0"}, "1687": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH2", "path": "0", "value": "0x6A0"}, "1690": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "JUMP", "path": "0"}, "1691": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "JUMPDEST", "path": "0"}, "1692": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "PUSH1", "path": "0", "value": "0x60"}, "1694": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "SWAP2", "path": "0"}, "1695": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "POP", "path": "0"}, "1696": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4304, 4371], "op": "JUMPDEST", "path": "0"}, "1697": {"op": "POP"}, "1698": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4371], "op": "SWAP1", "path": "0"}, "1699": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4289, 4371], "op": "SWAP3", "path": "0"}, "1700": {"op": "POP"}, "1701": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4219, 4672], "op": "PUSH2", "path": "0", "value": "0x799"}, "1704": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4219, 4672], "op": "SWAP2", "path": "0"}, "1705": {"op": "POP"}, "1706": {"op": "POP"}, "1707": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4219, 4672], "op": "JUMP", "path": "0"}, "1708": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4219, 4672], "op": "JUMPDEST", "path": "0"}, "1709": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4451, 4462], "op": "PUSH1", "path": "0", "value": "0x0"}, "1711": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4482], "op": "DUP5", "path": "0"}, "1712": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4483, 4484], "op": "DUP4", "path": "0"}, "1713": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "DUP2", "path": "0"}, "1714": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "MLOAD", "path": "0"}, "1715": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "DUP2", "path": "0"}, "1716": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "LT", "path": "0"}, "1717": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "PUSH2", "path": "0", "value": "0x6C0"}, "1720": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "JUMPI", "path": "0"}, "1721": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "PUSH2", "path": "0", "value": "0x6C0"}, "1724": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "PUSH2", "path": "0", "value": "0xC28"}, "1727": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4471, 4485], "op": "JUMP", "path": "0"}, "1728": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "JUMPDEST", "path": "0"}, "1729": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "PUSH1", "path": "0", "value": "0x20"}, "1731": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "MUL", "path": "0"}, "1732": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "PUSH1", "path": "0", "value": "0x20"}, "1734": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "ADD", "path": "0"}, "1735": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "ADD", "path": "0"}, "1736": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4485], "op": "MLOAD", "path": "0"}, "1737": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4498], "op": "PUSH1", "path": "0", "value": "0x20"}, "1739": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4498], "op": "ADD", "path": "0"}, "1740": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4471, 4498], "op": "MLOAD", "path": "0"}, "1741": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4451, 4499], "op": "SWAP1", "path": "0"}, "1742": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4451, 4499], "op": "POP", "path": "0"}, "1743": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4557], "op": "DUP1", "path": "0", "statement": 17}, "1744": {"op": "PUSH1", "value": "0x1"}, "1746": {"op": "PUSH1", "value": "0x1"}, "1748": {"op": "PUSH1", "value": "0xA0"}, "1750": {"op": "SHL"}, "1751": {"op": "SUB"}, "1752": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4570], "op": "AND", "path": "0"}, "1753": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4570], "op": "PUSH4", "path": "0", "value": "0x23B872DD"}, "1758": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4579, 4583], "op": "ADDRESS", "path": "0"}, "1759": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4597], "op": "DUP8", "path": "0"}, "1760": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4598, 4599], "op": "DUP7", "path": "0"}, "1761": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "DUP2", "path": "0"}, "1762": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "MLOAD", "path": "0"}, "1763": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "DUP2", "path": "0"}, "1764": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "LT", "path": "0"}, "1765": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "PUSH2", "path": "0", "value": "0x6F0"}, "1768": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "JUMPI", "path": "0"}, "1769": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "PUSH2", "path": "0", "value": "0x6F0"}, "1772": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "PUSH2", "path": "0", "value": "0xC28"}, "1775": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4586, 4600], "op": "JUMP", "path": "0"}, "1776": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "JUMPDEST", "path": "0"}, "1777": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "PUSH1", "path": "0", "value": "0x20"}, "1779": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "MUL", "path": "0"}, "1780": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "PUSH1", "path": "0", "value": "0x20"}, "1782": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "ADD", "path": "0"}, "1783": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "ADD", "path": "0"}, "1784": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4600], "op": "MLOAD", "path": "0"}, "1785": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4608], "op": "PUSH1", "path": "0", "value": "0x40"}, "1787": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4608], "op": "ADD", "path": "0"}, "1788": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4586, 4608], "op": "MLOAD", "path": "0"}, "1789": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4645], "op": "DUP9", "path": "0"}, "1790": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4646, 4647], "op": "DUP8", "path": "0"}, "1791": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "DUP2", "path": "0"}, "1792": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "MLOAD", "path": "0"}, "1793": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "DUP2", "path": "0"}, "1794": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "LT", "path": "0"}, "1795": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "PUSH2", "path": "0", "value": "0x70E"}, "1798": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "JUMPI", "path": "0"}, "1799": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "PUSH2", "path": "0", "value": "0x70E"}, "1802": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "PUSH2", "path": "0", "value": "0xC28"}, "1805": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4634, 4648], "op": "JUMP", "path": "0"}, "1806": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "JUMPDEST", "path": "0"}, "1807": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "PUSH1", "path": "0", "value": "0x20"}, "1809": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "SWAP1", "path": "0"}, "1810": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "DUP2", "path": "0"}, "1811": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "MUL", "path": "0"}, "1812": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "SWAP2", "path": "0"}, "1813": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "SWAP1", "path": "0"}, "1814": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "SWAP2", "path": "0"}, "1815": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "ADD", "path": "0"}, "1816": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "ADD", "path": "0"}, "1817": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4648], "op": "MLOAD", "path": "0"}, "1818": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4652], "op": "PUSH1", "path": "0", "value": "0x60"}, "1820": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4652], "op": "ADD", "path": "0"}, "1821": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4634, 4652], "op": "MLOAD", "path": "0"}, "1822": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x40"}, "1824": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "MLOAD", "path": "0"}, "1825": {"op": "PUSH1", "value": "0x1"}, "1827": {"op": "PUSH1", "value": "0x1"}, "1829": {"op": "PUSH1", "value": "0xE0"}, "1831": {"op": "SHL"}, "1832": {"op": "SUB"}, "1833": {"op": "NOT"}, "1834": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0xE0"}, "1836": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP7", "path": "0"}, "1837": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "SWAP1", "path": "0"}, "1838": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "SHL", "path": "0"}, "1839": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "AND", "path": "0"}, "1840": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP2", "path": "0"}, "1841": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "MSTORE", "path": "0"}, "1842": {"op": "PUSH1", "value": "0x1"}, "1844": {"op": "PUSH1", "value": "0x1"}, "1846": {"op": "PUSH1", "value": "0xA0"}, "1848": {"op": "SHL"}, "1849": {"op": "SUB"}, "1850": {"op": "SWAP4"}, "1851": {"op": "DUP5"}, "1852": {"op": "AND"}, "1853": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x4"}, "1855": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP3", "path": "0"}, "1856": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "ADD", "path": "0"}, "1857": {"op": "MSTORE"}, "1858": {"op": "SWAP3"}, "1859": {"op": "SWAP1"}, "1860": {"op": "SWAP2"}, "1861": {"op": "AND"}, "1862": {"op": "PUSH1", "value": "0x24"}, "1864": {"op": "DUP4"}, "1865": {"op": "ADD"}, "1866": {"op": "MSTORE"}, "1867": {"op": "PUSH1", "value": "0x44"}, "1869": {"op": "DUP3"}, "1870": {"op": "ADD"}, "1871": {"op": "MSTORE"}, "1872": {"op": "PUSH1", "value": "0x64"}, "1874": {"op": "ADD"}, "1875": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x20"}, "1877": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x40"}, "1879": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "MLOAD", "path": "0"}, "1880": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP1", "path": "0"}, "1881": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP4", "path": "0"}, "1882": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "SUB", "path": "0"}, "1883": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP2", "path": "0"}, "1884": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x0"}, "1886": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP8", "path": "0"}, "1887": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "GAS", "path": "0"}, "1888": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "CALL", "path": "0"}, "1889": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "ISZERO", "path": "0"}, "1890": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP1", "path": "0"}, "1891": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "ISZERO", "path": "0"}, "1892": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH2", "path": "0", "value": "0x771"}, "1895": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "JUMPI", "path": "0"}, "1896": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "RETURNDATASIZE", "path": "0"}, "1897": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x0"}, "1899": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP1", "path": "0"}, "1900": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "RETURNDATACOPY", "path": "0"}, "1901": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "RETURNDATASIZE", "path": "0"}, "1902": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x0"}, "1904": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "REVERT", "path": "0"}, "1905": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "JUMPDEST", "path": "0"}, "1906": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "POP", "path": "0"}, "1907": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "POP", "path": "0"}, "1908": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "POP", "path": "0"}, "1909": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "POP", "path": "0"}, "1910": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x40"}, "1912": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "MLOAD", "path": "0"}, "1913": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "RETURNDATASIZE", "path": "0"}, "1914": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1916": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "NOT", "path": "0"}, "1917": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x1F"}, "1919": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP3", "path": "0"}, "1920": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "ADD", "path": "0"}, "1921": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "AND", "path": "0"}, "1922": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP3", "path": "0"}, "1923": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "ADD", "path": "0"}, "1924": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP1", "path": "0"}, "1925": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH1", "path": "0", "value": "0x40"}, "1927": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "MSTORE", "path": "0"}, "1928": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "POP", "path": "0"}, "1929": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "DUP2", "path": "0"}, "1930": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "ADD", "path": "0"}, "1931": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "SWAP1", "path": "0"}, "1932": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH2", "path": "0", "value": "0x795"}, "1935": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "SWAP2", "path": "0"}, "1936": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "SWAP1", "path": "0"}, "1937": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "PUSH2", "path": "0", "value": "0xB1E"}, "1940": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4552, 4653], "op": "JUMP", "path": "0"}, "1941": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4552, 4653], "op": "JUMPDEST", "path": "0"}, "1942": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4542, 4653], "op": "SWAP2", "path": "0"}, "1943": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4542, 4653], "op": "POP", "path": "0"}, "1944": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4429, 4672], "op": "POP", "path": "0"}, "1945": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4219, 4672], "op": "JUMPDEST", "path": "0"}, "1946": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "PUSH32", "path": "0", "statement": 18, "value": "0x6949409522B57DDD499E29E527EA6B74DF8D2F4F2993B0030BEE0FD0EAD7CA4A"}, "1979": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4716], "op": "DUP5", "path": "0"}, "1980": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4717, 4718], "op": "DUP4", "path": "0"}, "1981": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "DUP2", "path": "0"}, "1982": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "MLOAD", "path": "0"}, "1983": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "DUP2", "path": "0"}, "1984": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "LT", "path": "0"}, "1985": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "PUSH2", "path": "0", "value": "0x7CC"}, "1988": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "JUMPI", "path": "0"}, "1989": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "PUSH2", "path": "0", "value": "0x7CC"}, "1992": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "PUSH2", "path": "0", "value": "0xC28"}, "1995": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4705, 4719], "op": "JUMP", "path": "0"}, "1996": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "JUMPDEST", "path": "0"}, "1997": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "PUSH1", "path": "0", "value": "0x20"}, "1999": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "MUL", "path": "0"}, "2000": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "PUSH1", "path": "0", "value": "0x20"}, "2002": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "ADD", "path": "0"}, "2003": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "ADD", "path": "0"}, "2004": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4719], "op": "MLOAD", "path": "0"}, "2005": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4736], "op": "PUSH1", "path": "0", "value": "0x0"}, "2007": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4736], "op": "ADD", "path": "0"}, "2008": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4705, 4736], "op": "MLOAD", "path": "0"}, "2009": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4738, 4745], "op": "DUP3", "path": "0"}, "2010": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "PUSH1", "path": "0", "value": "0x40"}, "2012": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "MLOAD", "path": "0"}, "2013": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "PUSH2", "path": "0", "value": "0x7F2"}, "2016": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "SWAP3", "path": "0"}, "2017": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "SWAP2", "path": "0"}, "2018": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "SWAP1", "path": "0"}, "2019": {"op": "SWAP2"}, "2020": {"op": "DUP3"}, "2021": {"op": "MSTORE"}, "2022": {"op": "ISZERO"}, "2023": {"op": "ISZERO"}, "2024": {"op": "PUSH1", "value": "0x20"}, "2026": {"op": "DUP3"}, "2027": {"op": "ADD"}, "2028": {"op": "MSTORE"}, "2029": {"op": "PUSH1", "value": "0x40"}, "2031": {"op": "ADD"}, "2032": {"op": "SWAP1"}, "2033": {"op": "JUMP"}, "2034": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "JUMPDEST", "path": "0"}, "2035": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "PUSH1", "path": "0", "value": "0x40"}, "2037": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "MLOAD", "path": "0"}, "2038": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "DUP1", "path": "0"}, "2039": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "SWAP2", "path": "0"}, "2040": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "SUB", "path": "0"}, "2041": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "SWAP1", "path": "0"}, "2042": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4694, 4746], "op": "LOG1", "path": "0"}, "2043": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4171, 4761], "op": "POP", "path": "0"}, "2044": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4115, 4761], "op": "JUMPDEST", "path": "0"}, "2045": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4096, 4099], "op": "DUP1", "path": "0", "statement": 19}, "2046": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4096, 4099], "op": "PUSH2", "path": "0", "value": "0x806"}, "2049": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4096, 4099], "op": "DUP2", "path": "0"}, "2050": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4096, 4099], "op": "PUSH2", "path": "0", "value": "0xB47"}, "2053": {"fn": "SourceDomainSideBridge.processClaims", "jump": "i", "offset": [4096, 4099], "op": "JUMP", "path": "0"}, "2054": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4096, 4099], "op": "JUMPDEST", "path": "0"}, "2055": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4096, 4099], "op": "SWAP2", "path": "0"}, "2056": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4096, 4099], "op": "POP", "path": "0"}, "2057": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4096, 4099], "op": "POP", "path": "0"}, "2058": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4056, 4771], "op": "PUSH2", "path": "0", "value": "0x59A"}, "2061": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4056, 4771], "op": "JUMP", "path": "0"}, "2062": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4056, 4771], "op": "JUMPDEST", "path": "0"}, "2063": {"fn": "SourceDomainSideBridge.processClaims", "offset": [4056, 4771], "op": "POP", "path": "0"}, "2064": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3793, 4786], "op": "POP", "path": "0"}, "2065": {"fn": "SourceDomainSideBridge.processClaims", "offset": [3720, 4786], "op": "POP", "path": "0"}, "2066": {"fn": "SourceDomainSideBridge.processClaims", "jump": "o", "offset": [3720, 4786], "op": "JUMP", "path": "0"}, "2067": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4886, 5306], "op": "JUMPDEST", "path": "0"}, "2068": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5043, 5067], "op": "PUSH1", "path": "0", "value": "0x2"}, "2070": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5043, 5067], "op": "SLOAD", "path": "0"}, "2071": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4987, 4994], "op": "PUSH1", "path": "0", "value": "0x0"}, "2073": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4987, 4994], "op": "SWAP1", "path": "0"}, "2074": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4987, 4994], "op": "DUP2", "path": "0"}, "2075": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5077, 5256], "op": "JUMPDEST", "path": "0"}, "2076": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5097, 5108], "op": "DUP4", "path": "0"}, "2077": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5097, 5115], "op": "MLOAD", "path": "0"}, "2078": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5093, 5094], "op": "DUP2", "path": "0"}, "2079": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5093, 5115], "op": "LT", "path": "0"}, "2080": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5077, 5256], "op": "ISZERO", "path": "0"}, "2081": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5077, 5256], "op": "PUSH2", "path": "0", "value": "0x8F0"}, "2084": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5077, 5256], "op": "JUMPI", "path": "0"}, "2085": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "statement": 20, "value": "0x2"}, "2087": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5201, 5228], "op": "DUP3", "path": "0"}, "2088": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5240], "op": "DUP6", "path": "0"}, "2089": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5241, 5242], "op": "DUP4", "path": "0"}, "2090": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "DUP2", "path": "0"}, "2091": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "MLOAD", "path": "0"}, "2092": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "DUP2", "path": "0"}, "2093": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "LT", "path": "0"}, "2094": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "PUSH2", "path": "0", "value": "0x839"}, "2097": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "JUMPI", "path": "0"}, "2098": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "PUSH2", "path": "0", "value": "0x839"}, "2101": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "PUSH2", "path": "0", "value": "0xC28"}, "2104": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5229, 5243], "op": "JUMP", "path": "0"}, "2105": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "JUMPDEST", "path": "0"}, "2106": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "PUSH1", "path": "0", "value": "0x20"}, "2108": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "SWAP1", "path": "0"}, "2109": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "DUP2", "path": "0"}, "2110": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "MUL", "path": "0"}, "2111": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "SWAP2", "path": "0"}, "2112": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "SWAP1", "path": "0"}, "2113": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "SWAP2", "path": "0"}, "2114": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "ADD", "path": "0"}, "2115": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "DUP2", "path": "0"}, "2116": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "ADD", "path": "0"}, "2117": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5229, 5243], "op": "MLOAD", "path": "0"}, "2118": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "PUSH1", "path": "0", "value": "0x40"}, "2120": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "DUP1", "path": "0"}, "2121": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "MLOAD", "path": "0"}, "2122": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "DUP1", "path": "0"}, "2123": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "DUP5", "path": "0"}, "2124": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "ADD", "path": "0"}, "2125": {"op": "SWAP5"}, "2126": {"op": "SWAP1"}, "2127": {"op": "SWAP5"}, "2128": {"op": "MSTORE"}, "2129": {"op": "DUP2"}, "2130": {"op": "MLOAD"}, "2131": {"op": "DUP5"}, "2132": {"op": "DUP3"}, "2133": {"op": "ADD"}, "2134": {"op": "MSTORE"}, "2135": {"op": "SWAP2"}, "2136": {"op": "DUP2"}, "2137": {"op": "ADD"}, "2138": {"op": "MLOAD"}, "2139": {"op": "PUSH1", "value": "0x1"}, "2141": {"op": "PUSH1", "value": "0x1"}, "2143": {"op": "PUSH1", "value": "0xA0"}, "2145": {"op": "SHL"}, "2146": {"op": "SUB"}, "2147": {"op": "SWAP1"}, "2148": {"op": "DUP2"}, "2149": {"op": "AND"}, "2150": {"op": "PUSH1", "value": "0x60"}, "2152": {"op": "DUP1"}, "2153": {"op": "DUP7"}, "2154": {"op": "ADD"}, "2155": {"op": "SWAP2"}, "2156": {"op": "SWAP1"}, "2157": {"op": "SWAP2"}, "2158": {"op": "MSTORE"}, "2159": {"op": "SWAP3"}, "2160": {"op": "DUP3"}, "2161": {"op": "ADD"}, "2162": {"op": "MLOAD"}, "2163": {"op": "AND"}, "2164": {"op": "PUSH1", "value": "0x80"}, "2166": {"op": "DUP5"}, "2167": {"op": "ADD"}, "2168": {"op": "MSTORE"}, "2169": {"op": "ADD"}, "2170": {"op": "MLOAD"}, "2171": {"op": "PUSH1", "value": "0xA0"}, "2173": {"op": "DUP3"}, "2174": {"op": "ADD"}, "2175": {"op": "MSTORE"}, "2176": {"op": "PUSH1", "value": "0xC0"}, "2178": {"op": "ADD"}, "2179": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "PUSH1", "path": "0", "value": "0x40"}, "2181": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "DUP1", "path": "0"}, "2182": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "MLOAD", "path": "0"}, "2183": {"op": "PUSH1", "value": "0x1F"}, "2185": {"op": "NOT"}, "2186": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "DUP2", "path": "0"}, "2187": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "DUP5", "path": "0"}, "2188": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "SUB", "path": "0"}, "2189": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "ADD", "path": "0"}, "2190": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "DUP2", "path": "0"}, "2191": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "MSTORE", "path": "0"}, "2192": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "SWAP1", "path": "0"}, "2193": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "DUP3", "path": "0"}, "2194": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "SWAP1", "path": "0"}, "2195": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5190, 5244], "op": "MSTORE", "path": "0"}, "2196": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH2", "path": "0", "value": "0x89C"}, "2199": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "SWAP2", "path": "0"}, "2200": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH2", "path": "0", "value": "0xBB7"}, "2203": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5183, 5245], "op": "JUMP", "path": "0"}, "2204": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "JUMPDEST", "path": "0"}, "2205": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "value": "0x20"}, "2207": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "value": "0x40"}, "2209": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "MLOAD", "path": "0"}, "2210": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP1", "path": "0"}, "2211": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP4", "path": "0"}, "2212": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "SUB", "path": "0"}, "2213": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP2", "path": "0"}, "2214": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP6", "path": "0"}, "2215": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "GAS", "path": "0"}, "2216": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "STATICCALL", "path": "0"}, "2217": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "ISZERO", "path": "0"}, "2218": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP1", "path": "0"}, "2219": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "ISZERO", "path": "0"}, "2220": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH2", "path": "0", "value": "0x8B9"}, "2223": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "JUMPI", "path": "0"}, "2224": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "RETURNDATASIZE", "path": "0"}, "2225": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "value": "0x0"}, "2227": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP1", "path": "0"}, "2228": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "RETURNDATACOPY", "path": "0"}, "2229": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "RETURNDATASIZE", "path": "0"}, "2230": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "value": "0x0"}, "2232": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "REVERT", "path": "0"}, "2233": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "JUMPDEST", "path": "0"}, "2234": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "POP", "path": "0"}, "2235": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "POP", "path": "0"}, "2236": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "POP", "path": "0"}, "2237": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "value": "0x40"}, "2239": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "MLOAD", "path": "0"}, "2240": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "RETURNDATASIZE", "path": "0"}, "2241": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "value": "0x1F"}, "2243": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "NOT", "path": "0"}, "2244": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "value": "0x1F"}, "2246": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP3", "path": "0"}, "2247": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "ADD", "path": "0"}, "2248": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "AND", "path": "0"}, "2249": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP3", "path": "0"}, "2250": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "ADD", "path": "0"}, "2251": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP1", "path": "0"}, "2252": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH1", "path": "0", "value": "0x40"}, "2254": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "MSTORE", "path": "0"}, "2255": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "POP", "path": "0"}, "2256": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "DUP2", "path": "0"}, "2257": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "ADD", "path": "0"}, "2258": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "SWAP1", "path": "0"}, "2259": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH2", "path": "0", "value": "0x8DC"}, "2262": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "SWAP2", "path": "0"}, "2263": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "SWAP1", "path": "0"}, "2264": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "PUSH2", "path": "0", "value": "0xBF2"}, "2267": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5183, 5245], "op": "JUMP", "path": "0"}, "2268": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5183, 5245], "op": "JUMPDEST", "path": "0"}, "2269": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5136, 5245], "op": "SWAP2", "path": "0"}, "2270": {"op": "POP"}, "2271": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5117, 5120], "op": "DUP1", "path": "0", "statement": 21}, "2272": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5117, 5120], "op": "PUSH2", "path": "0", "value": "0x8E8"}, "2275": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5117, 5120], "op": "DUP2", "path": "0"}, "2276": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5117, 5120], "op": "PUSH2", "path": "0", "value": "0xB47"}, "2279": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "i", "offset": [5117, 5120], "op": "JUMP", "path": "0"}, "2280": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5117, 5120], "op": "JUMPDEST", "path": "0"}, "2281": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5117, 5120], "op": "SWAP2", "path": "0"}, "2282": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5117, 5120], "op": "POP", "path": "0"}, "2283": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5117, 5120], "op": "POP", "path": "0"}, "2284": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5077, 5256], "op": "PUSH2", "path": "0", "value": "0x81B"}, "2287": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5077, 5256], "op": "JUMP", "path": "0"}, "2288": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5077, 5256], "op": "JUMPDEST", "path": "0"}, "2289": {"op": "POP"}, "2290": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [5272, 5299], "op": "SWAP3", "path": "0", "statement": 22}, "2291": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "offset": [4886, 5306], "op": "SWAP2", "path": "0"}, "2292": {"op": "POP"}, "2293": {"op": "POP"}, "2294": {"fn": "SourceDomainSideBridge.calculateNewProcessedRewardHashOnion", "jump": "o", "offset": [4886, 5306], "op": "JUMP", "path": "0"}, "2295": {"op": "JUMPDEST"}, "2296": {"op": "PUSH1", "value": "0x0"}, "2298": {"op": "PUSH1", "value": "0x20"}, "2300": {"op": "DUP3"}, "2301": {"op": "DUP5"}, "2302": {"op": "SUB"}, "2303": {"op": "SLT"}, "2304": {"op": "ISZERO"}, "2305": {"op": "PUSH2", "value": "0x909"}, "2308": {"op": "JUMPI"}, "2309": {"op": "PUSH1", "value": "0x0"}, "2311": {"op": "DUP1"}, "2312": {"op": "REVERT"}, "2313": {"op": "JUMPDEST"}, "2314": {"op": "POP"}, "2315": {"op": "CALLDATALOAD"}, "2316": {"op": "SWAP2"}, "2317": {"op": "SWAP1"}, "2318": {"op": "POP"}, "2319": {"jump": "o", "op": "JUMP"}, "2320": {"op": "JUMPDEST"}, "2321": {"op": "PUSH1", "value": "0x1"}, "2323": {"op": "PUSH1", "value": "0x1"}, "2325": {"op": "PUSH1", "value": "0xA0"}, "2327": {"op": "SHL"}, "2328": {"op": "SUB"}, "2329": {"op": "DUP2"}, "2330": {"op": "AND"}, "2331": {"op": "DUP2"}, "2332": {"op": "EQ"}, "2333": {"op": "PUSH2", "value": "0x925"}, "2336": {"op": "JUMPI"}, "2337": {"op": "PUSH1", "value": "0x0"}, "2339": {"op": "DUP1"}, "2340": {"op": "REVERT"}, "2341": {"op": "JUMPDEST"}, "2342": {"op": "POP"}, "2343": {"jump": "o", "op": "JUMP"}, "2344": {"op": "JUMPDEST"}, "2345": {"op": "PUSH1", "value": "0x0"}, "2347": {"op": "DUP1"}, "2348": {"op": "PUSH1", "value": "0x0"}, "2350": {"op": "DUP1"}, "2351": {"op": "PUSH1", "value": "0x80"}, "2353": {"op": "DUP6"}, "2354": {"op": "DUP8"}, "2355": {"op": "SUB"}, "2356": {"op": "SLT"}, "2357": {"op": "ISZERO"}, "2358": {"op": "PUSH2", "value": "0x93E"}, "2361": {"op": "JUMPI"}, "2362": {"op": "PUSH1", "value": "0x0"}, "2364": {"op": "DUP1"}, "2365": {"op": "REVERT"}, "2366": {"op": "JUMPDEST"}, "2367": {"op": "DUP5"}, "2368": {"op": "CALLDATALOAD"}, "2369": {"op": "PUSH2", "value": "0x949"}, "2372": {"op": "DUP2"}, "2373": {"op": "PUSH2", "value": "0x910"}, "2376": {"jump": "i", "op": "JUMP"}, "2377": {"op": "JUMPDEST"}, "2378": {"op": "SWAP4"}, "2379": {"op": "POP"}, "2380": {"op": "PUSH1", "value": "0x20"}, "2382": {"op": "DUP6"}, "2383": {"op": "ADD"}, "2384": {"op": "CALLDATALOAD"}, "2385": {"op": "PUSH2", "value": "0x959"}, "2388": {"op": "DUP2"}, "2389": {"op": "PUSH2", "value": "0x910"}, "2392": {"jump": "i", "op": "JUMP"}, "2393": {"op": "JUMPDEST"}, "2394": {"op": "SWAP4"}, "2395": {"op": "SWAP7"}, "2396": {"op": "SWAP4"}, "2397": {"op": "SWAP6"}, "2398": {"op": "POP"}, "2399": {"op": "POP"}, "2400": {"op": "POP"}, "2401": {"op": "POP"}, "2402": {"op": "PUSH1", "value": "0x40"}, "2404": {"op": "DUP3"}, "2405": {"op": "ADD"}, "2406": {"op": "CALLDATALOAD"}, "2407": {"op": "SWAP2"}, "2408": {"op": "PUSH1", "value": "0x60"}, "2410": {"op": "ADD"}, "2411": {"op": "CALLDATALOAD"}, "2412": {"op": "SWAP1"}, "2413": {"jump": "o", "op": "JUMP"}, "2414": {"op": "JUMPDEST"}, "2415": {"op": "PUSH4", "value": "0x4E487B71"}, "2420": {"op": "PUSH1", "value": "0xE0"}, "2422": {"op": "SHL"}, "2423": {"op": "PUSH1", "value": "0x0"}, "2425": {"op": "MSTORE"}, "2426": {"op": "PUSH1", "value": "0x41"}, "2428": {"op": "PUSH1", "value": "0x4"}, "2430": {"op": "MSTORE"}, "2431": {"op": "PUSH1", "value": "0x24"}, "2433": {"op": "PUSH1", "value": "0x0"}, "2435": {"op": "REVERT"}, "2436": {"op": "JUMPDEST"}, "2437": {"op": "PUSH1", "value": "0x40"}, "2439": {"op": "MLOAD"}, "2440": {"op": "PUSH1", "value": "0x80"}, "2442": {"op": "DUP2"}, "2443": {"op": "ADD"}, "2444": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2453": {"op": "DUP2"}, "2454": {"op": "GT"}, "2455": {"op": "DUP3"}, "2456": {"op": "DUP3"}, "2457": {"op": "LT"}, "2458": {"op": "OR"}, "2459": {"op": "ISZERO"}, "2460": {"op": "PUSH2", "value": "0x9A7"}, "2463": {"op": "JUMPI"}, "2464": {"op": "PUSH2", "value": "0x9A7"}, "2467": {"op": "PUSH2", "value": "0x96E"}, "2470": {"jump": "i", "op": "JUMP"}, "2471": {"op": "JUMPDEST"}, "2472": {"op": "PUSH1", "value": "0x40"}, "2474": {"op": "MSTORE"}, "2475": {"op": "SWAP1"}, "2476": {"jump": "o", "op": "JUMP"}, "2477": {"op": "JUMPDEST"}, "2478": {"op": "PUSH1", "value": "0x40"}, "2480": {"op": "MLOAD"}, "2481": {"op": "PUSH1", "value": "0x1F"}, "2483": {"op": "DUP3"}, "2484": {"op": "ADD"}, "2485": {"op": "PUSH1", "value": "0x1F"}, "2487": {"op": "NOT"}, "2488": {"op": "AND"}, "2489": {"op": "DUP2"}, "2490": {"op": "ADD"}, "2491": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2500": {"op": "DUP2"}, "2501": {"op": "GT"}, "2502": {"op": "DUP3"}, "2503": {"op": "DUP3"}, "2504": {"op": "LT"}, "2505": {"op": "OR"}, "2506": {"op": "ISZERO"}, "2507": {"op": "PUSH2", "value": "0x9D6"}, "2510": {"op": "JUMPI"}, "2511": {"op": "PUSH2", "value": "0x9D6"}, "2514": {"op": "PUSH2", "value": "0x96E"}, "2517": {"jump": "i", "op": "JUMP"}, "2518": {"op": "JUMPDEST"}, "2519": {"op": "PUSH1", "value": "0x40"}, "2521": {"op": "MSTORE"}, "2522": {"op": "SWAP2"}, "2523": {"op": "SWAP1"}, "2524": {"op": "POP"}, "2525": {"jump": "o", "op": "JUMP"}, "2526": {"op": "JUMPDEST"}, "2527": {"op": "PUSH1", "value": "0x0"}, "2529": {"op": "PUSH1", "value": "0x20"}, "2531": {"op": "DUP1"}, "2532": {"op": "DUP4"}, "2533": {"op": "DUP6"}, "2534": {"op": "SUB"}, "2535": {"op": "SLT"}, "2536": {"op": "ISZERO"}, "2537": {"op": "PUSH2", "value": "0x9F1"}, "2540": {"op": "JUMPI"}, "2541": {"op": "PUSH1", "value": "0x0"}, "2543": {"op": "DUP1"}, "2544": {"op": "REVERT"}, "2545": {"op": "JUMPDEST"}, "2546": {"op": "DUP3"}, "2547": {"op": "CALLDATALOAD"}, "2548": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "2557": {"op": "DUP1"}, "2558": {"op": "DUP3"}, "2559": {"op": "GT"}, "2560": {"op": "ISZERO"}, "2561": {"op": "PUSH2", "value": "0xA09"}, "2564": {"op": "JUMPI"}, "2565": {"op": "PUSH1", "value": "0x0"}, "2567": {"op": "DUP1"}, "2568": {"op": "REVERT"}, "2569": {"op": "JUMPDEST"}, "2570": {"op": "DUP2"}, "2571": {"op": "DUP6"}, "2572": {"op": "ADD"}, "2573": {"op": "SWAP2"}, "2574": {"op": "POP"}, "2575": {"op": "DUP6"}, "2576": {"op": "PUSH1", "value": "0x1F"}, "2578": {"op": "DUP4"}, "2579": {"op": "ADD"}, "2580": {"op": "SLT"}, "2581": {"op": "PUSH2", "value": "0xA1D"}, "2584": {"op": "JUMPI"}, "2585": {"op": "PUSH1", "value": "0x0"}, "2587": {"op": "DUP1"}, "2588": {"op": "REVERT"}, "2589": {"op": "JUMPDEST"}, "2590": {"op": "DUP2"}, "2591": {"op": "CALLDATALOAD"}, "2592": {"op": "DUP2"}, "2593": {"op": "DUP2"}, "2594": {"op": "GT"}, "2595": {"op": "ISZERO"}, "2596": {"op": "PUSH2", "value": "0xA2F"}, "2599": {"op": "JUMPI"}, "2600": {"op": "PUSH2", "value": "0xA2F"}, "2603": {"op": "PUSH2", "value": "0x96E"}, "2606": {"jump": "i", "op": "JUMP"}, "2607": {"op": "JUMPDEST"}, "2608": {"op": "PUSH2", "value": "0xA3D"}, "2611": {"op": "DUP5"}, "2612": {"op": "DUP3"}, "2613": {"op": "PUSH1", "value": "0x5"}, "2615": {"op": "SHL"}, "2616": {"op": "ADD"}, "2617": {"op": "PUSH2", "value": "0x9AD"}, "2620": {"jump": "i", "op": "JUMP"}, "2621": {"op": "JUMPDEST"}, "2622": {"op": "DUP2"}, "2623": {"op": "DUP2"}, "2624": {"op": "MSTORE"}, "2625": {"op": "DUP5"}, "2626": {"op": "DUP2"}, "2627": {"op": "ADD"}, "2628": {"op": "SWAP3"}, "2629": {"op": "POP"}, "2630": {"op": "PUSH1", "value": "0x7"}, "2632": {"op": "SWAP2"}, "2633": {"op": "SWAP1"}, "2634": {"op": "SWAP2"}, "2635": {"op": "SHL"}, "2636": {"op": "DUP4"}, "2637": {"op": "ADD"}, "2638": {"op": "DUP5"}, "2639": {"op": "ADD"}, "2640": {"op": "SWAP1"}, "2641": {"op": "DUP8"}, "2642": {"op": "DUP3"}, "2643": {"op": "GT"}, "2644": {"op": "ISZERO"}, "2645": {"op": "PUSH2", "value": "0xA5D"}, "2648": {"op": "JUMPI"}, "2649": {"op": "PUSH1", "value": "0x0"}, "2651": {"op": "DUP1"}, "2652": {"op": "REVERT"}, "2653": {"op": "JUMPDEST"}, "2654": {"op": "SWAP3"}, "2655": {"op": "DUP5"}, "2656": {"op": "ADD"}, "2657": {"op": "SWAP3"}, "2658": {"op": "JUMPDEST"}, "2659": {"op": "DUP2"}, "2660": {"op": "DUP5"}, "2661": {"op": "LT"}, "2662": {"op": "ISZERO"}, "2663": {"op": "PUSH2", "value": "0xAC6"}, "2666": {"op": "JUMPI"}, "2667": {"op": "PUSH1", "value": "0x80"}, "2669": {"op": "DUP5"}, "2670": {"op": "DUP10"}, "2671": {"op": "SUB"}, "2672": {"op": "SLT"}, "2673": {"op": "ISZERO"}, "2674": {"op": "PUSH2", "value": "0xA7B"}, "2677": {"op": "JUMPI"}, "2678": {"op": "PUSH1", "value": "0x0"}, "2680": {"op": "DUP1"}, "2681": {"op": "DUP2"}, "2682": {"op": "REVERT"}, "2683": {"op": "JUMPDEST"}, "2684": {"op": "PUSH2", "value": "0xA83"}, "2687": {"op": "PUSH2", "value": "0x984"}, "2690": {"jump": "i", "op": "JUMP"}, "2691": {"op": "JUMPDEST"}, "2692": {"op": "DUP5"}, "2693": {"op": "CALLDATALOAD"}, "2694": {"op": "DUP2"}, "2695": {"op": "MSTORE"}, "2696": {"op": "DUP6"}, "2697": {"op": "DUP6"}, "2698": {"op": "ADD"}, "2699": {"op": "CALLDATALOAD"}, "2700": {"op": "PUSH2", "value": "0xA94"}, "2703": {"op": "DUP2"}, "2704": {"op": "PUSH2", "value": "0x910"}, "2707": {"jump": "i", "op": "JUMP"}, "2708": {"op": "JUMPDEST"}, "2709": {"op": "DUP2"}, "2710": {"op": "DUP8"}, "2711": {"op": "ADD"}, "2712": {"op": "MSTORE"}, "2713": {"op": "PUSH1", "value": "0x40"}, "2715": {"op": "DUP6"}, "2716": {"op": "DUP2"}, "2717": {"op": "ADD"}, "2718": {"op": "CALLDATALOAD"}, "2719": {"op": "PUSH2", "value": "0xAA7"}, "2722": {"op": "DUP2"}, "2723": {"op": "PUSH2", "value": "0x910"}, "2726": {"jump": "i", "op": "JUMP"}, "2727": {"op": "JUMPDEST"}, "2728": {"op": "SWAP1"}, "2729": {"op": "DUP3"}, "2730": {"op": "ADD"}, "2731": {"op": "MSTORE"}, "2732": {"op": "PUSH1", "value": "0x60"}, "2734": {"op": "DUP6"}, "2735": {"op": "DUP2"}, "2736": {"op": "ADD"}, "2737": {"op": "CALLDATALOAD"}, "2738": {"op": "SWAP1"}, "2739": {"op": "DUP3"}, "2740": {"op": "ADD"}, "2741": {"op": "MSTORE"}, "2742": {"op": "DUP4"}, "2743": {"op": "MSTORE"}, "2744": {"op": "PUSH1", "value": "0x80"}, "2746": {"op": "SWAP1"}, "2747": {"op": "SWAP4"}, "2748": {"op": "ADD"}, "2749": {"op": "SWAP3"}, "2750": {"op": "SWAP2"}, "2751": {"op": "DUP5"}, "2752": {"op": "ADD"}, "2753": {"op": "SWAP2"}, "2754": {"op": "PUSH2", "value": "0xA62"}, "2757": {"op": "JUMP"}, "2758": {"op": "JUMPDEST"}, "2759": {"op": "SWAP8"}, "2760": {"op": "SWAP7"}, "2761": {"op": "POP"}, "2762": {"op": "POP"}, "2763": {"op": "POP"}, "2764": {"op": "POP"}, "2765": {"op": "POP"}, "2766": {"op": "POP"}, "2767": {"op": "POP"}, "2768": {"jump": "o", "op": "JUMP"}, "2769": {"op": "JUMPDEST"}, "2770": {"op": "PUSH4", "value": "0x4E487B71"}, "2775": {"op": "PUSH1", "value": "0xE0"}, "2777": {"op": "SHL"}, "2778": {"op": "PUSH1", "value": "0x0"}, "2780": {"op": "MSTORE"}, "2781": {"op": "PUSH1", "value": "0x11"}, "2783": {"op": "PUSH1", "value": "0x4"}, "2785": {"op": "MSTORE"}, "2786": {"op": "PUSH1", "value": "0x24"}, "2788": {"op": "PUSH1", "value": "0x0"}, "2790": {"op": "REVERT"}, "2791": {"op": "JUMPDEST"}, "2792": {"op": "PUSH1", "value": "0x0"}, "2794": {"op": "DUP2"}, "2795": {"op": "PUSH1", "value": "0x0"}, "2797": {"op": "NOT"}, "2798": {"op": "DIV"}, "2799": {"op": "DUP4"}, "2800": {"op": "GT"}, "2801": {"op": "DUP3"}, "2802": {"op": "ISZERO"}, "2803": {"op": "ISZERO"}, "2804": {"op": "AND"}, "2805": {"op": "ISZERO"}, "2806": {"op": "PUSH2", "value": "0xB01"}, "2809": {"op": "JUMPI"}, "2810": {"op": "PUSH2", "value": "0xB01"}, "2813": {"op": "PUSH2", "value": "0xAD1"}, "2816": {"jump": "i", "op": "JUMP"}, "2817": {"op": "JUMPDEST"}, "2818": {"op": "POP"}, "2819": {"op": "MUL"}, "2820": {"op": "SWAP1"}, "2821": {"jump": "o", "op": "JUMP"}, "2822": {"op": "JUMPDEST"}, "2823": {"op": "PUSH1", "value": "0x0"}, "2825": {"op": "DUP3"}, "2826": {"op": "NOT"}, "2827": {"op": "DUP3"}, "2828": {"op": "GT"}, "2829": {"op": "ISZERO"}, "2830": {"op": "PUSH2", "value": "0xB19"}, "2833": {"op": "JUMPI"}, "2834": {"op": "PUSH2", "value": "0xB19"}, "2837": {"op": "PUSH2", "value": "0xAD1"}, "2840": {"jump": "i", "op": "JUMP"}, "2841": {"op": "JUMPDEST"}, "2842": {"op": "POP"}, "2843": {"op": "ADD"}, "2844": {"op": "SWAP1"}, "2845": {"jump": "o", "op": "JUMP"}, "2846": {"op": "JUMPDEST"}, "2847": {"op": "PUSH1", "value": "0x0"}, "2849": {"op": "PUSH1", "value": "0x20"}, "2851": {"op": "DUP3"}, "2852": {"op": "DUP5"}, "2853": {"op": "SUB"}, "2854": {"op": "SLT"}, "2855": {"op": "ISZERO"}, "2856": {"op": "PUSH2", "value": "0xB30"}, "2859": {"op": "JUMPI"}, "2860": {"op": "PUSH1", "value": "0x0"}, "2862": {"op": "DUP1"}, "2863": {"op": "REVERT"}, "2864": {"op": "JUMPDEST"}, "2865": {"op": "DUP2"}, "2866": {"op": "MLOAD"}, "2867": {"op": "DUP1"}, "2868": {"op": "ISZERO"}, "2869": {"op": "ISZERO"}, "2870": {"op": "DUP2"}, "2871": {"op": "EQ"}, "2872": {"op": "PUSH2", "value": "0xB40"}, "2875": {"op": "JUMPI"}, "2876": {"op": "PUSH1", "value": "0x0"}, "2878": {"op": "DUP1"}, "2879": {"op": "REVERT"}, "2880": {"op": "JUMPDEST"}, "2881": {"op": "SWAP4"}, "2882": {"op": "SWAP3"}, "2883": {"op": "POP"}, "2884": {"op": "POP"}, "2885": {"op": "POP"}, "2886": {"jump": "o", "op": "JUMP"}, "2887": {"op": "JUMPDEST"}, "2888": {"op": "PUSH1", "value": "0x0"}, "2890": {"op": "PUSH1", "value": "0x1"}, "2892": {"op": "DUP3"}, "2893": {"op": "ADD"}, "2894": {"op": "PUSH2", "value": "0xB59"}, "2897": {"op": "JUMPI"}, "2898": {"op": "PUSH2", "value": "0xB59"}, "2901": {"op": "PUSH2", "value": "0xAD1"}, "2904": {"jump": "i", "op": "JUMP"}, "2905": {"op": "JUMPDEST"}, "2906": {"op": "POP"}, "2907": {"op": "PUSH1", "value": "0x1"}, "2909": {"op": "ADD"}, "2910": {"op": "SWAP1"}, "2911": {"jump": "o", "op": "JUMP"}, "2912": {"op": "JUMPDEST"}, "2913": {"op": "DUP2"}, "2914": {"op": "MLOAD"}, "2915": {"op": "PUSH1", "value": "0x1"}, "2917": {"op": "PUSH1", "value": "0x1"}, "2919": {"op": "PUSH1", "value": "0xA0"}, "2921": {"op": "SHL"}, "2922": {"op": "SUB"}, "2923": {"op": "SWAP1"}, "2924": {"op": "DUP2"}, "2925": {"op": "AND"}, "2926": {"op": "DUP3"}, "2927": {"op": "MSTORE"}, "2928": {"op": "PUSH1", "value": "0x20"}, "2930": {"op": "DUP1"}, "2931": {"op": "DUP5"}, "2932": {"op": "ADD"}, "2933": {"op": "MLOAD"}, "2934": {"op": "SWAP1"}, "2935": {"op": "SWAP2"}, "2936": {"op": "AND"}, "2937": {"op": "SWAP1"}, "2938": {"op": "DUP3"}, "2939": {"op": "ADD"}, "2940": {"op": "MSTORE"}, "2941": {"op": "PUSH1", "value": "0x40"}, "2943": {"op": "DUP1"}, "2944": {"op": "DUP4"}, "2945": {"op": "ADD"}, "2946": {"op": "MLOAD"}, "2947": {"op": "SWAP1"}, "2948": {"op": "DUP3"}, "2949": {"op": "ADD"}, "2950": {"op": "MSTORE"}, "2951": {"op": "PUSH1", "value": "0x60"}, "2953": {"op": "DUP1"}, "2954": {"op": "DUP4"}, "2955": {"op": "ADD"}, "2956": {"op": "MLOAD"}, "2957": {"op": "SWAP1"}, "2958": {"op": "DUP3"}, "2959": {"op": "ADD"}, "2960": {"op": "MSTORE"}, "2961": {"op": "PUSH1", "value": "0x80"}, "2963": {"op": "DUP1"}, "2964": {"op": "DUP4"}, "2965": {"op": "ADD"}, "2966": {"op": "MLOAD"}, "2967": {"op": "SWAP1"}, "2968": {"op": "DUP3"}, "2969": {"op": "ADD"}, "2970": {"op": "MSTORE"}, "2971": {"op": "PUSH1", "value": "0xA0"}, "2973": {"op": "DUP3"}, "2974": {"op": "DUP2"}, "2975": {"op": "ADD"}, "2976": {"op": "MLOAD"}, "2977": {"op": "SWAP1"}, "2978": {"op": "DUP3"}, "2979": {"op": "ADD"}, "2980": {"op": "MSTORE"}, "2981": {"op": "PUSH1", "value": "0xC0"}, "2983": {"op": "SWAP2"}, "2984": {"op": "DUP3"}, "2985": {"op": "ADD"}, "2986": {"op": "MLOAD"}, "2987": {"op": "SWAP2"}, "2988": {"op": "DUP2"}, "2989": {"op": "ADD"}, "2990": {"op": "SWAP2"}, "2991": {"op": "SWAP1"}, "2992": {"op": "SWAP2"}, "2993": {"op": "MSTORE"}, "2994": {"op": "PUSH1", "value": "0xE0"}, "2996": {"op": "ADD"}, "2997": {"op": "SWAP1"}, "2998": {"jump": "o", "op": "JUMP"}, "2999": {"op": "JUMPDEST"}, "3000": {"op": "PUSH1", "value": "0x0"}, "3002": {"op": "DUP3"}, "3003": {"op": "MLOAD"}, "3004": {"op": "PUSH1", "value": "0x0"}, "3006": {"op": "JUMPDEST"}, "3007": {"op": "DUP2"}, "3008": {"op": "DUP2"}, "3009": {"op": "LT"}, "3010": {"op": "ISZERO"}, "3011": {"op": "PUSH2", "value": "0xBD8"}, "3014": {"op": "JUMPI"}, "3015": {"op": "PUSH1", "value": "0x20"}, "3017": {"op": "DUP2"}, "3018": {"op": "DUP7"}, "3019": {"op": "ADD"}, "3020": {"op": "DUP2"}, "3021": {"op": "ADD"}, "3022": {"op": "MLOAD"}, "3023": {"op": "DUP6"}, "3024": {"op": "DUP4"}, "3025": {"op": "ADD"}, "3026": {"op": "MSTORE"}, "3027": {"op": "ADD"}, "3028": {"op": "PUSH2", "value": "0xBBE"}, "3031": {"op": "JUMP"}, "3032": {"op": "JUMPDEST"}, "3033": {"op": "DUP2"}, "3034": {"op": "DUP2"}, "3035": {"op": "GT"}, "3036": {"op": "ISZERO"}, "3037": {"op": "PUSH2", "value": "0xBE7"}, "3040": {"op": "JUMPI"}, "3041": {"op": "PUSH1", "value": "0x0"}, "3043": {"op": "DUP3"}, "3044": {"op": "DUP6"}, "3045": {"op": "ADD"}, "3046": {"op": "MSTORE"}, "3047": {"op": "JUMPDEST"}, "3048": {"op": "POP"}, "3049": {"op": "SWAP2"}, "3050": {"op": "SWAP1"}, "3051": {"op": "SWAP2"}, "3052": {"op": "ADD"}, "3053": {"op": "SWAP3"}, "3054": {"op": "SWAP2"}, "3055": {"op": "POP"}, "3056": {"op": "POP"}, "3057": {"jump": "o", "op": "JUMP"}, "3058": {"op": "JUMPDEST"}, "3059": {"op": "PUSH1", "value": "0x0"}, "3061": {"op": "PUSH1", "value": "0x20"}, "3063": {"op": "DUP3"}, "3064": {"op": "DUP5"}, "3065": {"op": "SUB"}, "3066": {"op": "SLT"}, "3067": {"op": "ISZERO"}, "3068": {"op": "PUSH2", "value": "0xC04"}, "3071": {"op": "JUMPI"}, "3072": {"op": "PUSH1", "value": "0x0"}, "3074": {"op": "DUP1"}, "3075": {"op": "REVERT"}, "3076": {"op": "JUMPDEST"}, "3077": {"op": "POP"}, "3078": {"op": "MLOAD"}, "3079": {"op": "SWAP2"}, "3080": {"op": "SWAP1"}, "3081": {"op": "POP"}, "3082": {"jump": "o", "op": "JUMP"}, "3083": {"op": "JUMPDEST"}, "3084": {"op": "PUSH1", "value": "0x0"}, "3086": {"op": "PUSH1", "value": "0x20"}, "3088": {"op": "DUP3"}, "3089": {"op": "DUP5"}, "3090": {"op": "SUB"}, "3091": {"op": "SLT"}, "3092": {"op": "ISZERO"}, "3093": {"op": "PUSH2", "value": "0xC1D"}, "3096": {"op": "JUMPI"}, "3097": {"op": "PUSH1", "value": "0x0"}, "3099": {"op": "DUP1"}, "3100": {"op": "REVERT"}, "3101": {"op": "JUMPDEST"}, "3102": {"op": "DUP2"}, "3103": {"op": "MLOAD"}, "3104": {"op": "PUSH2", "value": "0xB40"}, "3107": {"op": "DUP2"}, "3108": {"op": "PUSH2", "value": "0x910"}, "3111": {"jump": "i", "op": "JUMP"}, "3112": {"op": "JUMPDEST"}, "3113": {"op": "PUSH4", "value": "0x4E487B71"}, "3118": {"op": "PUSH1", "value": "0xE0"}, "3120": {"op": "SHL"}, "3121": {"op": "PUSH1", "value": "0x0"}, "3123": {"op": "MSTORE"}, "3124": {"op": "PUSH1", "value": "0x32"}, "3126": {"op": "PUSH1", "value": "0x4"}, "3128": {"op": "MSTORE"}, "3129": {"op": "PUSH1", "value": "0x24"}, "3131": {"op": "PUSH1", "value": "0x0"}, "3133": {"op": "REVERT"}}, "sha1": "b8f741ec307d0c3f0b40442aabd014a9cd0aba86", "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"./deb/ERC20.sol\";\nimport \"./deb/ICrossDomainMessenger.sol\";\n\n/// @title SourceDomainSideBridge Contract\n/// @author Sherif Abdelmoatty\n/// @notice This contract is to be deployed in the source rollup\ncontract SourceDomainSideBridge {\n    \n    uint constant public CONTRACT_FEE_BASIS_POINTS = 5;\n    uint constant public TRADE_LIMIT = 0.1 ether;\n    address constant ETHER_ADDRESS = 0x0000000000000000000000000000000000000000;\n\n    struct TransferData {\n        address  tokenAddress; \n        address  destination;\n        uint256  amount;\n        uint256  fee;\n        uint256  startTime;\n        uint256  feeRampup;\n        uint256  nonce;\n    }\n    struct RewardData {\n        bytes32  transferDataHash;\n        address  tokenAddress; \n        address  claimer;\n        uint256  fee;\n    }\n    mapping(bytes32 => bool) public validTransferHashes;\n    mapping(bytes32 => bool) public knownHashOnions;\n    bytes32 processedRewardHashOnion;\n    \n    address ovmL2CrossDomainMessenger;  //ovmL2CrossDomainMessenger contract address(Optimism)\n    address l1DomainSideContractAddress;  //l1DomainSideContract deployed contract address on mainnet\n\n    uint256  currentNonce;\n\n    event Transaction(TransferData transferData);\n    event ClaimPayed(bytes32 transferDataHash, bool success);\n    \n    /// @notice onlyL1Contract modifier\n    /// @notice only allows a message from l1DomainSideBridge contract through the L2CrossDomainMessenger bridge\n    /// @notice to call the approveStateRoot function\n    modifier onlyL1Contract() {\n        ICrossDomainMessenger l2cdm = ICrossDomainMessenger(ovmL2CrossDomainMessenger);\n        require(\n            msg.sender == address(ovmL2CrossDomainMessenger)\n            && l2cdm.xDomainMessageSender() == l1DomainSideContractAddress\n        );\n        _;\n    }\n\n    /// @notice Constructior function\n    /// @notice Intialize variables\n    constructor(address _l1DomainSideContractAddress){\n        ovmL2CrossDomainMessenger = 0x4200000000000000000000000000000000000007;\n        l1DomainSideContractAddress = _l1DomainSideContractAddress;\n    }\n\n    /// @notice withdraw function\n    /// @notice withdraws the required funds plus fees to be sent \n    /// @notice to the domain side rollup\n    ///function transfer(TransferData memory _transferData) external payable returns(bytes32){\n    function transfer(address _tokenAddress, address _destination, uint256 _amount,\n         uint256  _feeRampup) external payable returns(bytes32){\n        \n        require(_amount* 1000 <= TRADE_LIMIT, 'Amount higher than trade limit');\n        uint256 fee = _amount * CONTRACT_FEE_BASIS_POINTS;\n        uint256 amountPlusFee = _amount * 1000 + fee;\n        \n        if(_tokenAddress == ETHER_ADDRESS){\n            require(msg.value >= amountPlusFee, \"Error : Non Suffecient funds!!!!!!!!\");\n        }else{\n            ERC20 token = ERC20(_tokenAddress);\n            token.transferFrom(msg.sender, address(this), amountPlusFee);\n        }\n\n        TransferData memory transferData;\n        transferData.tokenAddress = _tokenAddress;\n        transferData.destination = _destination;\n        transferData.amount = _amount;\n        transferData.fee = fee;\n        transferData.startTime = block.number;\n        transferData.feeRampup = _feeRampup;\n        transferData.nonce = currentNonce;\n\n        currentNonce++;\n\n        bytes32 transferDataHash = sha256(abi.encode(transferData));\n        \n        validTransferHashes[transferDataHash] = true;\n\n        emit Transaction(transferData);\n        \n        return transferDataHash;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function processClaims(RewardData[] memory _rewardData) external payable {\n        bytes32 newProcessedRewardHashOnion = calculateNewProcessedRewardHashOnion(_rewardData);\n        require(knownHashOnions[newProcessedRewardHashOnion], \"Invalide RewardData list.\");\n        processedRewardHashOnion = newProcessedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            if(validTransferHashes[_rewardData[n].transferDataHash]){\n                bool success;\n                if(_rewardData[n].tokenAddress == ETHER_ADDRESS){\n                    (bool suc, ) = payable(_rewardData[n].claimer).call{value: _rewardData[n].fee}(\"\");\n                    success = suc;\n                }else{\n                    ERC20 token = ERC20(_rewardData[n].tokenAddress);\n                    \n                    success = token.transferFrom(address(this), _rewardData[n].claimer,\n                        _rewardData[n].fee);\n                }\n                emit ClaimPayed(_rewardData[n].transferDataHash, success);\n            }\n        }\n        \n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function calculateNewProcessedRewardHashOnion(RewardData[] memory _rewardData) private view returns (bytes32){\n        bytes32 newProcessedRewardHashOnion = processedRewardHashOnion;\n        for(uint n = 0; n < _rewardData.length; n++) {\n            newProcessedRewardHashOnion = \n                sha256(abi.encode(newProcessedRewardHashOnion,_rewardData[n]));\n        }\n        return newProcessedRewardHashOnion;\n    }\n\n    /// @notice processClaims function\n    /// @notice calculates the liquidity provider fee.\n    function addNewKnownHashOnion(bytes32 _newKnownHashOnions) external onlyL1Contract{\n        knownHashOnions[_newKnownHashOnions] = true;\n    }\n   \n}", "sourceMap": "264:5290:0:-:0;;;1940:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1999:25;:70;;2027:42;-1:-1:-1;;;;;;1999:70:0;;;;;;;2079:27;:58;;;;;-1:-1:-1;;;;;2079:58:0;;;;;;;;;;264:5290;;14:290:3;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:3;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:3:o;:::-;264:5290:0;;;;;;", "sourcePath": "contracts/SourceDomainSideBridge.sol", "type": "contract", "deployment": {"address": "0x32EC8c74c4e1d6D79ae2E2436e1cbDAaaE45f2F2", "chainid": "69", "blockHeight": 3096991}}